"ViewID","Class","FriendlyName","View","IsDefault","LastUpdated","LastUpdatedBy","ComputerName","Executed","ExecuteOnStartUp","WindowsUserName"
"39397","default_branch","","JHB","0","","1","LRA-FUSION","0","0","fusion"
"39398","cv_entitycontacts","","select entitycontactid,
'    ' as [  ], 
isnull(ec.Title,'')+ ' ' + isnull(ec.Firstname,'')+' '+isnull(ec.Surname,'') AS [Name], Title, Initials, JobTitle, 
l.Value As Department, phone1 as [Phone], Cell, EC.Fax, EC.Email, Ext,
isnull(LG.Value,'')as [Business Category],isnull(Lk.Value,'') as [Type],Isnull(LT.Value,'') as [Sub Type],
Isnull(LC.Value,'') as [Category],isnull(LA.Value,'') as [ABC],isnull(LI.Value,'') as [Industry]
from entitycontact ec
left join lookup l
on l.LookupID = ec.DepartmentID and l.Class = 'Department'
Left Join Entity E on E.EntityID=EC.EntityID
left join lookup LG
on LG.LookupID = e.BusCatID and lG.Class = 'buscat'
left join lookup LK
on LK.LookupID = e.EntityTypeID and lK.Class = 'type'
left join LinkLookup LT
on LT.LinkLookupID = e.entitysubtypeid and lT.Class = 'SubType'
left join lookup LC
on LC.LookupID = e.EntityCategoryID and lC.Class = 'category'
left join lookup LA
on LA.LookupID = e.ABCCatID and lC.Class = 'abc'
left join lookup LI
on LI.LookupID = e.IndustryID and lI.Class = 'canvasindustry'


<%where%>
order by [name]","0","","1","LRA-FUSION","0","0","fusion"
"39399","cv_entityaddresses","","select 
	entityaddressid,
        CASE ISNULL(IsDefault,0) WHEN 0 THEN 'No' ELSE 'Yes' END as [Default],
	addresstype as Type,
	address1 as [Address Line 1],
	address2 as [Address Line 2],
	address3 as [Address Line 3],
	City as [Area],
	Region as [Province],
	Code,
	Country
from entityaddress
<%where%>
order by addresstype","0","","1","LRA-FUSION","0","0","fusion"
"39400","cv_documents","","select 
	entitydocumentid, 
	l.value as [Doc Type], 
	[Sub Doc] as [Doc Sub Type],
	Keywords,
	Description,convert(varchar,DateLinked,111) as [Date Linked], 
	[Name], 
	path as Location,
	ISNULL(S.Firstname, '') + ' ' + ISNULL(S.Surname, '') as [Added By]
from entitydocument d
left join lookup l on l.lookupid = d.doctypeid
LEFT JOIN (select distinct lookupid, [value] as [Sub Doc] from lookup where class like 'documentsubtype') ls
    ON ls.lookupid = d.docsubid
LEFT JOIN Staff S ON S.StaffID = D.StaffID
<%where%>
order by Keywords,[Name]","0","","1","LRA-FUSION","0","0","fusion"
"39401","cv_users","","select userid, firstname as [First Name], Surname, Position, Username, 
l.userlevel as [User Level], Extension
from users u 
left join userlevel l on u.userlevelid = l.userlevelid
LEFT JOIN (SELECT StaffID, isnull(IsActive,1) as [Active] FROM Staff) ST ON U.StaffID = ST.StaffID
--Added by chad for inherit
/*<%Where%>*/
order by firstname, surname","0","","1","LRA-FUSION","0","0","fusion"
"39402","def_remind_before_time","","15","0","","1","LRA-FUSION","0","0","fusion"
"39403","cv_TasksSearch","","SELECT 
 taskreminderid,username as [User Name],dbo.EntityContactName(entitycontact.Title, entitycontact.Initials, entitycontact.Firstname, entitycontact.Surname) as [Assigned Contact Name],taskname As [Task Subject],taskdate as [Due Date]
FROM taskreminder 
LEFT JOIN entitycontact ON entitycontact.entitycontactid = taskreminder.entitycontactid
INNER JOIN users on taskreminder.foruserid = users.userid","0","","1","LRA-FUSION","0","0","fusion"
"39404","cv_TasksManSearch","","SELECT distinct  
 taskreminder. taskreminderid,users.username as [User],/*div.value as Division, */ entity.Company,
 case when isnull(dbo.EntityContactName(entitycontact.Title,entitycontact.Initials, entitycontact.FirstName, entitycontact.Surname), '') = '' then 'No Contact Selected' else
 dbo.EntityContactName(entitycontact.Title,entitycontact.Initials, entitycontact.FirstName, entitycontact.Surname) end as [Assigned contact],
 org.username as [Task Organiser],own.username as [Task Owner],
 taskname as [Task Name],taskdate as [Task Date\Time], 
    case (select count(*) from actions a where a.taskreminderid = taskreminder.taskreminderid) 
    when 0 then convert(varchar, percentageid) + ' %' 
    else convert(varchar, (Select AVG(PercentageID) from actions a where a.taskreminderid = taskreminder.taskreminderid)) + ' %' end as [Percentage Complete],
    AdditionalInfo as [Additional Info]
FROM taskreminder
LEFT join users on users.userid = taskreminder.foruserid
LEFT JOIN entitycontact ON taskreminder.entitycontactid = entitycontact.entitycontactid
LEFT JOIN lookup div on div.lookupid = taskreminder.divid
LEFT JOIN users ORG ON org.userid = taskreminder.organizerid
LEFT JOIN users OWN ON own.userid = taskreminder.ownerid
LEFT join developertasks dt on dt.taskreminderid = taskreminder.taskreminderid 
Left JOIN entity On entity.EntityID = entitycontact.entityid","0","","1","LRA-FUSION","0","0","fusion"
"39405","cv_calllog","","select calllogid, 
left(datename(dw,calldate),3)+', '+datename(dd,calldate)+' '+left(datename(mm,calldate),3)+' '+datename(yyyy,calldate) as [Call Date],
right('0'+datename(hh,calldate),2)+'h'+right('0'+datename(n,calldate),2) as [Call Time],
u.username as [Captured By],
calldescription as [Description], Notes
from calllog c
left join users u on c.createbyid = u.userid
<%where%>
order by calldate","0","","1","LRA-FUSION","0","0","fusion"
"39406","cv_entity_contact_groups","","select g.groupid, g.[group], isnull(eg.groupid,0) as assigned
from (select lookupid as groupid, value as [group] from lookup where class like 'group') g
left join (select groupid from entitycontactgroup where entitycontactid=<%entitycontactid%>) eg on g.groupid = eg.groupid
order by g.[group] desc
","0","","1","LRA-FUSION","0","0","fusion"
"39407","cv_export_entities","","select * from entity
order by company","0","","1","LRA-FUSION","0","0","fusion"
"39408","cv_contactsearch_without_company","","select ec.entitycontactid, ec.entitycontactid as [Contact ID], ec.[Company],
dbo.EntityContactName(ec.Title, ec.Initials, ec.Firstname, ec.Surname) as Contact,  
ec.phone1 as [Home #], ec.Cell AS [Cell #], ec.Fax as [Fax #], ec.Email,
t.Type, c.Category,
u.username as [Created By],
case isnull(ec.sendemail,0) when 0 then '' else 'Yes' end as [Send Email], 
case isnull(ec.sendsms,0) when 0 then '' else 'Yes' end as [Send SMS],
right('0'+datename(dd,ec.dateadded),2)+'/'+right('0'+cast(datepart(m,ec.dateadded) as nvarchar), 2)+'/'+datename(yyyy,ec.dateadded) as [Date Added],
right('0'+datename(dd,ec.datemodified),2)+'/'+right('0'+cast(datepart(m,ec.datemodified) as nvarchar), 2)+'/'+datename(yyyy,ec.datemodified) as [Last Modified]
from entitycontact as ec
left join entitycontactgroup g on ec.entitycontactid = g.entitycontactid
left join (select lookupid as typeid, value as type from lookup where class like 'type') t on ec.entitytypeid = t.typeid
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c on ec.entitycategoryid = c.categoryid
left join users u on ec.entitycontactcreatorid = u.userid
left join entitycontactdivision ed on ed.entitycontactid = ec.entitycontactid
<%where%>
group by ec.entitycontactid, ec.company, ec.surname, ec.title, ec.firstname, ec.initials, ec.department,
ec.phone1, ec.cell, ec.fax, ec.email, t.type, c.category, 
ec.address1, ec.address2, ec.address3, ec.city, ec.region, ec.code, ec.country,
u.username, ec.dateadded, ec.datemodified, ec.sendemail, ec.sendsms
order by ec.company, ec.surname,  ec.firstname","0","","1","LRA-FUSION","0","0","fusion"
"39409","qf_companies","","SELECT TOP 50 
	entityid,
	ISNULL(Accountnum,'') as [Acc. No.], 
	Company, 
Vatnum as [VATNo],
	t.Value as [Type], 
	c.Value as Category
FROM entity e
LEFT JOIN lookup t on t.lookupid = e.entitytypeid
LEFT JOIN lookup c on c.lookupid = e.entitycategoryid
WHERE (e.company LIKE '%<%replace%>%' OR ISNULL(e.Accountnum,'') LIKE  '%<%replace%>%') 
AND (ISNULL(IsSupplier,0) = {issupplier})
/*{and}*/
ORDER BY e.AccountNum, e.Company","0","","1","LRA-FUSION","0","0","fusion"
"39410","cv_export_contacts","","select
    ec.EntityContactID,
    SC.SalesConsultant as [Sales Consultant],
    c.Category,
    AccT.AccType as [Account Type],
    D.Division, 
    t.Type as [Type],
    STB.[Sub Type], 
    dbo.fn_EntityContactGroups(EC.EntityContactID) as [Group],
    ec.EntityContactID as [Contact ID],
    AlternateContactID as [Alternate Contact ID], 
    e.Company, 
	EC.JobTitle as [Job Title], 
    ec.Title ,
    ec.Initials, 
    ec.Firstname as [First Name], 
    ec.Surname, 
    ec.Phone1, 
    ec.Phone2, 
    [Addition 5],
    [Addition 6],
    [Addition 7],
    [Addition 8] ,
    ec.Phone3, 
    ec.HomePhone as [Home Phone], 
    ec.Cell, 
    ec.Fax, 
    ec.Email, 
    Birthdate,
    Ext as [Extention],
    lbdep.Department as [Department],
     lbind.[Industry] as [Industry],
    Spouse,
    AsstTitle as [Assistant Title],
    AsstName as [Assistant Name],
    AsstPhone as [Assistant Phone],
    AsstExt as [Assistant Extention],
    eapy.Address1,
    eapy.Address2,
    eapy.Address3,
    eapy.City,
    eapy.State,
    eapy.Code,
    eapy.Region,
    eapy.Country,
    CASE WHEN ISNULL(SendEmail,0) = 0 THEN 'False' ELSE 'True' END as [Send Emails],
    CASE WHEN ISNULL(SendSMS,0) = 0 THEN 'False' ELSE 'True' END as [Send SMS],
    ec.AccountNum as [Account Number], 
    [Business Category],
    [ABC],
    right('0'+datename(dd,ec.dateadded),2)+'/'+right('0'+cast(datepart(m,ec.dateadded) as nvarchar), 2)+'/'+datename(yyyy,ec.dateadded) as [Created Date], 
    u.username as [Created by],
    EC.Additional1 as [Addition 1],
    EC.Additional2 as [Addition 2],
    EC.Additional3 as [Addition 3],
    EC.Additional4 as [Addition 4], 
    right('0'+datename(dd,ec.datemodified),2)+'/'+right('0'+cast(datepart(m,ec.datemodified) as nvarchar), 2)+'/'+datename(yyyy,ec.datemodified) as [Last Modified Date],
    OutlookID as [Outlook ID], uu.username as [Modified By],
    (SELECT TOP 1 CONVERT(VARCHAR, CAST(CallDate as DATETIME),103) FROM CallLog WHERE ISNULL(AdvCall,0) = 1 AND EntityContactID = ec.EntityContactID ORDER BY CallDate DESC) as [Last Call],
    (SELECT TOP 1 CONVERT(VARCHAR, CAST([Date] as DATETIME), 103) FROM Appointment a 
    LEFT JOIN AppointmentContacts ac on ac.apptID = a.AppointmentID
    WHERE ac.EntityContactID = ec.EntityContactID ORDER BY [Date] DESC) as [Last Appointment]
from entitycontact as ec
left join (select lookupid as AccTypeID, value as AccType from lookup where class like 'accounttype') AccT
 on ec.accounttypeid = AccT.AccTypeID
left join (Select lookupid, value from lookup) ls1 on ls1.lookupid = EC.SalesConsID
left join entity e
 on e.entityid = ec.entityid 
left join entitycontactgroup g 
 on ec.entitycontactid = g.entitycontactid 
left join (select lookupid as groupid, value as [Group] from lookup where class like 'group') Gr
 on g.groupid = Gr.groupid 
left join( select staffid as SalesConsid, FirstName + ' ' + IsNull(Surname,'') As SalesConsultant from staff) SC
on ec.salesconsid = SC.SalesConsID
left join (select lookupid as typeid, value as type from lookup where class like 'type') t
 on ec.entitytypeid = t.typeid 
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c
 on ec.entitycategoryid = c.categoryid 
left join (select lookupid as SourceTypeID, value as SourceType from lookup where class like 'Source Type') s
 on ec.ContTypeID = s.SourceTypeID 
left join (select lookupid as InterestID, value as Interest from lookup where class like 'Interest') i
 on ec.InterestID = i.InterestID 
 
left join (select lookupid as ABCID, value as ABC from lookup where class like 'ABC') lABC
 on ec.abccatid = lABC.ABCID  
 
left join (select lookupid as PositionID, value as Position from lookup where class like 'Position') p
 on ec.PositionID = p.PositionID 
left join users u
 on ec.entitycontactcreatorid = u.userid 
left join users uu on ec.EntityContactUpdaterID = uu.userid 
left join entitycontactdivision ed
 on ed.entitycontactid = ec.entitycontactid 
left join (select lookupid as DivisionID, value as Division from lookup where class like 'Divisions') D
 on D.DivisionID = (SELECT TOP 1 DivisionID FROM EntityContactDivision WHERE EntityContactID = EC.EntityContactID)
left join entityaddress eapo
 on eapo.entityaddressid = ec.postaladdrid 
left join entityaddress eapy
 on eapy.entityaddressid = ec.physicaladdrid
left join EntityContactTypes ect
 on ec.entitycontactid = ect.entitycontactid
left join entityContactMOComm ecmc
 on ec.entitycontactid = ecmc.entitycontactid
left join (select lookupid,value as [Business Category] from lookup ) lbcat
on lbcat.lookupid = ec.buscatid
left join (select lookupid,value as [Department] from lookup ) lbdep
on lbdep.lookupid = ec.DepartmentID
left join (select lookupid,value as [Industry] from lookup ) lbind
on lbind.lookupid = ec.IndustryID
left join (select LinkLookupID,value as [Sub Type] from linklookup ) STB
on STB.LinkLookupID = ec.entitysubtypeid
  left join (select lookupid,value as [Addition 5] from lookup ) lbAD1
on lbAD1.lookupid = ec.AdditionalID5
left join (select lookupid,value as [Addition 6] from lookup ) lbAD2
on lbAD2.lookupid = ec.AdditionalID6
left join (select lookupid,value as [Addition 7] from lookup ) lbAD3
on lbAD3.lookupid = ec.AdditionalID7
left join (select lookupid,value as [Addition 8] from lookup ) lbAD4
on lbAD4.lookupid = ec.AdditionalID8
{where}
 GROUP BY jobtitle,ec.EntityContactID, ec.AlternatecontactID, e.Company, ec.Title,ec.Initials , ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, 
    ec.Phone3, ec.HomePhone, ec.Cell, ec.Fax, ec.Email, ec.Birthdate, ec.Ext, ec.Department, ec.Spouse, ec.AsstTitle, ec.AsstName, ec.AsstPhone, ec.AsstExt, 
        ec.Address1, ec.Address2, ec.Address3, ec.City, ec.State, ec.Code, ec.Region, ec.Country, ec.Province, ec.SendEmail, ec.SendSMS, ec.AccountNum, 
    ec.DateAdded, ec.DateModified, OutlookID,lbdep.Department,lbind.[Industry],STB.[Sub Type],
    ec.address1,ec.address2,ec.address3,ec.city,ec.region,ec.code,ec.country,
    ec.sendemail,ec.sendsms,ec.sendpost,EC.Additional2,EC.Additional3,EC.Additional4 ,[Addition 5],[Addition 5],[Addition 6],[Addition 7],[Addition 8] ,EC.Additional1,
    ec.dateadded,u.username,ec.datemodified,uu.username,eapy.Address1,eapy.Address2,
    eapy.Address3,eapy.City,eapy.State,eapy.Code,eapy.Region,eapy.Country,SC.SalesConsultant,c.Category,AccT.AccType,D.Division,t.Type,ls1.value,[Business Category],lABC.ABC, EC.JobTitle
","0","","1","LRA-FUSION","0","0","fusion"
"39411","cv_export_contacts_nocompanies","","select
    ec.EntityContactID,
    SC.SalesConsultant as [Sales Consultant],
    c.Category,
    AccT.AccType as [Account Type],
    D.Division, 
    t.Type as [Type],
    STB.[Sub Type], 
    dbo.fn_EntityContactGroups(EC.EntityContactID) as [Group],
    ec.EntityContactID as [Contact ID],
    AlternateContactID as [Alternate Contact ID], 
	EC.JobTitle as [Job Title], 
    ec.Title ,
    ec.Initials, 
    ec.Firstname as [First Name], 
    ec.Surname, 
    ec.Phone1, 
    ec.Phone2, 
    [Addition 5],
    [Addition 6],
    [Addition 7],
    [Addition 8] ,
    ec.Phone3, 
    ec.HomePhone as [Home Phone], 
    ec.Cell, 
    ec.Fax, 
    ec.Email, 
    Birthdate,
    Ext as [Extention],
    lbdep.Department as [Department],
     lbind.[Industry] as [Industry],
    Spouse,
    AsstTitle as [Assistant Title],
    AsstName as [Assistant Name],
    AsstPhone as [Assistant Phone],
    AsstExt as [Assistant Extention],
    eapy.Address1,
    eapy.Address2,
    eapy.Address3,
    eapy.City,
    eapy.State,
    eapy.Code,
    eapy.Region,
    eapy.Country,
    CASE WHEN ISNULL(SendEmail,0) = 0 THEN 'False' ELSE 'True' END as [Send Emails],
    CASE WHEN ISNULL(SendSMS,0) = 0 THEN 'False' ELSE 'True' END as [Send SMS],
    ec.AccountNum as [Account Number], 
    [Business Category],
    [ABC],
    right('0'+datename(dd,ec.dateadded),2)+'/'+right('0'+cast(datepart(m,ec.dateadded) as nvarchar), 2)+'/'+datename(yyyy,ec.dateadded) as [Created Date], 
    u.username as [Created by],
    EC.Additional1 as [Addition 1],
    EC.Additional2 as [Addition 2],
    EC.Additional3 as [Addition 3],
    EC.Additional4 as [Addition 4], 
    right('0'+datename(dd,ec.datemodified),2)+'/'+right('0'+cast(datepart(m,ec.datemodified) as nvarchar), 2)+'/'+datename(yyyy,ec.datemodified) as [Last Modified Date],
    OutlookID, uu.username as [Modified By],
    (SELECT TOP 1 CONVERT(VARCHAR, CAST(CallDate as DATETIME),103) FROM CallLog WHERE ISNULL(AdvCall,0) = 1 AND EntityContactID = ec.EntityContactID ORDER BY CallDate DESC) as [Last Call],
    (SELECT TOP 1 CONVERT(VARCHAR, CAST([Date] as DATETIME), 103) FROM Appointment a 
    LEFT JOIN AppointmentContacts ac on ac.apptID = a.AppointmentID
    WHERE ac.EntityContactID = ec.EntityContactID ORDER BY [Date] DESC) as [Last Appointment]
from entitycontact as ec
left join (select lookupid as AccTypeID, value as AccType from lookup where class like 'accounttype') AccT
 on ec.accounttypeid = AccT.AccTypeID
left join (Select lookupid, value from lookup) ls1 on ls1.lookupid = EC.SalesConsID
left join entitycontactgroup g 
 on ec.entitycontactid = g.entitycontactid 
left join (select lookupid as groupid, value as [Group] from lookup where class like 'group') Gr
 on g.groupid = Gr.groupid 
left join( select staffid as SalesConsid, FirstName + ' ' + IsNull(Surname,'') As SalesConsultant from staff) SC
on ec.salesconsid = SC.SalesConsID
left join (select lookupid as typeid, value as type from lookup where class like 'type') t
 on ec.entitytypeid = t.typeid 
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c
 on ec.entitycategoryid = c.categoryid 
left join (select lookupid as SourceTypeID, value as SourceType from lookup where class like 'Source Type') s
 on ec.ContTypeID = s.SourceTypeID 
left join (select lookupid as InterestID, value as Interest from lookup where class like 'Interest') i
 on ec.InterestID = i.InterestID 
 
left join (select lookupid as ABCID, value as ABC from lookup where class like 'ABC') lABC
 on ec.abccatid = lABC.ABCID  
 
left join (select lookupid as PositionID, value as Position from lookup where class like 'Position') p
 on ec.PositionID = p.PositionID 
left join users u
 on ec.entitycontactcreatorid = u.userid 
left join users uu on ec.EntityContactUpdaterID = uu.userid 
left join entitycontactdivision ed
 on ed.entitycontactid = ec.entitycontactid 
left join (select lookupid as DivisionID, value as Division from lookup where class like 'Divisions') D
 on D.DivisionID = (SELECT TOP 1 DivisionID FROM EntityContactDivision WHERE EntityContactID = EC.EntityContactID)
left join entityaddress eapo
 on eapo.entityaddressid = ec.postaladdrid 
left join entityaddress eapy
 on eapy.entityaddressid = ec.physicaladdrid
left join EntityContactTypes ect
 on ec.entitycontactid = ect.entitycontactid
left join entityContactMOComm ecmc
 on ec.entitycontactid = ecmc.entitycontactid
left join (select lookupid,value as [Business Category] from lookup ) lbcat
on lbcat.lookupid = ec.buscatid
left join (select lookupid,value as [Department] from lookup ) lbdep
on lbdep.lookupid = ec.DepartmentID
left join (select lookupid,value as [Industry] from lookup ) lbind
on lbind.lookupid = ec.IndustryID
left join (select LinkLookupID,value as [Sub Type] from linklookup ) STB
on STB.LinkLookupID = ec.entitysubtypeid
  left join (select lookupid,value as [Addition 5] from lookup ) lbAD1
on lbAD1.lookupid = ec.AdditionalID5
left join (select lookupid,value as [Addition 6] from lookup ) lbAD2
on lbAD2.lookupid = ec.AdditionalID6
left join (select lookupid,value as [Addition 7] from lookup ) lbAD3
on lbAD3.lookupid = ec.AdditionalID7
left join (select lookupid,value as [Addition 8] from lookup ) lbAD4
on lbAD4.lookupid = ec.AdditionalID8
{where}
 GROUP BY jobtitle,ec.EntityContactID, ec.AlternatecontactID, ec.Title,ec.Initials , ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, 
    ec.Phone3, ec.HomePhone, ec.Cell, ec.Fax, ec.Email, ec.Birthdate, ec.Ext, ec.Department, ec.Spouse, ec.AsstTitle, ec.AsstName, ec.AsstPhone, ec.AsstExt, 
        ec.Address1, ec.Address2, ec.Address3, ec.City, ec.State, ec.Code, ec.Region, ec.Country, ec.Province, ec.SendEmail, ec.SendSMS, ec.AccountNum, 
    ec.DateAdded, ec.DateModified, OutlookID,lbdep.Department,lbind.[Industry],STB.[Sub Type],
    ec.address1,ec.address2,ec.address3,ec.city,ec.region,ec.code,ec.country,
    ec.sendemail,ec.sendsms,ec.sendpost,EC.Additional2,EC.Additional3,EC.Additional4 ,[Addition 5],[Addition 5],[Addition 6],[Addition 7],[Addition 8] ,EC.Additional1,
    ec.dateadded,u.username,ec.datemodified,uu.username,eapy.Address1,eapy.Address2,
    eapy.Address3,eapy.City,eapy.State,eapy.Code,eapy.Region,eapy.Country,SC.SalesConsultant,c.Category,AccT.AccType,D.Division,t.Type,ls1.value,[Business Category],lABC.ABC, EC.JobTitle","0","","1","LRA-FUSION","0","0","fusion"
"39412","cv_mailbatch","","select mailbatchid, Email,
'Status' = case(isnull(issent,0)) 
  when 0 then 'Not Sent' 
  else case(isnull(issuccess,0))
    when 0 then 'Failed'
    else 'Sent'
    end
  end,
datename(dd,dateadded)+' '+left(datename(mm,dateadded),3)+' '+datename(yyyy,dateadded)+
' @ '+datename(hh,dateadded)+':'+right('0'+datename(mi,dateadded),2) as [Date Added]
from mailbatch
order by mailbatchid","0","","1","LRA-FUSION","0","0","fusion"
"39413","cv_leave","","SELECT 
	leaveid, 
	S.CountryID as [Country],
	isnull(S.Firstname,'') + ' ' + isnull(S.Surname,'') as [Employee], 
	ISNULL(lt.leavetype, 'None') as [Leave Type],
	ISNULL(lp.leaveperiod, 'None') as [Leave Period],
	CONVERT(nvarchar, l.startdate, 111) as [Start Date], 
	CONVERT(nvarchar,enddate, 111) as [End Date],
	datediff(d,l.startdate,l.enddate)+1 as [Days Booked],
	CASE WHEN LP.LeavePeriod = 'Half Day' THEN cast(0.5 as varchar)  ELSE
	cast(round(nodaystaken,2) as varchar) END as [Actual Days Leave],
	'Leave Granted' = case isnull(isGranted,0) WHEN 0 THEN 'No' ELSE 'Yes' END, 
	lt.cr as [ShowCol]
FROM leave l 
LEFT JOIN Staff S ON l.userid = S.Staffid 
LEFT JOIN leavetype lt ON l.leavetypeid = lt.leavetypeid
LEFT JOIN leaveperiod lp on l.periodtypeid = lp.leaveperiodid
{where}
ORDER BY l.startdate","0","","1","LRA-FUSION","0","0","fusion"
"39414","cv_loadleave","","SELECT l.userid, isnull(leavetypeid,0) as leavetypeid,
 l.startdate, enddate, isnull(nodaystaken, 0) as nodaystaken, periodtypeid, leavecycle, comments ,isGranted,divid
 from leave l left join users u on l.userid = u.userid 
<%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39415","cv_leave_cal_bookings","","
SELECT cast(leaveid as nvarchar) as [id], LTRIM(isnull(Staff.Firstname,'') + ' ' + isnull(Staff.Surname,'')) as [description],
leave.StartDate, enddate, ISNULL(leavetype.cr,0) as cr
FROM leave 
INNER JOIN STAFF ON STAFF.STAFFid = leave.userid 
LEFT JOIN leavetype ON leavetype.leavetypeid = leave.leavetypeid
WHERE (Convert(varchar,divid) like <%divid%>) AND (isnull(leave.isgranted,0)=1) AND ((leave.startdate BETWEEN '<%startdate%> 00:00:00' AND '<%enddate%> 23:59:59') OR 
       (enddate BETWEEN '<%startdate%> 00:00:00' AND '<%enddate%> 23:59:59') OR 
       (leave.startdate <= '<%startdate%> 00:00:00' AND enddate >= '<%enddate%> 23:59:59')) 
/*AND*/","0","","1","LRA-FUSION","0","0","fusion"
"39416","cv_late_cal_items","","select count(*) as num, year(date) as yr, month(date) as mn, day(date) as dy
from lateentry 
WHERE (date BETWEEN '<%startdate%> 00:00:00' AND '<%enddate%> 23:59:59')
group by  year(date), month(date), day(date)
","0","","1","LRA-FUSION","0","0","fusion"
"39417","cv_Activites","","select top 100 percent
ISNULL(ActivityID, ' ') AS [ID],
 ActivityID, isnull(Users.Firstname,'') + ' ' + isnull(users.Surname,'') as [Added By],/*div.value as Division,*/ 
 Case When isnull(Activity.LeadID,0) > 0 THEN L.Company ELSE E.Company END as [Company],
 Case When isnull(Activity.LeadID,0) > 0 THEN L.LeadName ELSE isnull(EC.Contact,'No Contact Selected') END as [Contact],
 atype.value as 'Action Type', isnull(us.Firstname,'') +  ' ' +  isnull(us.Surname,'') as [Assigned To],
 Convert(Varchar,Activity.DateAdded,111) as 'Date Added',Convert(Varchar,Activity.DateAdded,108) as 'Time Added', 
 Convert(Varchar,Activity.DateNextAction,111) as 'Next Action Date',Convert(Varchar,Activity.DateNextAction,108) as 'Next Action Time',
 Activity.CommentsNextAction as 'Comments (Next Action)' ,ao.Value as 'Activity Outcome', OutcomeDetails as 'Outcome Details'
from Activity
left join Users on Users.UserID = Activity.AddedByID
left join (SELECT EntityContactID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Contact] FROM EntityContact) EC on EC.EntityContactID = Activity.EntityContactId
left join Lookup atype on atype.lookupid = Activity.ActivityTypeID
Left join Entity E on E.EntityID = Activity.EntityID
left join Lookup ao on ao.lookupid = Activity.ActivityOutcomeID
LEFT JOIN lookup div on div.lookupid = activity.divid
LEFT JOIN Users us on us.userid = activity.userid
LEFT JOIN (SELECT LeadID, Company, isnull(Firstname,'') + ' ' + isnull(LastName,'') as [LeadName] FROM Lead) l ON Activity.LeadID = L.LeadID
<%where%>
ORDER BY ActivityID Desc","0","","1","LRA-FUSION","0","0","fusion"
"39418","cv_emaillog_audit","","select 
 EmailLogID,isnull(Users.Firstname + ' ','') + isnull(Users.Surname,'') as 'Sent By', Entity.Company,
 case isnull(dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Firstname, EntityContact.Surname), '') when '' then 'No Contact Selected' else  
 dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Firstname, EntityContact.Surname) end
 as Contact,
 EmailLog.EmailAddr as 'Email Address', isnull(Phone1,isnull(phone2,isnull(phone3,isnull(Cell,'None Found')))) as 'Telephone',
 convert(varchar(11),Emailtime) as [Date],EmailSubject as [Subject], EmailStatus as 'Status',
 'Response' = Case EmailLog.Response when 1 then 'Yes' else 'No' end
from EmailLog
left join Entitycontact on entitycontact.entitycontactid = Emaillog.EmailRcptID
left join entity on entitycontact.entityid = entity.entityid
left join Users on EmailLog.SendById = Users.UserID
<%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39419","cv_smslog_audit","","select 
 SMSLogID, Entity.Company, 
 dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Firstname, EntityContact.Surname) as Contact,
 SMSLog.SMSNumber as 'Cell Number', convert(varchar(11),SMStime) as [Date], SMSMsg as [Message]
from SMSLog
left join Entitycontact on entitycontact.entitycontactid = smslog.SMSUserID
left join entity on entitycontact.entityid = entity.entityid
<%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39420","cv_calllog_audit","","select
        ISNULL(CalllogID,'') AS [ ],
	'CL' +  Convert(Varchar,CallLogID) As [CallLogID],
	CC.Username as   'Call Created By',
    case AdvCall when 1 then 'Advanced Call' else 'Call' end  as [Activity Type],
	case when isnull(CallLog.EntityContactID,0)  <> 0 
	then Entity.Company else isnull(lead.Company,'') end as Company,
	case when isnull(CallLog.EntityContactID,0)  <> 0 
	then isnull(EntityContact.Firstname,'')+' '+ isnull(EntityContact.Surname,'')  
	else isnull(lead.Firstname,'')+' '+ isnull(lead.Lastname,'') end as Contact,  
	convert(varchar,calldate, 111) + ' ' + Convert(varchar,calldate,108) as [Date],
	CallDirection as 'Direction',
	CallSubject as 'Subject',
	CallDescription as [Description],   
	case when isnull(iscomplete,0) = 0  then '0 %' else '100 %' END as [Percentage Complete],
        CASE AdvCall WHEN 1 THEN 'Yes' ELSE 'No' END AS [Advanced Call]
from CallLog  
left join Entitycontact on entitycontact.entitycontactid = calllog.entitycontactid 
left join entity on entitycontact.entityid = entity.entityid  
Left join lead on  lead.LeadID = CallLog.LeadID
left join users CC on CC.userid = CallLog.CallCreatorID  
left join users U on U.userid = CallLog.userid 

<%where%>

UNION ALL    

Select
    ISNULL(CalllogID,'') AS [ ],
    'CC' + Convert(Varchar,[CallLogID]) As [CallLogID],
    [Call Created By],
    [Activity Type], 
    [Company],
    [Contact],
    [Date],
    [Direction],
    [Subject],
    [Description],
    [Percentage Complete],
    [Advanced Call]
from 
(select
    CallLogID,
    CC.Username as 'Call Created By',
    case AdvCall when 1 then 'Advanced Call' else 'Call' end  as [Activity Type], 
     isnull(Canvas.Company,'')  as [Company],   
   isnull(Canvas.Contact,'')  as [Contact],
    convert(varchar,calldate, 111) + ' ' + Convert(varchar,calldate,108) as [Date], 
    CallDirection as 'Direction',
    CallSubject as 'Subject', CallDescription as [Description],
    case when isnull(iscomplete,0) = 0  then '0 %' else '100 %' END as [Percentage Complete],
    CASE AdvCall WHEN 1 THEN 'Yes' ELSE 'No' END AS [Advanced Call]
from 
Canvascalllog 
left join canvas on canvas.canvasid = canvascalllog.canvasid
left join users CC on CC.userid = CanvasCallLog.CallCreatorID 
left join users U on U.userid = CanvasCallLog.userid 
<%where2%>

) Y 
","0","","1","LRA-FUSION","0","0","fusion"
"39421","cv_export_emails","","select EmailLogID,isnull(Users.Firstname + ' ','') + isnull(Users.Surname,'') as 'Sent By', Entity.Company, dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Firstname, EntityContact.Surname) as Contact, EmailLog.EmailAddr as 'Email Address', isnull(Phone1,isnull(phone2,isnull(phone3,isnull(Cell,'None Found')))) as 'Telephone',convert(varchar(11),Emailtime) as [Date], EmailSubject as [Subject], EmailStatus as 'Status', 
'Response' = Case EmailLog.Response when 1 then 'Yes' else 'No' end
from EmailLog
left join Entitycontact on entitycontact.entitycontactid = Emaillog.EmailRcptID
left join entity on entitycontact.entityid = entity.entityid
left join Users on EmailLog.SendById = Users.UserID","0","","1","LRA-FUSION","0","0","fusion"
"39422","cv_CallLog_Products","","select 
 l.lookupid as 'ProductID', l.value as 'Product',l.lookupid as assigned
from Lookup l
Where l.Class = 'CallLog Products'
order by l.[value] desc","0","","1","LRA-FUSION","0","0","fusion"
"39423","cv_CallLog_Audit_Adv","","select 
 CallLogID, 
 U.Username as 'Call Created By',
 Entity.Company,
 dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Firstname, EntityContact.Surname) as Contact,
 convert(varchar,calldate,111) + ' ' +  convert(varchar,calldate,108)  as [Date],
 CallDirection as 'Direction',
 CallSubject as [Subject],
 moc.Value as 'Method of Contact',
 ooc.Value as 'Origin of Call',
 toc.Value as 'Type of Call',
 br.Value as 'Business Result',
 CallDescription as 'Description',
 'Advanced Call' = case AdvCall when 1 then 'Yes' else 'No' end
from CallLog
left join Entitycontact on entitycontact.entitycontactid = calllog.entitycontactid
left join entity on entitycontact.entityid = entity.entityid
left join users U on U.userid = CallLog.CallCreatorID
left join lookup moc on moc.LookupID = CallLog.ContactMethodID
left join lookup ooc on ooc.LookupID = CallLog.CallOriginID
left join lookup toc on toc.LookupID = CallLog.CallTypeID
left join lookup br  on br.lookupID  = CallLog.BusResID
<%where%>
ORDER BY CallDate Desc","0","","1","LRA-FUSION","0","0","fusion"
"39424","cv_apptcal_list","","select u.userid as calid, ltrim(rtrim(isnull(u.firstname,'')+' '+isnull(u.surname,''))) as [text],
       case isnull(u.UserCalendarColour, 0) when 0 then 15251090 else u.UserCalendarColour end as colour
from users u
inner join
(select usercalid as userid from 
  (select userid, usercalid from CalAccess 
   where userid = {userid}
   union all
   select {userid}, {userid}) a
 where usercalid in ({viewuseridlist})
 group by userid, usercalid) uc on u.userid = uc.userid
order by u.firstname, u.surname","0","","1","LRA-FUSION","0","0","fusion"
"39425","cv_apptcal_users","","select u.userid as calid, ltrim(rtrim(isnull(u.firstname,'')+' '+isnull(u.surname,''))) as [text],0 as Rank
from users u
inner join
(select usercalid as userid from 
  (select userid, usercalid from CalAccess 
   where userid = {userid}
   union all
   select 1, 1) a
group by userid, usercalid) uc on u.userid = uc.userid

union all 

select '0' as calid, 'All' as [Text],1 as Rank

 
order by Rank,[text]","0","","1","LRA-FUSION","0","0","fusion"
"39426","cv_contacts_dupfields","","select top 0 
       firstname as [First Name-firstname], 
       Surname as [Surname-surname], 
       Phone1 as [Phone 1-phone1], 
       Phone2 as [Phone 2-phone2], 
       Phone3 as [Phone 3-phone3], 
       homephone as [Home Phone-homephone], 
       cell as [Cell-cell], 
       fax as [Fax-fax], 
       email as [Email-email], 
       birthdate as [Birth Date-birthdate] 
from entitycontact","0","","1","LRA-FUSION","0","0","fusion"
"39427","cv_late_history","","select lateentryid, 
left(datename(dw, date),3)+' '+datename(dd, date)+' '+left(datename(mm, date),3)+' '+datename(yyyy,date) as [Late Date],
right('0'+datename(hh, date),2)+':'+right('0'+datename(mi, date),2) as [Arrival Time],
Reported, replace(Reason,char(13)+char(10),' ') as Reason
from lateentry l left join users u on l.employeeid = u.userid
<%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39428","cv_late_list","","select lateentryid, 
ltrim(isnull(e.firstname,'')+' '+isnull(e.surname,'')) as Employee,
left(datename(dw, date),3)+' '+datename(dd, date)+' '+left(datename(mm, date),3)+' '+datename(yyyy,date) as [Late Date],
right('0'+datename(hh, date),2)+':'+right('0'+datename(mi, date),2) as [Arrival Time],
Reported, replace(Reason,char(13)+char(10),' ') as Reason
from lateentry l left join staff e on l.employeeid = e.staffid
<%where%>
order by [date] desc
","0","","1","LRA-FUSION","0","0","fusion"
"39429","qf_entitycontacts_with_company","","select top 50 ec.entitycontactid, e.Company, dbo.EntityContactName(ec.Title, ec.Initials, ec.Firstname, ec.Surname) as [Name]
from entitycontact ec
Left Join Entity e on e.EntityID = ec.EntityID
where ((dbo.EntityContactName(ec.Title, ec.Initials, ec.Firstname, ec.Surname) like '<%replace%>%')
or (e.Company like '<%replace%>%'))  <%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39430","qf_entitycontacts_without_company","","select top 50 ec.entitycontactid, ec.Company, dbo.EntityContactName(ec.Title, ec.Initials, ec.Firstname, ec.Surname) as [Name]
from entitycontact ec
where ((dbo.EntityContactName(ec.Title, ec.Initials, ec.Firstname, ec.Surname) like '<%replace%>%')
or (ec.Company like '<%replace%>%')) <%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39431","cv_matrixsearch","","select 
g.matrixgroupid, i.matrixitemid, g.[group], i.item,
e.clirepairer, e.clireseller, e.clicompetitor,
e.supenduser , e.supconsultant, e.supoemmanufacturer 
from matrixgroup g 
left join matrixitem i on g.matrixgroupid = i.matrixgroupid 
left join (select * from entitymatrixitem {where}) e on i.matrixitemid = e.matrixitemid
order by g.rank, i.rank ","0","","1","LRA-FUSION","0","0","fusion"
"39432","cv_glp_controlconfig","","select controlconfigid, controlpath as [Control Path], 
left(replace(replace(xmlconfig, char(13)+char(10), ' '), char(9), ' '), 1000) as [XML Config]
from glpcontrolconfig order by controlpath","0","","1","LRA-FUSION","0","0","fusion"
"39433","cv_BusinessObjects","","Select 'Object=' + Object + '#S;' as GlID, Object, ParentObject as [Parent], KeyFieldList as [Key List], DisplayInterface as [Interface],
CUIDFieldName as [CUID Field], CUIDCodeFieldName as [CUID Code]
From BusinessObjects
{where}
order by object","0","","1","LRA-FUSION","0","0","fusion"
"39434","qf_dealer","","select dealerid, dealername as [Dealer], contactperson as [Contact Person]
from dealers
where (dealername like '%<%replace%>%')
order by dealername, contactperson","0","","1","LRA-FUSION","0","0","fusion"
"39435","cv_developer_assign","","select d.userid, d.username, isnull(eg.developerid,0) as assigned
from users d
left join (select developerid from developertasks where taskreminderid=<%taskreminderid%>) eg on d.userid = eg.developerid 
order by d.[username] desc","0","","1","LRA-FUSION","0","0","fusion"
"39436","cv_callbatch","","SELECT 
 ec.entitycontactid, 'Completed' = Case isnull(cb.completed,0) when 0 then 'No' else 'Yes' end,isnull(e.company,ec.company) AS Comapny,isnull(ec.firstname,'') + ' ' + isnull(ec.surname,'') as Contact,
 phone1 AS [Phone # 1],phone2 as [Phone # 2],phone3 as [Phone # 2],homephone as [Home #],cell as [Cell #],ec.fax as [Fax #]
FROM callbatch cb
INNER JOIN entitycontact ec ON ec.entitycontactid = cb.entitycontactid
LEFT JOIN entity e ON e.entityid = ec.entityid
<%where%>
ORDER BY ec.surname,ec.firstname","0","","1","LRA-FUSION","0","0","fusion"
"39437","cv_LeaveTotal","","SELECT sum(annual) as Annual, sum(sick) as Sick,sum(other) as [Other] FROM 
(
SELECT sum(nodaystaken) as [Annual],0 as [Sick],0 as [Other] FROM leave l
LEFT JOIN users u ON l.userid = u.userid 
LEFT JOIN leavetype lt ON l.leavetypeid = lt.leavetypeid
LEFT JOIN leaveperiod lp on l.periodtypeid = lp.leaveperiodid
WHERE lt.leavetype like 'Annual' <%where%>
union all
SELECT 0 AS [Annual],sum(nodaystaken) as [Sick],0 as [Other] FROM leave l
LEFT JOIN users u ON l.userid = u.userid 
LEFT JOIN leavetype lt ON l.leavetypeid = lt.leavetypeid
LEFT JOIN leaveperiod lp on l.periodtypeid = lp.leaveperiodid
WHERE lt.leavetype like 'Sick' <%where%>
union all
SELECT 0 AS [Annual],0 as [Sick],sum(nodaystaken) as [Other] FROM leave l
LEFT JOIN users u ON l.userid = u.userid 
LEFT JOIN leavetype lt ON l.leavetypeid = lt.leavetypeid
LEFT JOIN leaveperiod lp on l.periodtypeid = lp.leaveperiodid
WHERE (lt.leavetype not like 'Sick') AND (lt.leavetype not like 'Annual') <%where%>
) a ","0","","1","LRA-FUSION","0","0","fusion"
"39438","cv_entity_contact_MOComms","","select m.MOCommid, m.[MOComm], isnull(em.MOCommid,0) as assigned
from MOComm m
left join (select MOCommid from entitycontactMOComm where entitycontactid=<%entitycontactid%>) em on m.MOCommid = em.MOCommid
order by m.[MOComm] desc","0","","1","LRA-FUSION","0","0","fusion"
"39439","cv_OrgType_From_Entity","","Select Types.[Type] from 
Types
left join Entity on Entity.EntityTypeID = Types.TypeID
<%where%>


","0","","1","LRA-FUSION","0","0","fusion"
"39440","cv_entity_contact_contacttypes","","select ct.contacttypeid, ct.[contacttype], isnull(eg.contacttypeid,0) as assigned
from contacttypes ct
left join (select contacttypeid from entitycontacttypes where entitycontactid=<%entitycontactid%>) eg on ct.contacttypeid = eg.contacttypeid
order by ct.[contacttype] desc","0","","1","LRA-FUSION","0","0","fusion"
"39441","cv_taskactions","","select 
	A.actionid as [Action Taken],
	A.Number as [Number],
	LS.[value] as [Sub Task], 
	convert(varchar,A.nextactiondate,103) as [Due Date],
	U.[Assigned To],
	A.comments as [Comments],
	LP.[value] as [Priority], 
	A.result as [Results], 
	convert(varchar, A.PercentageID) + ' %' as [Percentage Complete]
from actions A
LEFT JOIN lookup LP on LP.lookupid = A.priorityid
LEFT JOIN lookup LS on LS.lookupid = A.bittypeID
LEFT JOIN (SELECT UserID, Firstname + ' '+ Surname as [Assigned To] FROM Users) U
ON A.AssignedTo = U.userid
{where}
order by nextactiondate,priority","0","","1","LRA-FUSION","0","0","fusion"
"39442","qf_entityaddresses","","select top 50 entityaddressid, addresstype as Type, address1 as [Address 1], address2 as [Address 2], address3 as [Address 3],
City as [Area], region as [Province], Code, Country 
from entityaddress
where ((address1 like '%<%replace%>%') or (address2 like '%<%replace%>%') 
or (address3 like '%<%replace%>%') or (City like '%<%replace%>%') 
or (State like '%<%replace%>%')or (Code like '%<%replace%>%') 
or (Country like '%<%replace%>%')) AND <%where%>
order by addresstype","0","","1","LRA-FUSION","0","0","fusion"
"39443","cv_PrintDaysApps","","Select '' as [Time],'<font size=3px><b><%Heading%></b></font>' as [Name],'' as [For],'<font size=3px><b>' + DateName(weekday,Convert(DateTime,'<%Date%>')) + ', ' + Convert(varchar(50),Convert(DateTime,'<%Date%>'),106) + '</b></font>' as [Comments]
UNION ALL
Select '<b>Time</b>' as [Time], '<b>Client&nbsp;Name</b>' as [Patient Name], '<b>For</b>' as [For], '<b>Comments</b>' as [Comments]
UNION ALL
Select left(Convert(Varchar(30),[Date],8),5) as [Time], E.Company + isnull(' - ' + EC.Contact,'') as [Contact Name],
	 AP.Subject as [For], AP.Notes as [Comments]
From Appointment AP
LEFT JOIN (SELECT EntityID, Company FROM Entity) E on AP.EntityID = E.EntityID
LEFT JOIN (SELECT min(ApptContID) as [ApptContID],min(EntityContactID) as [EntityContactID], ApptID FROM AppointmentContacts Group By ApptID) APC  on AP.AppointmentID = APC.ApptID
Left JOIN (SELECT EntityContactID, isnull(Firstname,'')  + ' ' + isnull(Surname,'') as [Contact] FROM EntityContact) EC on APC.EntityContactID = EC.EntityContactID
Where Convert(DateTime,'<%Date%>') between Convert(DateTime,Convert(Varchar(50),[Date],111)) and Convert(DateTime,Convert(Varchar(50),[EndDate],111)) AND (ForUserID= <%foruserid%>)
Order By 1","0","","1","LRA-FUSION","0","0","fusion"
"39444","cv_Appt4SMS","","select AppointmentID, EC.EntityContactID, isnull(EC.Firstname,EC.Surname) as [Name], EC.Cell, CONVERT(VARCHAR(5),[Date],108) as StartTime,  CONVERT(VARCHAR(10), [Date], 103) as [Date], AP.Subject,
Isnull(E.Company,E.Legalname) as [Client]
From Appointment AP
Left Join AppointmentContacts AC on AC.apptID=Ap.AppointmentID
JOIN EntityContact EC ON EC.EntityContactID = AC.EntityContactID
Left Join Entity E on E.EntityID=EC.EntityID
<%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39445","qf_entitycontacts_without_company1","","select top 50 ec.entitycontactid, /*ec.Company,*/ ec.AccountNum as [Acc. Number], dbo.EntityContactName(ec.Title, ec.Initials, ec.Firstname, ec.Surname) as [Name]
from entitycontact ec
where ((dbo.EntityContactName(ec.Title, ec.Initials, ec.Firstname, ec.Surname) like '%<%replace%>%')
or /*(ec.Company like '<%replace%>%') or*/ (ec.AccountNum like '%<%replace%>%')) <%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39446","cv_ExportAppt","","SELECT 
	A.AppointmentID
	, A.[Date] as [Start Date]
	, A.EndDate as [End Date]
	, Options.OptVal as [Appt. Type]
	, A.[subject] as [Subect]
	, A.Location
	, E.Company
	, EC.Firstname as [First name]
	, EC.Surname as [Surname]
	, EC.Cell as [Cell Phone]
	, EC.Phone1 as [Work Phone]
	, A.Notes
	, A.Actions as [Visit Report]
	
FROM Appointment A
LEFT JOIN (
	SELECT * FROM AppointmentContacts
) AC ON AC.apptID = A.AppointmentID
LEFT JOIN (
	SELECT * FROM EntityContact
) EC ON EC.EntityContactID = AC.EntityContactID
LEFT JOIN (
	SELECT * FROM Entity
) E ON E.EntityID = A.EntityID
Left JOIN Options ON Options.OptNumVal = cast(A.CalColour as varchar)
Where 
Convert(DateTime,'<%Date%>') between Convert(DateTime,Convert(Varchar(50),[Date],111)) 
and Convert(DateTime,Convert(Varchar(50),[EndDate],111)) <%ForUserID%>
Order By 1","0","","1","LRA-FUSION","0","0","fusion"
"39447","cv_apptcal_appts1","","select appointmentid, foruserid as calid, [date] as starttime, enddate as endtime, 
       /*case ltrim(rtrim(isnull(dbo.EntityContactNameID(ec.EntityContactID),'') + ' - ')) When '-' then '' Else dbo.EntityContactNameID(ec.EntityContactID) End + Case isnull(subject,'') when '' then '' Else ' - ' + isnull(subject,'') End +
    Case isnull(AccountNum,'') When '' then '' Else ' - ACC: ' + AccountNum End*/

isnull(isnull(l.Company,e.Company),'[No Company]')+' - '+ 
	CASE WHEN isnull(app.IsLeadAppt,0) = 1 
	THEN
		isnull((Select top 1 isnull(firstname,'')+' '+isnull(surname,'')+' ...' from LeadContacts where leadcontactID in (Select EntitycontactID from AppointmentContacts where ApptID = app.AppointmentID)),'[No contacts]')
	ELSE
		isnull((Select top 1 isnull(firstname,'')+' '+isnull(surname,'')+' ...' from Entitycontact where EntitycontactID in (Select EntitycontactID from AppointmentContacts where ApptID = app.AppointmentID)),'[No contacts]')
	END
	+' - '+isnull(subject,'[No Subject]')	 

 as [text],  
      isnull(CalColour,15724527) as colour
from appointment app
Left Join EntityContact ec On ec.EntityContactID = app.EntityContactID
Left Join Entity e On e.EntityID = app.EntityID
Left Join Lead l ON isnull(app.IsLeadAppt,0) = 1 AND app.LeadID = l.LeadID
where {cancelled}
foruserid in (
select usercalid as userid from 
  (select userid, usercalid from calaccess 
   where userid = {userid}
   union all
   select {userid}, {userid}) a
 where usercalid in ({viewuseridlist})
group by userid, usercalid) and
(
(year([date]) = {year} and month([date]) = {month} and day([date]) = {day}) or
(year([enddate]) = {year} and month([enddate]) = {month} and day([enddate]) = {day}) or
(cast( right('0000{year}',4)+right('00{month}',2)+right('00{day}',2) as datetime) between [date] and enddate)
)
order by [date]
","0","","1","LRA-FUSION","0","0","fusion"
"39448","cv_versionreport","","select machinename as [Machine], username as [Last User], cast(isnull(major,0) as varchar)+'.'+cast(isnull(minor,0) as varchar)+'.'+cast(isnull(revision,0) as varchar) as Version, 
right('0'+datename(hh,dateupdated),2)+':'+right('0'+datename(n,dateupdated),2)+' '+
datename(d,dateupdated)+' '+left(datename(m,dateupdated),3)+' '+datename(yyyy,dateupdated) as [Last Updated]
from versions
order by dateupdated","0","","1","LRA-FUSION","0","0","fusion"
"39449","cv_Settings_MenuItems","","DECLARE @iLen int, @i int, @sPAD varchar(50)
Select @iLen = Max(len(DisplayName)) From glpTask where (TaskIDParent is null) and isnull(Hidden,0) = 0
Set @i = 0
Set @sPAD = ''
While (@i<@iLen)
BEGIN
	SET @sPAD = @sPAD + ' '
	SET @i = @i + 1
END

Select ch.TaskID, left(par.DisplayName + @sPAD,@iLen) + ' -> ' + ch.DisplayName as [ItemName] From
glpTask par
Join glpTask ch on par.TaskID = ch.TaskIDParent
Where isnull(ch.Hidden,0) = 0 AND isnull(par.Hidden,0) = 0
Order by par.displayname desc, par.Rank DESC , ch.Rank DESC 

","0","","1","LRA-FUSION","0","0","fusion"
"39450","qf_contacts","","select c.entitycontactid, 
ltrim(isnull(c.firstname,'')+' '+isnull(c.surname,'')) as [Contact],
e.Company
from entitycontact c
left join entity e on e.entityid = c.entityid
where (isnull(c.firstname,'')+' '+isnull(c.surname,'') like '%<%replace%>%') OR (isnull(E.Company,'') like '%<%replace%>%')
order by ltrim(isnull(c.firstname,'')+' '+isnull(c.surname,'')), e.company

","0","","1","LRA-FUSION","0","0","fusion"
"39451","cv_notes","","SELECT 
 NoteID,convert(varchar,[date],103) as [Date Created],users.username as [Modified By],Subject, [Description], substring(Notes, 1,50) as ""Notes..""
FROM notes
LEFT JOIN users ON users.userid = notes.modifiedbyid
<%where%>
ORDER BY [date]","0","","1","LRA-FUSION","0","0","fusion"
"39452","cv_notes2","","SELECT 
	NoteID,
	convert(varchar,[date],103) as [Date Added] ,
	u.username as [Created By],
	mod.username as [Modified By], 
	l.Value as [Note Type],
	Subject, 
	[Description], 
	substring(Notes, 1,50) as ""Notes..""
FROM notes
left join users u on u.userid = notes.createbyid
left join users mod  on mod.userid = notes.modifiedbyid
left join lookup l on l.lookupid = notes.NoteTypeID
<%where%>
ORDER BY [date] DESC","0","","1","LRA-FUSION","0","0","fusion"
"39453","cv_eapps","","/*
select  appointmentid,entitycontactid, convert(varchar,[date],103) AS [Appointment Start Date], convert(varchar,[date],108) AS [Start Time],
convert(varchar,[enddate],103) AS [Appointment End Date],convert(varchar,[enddate],108) AS [End Time], Subject, Notes 
From appointment
 WHERE ([date] between '20121214 00:00:00' AND '20121214 23:59:59')AND(foruserid ='1')
*/

SELECT  
newID(),
appointmentid,
E.company,
EC.Email,
ecid as [EntityContactID],
isnull(U.firstname,'')+' '+isnull(U.surname,'') as [user] ,
convert(varchar,[date],106) AS [StartDate], 
convert(varchar,[date],108) AS [StartTime],
convert(varchar,[enddate],106) AS [EndDate],
convert(varchar,[enddate],108) AS [EndTime],
Location,
[Subject]
FROM appointment A
LEFT JOIN (SELECT apptid AS  [aid],entitycontactid AS ecid FROM appointmentcontacts) AS  ECO
    ON eco.aid = a.appointmentid
LEFT JOIN entityContact EC ON ECO.ecid = EC.entitycontactID
LEFT JOIN entity E ON E.entityID = EC.entityID
LEFT JOIN users U ON A.ForUserID = U.userID
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"39454","cv_campaigns","","select campaignid, campaignname as [Campaign Name], dateStart as [Start Date], dateend as [End Date],
 u.username as [Created By], c.datecreated as [Date Created] 
from campaign c
left join users u on u.userid = c.usercreatedid
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39455","cv_search_based_report","","select 
campaignanswerid, isnull(firstname, ' ') + ' ' + isnull(surname, ' ') as [Client], ec.phone1 as ""Tel #"", cell as [Cell #], fax as [Fax #]  
from campaignanswers ca
left join entitycontact ec on ec.entitycontactid = ca.entitycontactid
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39456","qf_campaigns2","","select c.campaignid, c.campaignname
from campaign c
where campaignname like '<%replace%>%'
order by campaignname","0","","1","LRA-FUSION","0","0","fusion"
"39457","qf_campaigns1","","select campaignid, campaignname
from campaign 
where campaignname like '<%replace%>%' 
order by campaignname","0","","1","LRA-FUSION","0","0","fusion"
"39458","rpt_unionreport","","SELECT [ID],[desc] as [Description],[Question/Answer],number as Percentage FROM (
SELECT 
 'q=' + cast(qdataid as varchar) as [ID],Question as [Question/Answer],0 as [Rank],qdataid,'Question' AS [Desc],
 '' as 'Number'
FROM qdata q
<%where%>
union all
SELECT
 'a=' + cast(adataid as varchar) as [ID],(select answer from adata where adataid = q.adataid) as [Question/Answer],
 1 as [Rank],q.qdataid,'Answer' as [Desc],
 cast((((count(adataid)) * 100)/ (SELECT count(qdataid) FROM CampaignAnswers WHERE qdataid = q.qdataid)) as varchar) + ' %' as Number
FROM CampaignAnswers q
LEFT JOIN entitycontact ec on q.entitycontactid = ec.entitycontactid
<%where2%>
GROUP BY adataid,qdataid
) as a
ORDER BY qdataid,rank
","0","","1","LRA-FUSION","0","0","fusion"
"39459","cv_clientbatchman","","SELECT 
 cb.clientbatchid,'Completed' = CASE(isnull(cb.completed,0)) WHEN 0 THEN 'No' ELSE 'Yes' END,
 e.Company,ltrim(rtrim(isnull(ec.firstname,''))) as [First Name], ltrim(rtrim(isnull(ec.surname,''))) AS [Surname],
 phone1 AS [Tel #],homephone as [Home #],cell as [Cell #],ec.fax as [Fax #]
FROM clientbatch CB
LEFT JOIN entitycontact EC ON ec.entitycontactid = cb.entitycontactid
LEFT JOIN entity E ON e.entityid = ec.entityid
LEFT JOIN campaign C ON c.campaignid = cb.campaignid
<%where%>
ORDER BY ec.surname,ec.firstname","0","","1","LRA-FUSION","0","0","fusion"
"39460","cv_Questions","","select qdataid, Question as [Question(s)] 
from qdata qd
left join campaign c on c.campaignid = qd.campaignid
 {where}
","0","","1","LRA-FUSION","0","0","fusion"
"39461","cv_answers","","select adataid,answer as [Possible Answer(s)]
from adata
{where} ","0","","1","LRA-FUSION","0","0","fusion"
"39462","cv_assign_campaigns","","select c.campaignid, c.campaignname as ""Campaign""  
from assign a
inner join campaign c on c.campaignid = a.campaignid
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39463","cv_Available_capaigns","","select campaignid, campaignname as ""Campaign"", datestart as ""Start Date"", dateend as ""End Date"" 
from campaign","0","","1","LRA-FUSION","0","0","fusion"
"39464","qf_campaigns","","select c.campaignid, c.campaignname
from campaign c
left join assign a on a.campaignid = c.campaignid
where campaignname like '<%replace%>%' and <%where%>
order by campaignname","0","","1","LRA-FUSION","0","0","fusion"
"39465","qf_newCampaign","","select c.campaignid, c.campaignname
from campaign c
where campaignname like '<%replace%>%'
order by campaignname","0","","1","LRA-FUSION","0","0","fusion"
"39466","cv_Clean_List","","select top 0 Company, Firstname, Surname  from entitycontact","0","","1","LRA-FUSION","0","0","fusion"
"39467","cv_import_groups","","select distinct g.groupid, g.[group], isnull(eg.groupid,0) as assigned
from (select lookupid as groupid, value as [group] from lookup where class like 'group') g
left join entitycontactgroup eg on g.groupid = eg.groupid
order by g.[group] desc","0","","1","LRA-FUSION","0","0","fusion"
"39468","cv_PrintAppsWeekly","","SELECT 
 '' AS [Date],
 '' AS [Time],
 '<font size=3px><b><%Heading%></b></font>' as [Name],
 '' AS [Subject],
 '<font size=3px><b>' + convert(varchar,Convert(DateTime,'<%datefrom%>'),106) + ' - ' + ' ' + convert(varchar,Convert(DateTime,'<%dateto%>'),106) + '</b></font>'
UNION ALL
SELECT
 '<b>Date</b>' AS [Date],
 '<b>Time</b>' AS [Time],
 '<b>Name</b>' AS [Name],
 '<b>Subject</b>' AS [Subject],
 '<b>Comments</b>' AS [Comments]
UNION ALL
SELECT
 convert(varchar,[date],103)AS [Date],
 convert(varchar,[date],108) AS [Time],
 isnull(ec.firstname,'')  + '&nbsp;' + isnull(ec.surname,'') AS [Name],
 AP.Subject as [Subject], AP.Notes as [Comments]
FROM appointment AP
Left JOIN EntityContact EC on EC.EntityContactID = AP.EntityContactID
WHERE ([date] between '<%datefrom%> 00:00:00' AND '<%dateto%> 23:59:59') AND (foruserid = <%foruserid%>)
--ORDER BY 1,2,3","0","","1","LRA-FUSION","0","0","fusion"
"39469","cv_contactSearch_without_company1","","select ec.EntityContactID, ec.AlternatecontactID, ec.Company, ec.Title, ec.Initials , ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, ec.Phone3,
 ec.HomePhone, ec.Cell, ec.Fax, ec.Email, ec.Birthdate, ec.Ext, ec.Department, ec.Spouse, ec.AsstTitle, ec.AsstName, ec.AsstPhone, ec.AsstExt, 
ec.Address1, ec.Address2, ec.Address3, ec.City, ec.State, ec.Code, ec.Region, ec.Country, ec.Province, ec.SendEmail, ec.SendSMS, ec.AccountNum, ec.DateAdded, 
ec.DateModified, ec.OutlookID,
case isnull(ec.sendemail,0) when 0 then '' else 'Yes' end as [Send Email], 
case isnull(ec.sendsms,0) when 0 then '' else 'Yes' end as [Send SMS],
right('0'+datename(dd,ec.dateadded),2)+'/'+right('0'+cast(datepart(m,ec.dateadded) as nvarchar), 2)+'/'+datename(yyyy,ec.dateadded) as [Date Added],
right('0'+datename(dd,ec.datemodified),2)+'/'+right('0'+cast(datepart(m,ec.datemodified) as nvarchar), 2)+'/'+datename(yyyy,ec.datemodified) as [Last Modified],
(SELECT TOP 1 CONVERT(VARCHAR, CAST(CallDate as DATETIME),103) FROM CallLog WHERE ISNULL(AdvCall,0) = 1 AND EntityContactID = ec.EntityContactID ORDER BY CallDate DESC) as [Last Call],
 (SELECT TOP 1 CONVERT(VARCHAR, CAST([Date] as DATETIME), 103) FROM Appointment a 
		LEFT JOIN AppointmentContacts ac on ac.apptID = a.AppointmentID
		WHERE ac.EntityContactID = ec.EntityContactID ORDER BY [Date] DESC) as [Last Appointment]
from entitycontact as ec
left join entitycontactgroup g on ec.entitycontactid = g.entitycontactid
left join (select lookupid as typeid, value as type from lookup where class like 'type') t on ec.entitytypeid = t.typeid
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c on ec.entitycategoryid = c.categoryid
left join users u on ec.entitycontactcreatorid = u.userid
left join entitycontactdivision ed on ed.entitycontactid = ec.entitycontactid
{duplicate_section}
<%where%>
group by 
ec.EntityContactID, ec.AlternatecontactID, ec.Company, ec.Title,ec.Initials , ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, ec.Phone3,
ec.HomePhone, ec.Cell, ec.Fax, ec.Email, ec.Birthdate, ec.Ext, ec.Department, ec.Spouse, ec.AsstTitle, ec.AsstName, ec.AsstPhone, ec.AsstExt,  
ec.Address1, ec.Address2, ec.Address3, ec.City, ec.State, ec.Code, ec.Region, ec.Country, ec.Province, ec.SendEmail, ec.SendSMS, ec.AccountNum, ec.DateAdded, 
ec.DateModified, ec.OutlookID
{orderby}","0","","1","LRA-FUSION","0","0","fusion"
"39470","cv_entitysearch_cli1","","--cv_entitysearch_cli1
select {top}
    e.EntityID, 
    '' as [ ],
    Company, 
    LegalName as [Legal Name],
	EC.Contact,
    [Holding Company],
    sc.SalesConsultant as [Sales Consultant], 
    CONVERT(VARCHAR, DateAdded, 111) as [Date Added],
    Switchboard, 
    Fax, 
    URL, 
    e.Email,
    EC.Email AS [Contact Email], 
    EC.Cell AS [Contact Cell],
    VATNum as [VAT Number], 
    VATExemptNum as [VAT Exempt Number],     
    MenthodOfContact as [Method Of Contact], 
    Website as [Web Site],      
    CompRegNum as [Registration Number],
    isnull(u.Firstname,'')+' '+isnull(u.Surname,'') As [Creator],
    [Payment Terms],
    e.RefNo as [Reference Number],
    e.modifiedby as [Modified By],
	CONVERT(VARCHAR, e.DateModified, 111) as [Date Modified],
    abc.abcCategory as [ABC],
    Category,
    ODM.AccStatus as [Accounts Status],
    b.Buscat as [Business Category],
    t.type as [Type],
	LTS.Value as [Sub Type],
	dbo.fn_EntityGroups(E.EntityID) as [Group],
    AccT.AccType as [Account Type],
    e.AccountNum as [Account Number],
    ClientRating as [Client Rating],
    ManualRating as [Manual Rating],
	VendorNumber as [Vendor Number],
    [Send Accounts To Contact],
    [Send Accounts To Email],
    dbo.fnFormatNumber(isnull(e.DebitOrder,0)) as [Debit Order Amt.],
	A.Address1 as [Physical Address 1],
	A.Address2 as [Physical Address 2],
	A.Address3 as [Physical Address 3],
	A.City as [Physical Area],
	A.Region as [Physical Province],
	A.Code as [Physical Code],
	A.Country as [Physical Country],
	AP.Address1 as [Postal Address 1],
	AP.Address2 as [Postal Address 2],
	AP.Address3 as [Postal Address 3],
	AP.City as [Postal Area],
	AP.Region as [Postal Province],
	AP.Code as [Postal Code],
	AP.Country as [Postal Country],
	Case isnull(AcceptsBackOrders, 0 ) When 0 then 'False'
		when 1 then 'True'
	end as [Accepts Backorders],
	convert(Varchar,NextCallDate,111) as [Next Call Date],
	Case isnull(IsBirthdaySupplier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Birthday Supplier],
	Case isnull(IsBirthdayCourier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Birthday Courier],
	Case isnull(IsAnniversarySupplier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Aniversary Supplier],
	Case isnull(IsAnniversaryCourier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Aniversary Courier],
	Case isnull(IsAccountSupplier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Account Supplier]
 
FROM entity e WITH(NOLOCK)

LEFT JOIN (	SELECT LookupID, Value as [Payment Terms] FROM Lookup WITH(NOLOCK)) lp 
	ON lp.lookupid = E.PaymentTerms
LEFT JOIN ( select lookupid as typeid, value as type from lookup WITH(NOLOCK) where class like 'type') t 
	ON e.entitytypeid = t.typeid
LEFT JOIN LinkLookup LTS 
	ON LTS.LinkLookupID = E.entitysubtypeid
LEFT JOIN (	select lookupid as categoryid, value as category from lookup WITH(NOLOCK) where class like 'category') c 
	ON e.entitycategoryid = c.categoryid
left join ( SELECT UserID, Firstname, Surname, Username FROM users WITH(NOLOCK)) u 
	ON e.entitycreatorid = u.userid
LEFT JOIN EntityAddress a  WITH(NOLOCK)
	ON A.EntityID = E.EntityID AND A.EntityAddressID = (SELECT TOP 1 EntityAddressID FROM EntityAddress WITH(NOLOCK) WHERE EntityID = E.EntityID AND AddressType like 'Phys%')
LEFT JOIN EntityAddress AP  WITH(NOLOCK)
	ON AP.EntityID = E.EntityID AND AP.EntityAddressID = (SELECT TOP 1 EntityAddressID FROM EntityAddress WITH(NOLOCK) WHERE EntityID = E.EntityID AND AddressType like 'Pos%')
LEFT JOIN (	select lookupid as buscatid, value as buscat from lookup  WITH(NOLOCK)	where class like 'buscat') b 
	ON e.buscatid = b.buscatid
LEFT JOIN (	select lookupid as abccategoryid, value as abccategory from lookup  WITH(NOLOCK) where class like 'abc') abc 
	ON e.abccatid = abc.abccategoryid
LEFT JOIN (	select lookupid as AccTypeid, value as AccType from lookup WITH(NOLOCK) where class like 'accounttype') AccT 
	ON e.accounttypeid = AccT.AccTypeid
LEFT JOIN (select lookupid as accStatusID, value as AccStatus from lookup WITH(NOLOCK) where class like 'accStat') ODM 
	ON e.AccStatID = ODM.accStatusID
LEFT JOIN ( select staffid as SalesConsid, ISNULL(FirstName,'') + ' ' + IsNull(Surname,'') As SalesConsultant 	from staff WITH(NOLOCK)) SC
	ON e.salesconsid = SC.SalesConsID
LEFT JOIN (	SELECT 	entityID, Company as [Holding Company] 	FROM Entity WITH(NOLOCK)) HC 
	ON e.AlternateCompanyID = HC.Entityid
LEFT JOIN (	SELECT 	EntityContactID	, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Send Accounts To Contact], Email as [Send Accounts To Email] FROM EntityContact WITH(NOLOCK)) ECAcc 
	ON E.InvoiceTo = ECAcc.EntityContactID
LEFT JOIN (	SELECT 	EntityContactID,Cell,EntityID,ISNULL(firstname,'') + ' ' + ISNULL(surname,'') as [Contact],IsDefault, JobTitle,Email FROM EntityContact WITH(NOLOCK)) EC 
	ON EC.EntityID = E.EntityID AND EC.EntityContactID = (SELECT TOP 1 EntityContactID FROM EntityContact WITH(NOLOCK) WHERE EntityID = E.EntityID ORDER BY ISNULL(Isdefault,1), CASE WHEN JobTitle = 'Home Owner' THEN -1 ELSE 0 END)
LEFT JOIN EntityGroup g WITH(NOLOCK) 
	on g.EntityID = e.EntityID AND g.EntityGroupID = (SELECT Top 1 EntityGroupID FROM EntityGroup WITH(NOLOCK) WHERE EntityID = E.EntityID)
{matrixjoin}
{where}
ORDER BY E.Company","0","2017-05-15 10:21:52","1","LRA-FUSION","0","0","fusion"
"39471","cv_entitysearch_sup1_OLD","","select 	e.EntityID,
        '' as [ ], 
	Company, 
	LegalName,
	SC.SalesConsultant, 
	DateAdded, 
	SwitchBoard, 
	Fax, 
	URL, 
	e.Email, 
	VATNum, 
	VATExemptNum, 
	AcceptsBackOrders, 
	MenthodOfContact, 
	WebSite, 
	NextCallDate, 
	CompRegNum,
	isnull(u.Firstname,'')+' '+isnull(u.Surname,'') As [Creator],
	[Payment Terms],
	e.modifiedby,
	abc.abcCategory as [AccountStatus],
	b.Buscat as [BusinessCategory],
	t.type as [Type],
	AccT.AccType,
	e.AccountNum as [Account Number],
	ClientRating,
	ManualRating,
	[Send Accounts To Contact],
	[Send Accounts To Email],
    (select top 1 Country from entityaddress where entityaddress.entityid = e.EntityID  ) as [Country],
    (select top 1 City from entityaddress where entityaddress.entityid = e.EntityID  ) as City,
    (select top 1 Region from entityaddress where entityaddress.entityid = e.EntityID  ) as Region
from entity e WITH(NOLOCK)
LEFT JOIN (
	SELECT 
		LookupID
		, Value as [Payment Terms] 
	FROM Lookup WITH(NOLOCK)
) lp ON lp.lookupid = E.PaymentTerms
left join (
	select 
		lookupid as typeid
		, value as type 
	from lookup  WITH(NOLOCK)
	where class like 'type'
) t on e.entitytypeid = t.typeid
left join (
	select 
		lookupid as categoryid
		, value as category 
	from lookup  WITH(NOLOCK)
	where class like 'category'
) c on e.entitycategoryid = c.categoryid
left join users u WITH(NOLOCK) on e.entitycreatorid = u.userid
left join (
	select top 1 
		* 
	from  entityaddress WITH(NOLOCK)
) as a on e.entityid = a.entityid
left join vwnumcontacts nc WITH(NOLOCK) on e.entityid = nc.entityid
left join entitygroup g WITH(NOLOCK) on e.entityid = g.entityid
left join (
	select 
		lookupid as buscatid
		, value as buscat 
	from lookup  WITH(NOLOCK)
	where class like 'buscat'
) b on e.buscatid = b.buscatid
left join (
	select 
		lookupid as abccategoryid
		, value as abccategory 
	from lookup WITH(NOLOCK) 
	where class like 'abc'
) abc on e.abccatid = abc.abccategoryid
left join entitydivision ed WITH(NOLOCK) on ed.entityid = e.entityid
left join (
	select 
		lookupid as AccTypeid
		, value as AccType 
	from lookup WITH(NOLOCK) 
	where class like 'accounttype'
) AccT on e.accounttypeid = AccT.AccTypeid

left join( 
	select 
		staffid as SalesConsid
		, ISNULL(FirstName,'') + ' ' + IsNull(Surname,'') As SalesConsultant 
	from staff WITH(NOLOCK)
) SC
on e.salesconsid = SC.SalesConsID
LEFT JOIN (
	SELECT 
		entityID
		, Company as [Holding Company] 
	FROM Entity WITH(NOLOCK)
) HC on e.AlternateCompanyID = HC.Entityid
LEFT JOIN (
	SELECT 
		EntityContactID
		, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Send Accounts To Contact]
		, Email as [Send Accounts To Email] 
	FROM EntityContact WITH(NOLOCK)
) ECAcc ON E.InvoiceTo = ECAcc.EntityContactID
{matrixjoin}
{where}
group by e.EntityID, Company, LegalName, DateAdded, SwitchBoard, Fax, URL, e.Email, VATNum, VATExemptNum, AcceptsBackOrders, MenthodOfContact, WebSite, NextCallDate, CompRegNum,u.Surname,u.Firstname,Category,e.modifiedby,abc.abcCategory,b.Buscat,t.type,AccT.AccType,e.accountnum,
SC.SalesConsultant,
ClientRating,ManualRating,[Payment Terms],[Send Accounts To Contact],[Send Accounts To Email],country,city,region
","0","","1","LRA-FUSION","0","0","fusion"
"39472","cv_LeaveTotalLeft","","SELECT sum(daysleft) as DaysLeft,sum(SickDaysLeft) as SickDaysLeft FROM (
SELECT
 sum(LeaveProfileDetails.maxdays) - sum(nodaystaken) AS DaysLeft,0 AS SickDaysLeft
FROM LeaveProfileDetails,leave l
LEFT JOIN users u ON l.userid = u.userid 
LEFT JOIN leavetype lt ON l.leavetypeid = lt.leavetypeid
LEFT JOIN leaveperiod lp on l.periodtypeid = lp.leaveperiodid
WHERE lt.leavetype like 'Annual' <%where%>
union all
SELECT
 0 AS DaysLeft,sum(LeaveProfileDetails.sickleave) - sum(nodaystaken) AS SickDaysLeft
FROM LeaveProfileDetails,leave l
LEFT JOIN users u ON l.userid = u.userid 
LEFT JOIN leavetype lt ON l.leavetypeid = lt.leavetypeid
LEFT JOIN leaveperiod lp on l.periodtypeid = lp.leaveperiodid
WHERE lt.leavetype like 'Sick' <%where%>) A","0","","1","LRA-FUSION","0","0","fusion"
"39473","cv_GetMatrixCols","","SELECT lookupid,value FROM lookup WHERE class LIKE 'matrixcolumns'","0","","1","LRA-FUSION","0","0","fusion"
"39474","rpt_callstats_bynum_bar","","select 
convert(varchar(10), count(*))+' calls'+char(13)+char(10)+
isnull(c.Extension,'000')+char(13)+char(10)+
ltrim(isnull(u.firstname,'')+' '+isnull(u.surname,'')) as [text],
count(*) as value, isnull(u.usercr,0xcccccc) as colour
from vwpabxcalllog c
left join users u on u.extension like c.extension
{where}
group by c.extension, u.firstname, u.surname, u.usercr
order by count(*) desc","0","","1","LRA-FUSION","0","0","fusion"
"39475","rpt_callstats_bynum_pie","","select ltrim(isnull(u.firstname,'')+' '+isnull(u.surname,'')+' ('+c.Extension+')') as [text],
count(*) as value, isnull(u.usercr,0xcccccc) as colour
from vwpabxcalllog c
left join users u on u.extension like c.extension
{where}
group by c.extension, u.firstname, u.surname, u.usercr
order by count(*) desc
","0","","1","LRA-FUSION","0","0","fusion"
"39476","rpt_callstats_byduration_pie","","select ltrim(isnull(u.firstname,'')+' '+isnull(u.surname,'')+' ('+c.Extension+')') as [text],
sum(isnull(durationsecs,0)) as value, isnull(u.usercr,0xcccccc) as colour
from vwpabxcalllog c
left join users u on u.extension like c.extension
{where}
group by c.extension, u.firstname, u.surname, u.usercr
order by sum(isnull(durationsecs,0)) desc","0","","1","LRA-FUSION","0","0","fusion"
"39477","rpt_callstats_byduration_bar","","
select 
ttlduration,
right('00'+convert(varchar, (ttlduration / 3600)),2)+':'+
right('00'+convert(varchar, (ttlduration % 3600) / 60),2)+':'+
right('00'+convert(varchar, ttlduration % 3600 % 60),2) +[text] as [text],
value,colour
from (
select top 100 percent
sum(isnull(durationsecs,0)) as ttlduration,
char(13)+char(10)+isnull(c.Extension,'000')+char(13)+char(10)+
ltrim(isnull(u.firstname,'')+' '+isnull(u.surname,'')) as [text],
count(*) as value, isnull(u.usercr,0xcccccc) as colour
from vwpabxcalllog c
left join users u on u.extension like c.extension
{where}
group by c.extension, u.firstname, u.surname, u.usercr
order by sum(isnull(durationsecs,0)) desc
) a","0","","1","LRA-FUSION","0","0","fusion"
"39478","cv_user_divisions","","select 
lookupid, value 
from lookup l
left join userdivisions ud on ud.divisionid = l.lookupid
where class like 'divisions' and ud.userid = <%userid%>
ORDER BY l.Value","0","","1","LRA-FUSION","0","0","fusion"
"39479","cv_hosting","","SELECT 
 h.hostid,e.Company,convert(varchar,h.datestart,103) as [Start Date],isnull(ec.firstname,'') + ' ' + isnull(ec.surname,'') as [Name],
 h.[description] as ""Description"",payt.lookup as [Hosting type],pt.Type as [Payment Type],
 'R ' + convert(varchar,cast(isnull(h.amount,0) as money)) as [Monthly Amount],
 'R ' + convert(varchar,cast((isnull(h.amount,0) * 12) as money)) as [Total Amount],
 'R ' + convert(varchar,cast((isnull(h.amount,0) * isnull(pt.number,1)) as money)) as [Amount Payable],
 convert(varchar,dateadd(m,pt.[number],h.paystart),103) as [ Next Payable By Date]
FROM hosting h
LEFT JOIN entitycontact ec on ec.entitycontactid = h.entitycontactid
LEFT JOIN paymenttype pt on pt.paymenttypeid = h.paymenttypeid
LEFT JOIN lookups payt on payt.lookupid = h.hostingtypeid
LEFT JOIN entity e on e.entityid = ec.entityid
{where}
ORDER BY h.datestart,ec.surname,ec.firstname","0","","1","LRA-FUSION","0","0","fusion"
"39480","cv_total_monthly","","select 
sum(amount)
from hosting","0","","1","LRA-FUSION","0","0","fusion"
"39481","cv_totall_payable","","select
 'R ' + convert(varchar,cast(sum((isnull(h.amount,0) * isnull(pt.number,1)))as money)) as [Total Amount Payable]
FROM hosting h
LEFT JOIN entitycontact ec on ec.entitycontactid = h.entitycontactid
LEFT JOIN paymenttype pt on pt.paymenttypeid = h.paymenttypeid
LEFT JOIN lookup payt on payt.lookupid = h.hostingtypeid
Left Join (Select Company, Entityid From Entity) E
On E.entityid = ec.entityid
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39482","cv_Total_Total","","select
 'R ' + convert(varchar,cast(sum((isnull(h.amount,0) * 12))as money)) as [Total Total Amount]
FROM hosting h
LEFT JOIN entitycontact ec on ec.entitycontactid = h.entitycontactid
LEFT JOIN paymenttype pt on pt.paymenttypeid = h.paymenttypeid
LEFT JOIN lookup payt on payt.lookupid = h.hostingtypeid
LEFT JOIN (Select Company, Entityid From Entity) E 
ON E.entityid = ec.entityid
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39483","cv_export_hosts","","select hostid, isnull(firstname, ' ') + ' ' + isnull(surname, ' ') as [Client], 
 l.value as [Hosting type], [Description], Amount, DateStart as [Start Date], 
 payableby as [Payable By], Paystart as [Pay]
from hosting h
left join entitycontact ec on ec.entitycontactid = h.entitycontactid
left join lookup l on l.lookupid = h.hostingtypeid
left join entity e on e.entityid = ec.entityid
","0","","1","LRA-FUSION","0","0","fusion"
"39484","cv_client_activities","","Select ca.clientactivityid as 'Activity ID', e.company as [Company], p.projectname as ""Project Name"", activitynotes as ""Activity Notes""
from clientactivities ca
left join entitycontact ec on ec.entitycontactid = ca.entitycontactid
left join projects p on p.projectid = ca.projectid
left join lookups l on l.lookupid = ca.ClientTypeID
left join lookup ls on ls.lookupid = ca.ClientStatusid
left join users u on u.userid = ca.userid
left join users ua on ua.userid = ca.userid
left join entity e on e.entityid = ca.entityid
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"39485","qf_developer","","select  entityid, e.accountNum as [Account],e.company as ""Company"", e.LegalName as ""LegalName""
from entity e
where (e.company like '%<%replace%>%' OR isnull(e.AccountNum,'') like  '%<%replace%>%' OR isnull(e.LegalName,'') like  '%<%replace%>%')
and isnull(issupplier,0) = 0
order by e.accountnum, e.company, e.LegalName","0","","1","LRA-FUSION","0","0","fusion"
"39486","qf_project","","select p.projectid, 
CASE 
		WHEN ISNULL(ProjectNum,'') <> '' 
			THEN  ISNULL(ProjectNum,'') +' - '+ISNULL(P.ProjectName,'')
			ELSE P.ProjectName
	END as [Project Name]
--p.projectname As 'Project Name' 
from projects p
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
where p.projectname like '<%replace%>%'
{where}
order by p.projectname","0","","1","LRA-FUSION","0","0","fusion"
"39487","cv_project","","SELECT 
	Distinct
	P.ProjectID,
	'' as [ ],
	LD.Value as [Division],
	P.ProjectID as [Project Number],
	E.AccountNum as [Account],
	E.Company,
	CASE 
		WHEN ISNULL(ProjectNum,'') <> '' 
			THEN  ISNULL(ProjectNum,'') +' - '+ISNULL(P.ProjectName,'')
			ELSE P.ProjectName
	END as [Project Name],
	PT.value as [Project Type],
	S.[Project Manager],
	PS.ProjectState as [Status],
	PCC.Value as [Def. Container],
	P.ProjectNotes as [Note],
	P.MangementNotes as [Management Note],
	LP.Value AS [Project Priority],
	convert(varchar,PDS.StartDate,111) as [Start Date],
	convert(varchar,PDE.EndDate,111) as [End Date],
	isnull(datediff(d,getdate(),  PDE.EndDate),0)  as [Days Remaining],
	convert(varchar,PDEN.EndDate,111) as [Next Module Due],
	isnull(datediff(d,getdate(),  PDEN.EndDate),0)  as [Days Remaining Next Module Due],
	convert(varchar,round(isnull(M.EstHours,0),2)) as [Estimated Hours],
	AO.[Captured Hrs] as [Captured Hours],
	CONVERT(VARCHAR, ISNULL(DA.[HoursCaptured],0)) as [Rounded Hours],
	convert(varchar,cast(isnull(AO.AvgOutput,0) as int)) + '%' as [Avg. Time Efficiency], 
	ROUND(AO.[AdjustedHours],2) as [Adjusted Hours],
	Convert(Varchar, 
	CASE WHEN isnull(M.EstHours,0) = 0 THEN 0.00 
	ELSE Round((isnull(DA.HoursCaptured,0) / isnull(M.EstHours,0)) * 100,2) END) + '%'
	as [Actual % Used],
	Convert(Varchar, 
		CASE WHEN isnull(M.EstHours,0) = 0 THEN 0.00 
		ELSE Round((isnull(AO.AdjustedHours,0) / isnull(M.EstHours,0)) * 100,2) END) + '%'
	as [Adjusted % Used],
	dateadded as [Date added]
FROM Projects P
LEFT JOIN (SELECT LookupID,Value FROM Lookup) PT 
	ON PT.LookupID = P.ProjectTypeID
LEFT JOIN (SELECT ProjectID, sum(cast(datediff(n, [Date], EndDate) as float) /60) as [HoursCaptured] FROM DevAppointment GROUP BY ProjectID) DA 
	ON DA.ProjectID = P.ProjectID
LEFT JOIN (SELECT ProjectID, sum(isnull(EstHours,0)) as [EstHours] 	FROM Modules Group By ProjectID) M   
	ON P.ProjectID = M.ProjectID
LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Project Manager] FROM Staff) S
	ON P.ProjectManagerID = S.StaffID
--Status
LEFT JOIN (SELECT * FROM projectstate) PS
	ON P.ProjectStateID = PS.ProjectStateID
LEFT JOIN (	SELECT	ProjectID, min(StartDate) as [StartDate] FROM Modules Group by ProjectID) PDS
	ON P.ProjectID = PDS.ProjectID
--End date
LEFT JOIN (	SELECT 	ProjectID, max(endDate) as [EndDate] FROM Modules WHERE /*ISNULL(IsActive,0) = 1 OR*/ ISNULL(Progress,0) < 100 	Group by ProjectID) PDE
	ON P.ProjectID = PDE.ProjectID
LEFT JOIN (	SELECT 	ProjectID,	min(endDate) as [EndDate] 	FROM Modules M	WHERE /*ISNULL(IsActive,0) = 1 OR*/ ISNULL(Progress,0) < 100 Group by ProjectID	having  min(endDate) > = getdate()) PDEN
	ON P.ProjectID = PDEN.ProjectID
--End date of earliest incomplete module
LEFT JOIN (	SELECT 	ProjectID, min(endDate) as [EndDate] FROM Modules r	where isnull(Progress,0) < 100  Group by ProjectID) PDEDR
	ON P.ProjectID = PDEDR.ProjectID
LEFT JOIN (	SELECT EntityID, Company, AccountNum FROM Entity) E 
	ON E.EntityID = P.EntityID
LEFT JOIN   (SELECT	ProjectID,
		AVG(isnull(isnull(DA.StaffCurrentRate,S.StaffRatePerc),100.00)) as [AvgOutput],
		sum(round(DateDiff(n,DA.[Date],DA.EndDate) / 60.00,2)) as [Captured Hrs],
		sum((isnull(isnull(DA.StaffCurrentRate,S.StaffRatePerc),100.00) /100) * (cast(datediff(n, [Date], EndDate) as float) /60)) as [AdjustedHours]  
		FROM DevAppointment DA
		LEFT JOIN (SELECT UserID, StaffID FROM Users) U 
			ON DA.ForUserID = U.UserID
		LEFT JOIN (SELECT StaffID, StaffRatePerc FROM Staff) S
			ON U.StaffID = S.StaffID
		Group By ProjectID
		) AO
	ON P.ProjectID = AO.ProjectID
LEFT JOIN (SELECT LookupID,Value FROM lookup) LP 
	ON P.ProjPriority = LP.LookupID
LEFT JOIN (SELECT LookupID,Value FROM lookup) LD 
	ON P.DivID = LD.LookupID
LEFT JOIN (SELECT min(ProjectContainerID) as [ProjectContainerID], ProjectID FROM ProjectContainers group by ProjectID) PC
	ON P.ProjectID = PC.ProjectID
LEFT JOIN (SELECT * FROM ProjectContainers) iPC
	ON PC.ProjectContainerID = ipc.ProjectContainerID
LEFT JOIN (SELECT * FROM LinkLookup) PCC
	ON iPC.ContainerID = PCC.LinkLookupID
  
{where} 

ORDER BY isnull(datediff(d,getdate(),  /*PDEDR*/PDE.EndDate),0)
","0","","1","LRA-FUSION","0","0","fusion"
"39488","rpt_ModuleReport","","SELECT
 cast((isnull(acthours,1) * 100) / (case (isnull(esthours,1)) when 0 then 1 else esthours end) as money) as [value],
 ' ' as text,modulename,0 as colour
FROM modules m
<%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39489","cv_Modules","","SELECT 
M.ModuleID,
M.ModuleName as [Module Name], 
Convert(varchar,M.StartDate, 111) as [Start],
Convert(varchar,M.EndDate, 111) as [End],
convert(Varchar,isnull(Progress,0)) + '%' as [Progress],
Convert(varchar,round(isnull(EstHours,0),2)) as [Estimated Hours],
convert(varchar,isnull(HoursCaptured,0)) as [Captured Hours],
CONVERT(varchar,ISNULL([Actual Hours],0)) as [Actual Hours],
convert(varchar,isnull(RoundedHours,0)) as [Rounded Hours],
convert(varchar,cast(isnull(AO.AvgOutput,0) as int)) + '%' as [Avg. Time Efficiency], 
convert(varchar,Round(isnull(AO.AdjustedHours,0),2))  as [Adjusted Hours],
Convert(Varchar, 
	CASE WHEN isnull(M.EstHours,0) = 0 THEN 0.00 
	ELSE Round((isnull(HoursCaptured,0) / isnull(M.EstHours,0)) * 100,2) END) + '%'
as [Actual % Used],
Convert(Varchar, 
	CASE WHEN isnull(M.EstHours,0) = 0 THEN 0.00 
	ELSE Round((isnull(AO.AdjustedHours,0) / isnull(M.EstHours,0)) * 100,2) END) + '%'
as [Adjusted % Used]
FROM Modules M
--Timesheets
LEFT JOIN (SELECT ModuleID, SUM(Hoursdone) as [Actual Hours] FROM Timesheet GROUP BY ModuleID) T on M.ModuleID = T.ModuleID
LEFT JOIN (SELECT ModuleID, sum(cast(datediff(n, [Date], EndDate) as float) /60) as [HoursCaptured], sum(ceiling(cast(datediff(n, [Date], EndDate) as float) /60)) as [RoundedHours] FROM DevAppointment group by ModuleID) DA
	ON M.ModuleID  = DA.ModuleID
--Average of staff efficiency and reduced hours
LEFT JOIN 	(SELECT ModuleID, AVG(isnull(isnull(DA.StaffCurrentRate,S.StaffRatePerc),100.00)) as [AvgOutput], sum((isnull(isnull(DA.StaffCurrentRate,S.StaffRatePerc),100.00) /100) * (cast(datediff(n, [Date], EndDate) as float) /60)) as [AdjustedHours]  FROM DevAppointment DA
		LEFT JOIN (SELECT UserID, StaffID FROM Users) U 
			ON DA.ForUserID = U.UserID
		LEFT JOIN (SELECT StaffID, StaffRatePerc FROM Staff) S
			ON U.StaffID = S.StaffID
		Group By ModuleID
		) AO
ON M.ModuleID = AO.ModuleID	
{where}
Order by M.StartDate DESC,M.ModuleName","0","","1","LRA-FUSION","0","0","fusion"
"39490","cv_sum","","select 
sum(esthours), sum(acthours)
from modules
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39491","cv_PieRisk","","SELECT
 (sum(((isnull(p.number,0) + isnull(aty.number,0)) * 100)/20))/(select count(*) from clientactivitylist {where}) as value,
 'Risk' as text,0 as colour
FROM clientactivitylist cl
LEFT JOIN priority p on p.priorityid = cl.priorityid
LEFT JOIN activitytype aty ON aty.activitytypeid = cl.activitytypeid
{where}
union all
SELECT
 100 - (sum(((isnull(p.number,0) + isnull(aty.number,0)) * 100)/20))/(select count(*) from clientactivitylist {where}) as value,
 'Non Risk' as text,0 as colour
FROM clientactivitylist cl
LEFT JOIN priority p on p.priorityid = cl.priorityid
LEFT JOIN activitytype aty ON aty.activitytypeid = cl.activitytypeid
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39492","cv_pie_activitiesprogress","","--average completion percentage of activities
select 
case count(*) when 0 
  then 100 
  else 100.0 / (cast(count(*) as float)*100.0) * cast(sum(isnull(perccompleted,0)) as float) 
end as value, 'Progress' as text, 0 as colour
from clientactivitylist
 WHERE clientactivityid = 30
union all
select
case count(*) when 0
  then 0
  else 100.0 - (100.0 / (cast(count(*) as float)*100.0) * cast(sum(isnull(perccompleted,0)) as float))
end, 'Remaining', 0
from clientactivitylist
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39493","cv_prioritytype","","select * from priority","0","","1","LRA-FUSION","0","0","fusion"
"39494","cv_emailactivitylist","","SELECT
 dateissued,datedue,datefollowup,m.modulename,
 ow.username as ownerid,ib.username as issuedbyid,
 p.prioritytype as priorityid,listnotes
FROM clientactivitylist cal
left join activitytype ACT on act.activitytypeid = cal.activitytypeid
left join users ow ON ow.userid = cal.ownerid
left join users IB ON ib.userid = cal.issuedbyid
left join priority p ON p.priorityid = cal.priorityid
left join modules m ON cal.moduleid = m.moduleid
WHERE ClientActivityListID in(<%idlist%>)","0","","1","LRA-FUSION","0","0","fusion"
"39495","cv_timesheet","","SELECT 
	dappt.DevApptID, 
	DATEPART(WEEK, Timesheetdate) as [Week],
	e.Company,
    SE.Company as [Supplier],
	P.ProjectID as [Project No.],
	p.projectname as [Project Name], 
	modules.modulename as [Module Name],
	CONVERT(VARCHAR,timesheetdate,111) as [Timeheet Date], 
	ISNULL(SS.Firstname,'') + ' ' + ISNULL(SS.Surname,'')  as [User],
	isnull(SS.StaffNum,'') as [Staff No.],
	isnull(LS.Value,'') as [Staff Division],
	hoursdone as [Hours Captured],
	case when hoursdone < 1 then 1 else Round(hoursdone,0)end as [Hours Rounded],
	Convert(varchar,Cast(isnull(sS.StaffRatePerc,0) as Money),1) as [Staff Rate(%)],
	CONVERT(VARCHAR,CAST(ISNULL(ss.ProvRate,0) as MONEY), 1) as [Staff Daily Rate],
	Convert(varchar,Cast(isnull(sS.CosttoCompany,0) as Money),1) as [Cost to Company],
	(isnull(sS.StaffRatePerc,0)/100)*isnull(hoursdone,0) as [Actual Hours],
	projectstatus as [Notes],
	CASE(ISNULL(t.OutOfSpec,0)) WHEN 0 THEN 'No' ELSE 'Yes' END AS [Not Quoted For],
	CASE(ISNULL(t.NeedInvoice,0)) WHEN 0 THEN 'No' ELSE 'Yes' END as [Billable],
	CASE ISNULL(t.Approved,0) WHEN 0 THEN 'No' ELSE 'Yes' END as [Approved],
	l.Value AS [Task Type],
	ISNULL( LEFT('00000000', 8- LEN(t.InvoiceNo)) + CONVERT(VARCHAR,t.InvoiceNo),'None') AS [Invoice No],
 t.CapturedDate AS [Initial Date Captured]
FROM timesheet t
LEFT JOIN projects p on p.projectid = t.projectid 
LEFT JOIN entity e on e.entityid = p.entityid
LEFT JOIN entitycontact ec on ec.entitycontactid = p.entitycontactid
LEFT JOIN modules on modules.moduleid = t.moduleid
LEFT JOIN users on users.userid = t.developerid
--LEFT JOIN Staff S on S.StaffID = CASE WHEN (SELECT Selected FROM crmsetup WHERE Variable = 'StaffTimesheets')  = 0 THEN users.StaffID ELSE t.developerid END
LEFT JOIN Staff SS ON SS.StaffID = users.StaffID 
LEFT JOIN Devappointment dappt on dappt.DevApptID = t.DevApptID
LEFT JOIN lookup l on l.lookupid = dappt.TASKTYPEID 
Left Join Entity SE on SS.SupplierID = SE.EntityID
Left Join Lookup LS on SS.departmentid =LS.LookupID
--Left Join userdivisions UD on UD.UserID=users.UserID
{where}
ORDER BY timesheetdate","0","","1","LRA-FUSION","0","0","fusion"
"39496","cv_export_activity","","Select ca.clientactivityid, isnull(ec.firstname,'') + ' ' + isnull(ec.surname,'') as [Client Name],
 ec.email as ""Email"",
 p.projectname as ""Project Name"", l.lookup as ""Type of Client"", ls.value as ""Client State"",
 isnull(u.firstname,'') + ' ' + isnull(u.surname,'') as [Project Owner],u.email as ""Email"",isnull(ua.firstname,'') + ' ' + isnull(ua.surname,'') as ""Assigned To"",
 u.email as ""Email"", 
 activitynotes as ""Activity Notes""
from clientactivities ca
left join entitycontact ec on ec.entitycontactid = ca.entitycontactid
left join projects p on p.projectid = ca.projectid
left join lookups l on l.lookupid = ca.ClientTypeID
left join lookup ls on ls.lookupid = ca.ClientStatusid
left join users u on u.userid = ca.userid
left join users ua on ua.userid = ca.userid","0","","1","LRA-FUSION","0","0","fusion"
"39497","cv_export_data","","select projectid, e.company as [Client], projectname as [Project Name], 
 datestart as [Start Date], dateend as [End date]
from Projects p
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join entity e on e.entityid = ec.entityid","0","","1","LRA-FUSION","0","0","fusion"
"39498","cv_export_data2","","select timesheetid, timesheetdate as [Date], Developer, projectname as [Project Name], modulename as [Module],
 hoursdone as [Hours Done]
from Timesheet t
left join developer d on d.developerid = t.developerid
left join projects p on p.projectid = t.projectid
left join modules m on m.moduleid = t.moduleid
order by timesheetdate","0","","1","LRA-FUSION","0","0","fusion"
"39499","cv_totalhours3","","SELECT 
	SUM(hoursdone)
FROM timesheet t 
LEFT JOIN projects P ON p.projectid = t.projectid
LEFT JOIN entitycontact EC ON EC.entitycontactid = P.entitycontactid
LEFT JOIN entity E ON E.entityid = P.entityid
LEFT JOIN users ON users.userid = T.developerid
LEFT JOIN Devappointment DAPPT ON DAPPT.DevApptID = T.DevApptID
LEFT JOIN Modules ON Modules.ProjectID = P.ProjectID
LEFT JOIN lookup l ON l.lookupid = dappt.TASKTYPEID 
LEFT JOIN Staff SS ON SS.StaffID = t.DeveloperID
Left Join Entity SE on Ss.SupplierID = SE.EntityID
Left Join userdivisions UD on UD.UserID=users.UserID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39500","cv_entity_contact_groups_Div","","select distinct
 g.groupid, g.[group], isnull(eg.groupid,0) as assigned
from (select lookup.lookupid as groupid, value as [group] from lookup LEFT JOIN LookupDivision  ON LookupDivision.lookupid = lookup.lookupid  where class like 'group' and (LookupDivision.divisionid in (<%divid%>))) g
left join (select groupid from entitycontactgroup where entitycontactid=<%entitycontactid%>) eg on g.groupid = eg.groupid
order by g.[group] desc","0","","1","LRA-FUSION","0","0","fusion"
"39501","cv_entity_groups_Div","","select distinct g.groupid, g.[group], isnull(eg.groupid,0) as assigned
from (select lookup.lookupid as groupid, value as [group] from lookup LEFT JOIN LookupDivision  ON LookupDivision.lookupid = lookup.lookupid  where class like 'group' and (LookupDivision.divisionid in (<%divid%>))) g
left join (select groupid from entitygroup where entityid = <%entityid%>) eg on g.groupid = eg.groupid
order by g.[group] desc","0","","1","LRA-FUSION","0","0","fusion"
"39502","cv_Hobby","","SELECT
 hobbyid,typ.value as [Hobby Type],Hobby
FROM hobby h
LEFT JOIN lookup Typ ON typ.lookupid = h.hobbytypeid
<%where%>
ORDER BY Hobby","0","","1","LRA-FUSION","0","0","fusion"
"39503","cv_staff","","SELECT
 S.StaffID AS [Staff ID],
 S.title AS [Title],
 S.Initials AS [Initials],
 S.firstname AS [First Name],
 S.Surname AS [Surname],
 S.FullName AS [FullName],
 S.StaffNum AS [StaffNum],
 S.IDNum AS [ID Number],
 S.BirthDate AS [Birth Date],
 S.Ext [As Ext],
 S.Tel AS [Tel],
 S.Cell AS [Cell],
 S.Email AS [Email],
 S.Address1 AS [Address 1],
 S.Address2 AS [Address 2],
 S.Address3 AS [Address 3],
 S.Code AS [Code],
 S.CityID AS [City],
 S.StateID AS [State],
 S.CountryID AS [Country],
 S.POAddress1 AS [Postal 1],
 S.POAddress2 AS [Postal 2],
 S.POAddress3 AS [Postal 3],
 S.POCode AS [Postal Code],
 S.POCityID AS [Postal City],
 S.POStateID AS [Postal State],
 S.POCountryID AS [Postal Country],
 S.DateEmployed AS [Date Employed],
 LP.Value AS [Position],
 S.JobDiscr AS [Job Discription],
 S.SName AS [Kin Name],
 S.SSurname AS [Kin Surname],
 S.sTel AS [Kin Tel],
 S.SCell AS [Kin Cell],
 S.sEmail AS [Kin Email],
 S.SendEmail AS [Send Email],
 S.SendSMS AS [Send SMS],
 S.location AS [Office Location],
 S.periodfrom AS [Period From],
 S.periodto AS [Period To],
 S.counsellorname AS [Councellor Name],
 S.counselloremail AS [Counsellor Email],
 S.reviewername AS [Reviewer's Name],
 S.revieweremail AS [Reviewer's Email],
 S.reviewertitle AS [Reviewer's Title],
 S.reviewerlocation AS [reviewerlocation],
 S.additionalreviewers AS [AdditionalReviewers],
 LU.Value AS [Division],
 
 ISNULL(E.Company,'') AS [Supplier],
    CASE ISNULL(S.isActive,0) WHEN 0 THEN 'No' ELSE 'Yes' END AS [Active]
FROM staff S
LEFT JOIN LOOKUP l ON l.lookupid = S.departmentid
LEFT JOIN Entity E ON S.SupplierID = E.EntityID
LEFT JOIN Lookup LP ON LP.lookupid = S.Position
LEFT JOIN Lookup LU ON LU.LookupID = S.DepartmentID
{where}
ORDER BY surname","0","","1","LRA-FUSION","0","0","fusion"
"39504","qf_Staff","","SELECT
 staffid,isnull(ltrim(rtrim(firstname)),'') + ' ' + isnull(ltrim(rtrim(surname)),'') AS [Name],Staffnum as [Staff Number]
FROM staff S
WHERE (isnull(firstname,'') like '%<%replace%>%') OR (isnull(surname,'') like '%<%replace%>%') OR 
      (isnull(ltrim(rtrim(firstname)),'') + ' ' + isnull(ltrim(rtrim(surname)),'') = '%<%replacr%>%') OR
      (isnull(Staffnum,'') like '%<%replace%>%')
ORDER BY firstname,surname","0","","1","LRA-FUSION","0","0","fusion"
"39505","cv_LookupDivision","","SELECT
 l.lookupid,l.value,isnull(em.divisionid,0) as checked
FROM lookup l
LEFT JOIN (select divisionid from LookupDivision where lookupid = <%lookupid%>) em on l.lookupid = em.divisionid
WHERE l.class like 'divisions'
ORDER BY value","0","","1","LRA-FUSION","0","0","fusion"
"39506","cv_Contact_Search_with_company_Schutte_backup","","select {custom} from

(select 
 SC.SalesConsultant,c.Category,Gr.[Group],AccT.AccType,D.Division,ec.EntityContactID,t.Type as [Type], ec.EntityContactID as [Contact ID],AlternateContactID, 
 e.Company, ec.Title ,ec.Initials, ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, 
 ec.Phone3, ec.HomePhone, ec.Cell, ec.Fax, ec.Email, Birthdate,Ext,Department,jobtitle,Spouse,
 AsstTitle,AsstName,AsstPhone,AsstExt,eapy.Address1,eapy.Address2,eapy.Address3,eapy.City,eapy.State,eapy.Code,eapy.Region,
 eapy.Country,SendEmail,SendSMS,ec.AccountNum,ls1.value As [Ext. Sales Consultant],
 right('0'+datename(dd,ec.dateadded),2)+'/'+right('0'+cast(datepart(m,ec.dateadded) as nvarchar), 2)+'/'+datename(yyyy,ec.dateadded) as [Created Date], 
 u.username as [Created by],
 right('0'+datename(dd,ec.datemodified),2)+'/'+right('0'+cast(datepart(m,ec.datemodified) as nvarchar), 2)+'/'+datename(yyyy,ec.datemodified) as [Last Modified Date],
 OutlookID, uu.username as [Modified By],
 (SELECT TOP 1 CONVERT(VARCHAR, CAST(CallDate as DATETIME),103) FROM CallLog WHERE ISNULL(AdvCall,0) = 1 AND EntityContactID = ec.EntityContactID ORDER BY CallDate DESC) as [Last Call],
 (SELECT TOP 1 CONVERT(VARCHAR, CAST([Date] as DATETIME), 103) FROM Appointment a 
		LEFT JOIN AppointmentContacts ac on ac.apptID = a.AppointmentID
		WHERE ac.EntityContactID = ec.EntityContactID ORDER BY [Date] DESC) as [Last Appointment]
from entitycontact as ec
/*left join entity e on e.entityid = ec.entityid
left join entitycontactgroup g on ec.entitycontactid = g.entitycontactid
left join (select lookupid as typeid, value as type from lookup where class like 'type') t on ec.entitytypeid = t.typeid
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c on ec.entitycategoryid = c.categoryid
left join (select lookupid as SourceTypeID, value as SourceType from lookup where class like 'Source Type') s on ec.ContTypeID = s.SourceTypeID
left join (select lookupid as InterestID, value as Interest from lookup where class like 'Interest') i on ec.InterestID = i.InterestID
left join (select lookupid as PositionID, value as Position from lookup where class like 'Position') p on ec.PositionID = p.PositionID
left join users u on ec.entitycontactcreatorid = u.userid
left join users uu on ec.EntityContactUpdaterID = uu.userid
left join entitycontactdivision ed on ed.entitycontactid = ec.entitycontactid
left join entityaddress eapo on eapo.entityaddressid = ec.postaladdrid
left join entityaddress eapy on eapy.entityaddressid = ec.physicaladdrid*/
left join (select lookupid as AccTypeID, value as AccType from lookup where class like 'accounttype') AccT
 on ec.accounttypeid = AccT.AccTypeID
left join (Select lookupid, value from lookup) ls1 on ls1.lookupid = EC.SalesConsID

left join entity e
 on e.entityid = ec.entityid 
left join entitycontactgroup g 
 on ec.entitycontactid = g.entitycontactid 
left join (select lookupid as groupid, value as [Group] from lookup where class like 'group') Gr
 on g.groupid = Gr.groupid 
left join (select lookupid as SalesConsid, value as SalesConsultant from lookup where class like 'salescons') SC
 on ec.salesconsid = SC.SalesConsid 
left join (select lookupid as typeid, value as type from lookup where class like 'type') t
 on ec.entitytypeid = t.typeid 
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c
 on ec.entitycategoryid = c.categoryid 
left join (select lookupid as SourceTypeID, value as SourceType from lookup where class like 'Source Type') s
 on ec.ContTypeID = s.SourceTypeID 
left join (select lookupid as InterestID, value as Interest from lookup where class like 'Interest') i
 on ec.InterestID = i.InterestID 
left join (select lookupid as PositionID, value as Position from lookup where class like 'Position') p
 on ec.PositionID = p.PositionID 
left join users u
 on ec.entitycontactcreatorid = u.userid 
left join users uu on ec.EntityContactUpdaterID = uu.userid 
left join entitycontactdivision ed
 on ed.entitycontactid = ec.entitycontactid 
left join (select lookupid as DivisionID, value as Division from lookup where class like 'Divisions') D
 on ed.DivisionID = D.DivisionID 
left join entityaddress eapo
 on eapo.entityaddressid = ec.postaladdrid 
left join entityaddress eapy
 on eapy.entityaddressid = ec.physicaladdrid
left join EntityContactTypes ect
 on ec.entitycontactid = ect.entitycontactid
left join entityContactMOComm ecmc
 on ec.entitycontactid = ecmc.entitycontactid
{duplicate_section}
<%where%>
 GROUP BY jobtitle,ec.EntityContactID, ec.AlternatecontactID, e.Company, ec.Title,ec.Initials , ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, 
	ec.Phone3, ec.HomePhone, ec.Cell, ec.Fax, ec.Email, ec.Birthdate, ec.Ext, ec.Department, ec.Spouse, ec.AsstTitle, ec.AsstName, ec.AsstPhone, ec.AsstExt, 
        ec.Address1, ec.Address2, ec.Address3, ec.City, ec.State, ec.Code, ec.Region, ec.Country, ec.Province, ec.SendEmail, ec.SendSMS, ec.AccountNum, 
	ec.DateAdded, ec.DateModified, OutlookID,
	ec.address1,ec.address2,ec.address3,ec.city,ec.region,ec.code,ec.country,
	ec.sendemail,ec.sendsms,ec.sendpost,
	ec.dateadded,u.username,ec.datemodified,uu.username,eapy.Address1,eapy.Address2,
	eapy.Address3,eapy.City,eapy.State,eapy.Code,eapy.Region,eapy.Country,SC.SalesConsultant,c.Category,Gr.[Group],AccT.AccType,D.Division,t.Type,ls1.value) aa
{orderby}","0","","1","LRA-FUSION","0","0","fusion"
"39507","cv_Contact_Search_with_Company_Schutte_Empty","","select top 0 
 ec.EntityContactID, ec.EntityContactID as [Contact ID],AlternateContactID, 
 e.Company, ec.Title ,ec.Initials, ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, 
 ec.Phone3, ec.HomePhone, ec.Cell, ec.Fax, ec.Email, Birthdate,Ext,Department,Spouse,
 AsstTitle,AsstName,AsstPhone,AsstExt,Address1,Address2,Address3,City,State,Code,Region,
 Country,Province,SendEmail,SendSMS,ec.AccountNum,
 right('0'+datename(dd,ec.dateadded),2)+'/'+right('0'+cast(datepart(m,ec.dateadded) as nvarchar), 2)+'/'+datename(yyyy,ec.dateadded) as [Created Date], 
 u.username as [Created by],
 right('0'+datename(dd,ec.datemodified),2)+'/'+right('0'+cast(datepart(m,ec.datemodified) as nvarchar), 2)+'/'+datename(yyyy,ec.datemodified) as [Last Modified Date],
 OutlookID, uu.username as [Modified By],
 (SELECT TOP 1 CONVERT(VARCHAR, CAST(CallDate as DATETIME),103) FROM CallLog WHERE ISNULL(AdvCall,0) = 1 AND EntityContactID = ec.EntityContactID ORDER BY CallDate DESC) as [Last Call],
 (SELECT TOP 1 CONVERT(VARCHAR, CAST([Date] as DATETIME), 103) FROM Appointment a 
		LEFT JOIN AppointmentContacts ac on ac.apptID = a.AppointmentID
		WHERE ac.EntityContactID = ec.EntityContactID ORDER BY [Date] DESC) as [Last Appointment]
from entitycontact as ec
left join entity e on e.entityid = ec.entityid
left join entitycontactgroup g on ec.entitycontactid = g.entitycontactid
left join (select lookupid as typeid, value as type from lookup where class like 'type') t on ec.entitytypeid = t.typeid
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c on ec.entitycategoryid = c.categoryid
left join (select lookupid as SourceTypeID, value as SourceType from lookup where class like 'Source Type') s on ec.ContTypeID = s.SourceTypeID
left join (select lookupid as InterestID, value as Interest from lookup where class like 'Interest') i on ec.InterestID = i.InterestID
left join (select lookupid as PositionID, value as Position from lookup where class like 'Position') p on ec.PositionID = p.PositionID
left join users u on ec.entitycontactcreatorid = u.userid
left join users uu on ec.EntityContactUpdaterID = uu.userid
left join entitycontactdivision ed on ed.entitycontactid = ec.entitycontactid

 GROUP BY ec.EntityContactID, ec.AlternatecontactID, e.Company, ec.Title,ec.Initials , ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, 
	ec.Phone3, ec.HomePhone, ec.Cell, ec.Fax, ec.Email, ec.Birthdate, ec.Ext, ec.Department, ec.Spouse, ec.AsstTitle, ec.AsstName, ec.AsstPhone, ec.AsstExt, 
        ec.Address1, ec.Address2, ec.Address3, ec.City, ec.State, ec.Code, ec.Region, ec.Country, ec.Province, ec.SendEmail, ec.SendSMS, ec.AccountNum, 
	ec.DateAdded, ec.DateModified, OutlookID,
	ec.address1,ec.address2,ec.address3,ec.city,ec.region,ec.code,ec.country,
	ec.sendemail,
	ec.sendsms,
	ec.sendpost,
	ec.dateadded,u.username,
	ec.datemodified,
	uu.username","0","","1","LRA-FUSION","0","0","fusion"
"39508","cv_FavouriteTasks","","SELECT  
 t.taskid,t.displayname,isnull((SELECT isnull(taskid,0) FROM FavouriteTasks WHERE taskid = t.taskid and userid =<%userid%>),0) as Selected
FROM glptask t
ORDER BY displayname","0","","1","LRA-FUSION","0","0","fusion"
"39509","cv_AuditNotes","","SELECT 
 noteid, e.Company, isnull(ec.firstname,'') + ' ' + isnull(ec.surname,'')  as Contact,
 nt.value as [Note Type],  n.[description] As [Note Description], n.notes As Notes, 
 d.value as Division,convert(varchar,[date],103) as [Date],
 Subject,u.username as [Created By],m.username as [Modified By]
FROM notes n
LEFT JOIN entitycontact ec on ec.entitycontactid = n.entitycontactid
LEFT JOIN lookup nt ON nt.lookupid = n.notetypeid
LEFT JOIN lookup d ON d.lookupid = n.divid
LEFT JOIN users u ON u.userid = n.createbyid
LEFT JOIN users m ON m.userid = n.modifiedbyid
Left JOIN entity e ON e.entityid = ec.entityid
<%where%>
","0","","1","LRA-FUSION","0","0","fusion"
"39510","qf_Divisions","","SELECT
 lookupid,Value as Divisions
FROM lookup l
WHERE class LIKE 'divisions' AND value like '%<%replace%>%'
ORDER BY value","0","","1","LRA-FUSION","0","0","fusion"
"39511","qf_Users","","SELECT
 userid,username as [Attendees]
FROM users u
WHERE username like '%<%replace%>%'
ORDER BY username","0","","1","LRA-FUSION","0","0","fusion"
"39512","cv_Attendee","","--SELECT
-- attendeeid,Email--u.UserName,'Accepted' = CASE Accepted WHEN 1 THEN 'Accepted' WHEN 0 THEN --'Declined' ELSE 'Waiting' END
--FROM Attendees Att
--LEFT JOIN Users U ON u.userid = att.userid
--<%where%>
--ORDER BY u.username

select 
attendeeid
,Staff
,Email
,Accepted
from
(
SELECT
 attendeeid,'Email Invite' as Staff ,Email as Email,'N/A' as Accepted
FROM Attendees Att
--LEFT JOIN Users U ON u.userid = att.userid
 WHERE isnull(Email,'')<>'' and att.appid = <%where%>
--ORDER BY u.username
Union all
SELECT
 attendeeid,isnull(U.FirstName,'')+ ' ' + isnull(U.Surname,'') as Staff,isnull(S.Email,'') as Email, CASE Accepted WHEN 1 THEN 'Accepted' WHEN 0 THEN 'Declined' ELSE 'Waiting' END as Accepted
FROM Attendees Att
LEFT JOIN Users U ON u.userid = att.userid
Left Join Staff S on S.StaffID=U.StaffID
 WHERE isnull(U.FirstName,'')+ ' ' + isnull(U.Surname,'') <>'' and att.appid = <%where%>
--ORDER BY u.username
)A","0","","1","LRA-FUSION","0","0","fusion"
"39513","cv_TasksSearch2","","SELECT 
 a.actionid,u.username as [User Name],isnull(ec.firstname,'') + ' ' + isnull(ec.surname,'') as [Assigned Contact Name],
 t.additionalinfo As [Task Subject],a.Comments as [Action],a.nextactiondate as [Due Date]
FROM actions a
LEFT JOIN taskreminder t ON t.taskreminderid = a.taskreminderid
LEFT JOIN entitycontact ec ON ec.entitycontactid = t.entitycontactid
INNER JOIN users u on t.foruserid = u.userid","0","","1","LRA-FUSION","0","0","fusion"
"39514","cv_ActionTemplate","","SELECT
 actiontemplateitemid, convert(varchar,nextactiondate,103) as ""Next Action Date"",
 convert(varchar,nextactiondate,108) as ""Next Action Time"", comments as ""Comments"",
 p.prioritytype as ""Priority"", result as ""Results"" 
FROM ActionsTemplateItems ati
left join priority p on p.priorityid = ati.priorityid
left join taskreminder t on t.taskreminderid = ati.taskreminderid
<%where%>
order by priority","0","","1","LRA-FUSION","0","0","fusion"
"39515","MonthViewURL","","http://localhost/crmcalendar2","0","","1","LRA-FUSION","0","0","fusion"
"39516","MonthViewURL","","http://dylan01/crmcalendar","0","","1","LRA-FUSION","0","0","fusion"
"39517","MonthViewURL","","http://dylan01/crmcalendar","0","","1","LRA-FUSION","0","0","fusion"
"39518","app_name","","grpWise","0","","1","LRA-FUSION","0","0","fusion"
"39519","app_class_name","","OFCalView","0","","1","LRA-FUSION","0","0","fusion"
"39520","app_window_name","","","0","","1","LRA-FUSION","0","0","fusion"
"39521","cv_narrations","","SELECT Line, DateModified, Notation From 
Debtor_Narration
<%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39522","Account_DatabaseName","","","0","","1","LRA-FUSION","0","0","fusion"
"39523","cv_accountCustomerFind","","Select Customer, Customer as [Customer ID], [Name] as [Customer Name] from <%accountDB%>.ArCustomer
Where (Lower(Customer) Like Lower('%<%replace%>%')) OR (Lower([Name]) Like Lower('%<%replace%>%'))","0","","1","LRA-FUSION","0","0","fusion"
"39524","cv_accountSupplierFind","","Select Supplier, Supplier as [Supplier ID], [SupplierName] as [Supplier Name] from <%accountDB%>.ApSupplier
Where (Lower(Supplier) Like Lower('%<%replace%>%')) OR (Lower([SupplierName]) Like Lower('%<%replace%>%'))","0","","1","LRA-FUSION","0","0","fusion"
"39525","qf_birthday_courier","","select top 50 entityid, Company, t.Value as Type, c.Value as Category
from entity e
left join lookup t on t.lookupid = e.entitytypeid
left join lookup c on c.lookupid = e.entitycategoryid
where (company like '<%replace%>%') and (IsBirthDayCourier = 1)
order by company","0","","1","LRA-FUSION","0","0","fusion"
"39526","qf_birthday_supplier","","select top 50 entityid, Company, t.Value as Type, c.Value as Category
from entity e
left join lookup t on t.lookupid = e.entitytypeid
left join lookup c on c.lookupid = e.entitycategoryid
where (company like '<%replace%>%') and (IsBirthDaySupplier = 1)
order by company","0","","1","LRA-FUSION","0","0","fusion"
"39527","cv_birthday","","SELECT Distinct  top 100 Percent
[ID],
'' AS [  ],
[Birthday], 
[Anniversary], 
[Contact],
[Age],
Company,
[Phone],
Email, 
Fax,
Address1,
Address2,
Address3,
[Area], 
[Province],
Country,
[Birthday Supplier], 
[Birthday Supplier Phone], 
[Birthday Supplier Email],
[Birthday Courier], 
[Birthday Courier Phone], 
 [Birthday Courier Email],
 [Anniversary Supplier],
[Anniversary Supplier Phone],
 [Anniversary Supplier Email],
[Anniversary Courier], 
[Anniversary Courier Phone],
[Anniversary Courier Email]

from
(
SELECT Distinct  top 100 Percent
'EC' + cast(EntityContactid as varchar) as 'ID',
convert(varchar,Birthdate,111) as [Birthday], 
convert(varchar,AnniversaryDate,111) as [Anniversary], 
isnull(firstname,'') + ' ' + isnull(surname,'') as [Contact],
cast(round(DateDiff(d, birthdate,getdate()) /365.25,2) as money) as [Age],
E.Company,
EC.Phone1 as [Phone],EC.Email, EC.Fax,
EA.Address1,EA.Address2,EA.Address3,Ea.City as [Area], EA.Region as [Province], EA.Country,
Bs.Company as [Birthday Supplier], Bs.Switchboard as [Birthday Supplier Phone], Bs.Email as [Birthday Supplier Email],
BC.Company as [Birthday Courier], Bc.Switchboard as [Birthday Courier Phone], Bc.Email as [Birthday Courier Email],
Ans.Company as [Anniversary Supplier], ans.Switchboard as [Anniversary Supplier Phone],ans.Email as [Anniversary Supplier Email],
Ac.Company as [Anniversary Courier], ac.Switchboard as [Anniversary Courier Phone],ac.Email as [Anniversary Courier Email]
FROM EntityContact EC
LEFT JOIN (SELECT EntityID, Company FROM Entity ) E ON EC.Entityid = E.Entityid
LEFT JOIN (SELECT * FROM EntityAddress where AddressType like '%Physical%') EA ON EC.PhysicalAddrID = EA.EntityAddressID
LEFT JOIN Entity BS ON EC.BirthdaySupplierID = BS.EntityID
LEFT JOIN Entity AnS ON EC.AnniversarySupplierID =AnS.EntityID
LEFT JOIN Entity BC ON EC.BirthdayCourierID = BC.EntityID
LEFT JOIN Entity AC ON EC.AnniversaryCourierID = AC.EntityID
{where}
  union all
-- Staff

SELECT Distinct  top 100 Percent
'ST' + cast(StaffID as varchar) as 'ID',
convert(varchar,birthdate,111) as [Birthday], 
convert(varchar,dateemployed,111) as [Anniversary], 
isnull(firstname,'') + ' ' + isnull(surname,'') as [Contact],
cast(round(DateDiff(d, birthdate,getdate()) /365.25,2) as money) as [Age],
'Staff' as Company,
S.Tel as [Phone],
S.Email, 
S.Fax,
S.Address1,
S.Address2,
S.Address3,
S.CityID as [Area],
S.StateID as [Province], 
S.CountryID as [Country],
Bs.Company as [Birthday Supplier], Bs.Switchboard as [Birthday Supplier Phone], Bs.Email as [Birthday Supplier Email],
BC.Company as [Birthday Courier], Bc.Switchboard as [Birthday Courier Phone], Bc.Email as [Birthday Courier Email],
Ans.Company as [Anniversary Supplier], ans.Switchboard as [Anniversary Supplier Phone],ans.Email as [Anniversary Supplier Email],
Ac.Company as [Anniversary Courier], ac.Switchboard as [Anniversary Courier Phone],ac.Email as [Anniversary Courier Email]
From Staff S
LEFT JOIN Entity BS ON S.BirthdaySupplierID = BS.EntityID
LEFT JOIN Entity AnS ON S.AnniversarySupplierID =AnS.EntityID
LEFT JOIN Entity BC ON S.BirthdayCourierID = BC.EntityID
LEFT JOIN Entity AC ON S.AnniversaryCourierID = AC.EntityID
{where}
)a","0","","1","LRA-FUSION","0","0","fusion"
"39528","vw_Turnover_VS_Expenses","","ALTER VIEW dbo.vw_Turnover_VS_Expenses_rpt
AS
SELECT     (SELECT     SUM(InvoiceValue)
                       FROM          Debtor_Invoice
                       WHERE      InvoiceDate > dbo.SubtractMonth('<%date%>', 6)) AS TurnOver,
                          (SELECT     SUM(PaymGrossValue)
                            FROM          PO_Invoice
                            WHERE      (InvoiceDate > dbo.SubtractMonth('2007/06/20', 6))) AS Expenses
","0","","1","LRA-FUSION","0","0","fusion"
"39529","vw_TurnOver_Rpt","","ALTER VIEW dbo.vw_TurnOver_Rpt
AS
SELECT     TOP 100 PERCENT *
FROM         dbo.GetTurnOverRpt('<%date%>') GetTurnOverRpt_2
","0","","1","LRA-FUSION","0","0","fusion"
"39530","vw_Debtors_rpt","","ALTER VIEW dbo.vw_Debtors_rpt
AS
SELECT     *
FROM         dbo.GetDebtorsRpt('<%date%>') GetDebtorsRpt
","0","","1","LRA-FUSION","0","0","fusion"
"39531","cv_SysproCompanyImport","","Select NewID(), Name as [Company Name], ArC.Fax, Contact, Telephone, AddTelephone as [Cell], Arc.Email, 
SoldToAddr1 as [Address1], SoldToAddr2 as [Address2], SoldToAddr3 as [Address3], SoldToAddr4 as [Address4], 
SoldToAddr5 as [Address5]
From <%accountdb%>.ArCustomer as ArC
Left Join Entity On (ArC.Customer Collate database_default = Entity.AccountCustomerID)
where ArC.Customer Collate database_default {innotin} (select AccountCustomerID From Entity)
Union All
Select NewID(), SupplierName as [Company Name], ApS.Fax, Contact, Telephone, '' as [Cell], ApS.Email, 
'' as [Address1], '' as [Address2], '' as [Address3], '' as [Address4], '' as [Address5]
From <%accountdb%>.ApSupplier as ApS
Left Join Entity On (ApS.Supplier Collate database_default = Entity.AccountSupplierID)
where ApS.Supplier Collate database_default {innotin} (select isnull(AccountSupplierID, '') From Entity)","0","","1","LRA-FUSION","0","0","fusion"
"39532","cv_SysproCompanyImport2","","Select Company, AccountCustomerID, AccountSupplierID, isAccountSupplier, IsSupplier From Entity
Left join <%accountdb%>.ApSupplier as ApSupplier on (Entity.AccountCustomerID = ApSupplier.Supplier Collate database_default)
where Entity.AccountCustomerID in (Select ApSupplier.Supplier Collate database_default From <%accountdb%>.ApSupplier) 
or AccountSupplierID in (Select Customer Collate database_default From <%accountdb%>.ArCustomer)","0","","1","LRA-FUSION","0","0","fusion"
"39533","cv_SysproCompanyImportCustomer","","Select ltrim(rtrim(Customer)) as [Customer], ltrim(rtrim([Name])) as [Name], ltrim(rtrim(ArC.Fax)) as [Fax], 
ltrim(rtrim(Contact)) as [Contact], ltrim(rtrim(Telephone)) as [Telephone], 
ltrim(rtrim(AddTelephone)) as [AddTelephone], ltrim(rtrim(ArC.Email)) as [Email], 
ltrim(rtrim(SoldToAddr1)) as [SoldToAddr1], ltrim(rtrim(SoldToAddr2)) as [SoldToAddr2],
ltrim(rtrim(SoldToAddr3)) as [SoldToAddr3], ltrim(rtrim(SoldToAddr4)) as [SoldToAddr4], 
ltrim(rtrim(SoldToAddr5)) as [SoldToAddr5], ltrim(rtrim(ShipToAddr1)) as [ShipToAddr1],
ltrim(rtrim(ShipToAddr2)) as [ShipToAddr2], ltrim(rtrim(ShipToAddr3)) as [ShipToAddr3],
ltrim(rtrim(ShipToAddr4)) as [ShipToAddr4], ltrim(rtrim(ShipToAddr5)) as [ShipToAddr5]
From <%accountdb%>.ArCustomer as ArC
Left Join Entity On (ArC.Customer Collate database_default = Entity.AccountCustomerID)
where ArC.Customer Collate database_default not in (select isnull(AccountCustomerID, '') From Entity)","0","","1","LRA-FUSION","0","0","fusion"
"39534","cv_SysproCompanyImportSupplier","","Select ltrim(rtrim(Supplier)) as [Supplier], ltrim(rtrim(SupplierName)) as [SupplierName],
ltrim(rtrim(ApS.Fax)) as [Fax], ltrim(rtrim(Contact)) as [Contact],
ltrim(rtrim(Telephone)) as [Telephone], '' as [Cell], ltrim(rtrim(ApS.Email)) as [Email], 
'' as [Address1], '' as [Address2], '' as [Address3], '' as [Address4], '' as [Address5] 
From <%accountdb%>.ApSupplier as ApS
Left Join Entity On (ApS.Supplier Collate database_default = Entity.AccountSupplierID)
where ApS.Supplier Collate database_default not in (select AccountSupplierID From Entity)
and ApS.Supplier not in (Select Customer From <%accountdb%>.ArCustomer)","0","","1","LRA-FUSION","0","0","fusion"
"39535","showaccount","","true","0","","1","LRA-FUSION","0","0","fusion"
"39536","showbirthday","","true","0","","1","LRA-FUSION","0","0","fusion"
"39537","qf_anniversary_courier","","select top 50 entityid, Company, t.Value as Type, c.Value as Category
from entity e
left join lookup t on t.lookupid = e.entitytypeid
left join lookup c on c.lookupid = e.entitycategoryid
where (company like '<%replace%>%') and (IsAnniversaryCourier = 1)
order by company","0","","1","LRA-FUSION","0","0","fusion"
"39538","qf_anniversary_supplier","","select top 50 entityid, Company, t.Value as Type, c.Value as Category
from entity e
left join lookup t on t.lookupid = e.entitytypeid
left join lookup c on c.lookupid = e.entitycategoryid
where (company like '<%replace%>%') and (IsAnniversarySupplier = 1)
order by company","0","","1","LRA-FUSION","0","0","fusion"
"39539","cv_SalesPipeline","","SELECT * FROM (
SELECT  DISTINCT 
	SP.PipelineID,
	E.Company, 
	EC.[Contact Name]
	,U.[Sales Consultant]
	,LES.Value as [External Sales Consultant]
	, LA.Value as [Area]
	, LL.Value as [Lead From], 
	LR.value as [Reason],
	convert(varchar, DateAdded,103) as [Date Added], 
	isnull(Probability,'') as [Probability],
	 sp.Status, 
	 SP.Outcome
	,SP.CEDocID as [Quote No.],
	(SELECT Currency From ExchangeRates where isdefault = 1) + convert(varchar,Cast((isnull(PDQA.Amount,0)) * isnull(CM.ROE,1) as money),1) as [Amount Quoted],
	(SELECT Currency From ExchangeRates where isdefault = 1) + Convert(varchar,Cast((isnull(PDAA.Amount,0)) * isnull(CM.ROE,1) as money),1) as [Amount Accepted],
	convert(varchar,SP.DateAccepted,111) as [Date Accepted],
	convert(varchar,LastDate,111) As [Last Contact Date], convert(varchar,NextDate,111) As [Next Contact Date],
	City,
	Province,
	Country
FROM SalesPipeline SP
LEFT JOIN (SELECT EntityID, Company,SalesConsID
,
(select top 1 city from entityaddress ea where ea.entityid = entity.entityid) as City,
(select top 1 country from entityaddress ea where ea.entityid = entity.entityid) as Country,
(select top 1 region from entityaddress ea where ea.entityid = entity.entityid) as Province 

 FROM Entity) E
ON SP.Entityid = E.Entityid
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LES
ON E.SalesConsID  = LES.Lookupid
LEFT JOIN (SELECT EntityContactID, isnull(Firstname,'') + ' ' + isnull(surname,'')  as [Contact Name] From EntityContact) EC
ON SP.EntityContactID = EC.EntityContactID
LEFT JOIN  (SELECT * FROM Lookup) LA
ON SP.areaid = LA.lookupid
LEFT JOIN  (SELECT * FROM Lookup) LC
ON SP.areaid = LC.lookupid
LEFT JOIN (SELECT * FROM Lookup) LL 
ON SP.LeadFromID = LL.LookupID
LEFT JOIN  (SELECT * FROM Lookup) LR
ON SP.ReasonID = LR.lookupid
LEFT JOIN (SELECT PipeLineID,ProductID,GroupName FROM SalesPipelineDetailQuoted Group by PipeLineID,ProductID,GroupName) PDQ
ON SP.Pipelineid = pdq.Pipelineid
LEFT JOIN (SELECT  PipeLineID,ProductID,GroupName FROM SalesPipelineDetailAccepted  Group by PipeLineID,ProductID,GroupName) PDA
ON SP.Pipelineid = pda.Pipelineid
LEFT JOIN (SELECT PipeLineID,sum(Amount) as [Amount], Sum(Units) as [Units]  FROM SalesPipelineDetailQuoted {groupwhere} Group by PipeLineID) PDQA
ON SP.Pipelineid = pdqA.Pipelineid
LEFT JOIN (SELECT  PipeLineID,sum(Amount) as [Amount], Sum(Units) as [Units]  FROM SalesPipelineDetailAccepted  Group by PipeLineID) PDAA
ON SP.Pipelineid = pdaA.Pipelineid
LEFT JOIN (SELECT StockID, StockType From AccStock) STK 
ON (PDQ.ProductID = STK.StockID  OR PDA.ProductID = STK.StockID)
LEFT JOIN (SELECT DocID, ROE FROM COST_ESTIMATE_MASTER) CM
ON SP.CEDocID = CM.DocID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Sales Consultant] From Users) U
ON SP.UserID = U.UserID
{where} 
) A
{order}
","0","","1","LRA-FUSION","0","0","fusion"
"39540","cv_gen_notes","","SELECT Line, DateModified, Notation From 
Note
<%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39541","qf_companies_all","","select top 50 entityid, Company, t.Value as Type, c.Value as Category
from entity e
left join lookup t on t.lookupid = e.entitytypeid
left join lookup c on c.lookupid = e.entitycategoryid
where (company like '<%replace%>%')
order by company","0","","1","LRA-FUSION","0","0","fusion"
"39542","pi_Sales_TotalTarget_Vs_TotalAccepted_Amount","","Declare @count int
Declare @startDate datetime
Declare @endDate datetime

set @startDate = <%startdate%>
set @endDate = <%enddate%>
set @count = (SELECT COUNT(*)FROM SalesInfo WHERE 
(DateModified >= @startDate) AND (DateModified <=@endDate))

if @count <> 0
Begin
	SELECT
	  cast(Sum(MonthlyTarget) as money) as Value,'Remaining Target' as [Text],0 as Colour
	FROM SalesInfo
	WHERE ((DateModified >= @startDate) AND (DateModified <=@endDate)) AND UserID = <%userid%>
	UNION ALL
	SELECT
	  cast(Sum(Amount) as money) as Value,'Total Accepted (R)' as [Text],0 as Colour
	FROM SalesPipelineDetailAccepted SPDA
	Left Join SalesPipeline SP On SP.PipelineID = SPDA.PipelineID
	WHERE (DateAccepted >= @startDate) AND (DateAccepted <= @endDate) AND UserID = <%userid%>
End 
Else
	Select cast(0 as money)","0","","1","LRA-FUSION","0","0","fusion"
"39543","pi_Sales_TotalTarget_Vs_TotalQuoted_Amount","","Declare @count int
Declare @startDate datetime
Declare @endDate datetime

set @startDate = <%startdate%>
set @endDate = <%enddate%>
set @count = (SELECT COUNT(*)FROM SalesInfo WHERE 
(DateModified >= @startDate) AND (DateModified <=@endDate))

if @count <> 0
Begin
	SELECT
	  cast(Sum(MonthlyTarget) as money) as Value,'Remaining Target' as [Text],0 as Colour
	FROM SalesInfo
	WHERE ((DateModified >= @startDate) AND (DateModified <=@endDate)) AND UserID = <%userid%>
	UNION ALL
	SELECT
	  cast(Sum(Amount) as money) as Value,'Total Quoted (R)' as [Text],0 as Colour
	FROM SalesPipelineDetailQuoted SPDQ
	Left Join SalesPipeline SP On SP.PipelineID = SPDQ.PipelineID
	WHERE (DateAdded >= @startDate) AND (DateAdded <= @endDate) AND UserID = <%userid%>
End 
Else
	Select cast(0 as money)","0","","1","LRA-FUSION","0","0","fusion"
"39544","pi_Sales_MonthlyTarget_Vs_TotalQuoted_Units","","Declare @count int
Declare @startDate datetime
Declare @endDate datetime

set @startDate = <%startdate%>
set @endDate = <%enddate%>
set @count = (SELECT COUNT(*)FROM SalesInfo WHERE 
(DateModified >= @startDate) AND (DateModified <=@endDate))

if @count <> 0
Begin
	SELECT
	  cast(Sum(MonthlyUnits) as money) as Value,'Remaining Target' as [Text],0 as Colour
	FROM SalesInfo
	WHERE ((DateModified >= @startDate) AND (DateModified <=@endDate)) AND UserID = <%userid%>
	UNION ALL
	SELECT
	  cast(Sum(Units) as money) as Value,'Total Quoted (Units)' as [Text],0 as Colour
	FROM SalesPipelineDetailQuoted SPDQ
	Left Join SalesPipeline SP On SP.PipelineID = SPDQ.PipelineID
	WHERE (DateAdded >= @startDate) AND (DateAdded <= @endDate) AND UserID = <%userid%>
End 
Else
	Select cast(0 as money)
","0","","1","LRA-FUSION","0","0","fusion"
"39545","pi_Sales_MonthlyTarget_Vs_TotalAccepted_Units","","Declare @count int
Declare @startDate datetime
Declare @endDate datetime

set @startDate = <%startdate%>
set @endDate = <%enddate%>
set @count = (SELECT COUNT(*)FROM SalesInfo WHERE 
(DateModified >= @startDate) AND (DateModified <=@endDate))

if @count <> 0
Begin
	SELECT
	  cast(Sum(MonthlyUnits) as money) as Value,'Remaining Target' as [Text],0 as Colour
	FROM SalesInfo
	WHERE ((DateModified >= @startDate) AND (DateModified <=@endDate)) AND UserID = <%userid%>
	UNION ALL
	SELECT
	  cast(Sum(Units) as money) as Value,'Total Accepted (Units)' as [Text],0 as Colour
	FROM SalesPipelineDetailAccepted SPDA
	Left Join SalesPipeline SP On SP.PipelineID = SPDA.PipelineID
	WHERE (DateAccepted >= @startDate) AND (DateAccepted <= @endDate) AND UserID = <%userid%>	
End 
Else
	Select cast(0 as money)","0","","1","LRA-FUSION","0","0","fusion"
"39546","cv_leads","","Select leadid, Company, Firstname, Lastname,U.[Sales Consultant] , phone1, phone2, Email/*, Address1, Address2, Address3*/, Possibilty, Amount,lo.Value As [Status], LastDate As [Last Contact Date], NextDate As [Next Contact Date]
From Lead l
left join
(select lookupid, Value from lookup) lo
on lo.lookupid = l.LeadStatus
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') As [Sales Consultant] FROM Users) U
ON L.UserID = U.UserID
<%where%>

","0","","1","LRA-FUSION","0","0","fusion"
"39547","cv_DivUsers","","select distinct u.userid, isnull(u.firstname,'') + ' ' + isnull(u.Surname,'') as [UserName]
from users u
left join userdivisions ud on ud.userid = u.userid 
{where}
Order By isnull(u.firstname,'') + ' ' + isnull(u.Surname,'') ","0","","1","LRA-FUSION","0","0","fusion"
"39548","cv_get_assigned","","select email 
from userassign ua
left join staff s on s.staffid = ua.staffid
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39549","rep_Mailer_FailedRecipients","","Select convert(varchar, isnull(<%FirstnameField%>,'') + ' ' + isnull(<%LastnameField%>,'')) as [Name], <%EmailField%> as [Email] 
From BatchItem
Left Join <%ContactDB%>.dbo.<%ContactTable%> C On BatchItem.ContactID = C.<%IDField%>
where (BatchID = <%batchid%>) AND ((IsSent = 1) AND (IsSuccess = 0))","0","","1","LRA-FUSION","0","0","fusion"
"39550","rep_Mailer_InvalidEmails","","Select convert(varchar, isnull(<%FirstnameField%>,'') + ' ' + isnull(<%LastnameField%>,'')) as [Name], <%EmailField%> as [Email] 
From BatchItem
Left Join <%ContactDB%>.dbo.<%ContactTable%> C On BatchItem.ContactID = C.<%IDField%>
where (BatchID = <%batchid%>) AND (IsSent = 0)","0","","1","LRA-FUSION","0","0","fusion"
"39551","cv_use_groupwise","","false","0","","1","LRA-FUSION","0","0","fusion"
"39552","cv_Project_Modules","","select 
projectmoduleid, projectmodule [Project Module] 
from projectmodules m
left join projecttypes p on p.projecttypeid = m.projecttypeid 
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39553","cv_Project_Types","","select projecttypeid, projecttype as [Project Type] from projecttypes","0","","1","LRA-FUSION","0","0","fusion"
"39554","qf_Timecompany","","select  entityid, Company, t.Value as Type, c.Value as Category
from entity e
left join lookup t on t.lookupid = e.entitytypeid
left join lookup c on c.lookupid = e.entitycategoryid
where (company like '<%replace%>%')
order by company","0","","1","LRA-FUSION","0","0","fusion"
"39555","qf_timeproject","","select projectid, projectname as [Project Name]
from projects
where (projectname like '<%replace%>%') {where}
order by projectname","0","","1","LRA-FUSION","0","0","fusion"
"39556","qf_timeModule","","select moduleid, modulename as [Module Name]
from modules
where (modulename like '<%replace%>%') {where}
order by modulename","0","","1","LRA-FUSION","0","0","fusion"
"39557","cv_apptcal_devappts1","","DECLARE @UseStaff INT
SET @UseStaff = (SELECT TOP 1 ISNULL(Selected,0) FROM CRMSetup WHERE Description = 'Print' AND Variable = 'StaffTimesheets')

select devapptid, CASE WHEN @UseStaff = 1 then U.UserID ELSE foruserid END as calid, [date] as starttime, enddate as endtime, 
       Case isnull(p.projectname,'') when '' then '' Else '' + isnull(p.projectname,'') End +  Case isnull(e.AccountNum,'') When '' then '' Else ' - ACC: ' + isnull(e.AccountNum, '') End  + ' ' + isnull(subject, '') as [text],
	isnull(CalColour,15724527) as colour
from devappointment app
Left Join EntityContact ec On ec.EntityContactID = app.EntityContactID
left join entity e on e.entityid = app.entityid
LEFT join projects p on p.projectid = app.projectid
LEFT JOIN Users U ON app.foruserid = CASE WHEN @UseStaff = 1 THEN U.StaffID ELSE U.UserID END
where 
foruserid in (
select usercalid as userid from 
  (select userid, usercalid from calaccess 
   where userid = {userid}
   union all
   select {userid}, {userid}) a
 where usercalid in ({viewuseridlist})
group by userid, usercalid) and
(year([date]) = {year} and month([date]) = {month} and day([date]) = {day}) or
(year([enddate]) = {year} and month([enddate]) = {month} and day([enddate]) = {day}) or
(cast( right('0000{year}',4)+right('00{month}',2)+right('00{day}',2) as datetime) between [date] and enddate)
order by [date]","0","","1","LRA-FUSION","0","0","fusion"
"39558","qf_task_projects","","select p.projectid, p.projectname as [Project Name]
from projects p
where p.projectname like '<%replace%>%' {where}
order by p.projectname","0","","1","LRA-FUSION","0","0","fusion"
"39559","qf_task_modules","","select m.moduleid, m.modulename
from modules m
where m.modulename like '<%replace%>%' AND isnull(m.Progress,0) < 100 {where}
order by m.modulename","0","","1","LRA-FUSION","0","0","fusion"
"39560","cv_PrintDaysDevApps","","Select '' as [Time],'<font size=2pt><b><%Heading%></b></font>' as [Name],'' as [For],'<font size=2pt><b>' + DateName(weekday,Convert(DateTime,'<%Date%>')) + ', ' + Convert(varchar(50),Convert(DateTime,'<%Date%>'),106) + '</b></font>' as [Comments]
UNION ALL
Select '<b>Time</b>' as [Time], '<b>Client&nbsp;Name</b>' as [Patient Name], '<b>For</b>' as [For], '<b>Comments</b>' as [Comments]
UNION ALL
Select left(Convert(Varchar(30),[Date],8),5) as [Time], dbo.EntityContactNameID(EC.EntityContactID) as [Contact Name],
	 AP.Subject as [For], AP.Notes as [Comments]
From DevAppointment AP 
Left JOIN EntityContact EC on EC.EntityContactID = AP.EntityContactID
Where Convert(DateTime,'<%Date%>') between Convert(DateTime,Convert(Varchar(50),[Date],111)) and Convert(DateTime,Convert(Varchar(50),[EndDate],111)) AND (ForUserID=<%ForUserID%>)
Order By 1","0","","1","LRA-FUSION","0","0","fusion"
"39561","cv_PrintDevAppsWeekly","","SELECT 
 '' AS [Date],'' AS [Time],'<font size=2pt><b><%Heading%></b></font>' as [Name],
 '' AS [Subject],'<font size=2pt><b>' + convert(varchar,Convert(DateTime,'<%datefrom%>'),106) + ' - ' +
 + ' ' + convert(varchar,Convert(DateTime,'<%dateto%>'),106) + '</b></font>'
UNION ALL
SELECT
 '<b>Date</b>' AS [Date],'<b>Time</b>' AS [Time],'<b>Name</b>' AS [Name],'<b>Subject</b>' AS [Subject],'<b>Comments</b>' AS [Comments]
UNION ALL
SELECT
 convert(varchar,[date],103)AS [Date], convert(varchar,[date],108) AS [Time],
 isnull(ec.firstname,'')  + '&nbsp;' + isnull(ec.surname,'') AS [Name],
 AP.Subject as [Subject], AP.Notes as [Comments]
FROM devappointment AP
Left JOIN EntityContact EC on EC.EntityContactID = AP.EntityContactID
WHERE ([date] between '<%datefrom%> 00:00:00' AND '<%dateto%> 23:59:59') AND (foruserid = <%foruserid%>)
ORDER BY 1,2","0","","1","LRA-FUSION","0","0","fusion"
"39562","cv_ExportApptDev","","Select left(Convert(Varchar(30),[Date],8),5) as [Time], Options.OptVal as [Appt. Type], AP.Subject as [For],
	dbo.EntityContactNameID(EC.EntityContactID) as [Client Name],/*EC.AccountNum as [Account No],*/
	EC.Cell as [Cell Phone], EC.Phone1 as [Work Phone],
	  /*Case IsNull(AP.IsNewClient,0) When 0 then 'No' Else 'Yes' END as [New Patient], 
	Case IsNull(AP.IsConfirmed,0) When 0 then 'No' Else 'Yes' END as [Confirmed],*/  AP.Notes as [Comments]
From devAppointment AP 
Left JOIN EntityContact EC on EC.EntityContactID = AP.EntityContactID
Left JOIN Options ON Options.OptNumVal = cast(AP.CalColour as varchar)
Where Convert(DateTime,'<%Date%>') between Convert(DateTime,Convert(Varchar(50),[Date],111)) and Convert(DateTime,Convert(Varchar(50),[EndDate],111)) AND (ForUserID=<%ForUserID%>)
Order By 1","0","","1","LRA-FUSION","0","0","fusion"
"39563","cv_MatrixSearch_Hal","","Drop Table MatrixSearch
Create Table MatrixSearch
(
	MatrixSearchID 		int
				Identity(1,1),
	EntityID		int,
	MatrixItemID		int
        {fields}
)
","0","","1","LRA-FUSION","0","0","fusion"
"39564","cv_regdirpath","","LibraryReg","0","","1","LRA-FUSION","0","0","fusion"
"39565","cv_libdirpath","","resourceLib","0","","1","LRA-FUSION","0","0","fusion"
"39566","rpt_invoice_due","","select m.moduleid, e.company as [Company], p.ProjectName as [Project Name], m.Modulename as [Module Name ], m.acthours - esthours as [Hours Overdue],
 'R ' + Convert(varchar,cast(((m.acthours - esthours) * currentrate) as money)) as [Current Rate], 
 'R ' + Convert(varchar,cast(((m.acthours - esthours) * discountrate) as money)) as [Discount Rate] 
from modules m
left join projects p on p.projectid = m.projectid
left join entity e on e.entityid = p.entityid
where m.acthours > m.esthours {where}","0","","1","LRA-FUSION","0","0","fusion"
"39567","cv_DocumentMan","","select
	entitydocumentid,
	'      ' as [ ],
	Company, 
	Contact,
	[Description], 
	l.value as [Doc Type], 
	[Name], 
	dbo.GetDocumentExt(Name) as [Ext],
	[path] as Location,
	[Sub Doc] as [Doc Sub Type],
	s.Firstname + ' ' + IsNull(s.Surname,'') As [User],
	CONVERT(VARCHAR, d.DateLinked,111) as [Date Linked]
from entitydocument d
left join lookup l on l.lookupid = d.doctypeid
LEFT JOIN (SELECT EntityID,Company FROM Entity) E
ON D.EntityID = E.Entityid
LEFT JOIN (SELECT EntityContactID, Firstname + ' ' + Surname as [Contact] FROM EntityContact ) EC
ON D.EntityContactID = EC.EntityContactID
LEFT JOIN Staff s
on s.StaffID = d.StaffID
LEFT JOIN (select distinct lookupid, [value] as [Sub Doc] from lookup where class like 'documentsubtype') ls
ON ls.lookupid = d.docsubid
<%where%>
order by [Name]","0","","1","LRA-FUSION","0","0","fusion"
"39568","set_ValidMailMergeTables","","EntityContact,","0","","1","LRA-FUSION","0","0","fusion"
"39569","cv_performance","","select a.assessmentid, isnull(s.firstname, '') + ' ' + isnull(s.surname, '') As [Staff Member] ,Convert(varchar, a.[date], 103) As [Date], s.StaffNum As [Staff Number], s.tel As [Telephone Number], s.cell As [Cellphone Number], s.email As [Email], s.counsellorname As [Counsellor Name], 
(SELECT ISNULL(firstname,'') + ' ' + ISNULL(surname,'') FROM staff WHERE staffid = s.ReviewerStaffID) AS [Reviewer Name], CONVERT(varchar, a.nextdate, 103) AS [Next Review Date], a.currentstatus AS [Current Status]
from assessment a 
left join staff s on s.staffid = a.staffid
left join lookup l on l.lookupid = s.departmentid

 {where}","0","","1","LRA-FUSION","0","0","fusion"
"39570","cv_performancedocs","","select documentid, path As [Path],[name] As [Filename] from assessmentdocs {where}","0","","1","LRA-FUSION","0","0","fusion"
"39571","cv_performanceEmail1","","SELECT individualStrengths AS [<%ISTRENGTHS%>], individualAreas AS [<%IDEVELOPMENT%>], individualOverall AS [<%IOVERALL%>], individualComments AS [<%ICOMMENTS%>], reviewerStrengths AS [<%RSTRENGTHS%>], reviewerAreas AS [<%RDEVELOPMENT%>],  reviewerOverall AS [<%ROVERALL%>], reviewerComments AS [<%RCOMMENTS%>], convert(varchar, [date], 103) AS [<%DATE%>] FROM assessment {where}","0","","1","LRA-FUSION","0","0","fusion"
"39572","cv_performanceEmail2","","SELECT objective as [<%OBJECTIVE%>], case Selected when 1 then 'Checked' else '' end as [<%checkstate%>] FROM Assessmentobjectives {where}","0","","1","LRA-FUSION","0","0","fusion"
"39573","cv_performanceHTML","","<TR style='background:#efefef;'><TD><%OBJECTIVE%></tD></tR>
","0","","1","LRA-FUSION","0","0","fusion"
"39574","qf_performance","","select staffid, isnull(firstname, '') + ' ' + isnull(surname, '')
from staff s
where firstname like '%<%replace%>%'
order by firstname

","0","","1","LRA-FUSION","0","0","fusion"
"39575","cv_Settings_ParentItems","","select taskID, displayname as [ItemName] from glptask where isnull(taskidparent, '') = '' and isnull(hidden, '' ) = ''","0","","1","LRA-FUSION","0","0","fusion"
"39576","cv_Clientactivitylist","","Select cal.clientactivitylistid as ""Activity ID"",convert(varchar,cal.dateissued,103) as [Date Issued],
convert(varchar,cal.datedue,103) as [Date Due], 
at.activitytype as ""Activity Type"",
p.prioritytype as ""Priority""
from clientactivitylist cal
left join priority p on p.priorityid = cal.priorityid
left join activitytype at on at.activitytypeid = cal.activitytypeid
left join lookup l on l.lookupid = cal.ownerid
left join lookup l2 on l2.lookupid = cal.issuedbyid
{where}
order by cal.datedue","0","","1","LRA-FUSION","0","0","fusion"
"39577","cv_Print_Contacts","","SELECT e.ENTITYCONTACTID, e.ENTITYID, en.COMPANY, TITLE, JOBTITLE, e.FIRSTNAME, e.SURNAME, INITIALS, PHONE1, HOMEPHONE, FAX, e.EMAIL, cell, 
EXT, DEPARTMENT, BIRTHDATE, ANNIVERSARYDATE, EA.ADDRESS1, EA.ADDRESS2, EA.ADDRESS3, EA.CITY, EA.Region as [STATE], EA.CODE, 
EA.REGION, EA.COUNTRY, PO.[POADDRESS1], PO.[POADDRESS2], PO.[POADDRESS3], PO.[POCITY], PO.[POSTATE], PO.[POCODE], PO.[POCOUNTRY], [DATE], 
SUBJECT, [DESCRIPTION], N.NOTES, [Created By], [Modified By], AsstTitle, AsstName, AsstPhone, AsstExt, DateAdded, DateModified, modifiedBy, u.username FROM ENTITYCONTACT E
LEFT JOIN 
(SELECT EntityContactID, [Date], Subject, [Description], Notes,Createbyid, ModifiedByid From Notes) N
on e.EntityContactID = n.EntityContactID
LEFT JOIN
(SELECT isnull(firstname, '') + ' ' + isnull(surname,'') as [Created By], UserID FROM Users ) CB
ON N.Createbyid = CB.userid
LEFT JOIN
(SELECT isnull(firstname, '') + ' ' + isnull(surname,'') as [Modified By], UserID FROM Users ) MB
ON N.modifiedbyid = MB.userid
LEFT JOIN
(SELECT EntityID, Address1, Address2, Address3, City, Region, State, Code, Country From EntityAddress) EA
ON e.EntityID = EA.EntityID
LEFT JOIN
(SELECT  entityID, Company FROM Entity)en
ON e.EntityID = en.EntityID
LEFT JOIN
(SELECT ENTITYID, ADDRESS1 as [POADDRESS1], ADDRESS2 as [POADDRESS2], ADDRESS3 as [POADDRESS3], CITY as [POCITY], Region as [POSTATE], CODE as [POCODE], COUNTRY as [POCOUNTRY] FROM ENTITYADDRESS WHERE ADDRESSTYPE = 'Postal')PO
ON e.EntityID = po.EntityID
left join users u on u.userid = e.entitycontacTCREATORid
<%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39578","cv_leadnotes","","select leadnoteid,Date, Note,[Note Type] from leadnotes LN
LEFT JOIN (SELECT LookupID, Value as [Note Type] FROM Lookup) LNT ON LNT.LookupID = LN.NoteTypeID
 {where}","0","","1","LRA-FUSION","0","0","fusion"
"39579","cv_SalesPipelineDoc","","select EntityDocumentID, l.value as [Doc Type], [Name], path as Location
from EntityDocument d
left join lookup l on l.lookupid = d.doctypeid
 <%where%>
order by [Name]
","0","","1","LRA-FUSION","0","0","fusion"
"39580","cv_PipelineNotes","","SELECT 
 NoteID,convert(varchar,[date],103) as [Date],u.username as [Created By],mod.username as [Modified By], Subject, [Description], substring(Notes, 1,50) as ""Notes..""
FROM notes spn
left join users u on u.userid = spn.createbyid
left join users mod  on mod.userid = spn.modifiedbyid
<%where%>
ORDER BY [date]","0","","1","LRA-FUSION","0","0","fusion"
"39581","cv_SalesForecastDetails","","select Forecastid , l.Value as Type, Description,January As Jan,Febuary As Feb,March AS Mar,April As Apr,May ,June As Jun,July As Jul,August AS Aug,September AS Sep,October As Oct,November As Nov,December As Dec from SaleForecastAddedDetails S
left join (select lookupid, value from lookup )l
on l.lookupid = S.TypeID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39582","cv_GetForecastdetails","","Select distinct S1.SalesForecastID, Company,'R' + Convert(Varchar,January) As January,'R' + Convert(varchar,Febuary) As Febuary,
'R' + Convert(Varchar,March) As March,'R' + Convert(varchar,April) As April,'R' + Convert(varchar,May) As May,'R' + Convert(varchar,June) As June,'R' + Convert(varchar,July) As July,
'R' + Convert(varchar,August) As August,'R' + Convert(varchar,September) AS September,'R' + Convert(varchar,October) As October,'R' + Convert(varchar,November) As November,'R' + Convert(Varchar,December) As December from salesForecastDetails S1
left join
(Select * from saleForecastaddedDetails) S2
On S1.SalesForecastID = S2.SalesForecastID
left join
(Select EntityID, Company from Entity) E
On E.entityID = S1.EntityID
{where}

","0","","1","LRA-FUSION","0","0","fusion"
"39583","cv_ForeTotals","","Select Convert(varchar,Sum(January)) As January,Convert(varchar,Sum(Febuary)) As Febuary,Convert(varchar,Sum(March)) As March,Convert(varchar,Sum(April)) As April,Convert(varchar,Sum(May)) As May,Convert(varchar,Sum(June)) As June,Convert(varchar,Sum(July)) as July, 
Convert(varchar,Sum(August)) As August,Convert(varchar,Sum(September)) as September,Convert(varchar,Sum(October)) as October,Convert(varchar,Sum(November)) as November,Convert(varchar,Sum(December)) as December from SaleForecastAddedDetails
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39584","qf_AccStockFind","","select top 50 STK.Stockid, STK.StockCode as [Code], STK.StockDescription as [Description], isnull(qty,0) as [In Container],LJ.Value as [GL Category], STK.Barcode /*, STK.SupplierStockCode as [Supplier Code]*/
from AccStock STK
LEFT JOIN (SELECT StockID, round(Sum(qty * Ratio),4) as [Qty],ContainerID FROM ACCStockControl where ContainerID  = {container} Group by StockID,Containerid) SC
ON STK.StockID =Sc.StockID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class like 'JournalType') LJ
ON STK.JournalID = LJ.lookupid
where 
(isnull(stk.IsHidden,0) = 0) AND
(/*(STK.SupplierStockCode like '%<%replace%>%') OR*/ (STK.Barcode like '%<%replace%>%') OR (STK.StockCode like '%<%replace%>%') OR (STK.StockDescription Like '%<%replace%>%')) /*<%sType%>*/
order by STK.Stockcode, STK.StockDescription","0","","1","LRA-FUSION","0","0","fusion"
"39585","cv_Acc_SalesOrder","","

DECLARE @docid as integer
set @docid =  {docid}
SELECT DD.DocID, DD.StockID,DD.StockCode, DD.StockDescription, sum(DD.Qty) as [Qty],
sum(isnull(DDPrev.Qty,0)) as [qtyinvoiced], sum(isnull(DDPrev.Qty,0) - isnull(Credqty,0)) as [QtyOutstanding],
DD.PriceEx, DD.PriceIncl,sum(DD.TotalIncl) as [TotalIncl], DD.Comments,CostPriceEx,ClientID,ProjectID,DiscPerc,DD.DivisionID, DD.ReportCategoryID
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, PreviousDocID FROM DEBTOR_MASTER) DM
ON DD.DocID = Dm.Docid
LEFT JOIN (SELECT sum(Qty) as [Qty], DocID, StockID, Comments, PriceEx,DivisionID,ReportCategoryID FROM DEBTOR_DETAIL Group by DocID, StockID, Comments, PriceEx,DivisionID,ReportCategoryID) DDPrev	--Qty invoiced
ON Dm.PreviousDocID = DDPrev.DocID AND DD.StockID = DDPrev.StockID AND DD.Comments = ddprev.comments and dd.PriceEx = ddPrev.Priceex AND DD.DivisionID  =DDPrev.DivisionID AND DD.ReportCategoryID =DDPrev.ReportCategoryID 
LEFT JOIN (SELECT Sum(qty) as [CredQty], StockID, PriceEx, PreviousDocID,Comments FROM DEBTOR_DETAIL DD							--Qty Credited
		LEFT JOIN (SELECT DocID, PreviousDocID FROM DEBTOR_MASTER) DM
		ON DD.DocID = DM.DocID 
		Group by StockID, PriceEx, PreviousDocID,Comments
		) DDCred	
ON Dm.PreviousDocID = DDCred.PreviousDocID AND DD.StockID = DDCred.StockID AND DD.Comments = ddCred.comments and dd.PriceEx = ddCred.Priceex
WHERE DD.DocID = @DocID
Group by DD.DocID, DD.StockID,DD.StockCode, DD.StockDescription,DD.PriceEx, DD.PriceIncl, DD.Comments,CostPriceEx,ClientID,ProjectID,DiscPerc,DD.DivisionID, DD.ReportCategoryID

","0","","1","LRA-FUSION","0","0","fusion"
"39586","cv_Acc_AllInvoiced","","
SELECT sum(isnull(qty,0)) - (isnull(qtyinvoiced,0))   as [QtyOutstanding] FROM DEBTOR_DETAIL DD
left join (SELECT sum(qty) as [QTYInvoiced], PreviousDocID,Dm.Docstatus from DEBTOR_DETAIL 
        LEFT JOIN (SELECT DocID, PreviousDocID,DocStatus FROM DEBTOR_MASTER  {where doctype})DM 
	ON DEBTOR_DETAIL.DocID = DM.DocID group by PreviousDocID, Docstatus ) DD2
ON  DD.DocID = DD2.PreviousDocid
WHERE DD.DOCID = {docid}
group by qtyinvoiced



/*SELECT sum(qty - isnull(qtyinvoiced,0)) as [QtyOutstanding] FROM DEBTOR_DETAIL DD
left join (SELECT sum(qty) as [QTYInvoiced] , stockid, PreviousDocID,docstatus from DEBTOR_DETAIL 
        LEFT JOIN (SELECT DocID, PreviousDocID,DocStatus FROM DEBTOR_MASTER {where doctype})DM ON DEBTOR_DETAIL.DocID = DM.DocID group by stockid, PreviousDocID,docstatus ) DD2
ON DD.stockid = DD2.stockid  AND DD.DocID = DD2.PreviousDocid

WHERE DD.DOCID = {docid}*/
","0","","1","LRA-FUSION","0","0","fusion"
"39587","cv_Acc_Invoice","","DECLARE @docid as integer
set @docid =  {docid}
SELECT DD.DocID, DD.StockID,DD.StockCode, DD.StockDescription, sum(DD.Qty) as [Qty],
sum(isnull(DDPrev.Qty,0)) as [qtyinvoiced], sum(isnull(DDPrev.Qty,0) - isnull(Credqty,0)) as [QtyOutstanding],DD.DiscPerc,
DD.PriceEx, DD.PriceIncl,sum(DD.TotalIncl) as [TotalIncl], DD.Comments,CostPriceEx,ClientID,ProjectID,DD.ContainerID,DD.DivisionID,DD.ReportCategoryID
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, PreviousDocID FROM DEBTOR_MASTER) DM
ON DD.DocID = Dm.Docid
LEFT JOIN (SELECT sum(Qty) as [Qty], DocID, StockID, Comments, PriceEx FROM DEBTOR_DETAIL Group by DocID, StockID, Comments, PriceEx) DDPrev	--Qty invoiced
ON Dm.PreviousDocID = DDPrev.DocID AND DD.StockID = DDPrev.StockID AND DD.Comments = ddprev.comments and dd.PriceEx = ddPrev.Priceex
LEFT JOIN (SELECT Sum(qty) as [CredQty], StockID, PriceEx, PreviousDocID,Comments FROM DEBTOR_DETAIL DD							--Qty Credited
		LEFT JOIN (SELECT DocID, PreviousDocID FROM DEBTOR_MASTER) DM
		ON DD.DocID = DM.DocID 
		Group by StockID, PriceEx, PreviousDocID,Comments
		) DDCred	
ON Dm.PreviousDocID = DDCred.PreviousDocID AND DD.StockID = DDCred.StockID AND DD.Comments = ddCred.comments and dd.PriceEx = ddCred.Priceex
WHERE DD.DocID = @DocID
Group by DD.DocID, DD.StockID,DD.StockCode, DD.StockDescription,DD.PriceEx, DD.PriceIncl, DD.Comments,CostPriceEx,ClientID,ProjectID,DD.ContainerID,DD.DiscPerc,DD.DivisionID,DD.ReportCategoryID


","0","","1","LRA-FUSION","0","0","fusion"
"39588","cv_Acc_Inventory_Man","","DECLARE @PriceCat  as int
DECLARE @VAT as float
SET @PriceCat = {pricecat}
SET @VAT = (SELECT top 1 cast(custvalue as float) FROM CrmSetup where [description] = 'GenAccSettings' and  [Variable] = 'DefaultVAT' ) / 100 +1

SELECT 
	convert(varchar,STK.StockID) + '#' + convert(varchar,isnull(SP.StockPriceID,'')), 
       STK.StockID as [Stock ID], 
	StockCode as [Code], 
	StockDescription as [Description],
	STK.Barcode as [Barcode],
	DefaultBinName as [Default Bin Name],
	LSG.Value as [Sales Group],
	LT.Value as [Type],
	LST.Value as [Sub Type], 
	LJ.value as [GL Category],
	CASE WHEN ISNULL(STK.IsTangible,0) = 0 THEN ISNULL(GLC2.GLCode,GLC3.GLCode) ELSE isnull(GLC1.GLCode, ISNULL(GLC2.GLCode,GLC3.GLCode)) END as [GL Code],
	LDSP.Value as [Division],
	LSP.Value as [Price Category],
	dbo.fnFormatNumber(isnull(SP.CostPriceEx,0)) as [Bulk Cost Price Ex.],
	cast(100*(isnull(SP.Markup,0) -1 ) as money) as [Markup/Margin],
	dbo.fnFormatNumber(isnull(SP.SellingPriceEx,0)) as [Selling Price Ex.],
	dbo.fnFormatNumber(isnull(SP.SellingPriceEx,0) * isnull(@VAT,1.14)) as [Selling Price Incl.],
	STK.SoldByToPurchasedByRatio as [Ratio],
	Specifications as [Comments / Specifications],
	stk.ReOrderLevel as [Re-Order Level],
	ISNULL(STK.Fulfillment,0) as [Fulfillment],
	Convert(VARCHAR, CAST(stk.DateCreated as DateTime),111) as [Date Added],
	Convert(VARCHAR, CAST(stk.DateModified as DateTime),111) as [Date Modified],
	U.[Modified By],
	Case when isnull(IsHidden,0) = 1 then 'Inactive' else '' END as [Inactive],
	Weight as [Total Weight]
FROM AccStock Stk
Left Join (SELECT LookupID, Value From Lookup) LT
ON stk.StockType = LT.lookupid
LEFT JOIN (SELECT LookupID, Value From Lookup) LSG
ON Stk.SalesGroup = LSG.LookupID
Left Join (SELECT LinkLookupID, Value From LinkLookup) LST
ON STK.SubTypeID = LST.Linklookupid
Left Join (SELECT LookupID, Value From Lookup
	UNION ALL
	SELECT -1, 'ACCOUNTS RECEIVABLE'
	UNION ALL
	SELECT -2, 'OUTPUT VAT CONTROL' 
	UNION ALL
	SELECT -3, 'COST OF SALES' 
	UNION ALL
	SELECT -4, 'INVENTORY' 
	UNION ALL
	SELECT -5, 'INPUT VAT CONTROL' 
	UNION ALL
	SELECT -6, 'BANK' 
	UNION ALL
	SELECT -8, 'FOREIGN EXCHANGE' 
	UNION ALL
	SELECT -9, 'ACCOUNTS PAYABLE' 
	UNION ALL
	SELECT -10, 'UN-RECEIVED INVENTORY' 
	UNION ALL
	SELECT -11, 'PREPAID EXPENSE' 
	UNION ALL
	SELECT -12, 'CAPITAL' 
	UNION ALL
	SELECT -13, 'INVENTORY EXPENSE' 
	UNION ALL
	SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
	UNION ALL
	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
	UNION ALL
        SELECT -16, 'DISCOUNT ALLOWED' 
        UNION ALL
        SELECT -17, 'DISCOUNT RECEIVED' 
        UNION ALL
        SELECT -18, 'OPENING BALANCE' 
	) LJ
ON stk.JournalID = Lj.lookupid
LEFT JOIN (SELECT MIN(GLCode) as [GLCode], GLCategoryID  FROM AccGLCode where GLType = 'ASSET' AND isnull(DivisionID,0) =0 Group by GLCategoryID ) GLC1
ON STK.JournalID = GLC1.GLCategoryID 
LEFT JOIN (SELECT MIN(GLCode) as [GLCode], GLCategoryID  FROM AccGLCode where GLType = 'INCOME' AND isnull(DivisionID,0) =0 Group by GLCategoryID ) GLC2
ON STK.JournalID = GLC2.GLCategoryID 
LEFT JOIN (SELECT MIN(GLCode) as [GLCode], GLCategoryID  FROM AccGLCode where GLType = 'EXPENSE' AND isnull(DivisionID,0) =0 Group by GLCategoryID ) GLC3
ON STK.JournalID = GLC3.GLCategoryID 
LEFT JOIN (SELECT UserID, isnull(firstname,'') +  ' ' + isnull(Surname,'') AS [Modified By] FROM users) U
ON STK.ModifiedBy= U.UserId
LEFT JOIN (SELECT * FROM AccStockPrice WHERE PriceCategoryID = @PriceCat and getdate() between Validfrom and ValidTo ) SP
ON STK.StockID = SP.StockID 
LEFT JOIN Lookup LSP
ON SP.PriceCategoryID  = LSP.LookupID
LEFT JOIN Lookup LDSP
ON SP.DivisionID = LDSP.LookupID
{where}
ORDER BY Stk.StockDescription","0","","1","LRA-FUSION","0","0","fusion"
"39589","CV_AccSTOCK_Components","","SELECT AccStock_DepID, STK.StockCode as [Stock Code], stk.StockDescription as [Description],
round(depsellingqty,5) as [Qty],
L.Value as [Units], 
isnull(Dep.Strength,100) as [Strength %],
round((depsellingqty) / Case WHEN isnull(Dep.Strength,100) / 100 = 0 then 1 ELSE isnull(Dep.Strength,100) / 100 END ,3) as [UNIT Qty],
round(isnull(Wastage,1) * depsellingqty / Case WHEN isnull(Dep.Strength,100) / 100 = 0 then 1 ELSE isnull(Dep.Strength,100) / 100 END, 3) as [STD Qty],
dbo.fnformatnumber(isnull((isnull(STKP.costPriceEx, 0) / isnull(STK.SoldbytoPurchasedByRatio,1)),0) * round(isnull(Wastage,1) * round(depsellingqty,5) / Case WHEN isnull(Dep.Strength,100) / 100 = 0 then 1 ELSE isnull(Dep.Strength,100) / 100 END, 5)) as [Material Cost]
--,dbo.fnformatnumber(stk.[cost] * depsellingqty) as [Landed Cost]
FROM AccStock_Dep Dep
LEFT JOIN (SELECT StockID,StockCode, StockDescription, SoldbytoPurchasedByRatio, SoldBy,[Weight] FROM AccSTOCK ) STK
ON Dep.DepStockID = STK.StockID 
LEFT JOIN (SELECT StockID, PriceCategoryID, max(CostPriceEx) as [CostPriceEx] FROM AccStockPrice WHERE Getdate() between ValidFrom and ValidTo Group by StockID, PriceCategoryID) STKP
ON STK.StockID = STKP.StockID 
AND DEP.PriceCategoryID = STKP.PriceCategoryID
LEFT JOIN (SELECT LookupID, Value FROM Lookup ) L
ON Stk.SoldBy = L.Lookupid
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39590","cv_AccSTOCK_ControlMan","","--cv_AccSTOCK_ControlMan
DECLARE @Date as Datetime
SET @Date = '{date}'

SELECT 
Convert(varchar,STK.StockID) /*+ '#' + Convert(varchar,isnull(LL.LinkLookupid,0))*/  as [ID], 
ST.Value as [Type],
SST.Value as [Sub Type],
--LL.Value as [Container],
STK.StockCode as [Code], 
STK.StockDescription as [Description],
STK.Barcode,
LU.Value as [Unit],
dbo.fnFormatNumber(sum(isnull([Qty In Container],0) * Isnull(STK.Weight,0) / 1000)) as [Total Weight (KG)] ,
STK.MinReOrderAmt as [Min Re-Order Amt],
dbo.fnFormatNumber(sum(isnull(SO.Qty,0)) - sum(isnull(DN.Qty,0)))  as [On S.O.],
dbo.fnFormatNumber(sum(isnull(MC.Qty,0))) as [For Manufacturing],
dbo.fnFormatNumber(sum(isnull([Qty In Container],0))) as [Qty In Containers],
dbo.fnFormatNumber((sum(isnull(PO.Qty,0)) - sum(isnull(GRN.Qty,0))) * SoldByToPurchasedByRatio)  as [On P.O.],
dbo.fnFormatNumber(sum(isnull(MO.Qty,0))) as [Being Manufactured],
dbo.fnFormatNumber(isnull(STK.Fulfillment,0)) as [Fulfillment],
dbo.fnFormatNumber(
sum(isnull([Qty In Container],0)) --In Container
-
(sum(isnull(SO.Qty,0)) - sum(isnull(DN.Qty,0))) --On S.O. & Required
-
sum( isnull(MC.Qty,0) )  --For Manufacturing 
)as [Available],
STK.LeadTime as [Lead Time (Hrs)],
dbo.fnFormatNumber(
isnull(STK.Fulfillment,0) --Fulfillment
-
sum(isnull(MO.Qty,0)) --Being Manufactured
- 
((sum(isnull(PO.Qty,0)) - sum(isnull(GRN.Qty,0))) * SoldByToPurchasedByRatio ) --On P.O.
-
(
    sum(isnull([Qty In Container],0)) --In Container
    -
    (sum(isnull(SO.Qty,0)) - sum(isnull(DN.Qty,0))) --On S.O. & Required
    -
    sum(isnull(MC.Qty,0)) --For Manufacturing 
)) as [Recommended]
FROM  AccStock STK
CROSS JOIN (SELECT * FROM LinkLookup where class like 'StockContainer') LL
LEFT JOIN Lookup Div 
ON LL.LinkedTo = Div.LookupID
LEFT JOIN (SELECT * FROM Lookup) LU
ON STK.SoldBy = LU.LookupID
LEFT JOIN (SELECT * FROM Lookup where class like 'StockType') ST
ON STK.StockType= ST.Lookupid
LEFT JOIN (SELECT * FROM LinkLookup where class like 'StockSubType') SST
ON STK.SubTypeID = SST.LinkLookupid
LEFT JOIN (SELECT StockID,ContainerID, sum(Qty * Ratio) as [Qty In Container] FROM AccStockControl WHERE AdjustDate <= @Date  Group by StockID,ContainerID) SC
ON STK.StockID = SC.StockID AND LL.LinkLookupID = SC.ContainerID
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
            LEFT JOIN (SELECT DOCID, DocType, DateCompleted FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
            ON DD.DocID = DM.DocID
            LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*DEBTOR_DETAIL*/) DDM
            ON DD.ComponentOfLineID = DDM.LineID
            WHERE DM.DocType in ('Sales Order', 'Quote')
            AND DM.DateCompleted <= @Date
            Group by StockID, ContainerID ) SO
ON STK.StockID = SO.StockID AND LL.LinkLookupID = SO.ContainerID    
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
            LEFT JOIN (SELECT DOCID, DocType, DateCompleted FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
            ON DD.DocID = DM.DocID
            LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*DEBTOR_DETAIL*/) DDM
            ON isnull(DD.ComponentOfLineID,0) = DDM.LineID
            WHERE DM.DocType = 'Dispatch Note'
            AND DM.DateCompleted <= @Date
            Group by StockID, ContainerID ) DN
ON STK.StockID = DN.StockID AND LL.LinkLookupID = DN.ContainerID    
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType,DateCompleted FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Purchase Order'
            AND CM.DateCompleted <= @Date
            Group by StockID, ContainerID ) PO
ON STK.StockID = PO.StockID AND LL.LinkLookupID = PO.ContainerID    
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType, DateCompleted FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Goods Received Note'
            AND CM.DateCompleted <= @Date
            Group by StockID, ContainerID ) GRN
ON STK.StockID = GRN.StockID AND LL.LinkLookupID = GRN.ContainerID  
LEFT JOIN (SELECT MD.StockID, MD.ContainerID, Sum(MD.Qty) as [Qty],MM.RaisedByDocType FROM AccMANUFACTURE_DETAIL MD
            LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType ,DateCompleted FROM AccMANUFACTURE) MM
            ON MD.DocID = MM.DocID
            WHERE isnull(MM.IsComplete,0) = 0 
            AND MM.DateCompleted <= @Date
            AND MM.RaisedByDocType <> 'Sales Order'
            Group by MD.StockID, MD.ContainerID,MM.RaisedByDocType) MC
ON STK.StockID = MC.StockID AND LL.LinkLookupID = MC.ContainerID
LEFT JOIN (SELECT MO.StockID, MO.ContainerID, sum(MO.Qty) as [Qty] FROM AccMANUFACTURE_Output MO
            LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType FROM AccMANUFACTURE) MM
            ON MO.DocID = MM.DocID
            WHERE isnull(MM.IsComplete,0) = 0 
            Group by MO.StockID, MO.ContainerID) MO
ON STK.StockID = MO.StockID AND LL.LinkLookupID = MO.ContainerID
LEFT JOIN (SELECT StockID, DivisionID, PriceCategoryID, max( CostPriceEx) as [CostPriceEx], max(SellingPriceEx) as [SellingPriceEx] FROM AccStockPrice WHERE @Date between ValidFrom AND ValidTo GROUP BY  StockID, DivisionID, PriceCategoryID) ASP
ON STK.StockID = ASP.StockID AND  ASP.DivisionID = LL.LinkedTo

{where}

GROUP BY STK.StockId, ST.Value, SST.Value, STK.StockCode, STK.StockDescription, STK.Barcode,LU.Value,SoldByToPurchasedByRatio, STK.Fulfillment, STK.LeadTime,STK.MinReOrderAmt
{having}
ORDER BY StockCode --, LL.Value","0","","1","LRA-FUSION","0","0","fusion"
"39591","cv_Acc_Creditors_Man","","
SELECT Distinct DocID, [Doc. Type], [Doc. No.], LD.Value as [Division], 
CASE WHEN isnull(A.UseEC,0) = 1 then EC.AccountNum ELSE E.AccountNum END as [Account],
CASE WHEN isnull(A.UseEC,0) = 1 then EC.Contact ELSE E.Company END as [Supplier],
isnull(EH.Company,'') [Holding Company],
A.ClientPo as [Ref.], Notes, 
Convert(varchar,Created,111) as [Created],Convert(varchar,[Doc. Date],111) as [Doc. Date],
[Status], U.Consultant,ExtSal.Value as [Ext. Consultant], Currency, [R.O.E.], 
dbo.fnformatnumber([Total Ex. VAT]) as [Total Ex. VAT], 
dbo.fnformatnumber([Total VAT]) as [Total VAT],
dbo.fnformatnumber([Total Incl. VAT]) as [Total Incl. VAT]
FROM 
(
	SELECT Convert(Varchar,DM.DocID) + '#' + DocType as [DocID], DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
	DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
	[ClientPO], P.ProjectName  as [Project],	isnull(DM.Memo,'') as Notes, 
	DateCreated as [Created],DateCompleted as [Doc. Date],DocStatus as [Status], DM.SalesRepID as [SalesRepID],DM.CreatedBy,
	DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
	CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / Case WHEN DM.DocType = 'Supplier Payment' THEN isnull(DM.ROE,1) ELSE 1 END) as [Total Ex. VAT], 
	CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * (([Total Incl. VAT] - [Total Ex. VAT])  / Case WHEN DM.DocType = 'Supplier Payment' THEN isnull(DM.ROE,1) ELSE 1 END) as [Total VAT], 
	CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT]  / Case WHEN DM.DocType = 'Supplier Payment' THEN isnull(DM.ROE,1) ELSE 1 END)  as [Total Incl. VAT],
	DM.Period, CDD.ClientID, CDD.ProjectID
	FROM CREDITOR_MASTER DM
	LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
	             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
	             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
	             FROM CREDITOR_DETAIL Group by Docid) DD
	ON DM.DocID = DD.Docid
	LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
	ON DM.DocID = SD.DocID
	LEFT JOIN (SELECT DocID, ClientID, ProjectID FROM CREDITOR_DETAIL) CDD
	ON DM.DocID= CDD.DocID
	LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
	ON DM.ProjectID = P.ProjectID

	UNION ALL

	SELECT convert(varchar,DM.DocID) + '#Transfer##' + Convert(varchar,DD.LineID) as [DocID], 
	CASE WHEN isnull(DM.IsInterAccountTransfer,0) = 1 THEN 'Inter-Account Transfer' WHEN isnull(DM.IsInterLedgerTransfer,0) = 1 THEN 'Inter-Ledger Transfer' END as [Doc. Type],
	left('00000000', 8- len(DM.Docid)) + convert(varchar,DM.Docid) as [Doc. No.],
	DD.DivisionID as [DivisionID],	DD.EntityID, 0 as [UseEC], 
	DD.Notes as [ClientPO], null as [Project], DM.TransNotes , DM.DateCreated as [Created],DD.AdjustDate as [Doc. Date],
	CASE WHEN isnull(DM.IsComplete,0) = 1 then 'Completed' else 'Open' END as [Status],
	DM.CreatedBy,DM.CreatedBy,
	isnull(DM.Currency,'') as [Currency],
	isnull(DM.ROE,1) as [R.O.E.],
	((isnull(DD.Credit,0) - isnull(DD.Debit,0) )) / isnull(DM.ROE,1) as [Total Ex. VAT],
	0 as [Total VAT],
	((isnull(DD.Credit,0) - isnull(DD.Debit,0) )) / isnull(DM.ROE,1) as [Total Incl. VAT],
	(SELECT top 1 AccPeriodID FROM ACCAccountingPeriod where DD.AdjustDate between StartDate and EndDate),
	null as [ClientID], null as [ProjectID]
	FROM LEDGER_ADJUST_MASTER DM
	LEFT JOIN LEDGER_ADJUST_DETAIL DD 
	ON DM.DocID = DD.DocID
	LEFT JOIN (SELECT EntityID, Company, Issupplier FROM Entity) E 
	ON DD.Entityid = E.Entityid
	WHERE (isnull(DM.IsInterAccountTransfer,0) = 1 OR isnull(DM.IsInterLedgerTransfer,0) = 1)
	AND isnull(E.Issupplier,0) = 1
	AND isnull(DD.EntityID,0) <> 0
) A
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
	On A.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
	ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
	ON A.EntityID = E.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
	ON E.AlternateCompanyID = EH.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
	ON A.Entityid = EC.EntityContactID AND isnull(A.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
	ON E.SalesConsID = ExtSal.lookupid
LEFT JOIN (SELECT EntityID, Company FROM Entity) ECli ON A.ClientID = ECli.EntityID
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P ON A.ProjectID = P.ProjectID
{where}
ORDER BY A.DocID desc



","0","","1","LRA-FUSION","0","0","fusion"
"39592","cv_Acc_PurchaseOrder","","{select} 
(
	SELECT CD.GroupName as [Group], StockCode as [Code], SP.SupplierStockCode as [Supplier's Code], StockDescription as [Description] ,Comments,
	E.Company as [For Client],
	CASE WHEN P.ProjectID is not null then convert(varchar, CD.ProjectID) + ' - ' + P.ProjectName ELSE ' ' END as [Project],
	LC.Value as [Container],
	LRC.Value as [Report Catrgory], [Qty],L.Value as [UOM],
	dbo.fnFormatNumber(PriceEx) as [Price Ex. VAT], 
	dbo.fnFormatNumber(PriceEx * (Tax / 100)) as [Unit VAT],
	dbo.fnFormatNumber(PriceEx *  (1  + Tax / 100)) as [Price Incl. VAT],
	dbo.fnFormatNumber(PriceEx * Qty) as [Total Ex. VAT],
	dbo.fnFormatNumber(Tax) as [VAT Percent],
	dbo.fnFormatNumber(PriceEx * Qty * (Tax / 100)) as [Total VAT],
	dbo.fnFormatNumber(PriceEx * Qty * (1  + Tax / 100)) as [Total Incl.]
	FROM CREDITOR_DETAIL  CD
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CD.ProjectID = P.ProjectID
	LEFT JOIN (SELECT DocID, DateCompleted,DivisionID, EntityID FROM CREDITOR_MASTER) CM
	ON CD.DocID = CM.DocID
	LEFT JOIN (SELECT * FROM AccStockPrice) SP
	ON CD.StockID = SP.StockID AND isnull(CD.DivisionID, CM.DivisionID) = SP.DivisionID AND CM.EntityID = SP.SupplierID AND CD.PriceCategoryID = SP.PriceCategoryID AND CM.DateCompleted BETWEEN SP.ValidFrom AND SP.ValidTo
	LEFT JOIN (SELECT StockID, PurchasedBy From AccStock) STK
	ON CD.StockID = Stk.StockID
	LEFT JOIN Lookup L
	ON Stk.PurchasedBy = L.Lookupid
	LEFT JOIN (SELECT EntityID, AccountNum, Company from Entity  ) E
	ON CD.ClientID = E.Entityid
	LEFT JOIN Lookup LRC
	ON CD.ReportCategoryID = LRC.LookupID
	LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LC
	ON CD.ContainerID = LC.LinkLookupID
	WHERE CD.DocID = {docid} 
) A
","0","","1","LRA-FUSION","0","0","fusion"
"39593","cv_Acc_ManufactureMan","","select Distinct M.DocID, M.DocID as [Job No.],ExtJobNo as [Ext. Job No.], LD.Value as [Division],STK.StockCode as [Code], STK.StockDescription as [Description],
LL.Value as [Manufacture Into],
convert(varchar,cast(MO.Sellingqty as money),1) as [Qty. to Manufacture],
convert(varchar,cast(MO.Actualqty as money),1) as [Qty. Actually Manufacture],
LS.Value as [Unit],
Case When M.Entityid is null then 'Stock' ELSE
	Case when isnull(M.UseEc,0) = 0 then Company ELSE Contact End
End as [Manufactured For], isnull(P.ProjectName,'') as [Project],
case when isnull(Demanufactured,0) =1 then 'De-Manufactured' else case  isnull(Completed,0) When 1 then 'Completed' else 'Open' end End as [Status],
CONVERT(varchar,DateCreated,111) + ' ' + CONVERT(varchar,DateCreated,108) as [Date Created],
CONVERT(varchar,ReleaseDate,111) + ' ' + CONVERT(varchar,ReleaseDate,108)  as [Date Released],
CONVERT(varchar,DateManufactured,111) + ' ' + CONVERT(varchar,DateManufactured,108)  as [Date Manufactured],
CONVERT(varchar,DateCompleted,111) + ' ' + CONVERT(varchar,DateCompleted,108)  as [Date Completed],
--convert(varchar,(SELECT Min(StartTime) as [Start] FROM AccMANUFACTURE_PROCESS WHERE DocID = M.DocID),111) + ' ' + convert(varchar,(SELECT Min(StartTime) as [Start] FROM AccMANUFACTURE_PROCESS WHERE DocID = M.DocID),108) as [Start],
--convert(varchar,(SELECT max(EndTime) as [Start] FROM AccMANUFACTURE_PROCESS WHERE DocID = M.DocID),111) + ' ' + convert(varchar,(SELECT max(EndTime) as [Start] FROM AccMANUFACTURE_PROCESS WHERE DocID = M.DocID),108) as [End],
ManufacturingTime as [Manufacturing Time]
from AccMANUFACTURE M
LEFT JOIN Lookup LD ON M.DivisionID = LD.LookupID
LEFT JOIN (SELECT Entityid, Company FROM Entity) E
ON M.Entityid = E.Entityid and isnull(M.UseEc,0) = 0
LEFT JOIN (SELECT EntityContactID, isnull(firstname,'') + ' ' + isnull(Surname,'') as [Contact] From EntityContact) EC
ON M.EntityId = EC.EntityContactid and isnull(M.UseEc,0) = 1
LEFT JOIN (SELECT * FROM AccManuFacture_Output where isnull(isPrimaryOutput,0) = 1) MO
ON M.docID = MO.DocID
LEFT JOIN (SELECT StockID, StockCode, StockDescription,SoldBy FROM AccStock) STK
ON MO.Stockid = STK.StockID 
LEFT JOIN Lookup LS ON STK.SoldBy = LS.LookupID
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects)P
ON M.ProjectID = P.Projectid
LEFT JOIN LinkLookup LL On MO.ContainerID = LL.LinkLookupID
--Added for in-depth querying
LEFT JOIN AccManufacture_Process MP On M.docID = MP.DocID

{where}
ORDER BY M.DocID Desc


","0","","1","LRA-FUSION","0","0","fusion"
"39594","cv_Acc_ManufRequest","","SELECT Distinct DD.Lineid, DD.StockCode as [Code], dd.stockdescription as [Description],QTY, MAX([Job No.]) as [Last Job No.] 
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT StockID, StockCode,StockDescription, isnull(isManufactured,0) as [ismanufactured] FROM AccStock) STK
ON DD.StockID = Stk.StockID
LEFT JOIN (SELECT raisedbydocid, DocID as [Job No.] FROM  AccMANUFACTURE) M
ON dd.docid = m.raisedbydocid
LEFT JOIN (SELECT DocID, StockID, Sum(Qty) as [Manufactured] FROM AccManuFacture_Output Group By DocID, StockID) MO
ON M.[Job No.] = MO.DocID AND DD.StockID = MO.StockID
LEFT JOIN (SELECT componentOfLineID, Count(LineID) as [NoOfComponents] FROM DEBTOR_DETAIL Group by componentOfLineID) DDC
ON DD.LineID = DDC.ComponentOfLineID
WHERE  DD.DocID = {docid}
AND (Ismanufactured = 1 OR isnull(DDC.NoOfComponents,0) > 0)
{and}
Group By DD.LineID, DD.StockCode, DD.StockDescription, DD.Qty

","0","","1","LRA-FUSION","0","0","fusion"
"39595","cv_Acc_Overhead_Man","","SELECT Distinct AccOverheadID,Division, OH.Company as [Pay To],OH.ProjectID as [Job No],P.ProjectName As [Job Name], StockCode as [Code], StockDescription as [Description],
GLC.GLCode as [GL Code],[Journal] as [GL Group], convert(Varchar,DateCreated,103) as [Created],
case isnull(ispaid,0) when 0 then '' when 1 then convert(varchar, datepaid,103) end as [Date Paid],
convert(varchar,isnull(TotalEx,0),1) as [Total Ex. VAT], convert(varchar,isnull(TotalVat,0),1) as [Total VAT],
 convert(varchar,isnull(TotalInc,0),1) as [Total Incl. VAT]
FROM AccOVERHEAD OH
LEFT JOIN (SELECT EntityID,Company from Entity) E
on OH.EntityID = E.Entityid 
LEFT JOIN (SELECT StockID, StockCode,StockDescription, JournalID, SubJournalID FROM AccStock)STK
ON OH.StockID = Stk.Stockid  
LEFT Join (
SELECT LookupID, Value as [Journal]  FROM Lookup  where class like 'JournalType' 
 
UNION ALL

SELECT -1, 'ACCOUNTS RECEIVABLE'

UNION ALL

SELECT -2, 'OUTPUT VAT CONTROL' 

UNION ALL

SELECT -3, 'COST OF SALES' 

UNION ALL

SELECT -4, 'INVENTORY' 

UNION ALL

SELECT -5, 'INPUT VAT CONTROL' 

UNION ALL

SELECT -6, 'BANK' 

UNION ALL

SELECT -8, 'FOREIGN EXCHANGE' 

UNION ALL

SELECT -9, 'ACCOUNTS PAYABLE' 

UNION ALL

SELECT -10, 'UN-RECEIVED INVENTORY' 

UNION ALL

SELECT -11, 'PREPAID EXPENSE' 

UNION ALL

SELECT -12, 'CAPITAL' 

UNION ALL

SELECT -13, 'INVENTORY EXPENSE' 

UNION ALL

SELECT -14, 'CAPITAL INPUT VAT CONTROL' 

UNION ALL

SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 

) L
ON Stk.JournalID = L.LookupID
LEFT Join (SELECT LookupID, Value as [Division] From Lookup) Div
ON OH.DivisionID = Div.LookupID
LEFT JOIN (SELECT ProjectID,ProjectName from Projects) P
on OH.ProjectID = P.ProjectID
LEFT JOIN (SELECT * FROM AccGLCode) GLC
ON STK.JournalID = GLC.GLCategoryID 
AND CASE 
	WHEN AccType  ='Payment Receipt' AND isnull(IsTaxPayment,0) = 0 AND isnull(IsTaxRefund,0) = 1 AND isnull(IsCapitalInc,0) = 0 AND isnull(IsCapitalDraw,0) = 0 THEN 'ASSET'
	WHEN AccType  ='Supplier Payment' AND isnull(IsTaxPayment,0) = 1 AND isnull(IsTaxRefund,0) = 0 AND isnull(IsCapitalInc,0) = 0 AND isnull(IsCapitalDraw,0) = 0  THEN 'LIABILITY'
	WHEN AccType  ='Payment Receipt' THEN 'OTHER INCOME'
	WHEN AccType  ='Supplier Payment' THEN 'EXPENSE'
	WHEN AccType  ='Transfer' THEN 'CAPITAL'
END = GLC.GLType
AND (OH.DivisionID = GLC.DivisionID OR GLC.DivisionID =0)
{where}
ORDER BY AccOverheadID

","0","","1","LRA-FUSION","0","0","fusion"
"39596","cv_Acc_Print_DebtorPayment","","SELECT 
Case DP.InvoiceDocID
	WHEN -2 then 'Unallocated'
	WHEN - 1 then 'Opening Balance'
	ELSE isnull(ADS.Prefix,'') + ' ' + convert(varchar,DMI.Docno)
END as [Invoice No.] ,
convert(varchar, DateCompleted, 103) as [Payment Date],
currency + ' ' + convert(varchar,cast(PaymentPortion   as money),1) AS [Payment Allocation]
 FROM DEBTOR_Payment DP
LEFT JOIN (SELECT DateCompleted, DocID,DocNo,DivisionID, ROE, Currency FROM DEBTOR_MASTER) DM
ON DP.PaymentDocID =DM.DocID 
LEFT JOIN (SELECT DocID,DocNo FROM DEBTOR_MASTER) DMI
ON DP.InvoiceDocID =DMI.DocID 
LEFT JOIN (SELECT DivisionID, Prefix FROM ACCDocumentSetup) ADS
ON DM.DivisionID = ADS.DivisionID
WHERE PaymentDocID = {paymentdocid}
AND isnull(PaymentPortion,0) > 0
ORDER BY DP.InvoiceDocID","0","","1","LRA-FUSION","0","0","fusion"
"39597","cv_Acc_Print_CreditorPayment","","SELECT 
Case DP.InvoiceDocID
	WHEN -2 then 'Unallocated'
	WHEN - 1 then 'Opening Balance'
	ELSE  convert(varchar,DMI.ClientPO)
END as [Invoice No.] ,
convert(varchar, DateCompleted, 103) as [Payment Date],
currency + ' ' + convert(varchar,cast(PaymentPortion   as money),1) AS [Payment Allocation]
 FROM CREDITOR_Payment DP
LEFT JOIN (SELECT DateCompleted, DocID,DocNo,DivisionID, ROE, Currency FROM CREDITOR_MASTER) DM
ON DP.PaymentDocID =DM.DocID 
LEFT JOIN (SELECT DocID,DocNo,ClientPO FROM CREDITOR_MASTER) DMI
ON DP.InvoiceDocID =DMI.DocID 
LEFT JOIN (SELECT DivisionID, Prefix FROM ACCDocumentSetup) ADS
ON DM.DivisionID = ADS.DivisionID
WHERE PaymentDocID = {paymentdocid}
AND isnull(PaymentPortion,0) > 0
ORDER BY DP.InvoiceDocID","0","","1","LRA-FUSION","0","0","fusion"
"39598","cv_Acc_ReOccuringOverheads","","
Insert into AccOVERHEAD(PaymentType,Entityid, Stockid, qty, DateCreated,Priceex,reoccuring,comments,totalinc,totalvat,totalex,divisionid,PriorDoc) 
SELECT o.PaymentType,o.EntityID,o.StockID, o.qty, 
(convert(varchar,year(getdate())) + '/' + convert(varchar,month(getdate())) + '/' + convert(varchar,o.reoccurday)),
o.PriceEx, 0 as [ReOccuring], o.Comments, o.TotalInc, o.TotalVat,o.TotalEx, o.DivisionID,o.accOverheadID
FROM AccOVERHEAD O
LEFT JOIN (SELECT * FROM AccOverhead
	WHERE DateCreated between (convert(varchar,year(getdate())) + '/' + convert(varchar,month(getdate())) + '/' + '01') AND (convert(varchar,year(dateadd(M,1,getdate()))) + '/' + convert(varchar,month(dateadd(M,1,getdate()))) + '/' + '01')
	) OO 
on o.AccOverheadid = oo.PriorDoc
LEFT JOIN (SELECT  datediff(MM, datecreated, getdate()) as [Mon], AccOverheadID FROM accOverhead )OD
ON o.accOverheadid = od.accOverheadID
WHERE isnull(O.reoccuring,0) = 1 
AND oo.AccOverHeadid is null
and O.reoccurexpiry > (convert(varchar,year(getdate())) + '/' + convert(varchar,month(getdate())) + '/' + '01')

","0","","1","LRA-FUSION","0","0","fusion"
"39599","cv_Acc_OverheadHistory","","select AccOverheadID,AccOverheadID as [Overhead ID], StockDescription as [Description], Comments , convert(varchar,datecreated,103)  as [Date Created],
convert(varchar,datepaid,103)  as [Date Paid] 
From AccOverhead O
LEFT JOIN (SELECT StockID, StockDescription from AccStock) STK
ON O.StockID = STK.Stockid
WHERE AccOverHeadID = {overheadid} or PriorDoc = {overheadid}
ORDER By DateCreated","0","","1","LRA-FUSION","0","0","fusion"
"39600","cv_Acc_DEBTOR_PAYMENT","","DECLARE @UseEC as integer
DECLARE @EntityID as integer
DECLARE @Currency as varchar(50)
DECLARE @PayDocID as integer
SET @UseEC = {useec}
SET @EntityID ={entityid}
SET @Currency = '{currency}'
SET @PayDocID ={paydocid}

SELECT * FROM (

	SELECT DM.DOCID,convert(varchar,DM.DOCNo) as [Invoice No.], convert(varchar,DateCompleted,111) as [Date], 
    dbo.fnFormatNumber(isnull([Total Invoiced],0)- isnull([Total Credited] ,0)) as [Total Invoiced],
    dbo.fnFormatNumber(isnull([Total Received],0))  as [Total Received],
    dbo.fnFormatNumber(isnull([Total Invoiced],0) - isnull([Total Credited] ,0) - isnull([Total Received],0)) as [Balance],
    dbo.fnFormatNumber(isnull(DP2.PaymentPortion,0)) as [Allocation]
	 FROM DEBTOR_Master DM 
	LEFT JOIN (SELECT  sum((PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(Tax,0) /100 + 1)) / isnull(roe,1)) as [Total Invoiced], DD.DocID FROM DEBTOR_DETAIL DD LEFT JOIN (SELECT DocID, ROE FROM DEBTOR_MASTER) DM ON DD.DocID = DM.DocID  WHERE isnull(ComponentOfLineID,0) = 0   group by DD.DocID ) DD
	ON DM.DocID= DD.DocID
	LEFT JOIN (SELECT Sum(PaymentPortion) as [Total Received], InvoiceDocID from DEBTOR_Payment where PaymentDocID <> @PayDocID Group By InvoiceDocID) DP
	ON DM.DocID = DP.InvoiceDocID
	LEFT JOIN (SELECT PaymentPortion, PaymentDocID, InvoiceDocID FROM DEBTOR_PAYMENT) DP2
	ON DM.DocID = DP2.InvoiceDocID AND DP2.PaymentDocID = @PayDocID
	LEFT JOIN (SELECT PreviousDocID, sum(isnull([Total Credited],0) / isnull(roe,1)) as [Total Credited]  FROM DEBTOR_MASTER DM
	        LEFT JOIN (SELECT  sum(PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(Tax,0) /100 + 1)) as [Total Credited], DocID FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 group by DocID ) DD
	        ON DM.DocID = dd.DocID
	        WHERE DM.Doctype = 'Credit Note'  AND DocStatus = 'Completed'
		Group by PreviousDocID) DC
	ON DM.DocID = DC.previousDocID
		WHERE 
	(DocType = 'Invoice' OR doctype = 'Supplier Invoice')
	AND DocStatus = 'Completed' 
	AND (isnull([Total Invoiced],0)-isnull([Total credited],0) - isnull([Total Received],0)  > 0)
	AND entityid = @EntityID
	AND isnull(DM.UseEC,0) =  @UseEC
	AND DM.Currency = @Currency
	
	UNION ALL
	
	--Opening balance line
	SELECT TOP 1 -1 as [DOCID], 'O/B', convert(varchar,DateCreated,111) as [Date], 
	dbo.fnFormatNumber((isnull(amtCurrent,0) +isnull(amt30,0) +isnull(amt60,0) +isnull(amt90,0) + isnull(amt120,0)) * -1  ) as [Opening Balance],
	dbo.fnFormatNumber(isnull([Total Received],0) ) as [Total Received],
	dbo.fnFormatNumber((isnull(amtCurrent,0) +isnull(amt30,0) +isnull(amt60,0) +isnull(amt90,0) + isnull(amt120,0)) * -1 - isnull([Total Received],0) ) as [Balance],
	dbo.fnFormatNumber(isnull(DP2.PaymentPortion,0)) as [Allocation]
	FROM AccOPENINGBALANCE OB
	LEFT JOIN (SELECT sum(PaymentPortion) as [Total Received], InvoiceDocID,Entityid from DEBTOR_Payment DPi
		 LEFT JOIN (SELECT docid, useec from DEBTOR_MASTER) DMi
		 on dpi.paymentdocid = dmi.docid
		 where isnull(DMi.useec,0) = @UseEC AND PaymentDocID <> @PayDocID
		 group by InvoiceDocID,Entityid ) DP
	ON -1 = DP.InvoiceDocID AND OB.EntityID = DP.Entityid
    LEFT JOIN (SELECT PaymentPortion, PaymentDocID, InvoiceDocID FROM DEBTOR_PAYMENT) DP2
    ON DP2.InvoiceDocID = -1 AND DP2.PaymentDocID = @PayDocID
	WHERE isnull(OB.UseEc,0) = @UseEC AND  OB.EntityID = @EntityID
)A
WHERE (cast(Balance as money) > 0 OR Cast(Allocation as money) > 0 )
ORDER BY DocID Asc




","0","","1","LRA-FUSION","0","0","fusion"
"39601","cv_Acc_DEBTOR_PAYMENT_Complete","","DECLARE @PayDocID as integer
SET @PayDocID = {paydocid}

SELECT 
DEBTOR_PaymentID, 
CASE DP.InvoiceDocID 
	WHEN -2 then 'Unallocated' 
	WHEN -1 then 'O/B' 
	ELSE convert(varchar,DM.DocNo) 
END as [Invoice No.], 
convert(varchar,CASE DP.InvoiceDocID 
	WHEN -2 then null
	WHEN -1 then OB.DateCreated 
	ELSE DM.datecompleted 
END,111) AS [Date],
dbo.fnFormatNumber(CASE DP.InvoiceDocID 
	when -2 then 0 
	when -1 then [TotalOB]
	ELSE [Total Invoiced] - isnull([Total Credited] ,0)
END) as [Total Invoiced],
dbo.fnFormatNumber(isnull([Total Received],0)) as [Total Received],
dbo.fnFormatNumber(CASE DP.InvoiceDocID 
	when -2 then 0 
	when -1 then isnull([TotalOB],0) - isnull([Total Received],0)
	ELSE round(([Total Invoiced]- isnull([Total Credited] ,0)) - isnull([Total Received],0) , 2)
END ) AS [Balance],
dbo.fnFormatNumber(DP.PaymentPortion ) as [Allocation]
FROM DEBTOR_PAYMENT DP
LEFT JOIN (SELECT DocID , DateCompleted , DocNo FROM DEBTOR_MASTER ) DM
ON DP.InvoiceDocID = DM.DocID
LEFT JOIN (SELECT * FROM DEBTOR_MASTER) DMP
ON DP.PaymentDocID = DMP.DocID
--Opening Balance
LEFT JOIN (SELECT DateCreated, -1 * sum(isnull(amtCurrent,0) + isnull(amt30,0) +isnull(amt60,0)+isnull(amt90,0)+isnull(amt120,0)) as [TotalOB], UseEC,EntityID FROM AccOpeningBalance Group BY UseEC,Entityid , datecreated) OB
ON isnull(DMP.UseEc,0) = isnull(OB.UseEC,0) and DP.InvoiceDocID = -1 AND DMP.Entityid = OB.Entityid
--Invoiced
LEFT JOIN (SELECT sum((PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(Tax,0) / 100 + 1)) / isnull(ROE,1)) as [Total Invoiced], DD.DocID FROM DEBTOR_DETAIL DD LEFT JOIN (SELECT DocID, ROE FROM DEBTOR_MASTER) DM ON DD.DocID = DM.DocID where isnull(ComponentOfLineID,0) = 0 group by DD.DocID ) DD ON DM.DocID= DD.DocID
--Credited
LEFT JOIN (SELECT PreviousDocID, sum(isnull([Total Credited],0) / isnull(ROE,1)) as [Total Credited]  FROM DEBTOR_MASTER DM
	        LEFT JOIN (SELECT  sum(PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(Tax,0) / 100 + 1)) as [Total Credited], DocID FROM DEBTOR_DETAIL where isnull(ComponentOfLineID,0) = 0 group by DocID ) DD
	        ON DM.DocID = dd.DocID
	        WHERE DM.Doctype = 'Credit Note'  AND DocStatus = 'Completed'
		Group by PreviousDocID) DC
ON DM.DocID = DC.previousDocID
--Received
LEFT JOIN (SELECT Sum(PaymentPortion) as [Total Received], InvoiceDocID, Entityid  from DEBTOR_Payment WHERE InvoiceDocID <> -2 Group By InvoiceDocID, Entityid) DPR
ON DP.InvoiceDocID = DPR.InvoiceDocID AND DP.EntityID = DPR.Entityid

WHERE DP.PaymentDocID = @PayDocID
ORDER BY DP.DEBTOR_PaymentID","0","","1","LRA-FUSION","0","0","fusion"
"39602","CV_Acc_OpeningBalancesMan","","SELECT Distinct 'EN' + convert(varchar,e.EntityID),Case when isnull(isSupplier,0) = 1 then 'Supplier' ELSE 'Client' END as [Type], E.Accountnum as [Acc. No.], Company as [Entity], [Current], [30 Days], [60 Days], [90 Days], [120 Days] from Entity E
LEFT JOIN (SELECT EntityID,UseEC, convert(varchar,DateCreated, 103) as [Date Created],AmtCurrent as [Current], amt30 as [30 Days], amt60 as [60 Days], amt90 as [90 Days], amt120 as [120 Days] FROM AccOPENINGBALANCE WHERE isnull(UseEC,0) =0) OB
ON   E.entityid = ob.entityid
where Company like '%<%replace%>%'


Order by Entity","0","","1","LRA-FUSION","0","0","fusion"
"39603","cv_Acc_Projects","","SELECT ProjectID, isnull(Projectnum,convert(varchar,ProjectID)) + ' - ' + ISNULL(ProjectName,'') FROM Projects
WHERE EntityID = {entityid}
and (isnull(isComplete,0) = 0  OR Projectid = {projectid})
Order By ProjectID Desc","0","","1","LRA-FUSION","0","0","fusion"
"39604","cv_Acc_Modules","","SELECT distinct moduleid, moduleName FROM Modules 
WHERE ProjectID = {projectid}","0","","1","LRA-FUSION","0","0","fusion"
"39605","CV_Acc_BatchInvoiceMan","","Declare @start as datetime
Declare @end as datetime
set @start = '{start}'
set @end = '{end}'


SELECT TS.Entityid, E.Company, sum(isnull(hoursdone,0)) as [Total Hours]
FROM Timesheet TS
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON TS.EntityID = E.Entityid
LEFT JOIN (SELECT DocID, isnull(TimesheetID,0) as [Timesheetid] FROM DEBTOR_DETAIL) DD
ON TS.Timesheetid = DD.TimesheetID
where  isnull(invDate, timesheetdate) between @Start and @end
    AND outofspec > 0  --Don't ask me. Someone got a bit confused when making the check boxes, I think.
    AND DD.DocID is null
Group by TS.EntityID, E.Company
ORDER By E.Company

","0","","1","LRA-FUSION","0","0","fusion"
"39606","cv_AccBatchInvoiceDetail","","DECLARE @Start as datetime
DECLARE @End as datetime
Declare @VAT as float
Declare @EntityID as int
Declare @DocID as int
Set @DocID = {docid}
set @Start = '{start}'
set @End = '{end}'
SET @EntityID = {entityid}
Set @VAT = (case (SELECT Top 1 isnull(isvatexempt,0) from entity where entityID = @Entityid ) when 0 then (SELECT TOP 1 (OptVal /100) + 1 FROM Options WHERE Optname = 'VAT_PER') else 1 end)


SELECT @docID,StockID, StockCode,StockDescription,Qty, PriceEx * Rate as [PriceEx] , (PriceEx * rate * @Vat) as [priceIncl], (PriceEx * rate * @Vat * qty) as [TotalIncl], Timesheetid, null as [DisburseID],
null as [RetainerID],ProjectStatus, convert(varchar,timesheetdate,103) as [TimesheetDate] FROM
(
SELECT -1 as StockID,'TS001' as [StockCode], 
u.Consultant /*+ ' - ' + isnull(P.ProjectName,'')*/ + ' - ' + isnull(ModuleName,'') as [StockDescription],
cast(round(hoursdone,2)as money) as [Qty],Timesheetid,isnull(Rate,1) as [Rate],P.ProjectID,TS.ProjectStatus,TS.timesheetDate,
Case 
       When Position = 'Senior Partner/Director' and isnull(expert,0)=1 then isnull(PartnerrateExpert,0) -  (isnull(PartnerrateExpert,0)  * isnull(discount,0)/100)
    When Position = 'Senior Partner/Director' and isnull(expert,0)=0 then isnull(PartnerrateNormal,0) -  (isnull(PartnerrateNormal,0)  * isnull(discount,0)/100)
    WHEN Position = 'Special Consultant' and isnull(expert,0)=1 then isnull(specialrateExpert,0)  -  (isnull(SpecialrateExpert,0)  * isnull(discount,0)/100)
    WHEN Position = 'Special Consultant' and isnull(expert,0)=0 then isnull(specialratenormal,0)  -  (isnull(SpecialrateNormal,0)  * isnull(discount,0)/100)
    WHEN Position = 'Engineer/Quantity Surveyor/Estimator' and isnull(expert,0)=1 then isnull(engineerExpert,0) -  (isnull(EngineerExpert,0)  * isnull(discount,0)/100)
    WHEN Position = 'Engineer/Quantity Surveyor/Estimator' and isnull(expert,0)=0 then isnull(engineernormal,0) -  (isnull(EngineerNormal,0)  * isnull(discount,0)/100)
    WHEN Position = 'Assistant (Research) Consultant' then isnull(assistantnormal,0) -  (isnull(AssistantNormal,0)  * isnull(discount,0)/100)
    WHEN Position = 'Legal Consultant' then isnull(legalnormal,0) -  (isnull(LegalNormal,0)  * isnull(discount,0)/100)
    WHEN Position = 'Administrative Assistant' then isnull(AdminAssNormal,0) -  (isnull(AdminAssNormal,0)  * isnull(discount,0)/100)
    WHEN Position = 'Electronic Scanning Identification' then isnull(identificationnormal,0) -  (isnull(IdentificationNormal,0)  * isnull(discount,0)/100)
    WHEN Position = 'Electronic Scanning Indexing' then isnull(indexingnormal,0)  -  (isnull(IndexingNormal,0)  * isnull(discount,0)/100)
    WHEN Position = 'Specialized Typing' then isnull(typingnormal,0) -  (isnull(TypingNormal,0)  * isnull(discount,0)/100)
    ELSE '0'
End as [PriceEx]
From Timesheet TS
LEFT JOIN (SELECT ProjectID, ProjectName,Currency FROM Projects) P 
ON TS.ProjectID = P.ProjectID
LEFT JOIN (SELECT ModuleID, ModuleName FROM Modules) M 
ON TS.ModuleID = M.ModuleID
LEFT JOIN (SELECT UserID, Position, isnull(FirstName,'') + ' ' + isnull(surname,'') as [Consultant] From Users) U
ON ts.Developerid = u.userid
LEFT JOIN (SELECT * FROM Projects) PR
ON P.ProjectID = PR.ProjectID
LEFT JOIN (SELECT ExchangeRateID, Rate,Currency FROM ExchangeRates) ER
ON P.Currency =  ER.Exchangerateid
LEFT JOIN (SELECT LineID, Timesheetid as [Matchup] FROM DEBTOR_DETAIL) DD
ON TS.Timesheetid = DD.[Matchup]

where TS.entityid = @EntityID
AND outofspec > 0 
AND InvoiceID is null
and DD.LineID is null

AND isnull(invdate,timesheetdate) between @start and @end
)A
LEFT JOIN (SELECT DocID, ProjectID FROM DEBTOR_MASTER) DM
ON @docID = DM.DocID
where (a.projectid = DM.ProjectID OR DM.ProjectID is null) 
ORDER BY stockid,PriceEx Desc, StockDescription

","0","","1","LRA-FUSION","0","0","fusion"
"39607","CV_Acc_BatchDisburseMan","","Declare @start as datetime
Declare @end as datetime
set @start = '{start}'
set @end = '{end}'
SELECT Distinct d.EntityID, E.Company,convert(varchar,cast(sum(totalincl) as money),1) as [Total Value], count(accDisburseID) as [# Disbursements] 
From AccDisbursements D
LEFT JOIN (SELECT EntityID, Company From Entity) E
ON D.EntityID = E.EntityID
LEFT JOIN (SELECT DocID, isnull(DisburseID,0) as [DisBurseid] FROM DEBTOR_DETAIL) DD
ON D.AccDisburseID = DD.DisBurseID
LEFT JOIN (SELECT DocID, ProjectID FROM DEBTOR_MASTER) DM
ON @docID = DM.DocID
WHERE DisbDate between @Start and @end
    AND DD.DocID is null
    AND (D.JobID = DM.ProjectID OR DM.ProjectID is null) 
Group by D.EntityID,E.Company
Order By E.Company
","0","","1","LRA-FUSION","0","0","fusion"
"39608","cv_Acc_Print_Detailed_Invoice","","Declare @DocID  as integer
Declare @CommentsBelow as bit
Declare @ShowComponents as integer
Declare @HideZeros as bit
Declare @PrintComponentsDQP as Bit
Declare @PrintComponentsDQ as Bit
Declare @PrintComponentsD as Bit

SET @DocID = {docid}
SET @CommentsBelow  = isnull((SELECT Top 1 Selected from crmSetup where variable = 'CommentsBelow'),0)
SET @ShowComponents = isnull((SELECT top 1 Selected  FROM CRMSetup WHERE [Description]  = 'AccPrint' AND Variable = 'PrintComponents' and custValue = (SELECT Top 1 DocType FROM DEBTOR_MASTER where DocID = @DocID)),0)
SET @HideZeros = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'HideZeroValues')


SET @PrintComponentsDQP = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'PrintComponentsDQP')
SET @PrintComponentsDQ = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'PrintComponentsDQ')
SET @PrintComponentsD = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'PrintComponentsD')



--Put results into a tempory table so Line Numbers can be added
SET ANSI_WARNINGS OFF
SET NoCount ON
SELECT IDENTITY(int, 1,1) AS [Line], *
INTO #Temp
FROM

(
	SELECT 
	LineId, 
	isnull(ESC.EntityStockCode,StockCode) as [Code], 
	isnull(ESC.EntityStockDescription,StockDescription)  as [Description],
	Comments,
	LL.Value as [Container],
	convert(varchar,round((Qty),4))  as [Qty], 
	CASE WHEN @HideZeros = 1 AND (CostPriceEx / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber(CostPriceEx / isnull(DM.ROE,1)) END as [Cost Price],
	CASE WHEN @HideZeros = 1 AND (PriceEx / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber(PriceEx / isnull(DM.ROE,1)) END as [Price Ex. VAT],
	CASE WHEN @HideZeros = 1 AND ((PriceEx) / isnull(DM.ROE,1) * ((100- isnull(DiscPerc,0)) /100)  * Tax/100 ) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx) / isnull(DM.ROE,1) * ((100- isnull(DiscPerc,0)) /100)  * Tax/100 ) END as [Unit VAT], 
	CASE WHEN @HideZeros = 1 AND ((PriceEx) / isnull(DM.ROE,1) * ((100- isnull(DiscPerc,0)) /100) * (1 + Tax/100)  ) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx) / isnull(DM.ROE,1) * ((100- isnull(DiscPerc,0)) /100) * (1 + Tax/100)  ) END as [Price Incl. VAT],
	CASE WHEN @HideZeros = 1 AND ((Qty * PriceEx) / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) ) END as [Total Ex. VAT],
	CASE WHEN @HideZeros = 1 AND ((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 ) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 ) END as [VAT],
	CASE WHEN @HideZeros = 1 AND ((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) * ((100- isnull(DiscPerc,0)) /100) * (1 + Tax/100) ) END as [Total Incl],
	dbo.fnFormatNumber(isnull(discperc,0)) as [Discount%],
	--For IMD Bula only!
	dbo.fnFormatNumber((CostPriceEx * (isnull(discperc,0))/100)) as [Unit Discount],
	CASE WHEN @HideZeros = 1 AND ((PriceEx * Qty * (isnull(discperc,0))/100)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx * Qty * (isnull(discperc,0))/100)) END as [Discount],
	CASE WHEN @HideZeros = 1 AND ((PriceEx * Qty * (isnull(WastePerc,0))/100)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx * Qty * (isnull(WastePerc,0))/100)) END as [Wastage],
	isnull(BarCode,'') as [Barcode],
	isnull(SB.Value,'') as [Sold In],
	1 as [Rank],
	CASE WHEN isnull(DD.Comments,'') = '' THEN isnull(ESC.EntityStockDescription,StockDescription) ELSE DD.Comments END  as [Comments Instead Of Description],
	P.ProjectNum + ' - ' + P.ProjectName As [Project],
	R.StartDate As [Rental Start Date],
	R.EndDate As [Rental End Date],
	DD.GroupName as [Group Name],
	--For IMD Bula only!
	dbo.fnFormatNumber(isnull(DD.MarkupPerc,0)) + '%' as [Markup%],
	--For IMD Bula only!
	dbo.fnFormatNumber(isnull(DD.MarkupPerc,0)/100 * (CostPriceEx * ((100 - isnull(Discperc,0))/100) / isnull(DM.ROE,1)) ) as [Markup Amt]
	FROM DEBTOR_DETAIL DD
	LEFT JOIN (SELECT StockID , BarCode, SoldBy FROM AccStock ) ACC
		ON DD.StockID = ACC.StockID 
	LEFT JOIN (SELECT * FROM Lookup) SB 
		ON ACC.SoldBy = SB.LookupID
	LEFT JOIN (SELECT DocID , ROE, EntityID, ProjectID FROM DEBTOR_MASTER ) DM
		ON DD.DocID = DM.DocID 
	LEFT JOIN (SELECT ProjectNum,ProjectName,ProjectID FROM PROJECTS) AS P
		ON P.ProjectID = isnull(DD.ProjectID,DM.ProjectID)
	LEFT JOIN (SELECT * FROM EntityStockCode) ESC
		ON DD.StockID = ESC.StockID AND DM.EntityID = ESC.EntityID
	LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LL 
		ON LL.LinkLookupID = DD.ContainerID
	LEFT JOIN (Select StartDate,EndDate,RentalID from RENTAL) R
		on R.RentalID = DD.RentalLineID
	WHERE DD.DocID = @docid
	AND isnull(ComponentOfLineID,0) = 0
	AND (isnull(ComponentOfLineID,0) = @ShowComponents OR @ShowComponents = 1) 
    

UNION ALL
--Components
	SELECT 
	LineId, 
	'-    ' + isnull(ESC.EntityStockCode,StockCode) as [Code], 
	CASE WHEN @PrintComponentsDQ = 1 OR @PrintComponentsD = 1  OR @PrintComponentsDQP = 1 THEN
		'-    ' + isnull(ESC.EntityStockDescription,StockDescription)  
	ELSE
		''
	END AS [Description],
	Comments,
	LL.Value as [Container],
	CASE WHEN @PrintComponentsDQ = 1 OR @PrintComponentsDQP = 1 THEN
		convert(varchar,round((Qty),4))  
	ELSE
		''
	END as [Qty], 
	CASE WHEN @PrintComponentsDQP = 1 THEN
		CASE WHEN @HideZeros = 1 AND (CostPriceEx / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber(CostPriceEx / isnull(DM.ROE,1)) END
	ELSE
		''
	END as [Cost Price],
	CASE WHEN @PrintComponentsDQP = 1 THEN
		CASE WHEN @HideZeros = 1 AND (PriceEx / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber(PriceEx / isnull(DM.ROE,1)) END
	ELSE
		''
	END as [Price Ex. VAT],
	CASE WHEN @PrintComponentsDQP = 1 THEN
		CASE WHEN @HideZeros = 1 AND (PriceEx / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx) / isnull(DM.ROE,1) *Tax/100 ) END
	ELSE
		''
	END as [Unit VAT], 
	CASE WHEN @PrintComponentsDQP = 1 THEN
		CASE WHEN @HideZeros = 1 AND ((PriceEx) / isnull(DM.ROE,1) *Tax/100 + (PriceEx) / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx) / isnull(DM.ROE,1) *Tax/100 + (PriceEx) / isnull(DM.ROE,1) ) END
	ELSE
		''
	END as [Price Incl. VAT],
	CASE WHEN @PrintComponentsDQP = 1 THEN
		CASE WHEN @HideZeros = 1 AND ((Qty * PriceEx) / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) ) END 
	ELSE
		''
	END as [Total Ex. VAT],
	CASE WHEN @PrintComponentsDQP = 1 THEN
		CASE WHEN @HideZeros = 1 AND ((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 ) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 ) END 
	ELSE
		''
	END as [VAT],
	CASE WHEN @PrintComponentsDQP = 1 THEN
		CASE WHEN @HideZeros = 1 AND ((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1) ) END 
	ELSE
		''
	END as [Total Incl],
	CASE WHEN @PrintComponentsDQP = 1 THEN
		dbo.fnFormatNumber(isnull(discperc,0)) 
	ELSE
		''
	END as [Discount%],
	'' as [Unit Discount],
	CASE WHEN @PrintComponentsDQP = 1 THEN
		CASE WHEN @HideZeros = 1 AND ((PriceEx * Qty * (isnull(discperc,0))/100)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx * Qty * (isnull(discperc,0))/100)) END
	ELSE
		''
	END as [Discount],
	CASE WHEN @PrintComponentsDQP = 1 THEN
		CASE WHEN @HideZeros = 1 AND ((PriceEx * Qty * (isnull(WastePerc,0))/100)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx * Qty * (isnull(WastePerc,0))/100)) END
	ELSE
		''
	END as [Wastage],
	'' as [BarCode],
	'' as [Sold In],
	1 as [Rank],
	CASE WHEN isnull(DD.Comments,'') = '' THEN isnull(ESC.EntityStockDescription,StockDescription) ELSE DD.Comments END  as [Comments Instead Of Description],
	P.ProjectNum + ' - ' + P.ProjectName As [Project],
	'' As [Rental Start Date],
	'' As [Rental End Date],
	'' as [Group Name],'' as [Markup],'' as [Markup Amt]
	FROM DEBTOR_DETAIL DD
	LEFT JOIN (SELECT DocID , ROE, EntityID, ProjectID FROM DEBTOR_MASTER ) DM
	ON DD.DocID = DM.DocID 
        LEFT JOIN (SELECT ProjectNum,ProjectName,ProjectID FROM PROJECTS) AS P
	ON P.ProjectID = isnull(DD.ProjectID,DM.ProjectID)
	LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LL 
		ON LL.LinkLookupID = DD.ContainerID
	LEFT JOIN (SELECT * FROM EntityStockCode) ESC
		ON DD.StockID = ESC.StockID AND DM.EntityID = ESC.EntityID
	WHERE DD.DocID = @docid
	AND isnull(ComponentOfLineID,0) <> 0
	AND (isnull(ComponentOfLineID,0) = @ShowComponents OR @ShowComponents = 1)  
    
    
UNION ALL

 
    SELECT 
    LineId, 
    '' as [Code],
    '-  ' + Comments as [Description],
    '' as [Comments], 
    '' as [Container], 
    '' as [Qty], 
    '' as [Cost Price],
    '' as [Price Ex. VAT],
    '' as [Unit VAT],
    '' as [Price Incl. VAT], 
    '' as [Total Ex. VAT],
    '' as [VAT],
    '' as [Total Incl],
    '' as [Discount%],
    '' as [Unit Discount],
    '' as [Discount],
    '' as [Wastage],    
    '' as [BarCode],	
	'' as [Sold In],    
    2 as [Rank],
    CASE WHEN isnull(DD.Comments,'') = '' THEN StockDescription ELSE DD.Comments END  as [Comments Instead Of Description],
    '' as Project,
    '' as [Rental Start Date],
    '' As [Rental End Date],
    '' as [Group Name],
    '' as [Markup],
    '' as [Markup Amt]
    FROM DEBTOR_DETAIL DD
    LEFT JOIN (SELECT DocID , ROE FROM DEBTOR_MASTER ) DM
    ON DD.DocID = DM.DocID 
    WHERE DD.DocID = @docid
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
    AND (isnull(ComponentOfLineID,0) = @ShowComponents OR @ShowComponents = 1) 
    
    ) A
ORDER By Lineid,Rank

{select}  #Temp


DROP TABLE #Temp
SET NoCount OFF","0","","1","LRA-FUSION","0","0","fusion"
"39609","cv_Acc_Print_Consolidated_Invoice","","Declare @docID  as integer
Set @DocID = {docid}

--FUSION SOFTWARE'S format:******************************************************************
/*SELECT StockCode as [Code], round(Sum(Qty),4)  as [Unit],StockDescription as [Description], 
convert(varchar,cast(PriceEx as money),1) as [Unit Price], 
convert(varchar,cast(Sum(Qty) * PriceEx  as money),1) as [Total Price]*/
--EVERYONE ELSE'S format:********************************************************************
SELECT StockDescription as [Description], round(Sum(Qty),4)  as [Qty], 
convert(varchar,cast(PriceEx as money),1) as [Price Ex. VAT], 
convert(varchar,cast(Sum(Qty) * PriceEx  as money),1) as [Total Ex. VAT],
isnull(BarCode,'') as [Barcode],
isnull(SoldBy,'') as [DSold In]
--*******************************************************************************************
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID , ROE FROM DEBTOR_MASTER ) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT StockID , BarCode, SoldBy FROM AccStock ) ACC
	ON DD.StockID = ACC.StockID 
	LEFT JOIN Lookup SB ON SB.LookupID = ACC.SoldBy 
WHERE DD.DocID = @docid
Group By StockCode, StockDescription, PriceEx, ROE,BarCode,SoldBy
ORDER By StockDescription
","0","","1","LRA-FUSION","0","0","fusion"
"39610","cv_Acc_RatePrimaryHours","","declare @ThisDate as datetime
set @ThisDate = '{datecreated}'
SELECT ((datediff(month,OBDate,@thisdate) * (PrimaryRateDuration))+ isnull(OB,0)) - (case when DD.DateCreated is null then 0 else isnull(sum(RR.HoursUsed),0) end)
FROM Retainer  R
LEFT JOIN (SELECT RetainerID, Timesheetid, Qty, HoursUsed FROM AccResetRetainer )RR
ON RR.RetainerID = R.Retainerid
LEFT JOIN (SELECT Qty,Timesheetid,DM.DateCreated FROM DEBTOR_DETAIL DD1
	   LEFT JOIN (SELECT DocID, DateCreated FROM DEBTOR_MASTER) DM
	   ON DD1.DocID = DM.DocID) DD
ON RR.Timesheetid = DD.Timesheetid AND (DD.DateCreated between R.OBDate AND @thisDate)
where R.retainerid = {retid}
AND R.OBdate < @thisdate
Group by R.OBDate, R.OB,R.PrimaryRateDuration,R.SecondaryRateDuration,DateCreated
","0","","1","LRA-FUSION","0","0","fusion"
"39611","cv_Acc_CreditorsControl_Man","","
DECLARE @Date as Datetime
DECLARE @Period as integer
DECLARE @IsSupplier as bit
Set @Date = '{date}'
Set @IsSupplier =1

SELECT B.Entityid + '#' + Currency,Account,Company as [Supplier],[AccContact] as [Contact],E.Switchboard as [Phone], E.Email,ll.value as [Account Status], Currency, 
     convert(varchar,cast(Sum(isnull([Current],0)) as money),1) as [Current], 
     convert(varchar,cast(sum(isnull([30days],0)) as money),1) as [30 Days], 
     convert(varchar,cast(Sum(isnull([60days],0)) as money),1) as [60 Days], 
     convert(varchar,cast(sum(isnull([90days],0)) as money),1) as [90 Days], 
     convert(varchar,cast(sum(isnull([120days],0)) as money),1) as [120+ Days], 
     convert(varchar,cast(Sum(isnull([Current],0)) + sum(isnull([30days],0)) + Sum(isnull([60days],0)) + sum(isnull([90days],0)) + sum(isnull([120days],0)) as money),1) as [Outstanding Balance]

FROM (
	SELECT Entityid,Account, Company, DivisionID, Currency,EntityCategoryID,SalesConsID, 
		Case When DateCompleted >= dateadd(d,-30,@Date)  then Totalincl End as [Current],
		Case When DateCompleted Between dateadd(d,-60,@Date) And dateadd(d,-30,@Date) then Totalincl End as [30Days], 
		Case When DateCompleted Between dateadd(d,-90,@Date) And dateadd(d,-60,@Date) then Totalincl End as [60Days], 
		Case When DateCompleted Between dateadd(d,-120,@Date) And dateadd(d,-90,@Date) then Totalincl End as [90Days],
		Case When DateCompleted < dateadd(d,-120,@Date) then Totalincl  End as [120Days] 	
		FROM (
			--Supplier Invoices
			SELECT DM.DocID, DM.DocType, Case when isnull(DM.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(EH.EntityID,DM.Entityid)) As [EntityID] , 
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], TotalIncl /*/ isnull(DM.ROE,1)*/ as [TotalIncl], 
			DateCompleted,DivisionID,ROE,Currency,
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID], isnull(EH.SalesConsID,E.SalesConsID) as [SalesConsID]
			FROM CREDITOR_MASTER DM
			LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM CREDITOR_DETAIL /*WHERE isnull(ComponentOfLineID,0) = 0*/ Group by docid) DD
			ON DM.DocID = DD.DocID
			LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID, AlternateCompanyID FROM Entity) E
			ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT Entityid, Accountnum, Company	,EntityCategoryID,SalesConsID FROM Entity) EH
			ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
			ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
			LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
			ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
			WHERE DocType in ('Invoice','Supplier Invoice') And DocStatus = 'Completed' 
			AND DM.DateCompleted <@Date 
			AND DM.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01')

			UNION ALL

			--Inter-Account Transfers
			SELECT LAM.DocID, CASE WHEN isnull(LAM.IsInterAccountTransfer,0) = 1 THEN 'Inter-Account Transfer' WHEN isnull(LAM.IsInterLedgerTransfer,0) = 1 THEN 'Inter-Ledger Transfer' END as [Doc. Type],
			'EN' + Convert(varchar,isnull(EH.EntityID,LAD.EntityID)),
			isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) as [Account], isnull(EH.Company,E.Company),
			(isnull(Credit,0) - isnull(Debit,0)) / isnull(LAM.ROE,1),LAD.AdjustDate, LAD.DivisionID,isnull(LAM.ROE,1) as [ROE], 
			isnull(LAM.Currency,'') as [Currency],
			isnull(EH.EntityCategoryID,E.EntityCategoryID),isnull(EH.SalesConsID,E.SalesConsID)
			FROM LEDGER_ADJUST_MASTER LAM
			LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD 
			ON LAM.DocID= LAD.DocID
			LEFT JOIN (SELECT EntityID,AccountNum, Company, IsSupplier, EntityCategoryID, SalesConsID,AlternateCompanyID FROM Entity) E
			ON LAD.EntityID = E.EntityID
			LEFT JOIN (SELECT EntityID,AccountNum, Company, IsSupplier, EntityCategoryID, SalesConsID FROM Entity) EH
			ON E.AlternateCompanyID = EH.EntityID
			WHERE isnull(LAD.EntityID,0) <> 0
			AND isnull(E.IsSupplier,0)  = @IsSupplier
			AND isnull(LAM.IsComplete,0) = 1
			AND LAD.AdjustDate <@Date 

			Union all
        
			--Allocated Credit Notes
			SELECT DM.DocID, DM.DocType, Case when isnull(DM.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(EH.EntityID,DM.Entityid)) As [EntityID] , 
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
			(-1) *  (TotalIncl /*/ isnull(DM.ROE,1)*/) as [TotalIncl], 
			Case WHEN PrevCompleted is null then DM.DateCompleted Else PrevCompleted END as [DateCompleted],DivisionID,
			DM.ROE,DM.Currency, 
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID],isnull(EH.SalesConsID,E.SalesConsID)
			FROM CREDITOR_MASTER DM
			LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM CREDITOR_DETAIL /*WHERE isnull(ComponentOfLineID,0) = 0*/ group by docid) DD
			ON DM.DocID = DD.DocID
			LEFT JOIN (SELECT DocID, DateCompleted as [PrevCompleted] FROM CREDITOR_MASTER ) DM2
			ON DM.PreviousDocid = Dm2.DocID
			LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
			ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID FROM Entity) EH
			ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
			ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
			LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
			ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
			WHERE DocType in ('Credit Note', 'Supplier Credit Note') And DocStatus = 'Completed' and isnull(DM.Previousdocid,0) <> 0
			And DM.DateCompleted <@date 
			AND DM.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01')

			UNION ALL 

			--Un-Allocated Credit Notes
			SELECT DM.DocID, DM.DocType, Case when isnull(DM.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(EH.EntityID,DM.Entityid)) As [EntityID] , 
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
			(-1) * (TotalIncl /*/ isnull(DM.ROE,1)*/) as [TotalIncl],
			Case WHEN PrevCompleted is null then DM.DateCompleted Else PrevCompleted END as [DateCompleted],DivisionID,
			DM.ROE,DM.Currency,
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID], isnull(EH.SalesConsID,E.SalesConsID)
			FROM CREDITOR_MASTER DM
			LEFT JOIN (SELECT DocID,Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM CREDITOR_DETAIL /*where isnull(ComponentOfLineID,0) = 0*/ group by docid) DD
			ON DM.DocID = DD.DocID
			LEFT JOIN (SELECT DocID, DateCompleted as [PrevCompleted] FROM CREDITOR_MASTER ) DM2
			ON DM.PreviousDocid = Dm2.DocID
			LEFT JOIN (SELECT Entityid, Accountnum,Company,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
			ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT Entityid, Accountnum,Company,EntityCategoryID,SalesConsID FROM Entity) EH
			ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
			ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
			LEFT JOIN (SELECT PaymentDocID, sum(PaymentPortion) as [Allocated] FROM CREDITOR_PAYMENT group by PaymentDocID) DP
			ON DM.DocID = DP.PaymentDocID 
			LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
			ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
			WHERE DocType in ('Credit Note','Supplier Credit Note') And DocStatus = 'Completed' and isnull(DM.Previousdocid,0) = 0
			and DM.DateCompleted < @Date  
			AND DM.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01')        

			Union all

			--Payments
			SELECT DM.PaymentDocID, 'Supplier Payment', Case when isnull(DM3.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(EH.EntityID,DM.Entityid)) As [EntityID] , 
			Case when isnull(DM3.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
			Case when isnull(DM3.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
			(-1) * (PaymentPortion /*/ isnull(DM3.ROE,1)*/ ) as [TotalIncl], 
			Case WHEN PrevCompleted is null then DM3.DateCompleted Else PrevCompleted END as [DateCompleted], DM3.DivisionID,
			DM3.ROE,DM3.Currency,
			Case when isnull(DM3.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID],
			isnull(EH.SalesConsID,E.SalesConsID)
			FROM CREDITOR_PAYMENT DM
			LEFT JOIN (SELECT DocID, DateCompleted as [PrevCompleted],DivisionID FROM CREDITOR_MASTER ) DM2
			ON DM.InvoiceDocID = Dm2.DocID
			LEFT JOIN (SELECT DocID, DateCompleted,DocType,EntityID,UseEC,DivisionID,ROE,Currency,Period FROM CREDITOR_MASTER) DM3
			ON DM.PaymentDocID = DM3.DocID
			LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
			ON DM3.EntityID = E.EntityID AND isnull(DM3.UseEC,0) = 0
			LEFT JOIN (SELECT Entityid, Accountnum,Company,EntityCategoryID,SalesConsID FROM Entity) EH
			ON E.AlternateCompanyID = EH.EntityID AND isnull(DM3.UseEC,0) = 0
			LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
			ON DM3.EntityID = EC.EntityContactID AND isnull(DM3.UseEC,0) = 1
			LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
			ON DM3.Entityid = AOB.EntityID AND isnull(DM3.UseEC,0) = isnull(AOB.UseEC,0) AND DM3.DivisionID = AOB.DivID
			where InvoiceDocID <> -1 and dm3.doctype in ('Payment Receipt', 'Supplier Payment')
			and dm3.datecompleted < @date  
			AND DM3.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01') 

			Union all


			-- 120 Day OB Payments
			SELECT  OB.EntityID, 'Supplier Payment',
			'EN' + CONVERT(Varchar,OB.EntityID) as [ID],isnull(E.AccountNum,E.EntityID)  as [Account],E.Company,
			-CASE when isnull(-1 * Amt120,0) <= isnull(Paid,0) THEN  isnull(-1 * Amt120,0) 
			ELSE	
				CASE WHEN isnull(-1 * Amt120,0) > isnull(Paid,0) AND isnull(Paid,0) > 0 THEN isnull(Paid,0) END
			END as [TotalIncl],
			dateadd(d,-120,datecreated) as [DateCompleted], OB.DivisionID , OB.ROE, OB.Currency,E.EntityCategoryID,E.SalesconsID
			FROM AccOPENINGBALANCE OB
			LEFT JOIN (SELECT EntityID, SUM(PaymentPortion) as [Paid] FROM CREDITOR_PAYMENT DPi
					LEFT JOIN (SELECT DocID, DateCompleted, Period FROM CREDITOR_MASTER) DMi
					ON DPi.PaymentDocID = DMi.DocID
					where InvoiceDocID = -1 AND DMi.DateCompleted < @Date    Group by Entityid) DP
			ON OB.Entityid = DP.EntityID
			LEFT JOIN (SELECT EntityID, Company, Accountnum, IsSupplier,EntityCategoryID,SalesconsID  FROM Entity) E
			ON OB.Entityid  = E.EntityID
			WHERE isnull(Paid,0) > 0 AND ISNULL(E.IsSupplier,0) = @IsSupplier AND dateadd(d,-120,datecreated) < @Date

			UNION ALL

			-- 90 Day OB Payments
			SELECT  OB.EntityID, 'Supplier Payment',
			'EN' + CONVERT(Varchar,OB.EntityID) as [ID],isnull(E.AccountNum,E.EntityID) as [Account],E.Company,
			-CASE when isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) <= isnull(Paid,0) THEN  isnull(-1 * Amt90,0) 
			ELSE CASE WHEN isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0)  > isnull(Paid,0) AND isnull(Paid,0) > isnull(-1 * Amt120,0) THEN isnull(Paid,0) - isnull(-1 * Amt120,0) END
			END as [TotalIncl],
			dateadd(d,-90,datecreated) as [DateCompleted], OB.DivisionID , OB.ROE, OB.Currency,E.EntityCategoryID,E.SalesconsID
			FROM AccOPENINGBALANCE OB
			LEFT JOIN (SELECT EntityID, SUM(PaymentPortion) as [Paid] FROM CREDITOR_PAYMENT DPi
					LEFT JOIN (SELECT DocID, DateCompleted, Period FROM CREDITOR_MASTER) DMi
					ON DPi.PaymentDocID = DMi.DocID
					where InvoiceDocID = -1 AND DMi.DateCompleted < @Date  Group by Entityid) DP
			ON OB.Entityid = DP.EntityID
			LEFT JOIN (SELECT EntityID, Company, Accountnum, IsSupplier,EntityCategoryID,SalesconsID  FROM Entity) E
			ON OB.Entityid  = E.EntityID
			WHERE isnull(Paid,0) > 0 AND ISNULL(E.IsSupplier,0) = @IsSupplier AND dateadd(d,-90,datecreated) < @Date

			UNION ALL

			-- 60 Day OB Payments
			SELECT  OB.EntityID, 'Supplier Payment',
			'EN' + CONVERT(Varchar,OB.EntityID) as [ID],isnull(E.AccountNum,E.EntityID) as [Account],E.Company,
			-CASE when isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) <= isnull(Paid,0) THEN  isnull(-1 * Amt60,0) 
			ELSE CASE WHEN isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) > isnull(Paid,0) AND isnull(Paid,0) > isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) THEN isnull(Paid,0) - isnull(-1 * Amt120,0)  - isnull(-1 * Amt90,0) END
			END as [TotalIncl],
			dateadd(d,-60,datecreated) as [DateCompleted], OB.DivisionID , OB.ROE, OB.Currency,E.EntityCategoryID,E.SalesconsID
			FROM AccOPENINGBALANCE OB
			LEFT JOIN (SELECT EntityID, SUM(PaymentPortion) as [Paid] FROM CREDITOR_PAYMENT DPi
					LEFT JOIN (SELECT DocID, DateCompleted, Period FROM CREDITOR_MASTER) DMi
					ON DPi.PaymentDocID = DMi.DocID
					where InvoiceDocID = -1 AND DMi.DateCompleted < @Date  Group by Entityid) DP
			ON OB.Entityid = DP.EntityID
			LEFT JOIN (SELECT EntityID, Company, Accountnum, IsSupplier,EntityCategoryID,SalesconsID  FROM Entity) E
			ON OB.Entityid  = E.EntityID
			WHERE isnull(Paid,0) > 0 AND ISNULL(E.IsSupplier,0) = @IsSupplier AND dateadd(d,-60,datecreated) < @Date

			UNION ALL

			-- 30 Day OB Payments
			SELECT  OB.EntityID,'Supplier Payment',
			'EN' + CONVERT(Varchar,OB.EntityID) as [ID],isnull(E.AccountNum,E.EntityID) as [Account],E.Company,
			-CASE when isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) + isnull(-1 * Amt30,0) <= isnull(Paid,0) THEN  isnull(-1 * Amt30,0) 
			ELSE CASE WHEN isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) + isnull(-1 * Amt30,0) > isnull(Paid,0) AND isnull(Paid,0) > isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) THEN isnull(Paid,0) - isnull(-1 * Amt120,0)  - isnull(-1 * Amt90,0) - isnull(-1 * Amt60,0) END
			END as [TotalIncl],
			dateadd(d,-30,datecreated) as [DateCompleted], OB.DivisionID , OB.ROE, OB.Currency,E.EntityCategoryID,E.SalesconsID
			FROM AccOPENINGBALANCE OB
			LEFT JOIN (SELECT EntityID, SUM(PaymentPortion) as [Paid] FROM CREDITOR_PAYMENT DPi
					LEFT JOIN (SELECT DocID, DateCompleted, Period FROM CREDITOR_MASTER) DMi
					ON DPi.PaymentDocID = DMi.DocID
					where InvoiceDocID = -1 AND DMi.DateCompleted < @Date Group by Entityid) DP
			ON OB.Entityid = DP.EntityID
			LEFT JOIN (SELECT EntityID, Company, Accountnum, IsSupplier,EntityCategoryID,SalesconsID  FROM Entity) E
			ON OB.Entityid  = E.EntityID
			WHERE isnull(Paid,0) > 0 AND ISNULL(E.IsSupplier,0) = @IsSupplier AND dateadd(d,-30,datecreated) < @Date

			UNION ALL

			-- Current OB Payments
			SELECT  OB.EntityID, 'Supplier Payment',
			'EN' + CONVERT(Varchar,OB.EntityID) as [ID],isnull(E.AccountNum,E.EntityID) as [Account],E.Company,
			-CASE when isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) + isnull(-1 * Amt30,0) + isnull(-1 * AmtCurrent,0) <= isnull(Paid,0) THEN  isnull(Paid,0) - isnull(-1 * Amt120,0)  - isnull(-1 * Amt90,0) - isnull(-1 * Amt60,0) - isnull(-1 * Amt30,0)
			ELSE CASE WHEN isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) + isnull(-1 * Amt30,0) + isnull(-1 * AmtCurrent,0) > isnull(Paid,0) AND isnull(Paid,0) > isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0)  + isnull(-1 * Amt30,0) THEN isnull(Paid,0) - isnull(-1 * Amt120,0)  - isnull(-1 * Amt90,0) - isnull(-1 * Amt60,0) - isnull(-1 * Amt30,0) END
			END as [TotalIncl],
			dateadd(d,-0,datecreated) as [DateCompleted], OB.DivisionID , OB.ROE, OB.Currency,E.EntityCategoryID,E.SalesconsID
			FROM AccOPENINGBALANCE OB
			LEFT JOIN (SELECT EntityID, SUM(PaymentPortion) as [Paid] FROM CREDITOR_PAYMENT DPi
					LEFT JOIN (SELECT DocID, DateCompleted, Period FROM CREDITOR_MASTER) DMi
					ON DPi.PaymentDocID = DMi.DocID
					where InvoiceDocID = -1 AND DMi.DateCompleted < @Date  Group by Entityid) DP
			ON OB.Entityid = DP.EntityID
			LEFT JOIN (SELECT EntityID, Company, Accountnum, IsSupplier,EntityCategoryID,SalesconsID  FROM Entity) E
			ON OB.Entityid  = E.EntityID
			WHERE isnull(Paid,0) > 0 AND ISNULL(E.IsSupplier,0) = @IsSupplier AND dateadd(d,-0,datecreated) < @Date
	
			UNION ALL
			
			--Opening balances 
			SELECT  OB.EntityID, 'Supplier Payment',
			CASE isnull(DM.UseEC,0) when 0 then 'EN' when 1 then 'EC' END + Convert(varchar,isnull(EH.EntityID,DM.EntityID)) as [ID],
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
			OB.TotalIncl,
			OB.[DateCompleted],DM.DivisionID as [DivisionID],
				1 as [ROE],DM.Currency,
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(E.EntityCategoryID,EH.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID],
			isnull(EH.SalesConsID, E.SalesConsID)
			FROM AccOpeningBalance DM
			LEFT JOIN (SELECT Entityid, Accountnum, Company,IsSupplier,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
			ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT Entityid, Accountnum,Company,IsSupplier,EntityCategoryID,SalesConsID FROM Entity) EH
			ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
			ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
			LEFT JOIN (	SELECT Entityid, useec,  isnull(amtcurrent,0) as [TotalIncl], dateadd(d,0,datecreated) as [DateCompleted] FROM AccOpeningBalance
					UNION ALL
					SELECT Entityid, useec,  isnull(amt30,0) as [TotalIncl], dateadd(d,-30,datecreated) as [DateCompleted] FROM AccOpeningBalance
					UNION ALL
					SELECT Entityid, useec,  isnull(amt60,0) as [TotalIncl], dateadd(d,-60,datecreated) as [DateCompleted] FROM AccOpeningBalance
					UNION ALL
					SELECT Entityid, useec,  isnull(amt90,0) as [TotalIncl], dateadd(d,-90,datecreated) as [DateCompleted] FROM AccOpeningBalance
					UNION ALL
					SELECT Entityid, useec,  isnull(amt120,0) as [TotalIncl], dateadd(d,-120,datecreated) as [DateCompleted] FROM AccOpeningBalance
				) OB
			ON DM.Entityid = OB.Entityid AND isnull(dm.Useec,0) = isnull(OB.UseEc,0)
			WHERE isnull(e.IsSupplier, 0) = @IsSupplier
    ) A 
)B
LEFT JOIN (SELECT EntityID, Switchboard, Email,InvoiceTo,accstatid FROM Entity) E ON B.EntityID = 'EN' + convert(varchar,E.EntityID)
LEFT JOIN (Select isnull(firstname,'') + ' ' + isnull(surname,'') as [AccContact], entitycontactid from entitycontact) AccEC
	on accec.entitycontactid = e.InvoiceTo
LEFT JOIN (select lookupid,value from lookup) ll
	on ll.lookupid = e.accstatid
{where}
Group By B.Entityid,Account, Company,Currency, E.Switchboard,E.Email,AccEC.AccContact,ll.value
{having}
ORDER BY Company
","0","","1","LRA-FUSION","0","0","fusion"
"39612","cv_Acc_Debtors_Control_Drill","","--cv_Acc_Debtors_Control_Drill
DECLARE @Date as datetime
DECLARE @Period as datetime
set @date =  '{date}'


SELECT Distinct DocID, [Doc. Type], 
left('00000000', 8- len([Doc. No.])) + convert(varchar,[Doc. No.]) as [Doc. No.],[Ref No],
[Client], [Job],  [Completed],[Currency], [Total Amt] FROM (

SELECT convert(varchar,DM.DocID) as [docID], DocType as [Doc. Type], DocNo as [Doc. No.],  ClientPO as [Ref No],
case when isnull (dm.UseEC,0) = 0 then E.Company ELSE EC.[Contact] END as [Client], Job,  convert(varchar,DM.DateCreated,111) as [Created],
convert(varchar,/*case  when DM2.DateCompleted is null then*/ DM.DateCompleted /*ELSE  dm2.DateCompleted END */,111) as [Completed],DM.Currency,
dbo.fnFormatNumber(case Doctype when 'Invoice' then  1 else -1 END * (isnull([TotalIncl],0) / isnull(DM.ROE,1)))  as [Total Amt]
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT DocID,Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM DEBTOR_DETAIL where isnull(ComponentOfLineID,0) = 0 group by docid) DD
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT PaymentDocID, EntityID,InvoiceDocID, sum(PaymentPortion) as [Paid] FROM DEBTOR_PAYMENT Group by PaymentDocID, EntityID,InvoiceDocID) DP
ON DM.DocID = DP.PaymentDocID
LEFT JOIN (SELECT EntityID, Company,AlternateCompanyID FROM Entity) E
ON DM.EntityID = E.EntityID 
LEFT JOIN (SELECT EntityContactID, isnull(firstname,'') + ' ' + isnull(Surname,'') as [Contact] FROM EntityContact) EC
ON DM.EntityID = EC.EntityContactID  AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT ProjectID, ProjectName as [Job] From Projects) P
ON DM.ProjectID = P.ProjectID
--LEFT JOIN (SELECT DOCID, DateCompleted FROM DEBTOR_MASTER ) DM2
--ON DP.InvoiceDocID =  DM2.DocID
LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
WHERE DocType in ('Invoice', 'Credit Note', 'Payment Receipt') AND DocStatus = 'Completed' 
and (Dm.Entityid = {entityid} OR E.AlternateCompanyID = {entityid}  )
and isnull(Dm.UseEC,0) = {useec}
and dm.Currency = '{currency}'
and dm.datecompleted < @date
AND DM.DateCompleted > isnull(AOB.DateCreated, '1800/01/01')
{divisionid}
 
Union all

SELECT 'OB' + Convert(varchar,DM.EntityID), 'Opening Balance' as [Doc. Type], null,null, e.Company as [Client],null,
 convert(varchar,DateCreated,111) as [Created],convert(varchar,DateCreated,111) as [Completed], DM.Currency,
dbo.fnFormatNumber((-1) * (isnull([amtcurrent],0) + isnull([amt30],0) + isnull([amt60],0) + isnull([amt90],0) + isnull([amt120],0) ))  as [Total Amt]
FROM ACCOpeningBalance DM
LEFT JOIN (SELECT EntityID, Company, AlternateCompanyID FROM Entity) E
ON DM.EntityID = E.EntityID 
WHERE (Dm.Entityid = {entityid} OR E.AlternateCompanyID = {entityid})
and dm.Currency = '{currency}'
{divisionid}

Union all

--Inter-Account Transfers
SELECT 
convert(varchar,LAD.LineID) +'GL', 
CASE WHEN isnull(LAM.IsInterAccountTransfer,0)  = 1 then 'Inter-Account Transfer'  WHEN isnull(LAM.IsInterLedgerTransfer,0)  = 1 then 'Inter-Ledger Transfer' END, 
LAM.DocID as [Doc. No.], LAD.Notes, E.Company, null as [Job],  convert(varchar,LAM.DateCreated,111), 
Convert(varchar,LAD.AdjustDate,111), 
isnull(LAM.Currency,'') as [Currency],
dbo.fnFormatNumber((isnull(Debit,0) - isnull(Credit,0)) / isnull(LAM.ROE,1)) 
FROM LEDGER_ADJUST_MASTER LAM
LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD 
ON LAM.DocID= LAD.DocID
LEFT JOIN (SELECT EntityID, Company, IsSupplier, EntityCategoryID, SalesConsID, AlternateCompanyID FROM Entity) E
ON LAD.EntityID = E.EntityID
WHERE (LAD.Entityid = {entityid} OR E.AlternateCompanyID =  {entityid})
and isnull(LAM.Currency,'') = '{currency}'
{divisionid}

)A
where Completed < @Date 
ORDER By [Completed] DESC



","0","","1","LRA-FUSION","0","0","fusion"
"39613","cv_Acc_Creditors_Control_Drill","","--cv_Acc_Creditors_Control_Drill
DECLARE @Date as datetime
DECLARE @Period as datetime
DECLARE @EntityID as integer
DECLARE @UseEc as integer
DECLARE @Currency as varchar(50)
set @date =  '{date}'
set @EntityID = {entityid}
set @UseEc = {useec}
set @Currency ='{currency}'



SELECT Distinct DocID, [Doc. Type], 
left('00000000', 8- len([Doc. No.])) + convert(varchar,[Doc. No.]) as [Doc. No.],[Ref No],
[Client], [Job],  [Completed],[Currency], [Total Amt] FROM (

SELECT convert(varchar,DM.DocID) as [docID], DocType as [Doc. Type], DocNo as [Doc. No.],  ClientPO as [Ref No],
case when isnull (dm.UseEC,0) = 0 then E.Company ELSE EC.[Contact] END as [Client], Job,  convert(varchar,DM.DateCreated,111) as [Created],
convert(varchar,/*case  when DM2.DateCompleted is null then*/ DM.DateCompleted /*ELSE  dm2.DateCompleted END */,111) as [Completed],DM.Currency,
dbo.fnFormatNumber(case Doctype when 'Supplier Invoice' then  1 else -1 END * (isnull([TotalIncl],0) / CASE WHEN DM.Doctype = 'Supplier Payment' THEN isnull(DM.ROE,1) ELSE 1 END))  as [Total Amt]
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT DocID,Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM CREDITOR_DETAIL /*where isnull(ComponentOfLineID,0) = 0*/ group by docid) DD
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT PaymentDocID, EntityID,InvoiceDocID, sum(PaymentPortion) as [Paid] FROM CREDITOR_PAYMENT Group by PaymentDocID, EntityID,InvoiceDocID) DP
ON DM.DocID = DP.PaymentDocID
LEFT JOIN (SELECT EntityID, Company,AlternateCompanyID FROM Entity) E
ON DM.EntityID = E.EntityID 
LEFT JOIN (SELECT EntityContactID, isnull(firstname,'') + ' ' + isnull(Surname,'') as [Contact] FROM EntityContact) EC
ON DM.EntityID = EC.EntityContactID  AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT ProjectID, ProjectName as [Job] From Projects) P
ON DM.ProjectID = P.ProjectID
--LEFT JOIN (SELECT DOCID, DateCompleted FROM CREDITOR_MASTER ) DM2
--ON DP.InvoiceDocID =  DM2.DocID
LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
WHERE DocType in ('Supplier Invoice', 'Supplier Credit Note', 'Supplier Payment') AND DocStatus = 'Completed' 
and (Dm.Entityid = @Entityid OR E.AlternateCompanyID = @Entityid  )
and isnull(Dm.UseEC,0) = @UseEC
and dm.Currency = @Currency
and dm.datecompleted < @date
AND DM.DateCompleted > isnull(AOB.DateCreated, '1800/01/01')
{divisionid}
 
Union all

SELECT 'OB' + Convert(varchar,DM.EntityID), 'Opening Balance' as [Doc. Type], null,null, e.Company as [Client],null,
 convert(varchar,DateCreated,111) as [Created],convert(varchar,DateCreated,111) as [Completed], DM.Currency,
dbo.fnFormatNumber((1) * (isnull([amtcurrent],0) + isnull([amt30],0) + isnull([amt60],0) + isnull([amt90],0) + isnull([amt120],0) ))  as [Total Amt]
FROM ACCOpeningBalance DM
LEFT JOIN (SELECT EntityID, Company, AlternateCompanyID FROM Entity) E
ON DM.EntityID = E.EntityID 
WHERE (Dm.Entityid = @Entityid OR E.AlternateCompanyID = @Entityid)
and dm.Currency = @Currency
{divisionid}

Union all

--Inter-Account Transfers
SELECT 
convert(varchar,LAD.LineID) +'GL', 
CASE WHEN isnull(LAM.IsInterAccountTransfer,0)  = 1 then 'Inter-Account Transfer'  WHEN isnull(LAM.IsInterLedgerTransfer,0)  = 1 then 'Inter-Ledger Transfer' END, 
LAM.DocID as [Doc. No.], LAD.Notes, E.Company, null as [Job],  convert(varchar,LAM.DateCreated,111), 
Convert(varchar,LAD.AdjustDate,111), 
isnull(LAM.Currency,'') as [Currency],
dbo.fnFormatNumber((isnull(Credit,0) - isnull(Debit,0)) / isnull(LAM.ROE,1)) 
FROM LEDGER_ADJUST_MASTER LAM
LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD 
ON LAM.DocID= LAD.DocID
LEFT JOIN (SELECT EntityID, Company, IsSupplier, EntityCategoryID, SalesConsID, AlternateCompanyID FROM Entity) E
ON LAD.EntityID = E.EntityID
WHERE (LAD.Entityid = @Entityid OR E.AlternateCompanyID =  @Entityid)
and isnull(LAM.Currency,'') = @Currency
{divisionid}

)A
where Completed < @Date 
ORDER By [Completed] DESC



","0","","1","LRA-FUSION","0","0","fusion"
"39614","cv_Acc_Debtor_Statement","","
DECLARE @Div as int
DECLARE @Date as datetime
DECLARE @Period as integer
DECLARE @EntityID as integer
DECLARE @Currency as varchar(50)
DECLARE @UseEC as integer
set @date = '{date}'
set @Div = {divisionid} 
set @Period = 99999999 --{period}
set @EntityID ={entityid}
set @Currency = '{currency}'
set @UseEC = 0

{select}

(
	--opening balances
	SELECT convert(varchar,DateCreated,111) as [Date], 'Opening Balance' as  [Invoice No.], /*null as [Job], */
	dbo.fnFormatNumber(-1 * (isnull(AmtCurrent,0) + isnull(Amt30,0) +isnull(Amt60,0) +isnull(Amt90,0) +isnull(Amt120,0)))  as [Total Invoiced],
	dbo.fnFormatNumber(isnull(paid,0)) as [Paid],
	dbo.fnFormatNumber(0) as [Credited],
	dbo.fnFormatNumber(-1 * (isnull(AmtCurrent,0) + isnull(Amt30,0) +isnull(Amt60,0) +isnull(Amt90,0) +isnull(Amt120,0))- isnull(Paid,0))  as [Outstanding],
	'' as [Project], NULL as ClientPO
	FROM ACCOPENINGBALANCE  OB
	LEFT JOIN (SELECT sum(isnull(PaymentPortion,0)) as [Paid] ,InvoiceDocID, M.Entityid FROM DEBTOR_MASTER M 
	       LEFT JOIN (SELECT PaymentPortion, InvoiceDocID, PaymentDocID FROM DEBTOR_PAYMENT) P
	       ON M.DocID  = P.PaymentDocID
	       WHERE DocType = 'Payment Receipt'  AND DateCompleted < @Date
	       GROUP By InvoiceDocID,M.Entityid) DP
	ON OB.EntityID = DP.EntityID AND DP.InvoiceDocID = -1
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) EH
	ON OB.EntityID = EH.EntityID
	WHERE  (-1 * (isnull(AmtCurrent,0) + isnull(Amt30,0) +isnull(Amt60,0) +isnull(Amt90,0) +isnull(Amt120,0))- isnull(Paid,0) <> 0) 
	AND (OB.Entityid = @EntityID OR EH.AlternateCompanyID = @EntityID)
	AND OB.Currency = @Currency
	AND (OB.Divisionid = @Div OR @Div = 0)

	union all

	--Inter-Account Transfers
	SELECT Convert(Varchar,LAD.AdjustDate,111), 
	CASE WHEN isnull(LAM.IsInterAccountTransfer,0) = 1 THEN 'Inter-Account Transfer' WHEN isnull(LAM.IsInterLedgerTransfer,0) = 1 THEN 'Inter-Ledger Transfer' END, 
	dbo.fnFormatNumber(0) as [Total Invoiced], dbo.fnFormatNumber(0) as [Paid], 
	dbo.fnFormatNumber((isnull(Credit,0) - isnull(Debit,0)) / isnull(LAM.ROE,1)) as [Credited], 
    dbo.fnFormatNumber(( -1 * (isnull(Credit,0) - isnull(Debit,0))) / isnull(LAM.ROE,1)) as [Total],
	null as [Project], NULL as ClientPO
	FROM LEDGER_ADJUST_MASTER LAM
	LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD 
	ON LAM.DocID= LAD.DocID
	LEFT JOIN (SELECT EntityID, Company, IsSupplier, EntityCategoryID, SalesConsID, AlternateCompanyID FROM Entity) E
	ON LAD.EntityID = E.EntityID
	WHERE (LAD.Entityid = @EntityID OR E.AlternateCompanyID =@EntityID )
	AND isnull(LAM.IsComplete,0) = 1
	AND LAD.AdjustDate < @Date
	and (LAD.divisionid = @Div OR @Div = 0)
	AND LAM.Currency = @Currency
	and isnull((SELECT top 1 AccPeriodID FROM ACCAccountingPeriod where LAD.AdjustDate between StartDate and EndDate),0) <= @Period


	UNION ALL	
	
	--Unallocated credit notes
	SELECT convert(varchar,DateCompleted,111),  isnull(DS.Prefix,'') + ' ' + convert(varchar, DM.DocNO) + ' Unallocated Credit Note',/*null as [Job],*/ 
	dbo.fnFormatNumber(0),dbo.fnFormatNumber(0), 
	dbo.fnFormatNumber((DD.Credit  / isnull(DM.ROE,1)  - isnull(allocated,0))), 
	dbo.fnFormatNumber( -1 * ((DD.Credit / isnull(DM.ROE,1)   - isnull(allocated,0)))),
	convert(varchar,P.ProjectID) + ': ' + P.ProjectName as [Project],DM.ClientPO
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) E
	ON DM.EntityID = E.EntityID
	LEFT JOIN (SELECT  Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) )  as [Credit], DocID FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 group by docid) DD
	ON DM.DocID=DD.DocID 
	LEFT JOIN (SELECT DocID, ROE FROM DEBTOR_MASTER) DM2 
	ON Dm.PreviousDocID = DM2.DocID
	LEFT JOIN (SELECT PaymentDocID, sum(PaymentPortion) as [Allocated]  FROM DEBTOR_PAYMENT Group by PaymentDocID) DP
	ON DM.DocID = DP.PaymentDocID
	LEFT JOIN (SELECT DivisionID, Prefix from AccDocumentSetup ) DS 
	ON DM.DivisionID = DS.DivisionID
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON DM.ProjectID = P.ProjectID
	LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
	ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
	WHERE  (Dm.Entityid = @EntityID OR E.AlternateCompanyID = @EntityID)
	AND isnull(DM.UseEC,0) = @UseEc
	AND DM.DocType = 'Credit Note'
	AND DM.DocStatus = 'Completed'
	AND DM.DateCompleted < @Date
	AND DM2.Docid is  null
	and (dm.divisionid = @Div  OR @Div = 0)
	AND DM.Currency = @Currency
	AND ( -1 * ((DD.Credit / isnull(DM.ROE,1)   - isnull(allocated,0)))) <>0
	and DM.Period <= @Period
	AND DM.DateCompleted > isnull(AOB.DateCreated, '1800/01/01')
	
	Union All
	
	--Unallocated Payments
	SELECT convert(varchar,DateCompleted,111), isnull(DS.Prefix,'') + ' ' + convert(varchar, DM.DocNO) +  ' Unallocated Payment',/*null as [Job],*/ '0.00', 
	dbo.fnFormatNumber(DP.PaymentPortion / isnull(DM.ROE,1)), 
	dbo.fnFormatNumber(0), 
	dbo.fnFormatNumber( -1 * DP.PaymentPortion  / isnull(DM.ROE,1)),
	'' as [Project],DM.ClientPO
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) E
	ON DM.EntityID = E.EntityID
	LEFT JOIN (SELECT * FROM DEBTOR_PAYMENT ) DP
	ON DM.DocID = DP.PaymentDocID and InvoiceDocID  = -2
	LEFT JOIN (SELECT DivisionID, Prefix from AccDocumentSetup ) DS 
	ON DM.DivisionID = DS.DivisionID
	LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
	ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
	WHERE DocType in ('Payment Receipt')  AND DocStatus = 'Completed' AND DateCompleted < @Date 
	and (Dm.Entityid =  @EntityID OR E.AlternateCompanyID =@EntityID )
	AND isnull(DM.UseEC,0) = @UseEc
	AND isnull(IsNotAllocated,0) = 1
	and (dm.divisionid = @Div  OR @Div = 0)
	AND DM.Currency = @Currency
	and DM.Period <= @Period
	AND DM.DateCompleted > isnull(AOB.DateCreated, '1800/01/01')
		
		
	union all
	
	
	SELECT convert(varchar,datecompleted,111) as [Date], isnull(DS.Prefix,'') + ' ' +  convert(varchar,DM.DocNo)  as [Invoice No.],/*Job, */
	dbo.fnFormatNumber(isnull(totalincl,0)  / isnull(DM.ROE,1)) as [Total Invoiced],
	dbo.fnFormatNumber(isnull(DP.Paid,0)) as [Paid],
	dbo.fnFormatNumber(isnull(TotalCredit,0) + isnull(CrdAllocated,0) + isnull(DP.[Discounted],0)) as [Credited],
	dbo.fnFormatNumber(((isnull(DD.TotalIncl,0))   / isnull(DM.ROE,1) ) - (isnull(DP.Paid,0)) - isnull(CrdAllocated,0) -(isnull(TotalCredit,0) + isnull(DP.[Discounted],0))) as [Outstanding],
	convert(varchar,P.ProjectID) + ': ' + P.ProjectName as [Project],DM.ClientPO
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT DocID,  Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 group by docid) DD
	ON DD.DocID = DM.DocID
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) E
	ON DM.EntityID = E.EntityID
	LEFT JOIN (SELECT sum(isnull(PaymentPortion,0)) as [Paid],sum(isnull(SettlementDiscount,0)) as [Discounted] ,InvoiceDocID FROM DEBTOR_MASTER M 
	        LEFT JOIN (SELECT PaymentPortion, InvoiceDocID, PaymentDocID,SettlementDiscount FROM DEBTOR_PAYMENT) P
	        ON M.DocID  = P.PaymentDocID
	       WHERE DocType = 'Payment Receipt' AND InvoiceDocID is not null  --AND DateCompleted < @Date  AND M.Period <= @Period
	       GROUP By InvoiceDocID) DP
	ON Dm.DocID = DP.InvoiceDocId 
	LEFT JOIN(SELECT PreviousDocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(D.Tax,0) /100 + 1) ) / isnull(M.ROE,1) as [TotalCredit] FROM DEBTOR_MASTER M
		  LEFT JOIN (SELECT DocID, PriceEx, Qty,DiscPerc, Tax FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0) D
		ON M.DocID = D.DocID
		WHERE DocType = 'Credit Note'  AND DocStatus = 'Completed' AND M.Period <= @Period AND DateCompleted < @Date 
		Group by PreviousDocID, M.ROE) DM2
	ON Dm.DocID = DM2.PreviousDocID
	LEFT JOIN (SELECT sum(isnull(PaymentPortion,0))  as [CrdAllocated] ,InvoiceDocID FROM DEBTOR_MASTER M 
	        LEFT JOIN (SELECT PaymentPortion, InvoiceDocID, PaymentDocID FROM DEBTOR_PAYMENT) P
	        ON M.DocID  = P.PaymentDocID
	       WHERE DocType = 'Credit Note'  AND InvoiceDocID is not null AND DateCompleted < @Date  AND M.Period <= @Period
	       GROUP By InvoiceDocID, M.ROE) CrdDP
	ON Dm.DocID = CrdDP.InvoiceDocId
	LEFT JOIN (SELECT ProjectID, ProjectName  From Projects) P
	ON DM.ProjectID = P.ProjectID
	LEFT JOIN (SELECT DivisionID, Prefix from AccDocumentSetup ) DS 
	ON DM.DivisionID = DS.DivisionID
	LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
	ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
	WHERE DocType in ('Invoice') AND DocStatus = 'Completed' AND DateCompleted < @Date 
	and (Dm.Entityid =  @EntityID OR E.AlternateCompanyID = @EntityID )
	AND isnull(DM.UseEC,0) = @UseEc
	AND (((isnull(DD.TotalIncl,0))   / isnull(DM.ROE,1) ) - (isnull(DP.Paid,0)) - isnull(CrdAllocated,0) -(isnull(TotalCredit,0))) <> 0.00
	and (dm.divisionid = @Div  OR @Div = 0)
	AND DM.Currency = @Currency
	AND DM.Period <= @Period
	AND DM.DateCompleted > isnull(AOB.DateCreated, '1800/01/01')
	AND round(((isnull(DD.TotalIncl,0))   / isnull(DM.ROE,1) ) - (isnull(DP.Paid,0)) - isnull(CrdAllocated,0) -(isnull(TotalCredit,0)),2) <> 0
) A
ORDER BY [Date]
","0","","1","LRA-FUSION","0","0","fusion"
"39615","cv_Acc_CREDITOR_PAYMENT","","SELECT * FROM (

	SELECT DM.DOCID,convert(varchar,DM.DOCNo) as [Invoice No.], convert(varchar,DateCompleted,111) as [Date], 
	dbo.fnFormatNumber(isnull([Total Invoiced],0)- isnull([Total Credited] ,0)) as [Total Invoiced],
    	dbo.fnFormatNumber(isnull([Total Received],0))  as [Total Received],
    	dbo.fnFormatNumber(isnull([Total Invoiced],0) - isnull([Total Credited] ,0) - isnull([Total Received],0)) as [Balance],
    	dbo.fnFormatNumber(isnull(DP2.PaymentPortion,0)) as [Allocation]
	 FROM CREDITOR_Master DM 
	LEFT JOIN (SELECT  sum(PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(Tax,0) /100 + 1)) as [Total Invoiced], DocID FROM CREDITOR_DETAIL  group by DocID ) DD
	ON DM.DocID= DD.DocID
	LEFT JOIN (SELECT Sum(PaymentPortion) as [Total Received], InvoiceDocID from CREDITOR_Payment where PaymentDocID <> {paydocid} Group By InvoiceDocID) DP
	ON DM.DocID = DP.InvoiceDocID
	LEFT JOIN (SELECT PaymentPortion, PaymentDocID, InvoiceDocID FROM CREDITOR_PAYMENT) DP2
	ON DM.DocID = DP2.InvoiceDocID AND DP2.PaymentDocID = {paydocid}
	LEFT JOIN (SELECT PreviousDocID, sum(isnull([Total Credited],0)) as [Total Credited]  FROM CREDITOR_MASTER DM
	        LEFT JOIN (SELECT  sum(PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(Tax,0) /100 + 1)) as [Total Credited], DocID FROM CREDITOR_DETAIL group by DocID ) DD
	        ON DM.DocID = dd.DocID
	        WHERE DM.Doctype = 'Supplier Credit Note'  AND DocStatus = 'Completed'
		Group by PreviousDocID) DC
	ON DM.DocID = DC.previousDocID
	
	WHERE 
	(DocType = 'Invoice' OR doctype = 'Supplier Invoice')
	AND DocStatus = 'Completed' 
	AND (isnull([Total Invoiced],0)-isnull([Total credited],0) - isnull([Total Received],0)  > 0)
	AND entityid = {entityid}
	AND isnull(DM.UseEC,0) =  {useec}
	AND DM.Currency = '{currency}'
	
	UNION ALL
	
	--Opening balance line
	SELECT TOP 1 -1 as [DOCID], 'O/B', convert(varchar,DateCreated,111) as [Date], 
	convert(varchar,Cast((isnull(amtCurrent,0) +isnull(amt30,0) +isnull(amt60,0) +isnull(amt90,0) + isnull(amt120,0)) * 1   as money)) as [Opening Balance],
	convert(varchar,Cast(isnull([Total Received],0) as money)) as [Total Received],
	convert(varchar,Cast((isnull(amtCurrent,0) +isnull(amt30,0) +isnull(amt60,0) +isnull(amt90,0) + isnull(amt120,0)) * 1 - isnull([Total Received],0) as money)) as [Balance],
	convert(varchar,Cast(isnull(DP2.PaymentPortion,0) as money)) as [Allocation]
	FROM AccOPENINGBALANCE OB
	LEFT JOIN (SELECT sum(PaymentPortion) as [Total Received], InvoiceDocID,Entityid from CREDITOR_Payment DPi
		 LEFT JOIN (SELECT docid, useec from CREDITOR_MASTER) DMi
		 on dpi.paymentdocid = dmi.docid
		 where isnull(DMi.useec,0) = {useec} AND PaymentDocID <> {paydocid}
		 group by InvoiceDocID,Entityid ) DP
	ON -1 = DP.InvoiceDocID AND OB.EntityID = DP.Entityid
    LEFT JOIN (SELECT PaymentPortion, PaymentDocID, InvoiceDocID FROM CREDITOR_PAYMENT) DP2
    ON DP2.InvoiceDocID = -1 AND DP2.PaymentDocID = {paydocid}
	WHERE isnull(OB.UseEc,0) = {useec} AND  OB.EntityID = {entityid}
)A
WHERE (cast(Balance as money) > 0 OR Cast(Allocation as money) > 0 )
ORDER BY DocID Asc




","0","","1","LRA-FUSION","0","0","fusion"
"39616","cv_Acc_CREDITOR_PAYMENT_Complete","","DECLARE @PayDocID as integer
SET @PayDocID = {paydocid}

SELECT 
CREDITOR_PaymentID, 
CASE DP.InvoiceDocID 
	WHEN -2 then 'Unallocated' 
	WHEN -1 then 'O/B' 
	ELSE convert(varchar,DM.ClientPO) 
END as [Invoice No.], 
convert(varchar,CASE DP.InvoiceDocID 
	WHEN -2 then null
	WHEN -1 then OB.DateCreated 
	ELSE DM.datecompleted 
END,111) AS [Date],
dbo.fnformatnumber(CASE DP.InvoiceDocID 
	when -2 then 0 
	when -1 then [TotalOB]
	ELSE ([Total Invoiced]- isnull([Total Credited] ,0))  
END)  as [Total Invoiced],
dbo.fnFormatNumber(isnull([Total Received],0)) as [Total Paid],
dbo.fnFormatNumber(CASE DP.InvoiceDocID 
	when -2 then 0 
	when -1 then isnull([TotalOB],0) - isnull([Total Received],0)
	ELSE ([Total Invoiced]- isnull([Total Credited] ,0)) - isnull([Total Received],0) 
END)  AS [Balance],
dbo.fnFormatNumber(DP.PaymentPortion ) as [Allocation]
FROM CREDITOR_PAYMENT DP
LEFT JOIN (SELECT DocID , DateCompleted , DocNo,ClientPO FROM CREDITOR_MASTER ) DM
ON DP.InvoiceDocID = DM.DocID
LEFT JOIN (SELECT * FROM CREDITOR_MASTER) DMP
ON DP.PaymentDocID = DMP.DocID
--Opening Balance
LEFT JOIN (SELECT DateCreated, 1 * sum(isnull(amtCurrent,0) + isnull(amt30,0) +isnull(amt60,0)+isnull(amt90,0)+isnull(amt120,0)) as [TotalOB], UseEC,EntityID FROM AccOpeningBalance Group BY UseEC,Entityid , datecreated) OB
ON isnull(DMP.UseEc,0) = isnull(OB.UseEC,0) and DP.InvoiceDocID = -1 AND DMP.Entityid = OB.Entityid
--Invoiced
LEFT JOIN (SELECT sum(PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(Tax,0) / 100 + 1)) as [Total Invoiced], DocID FROM CREDITOR_DETAIL group by DocID ) DD
ON DM.DocID= DD.DocID
--Credited
LEFT JOIN (SELECT PreviousDocID, sum(isnull([Total Credited],0)) as [Total Credited]  FROM CREDITOR_MASTER DM
	        LEFT JOIN (SELECT sum(PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(Tax,0) / 100 + 1)) as [Total Credited], DocID FROM CREDITOR_DETAIL group by DocID ) DD
	        ON DM.DocID = dd.DocID
	        WHERE DM.Doctype = 'Supplier Credit Note'  AND DocStatus = 'Completed'
		Group by PreviousDocID) DC
ON DM.DocID = DC.previousDocID
--Received
LEFT JOIN (SELECT Sum(PaymentPortion) as [Total Received], InvoiceDocID, EntityID from CREDITOR_Payment WHERE InvoiceDocID <> -2 Group By InvoiceDocID, EntityID) DPR
ON DP.InvoiceDocID = DPR.InvoiceDocID  AND DP.EntityID = DPR.Entityid

WHERE DP.PaymentDocID = @PayDocID
ORDER BY DP.CREDITOR_PaymentID","0","","1","LRA-FUSION","0","0","fusion"
"39617","cv_Acc_Creditors_Man_WIP","","SELECT  
lineid,DocType as [Doc.Type],DM.DocNo as [Doc. No.], ClientPO as [Ref], Company as [Supplier], Convert(varchar,DateCompleted,103) as [Supplier Doc. Date], 
DocStatus as [Status], 
isnull(E2.Client, ' ') as [Client],
isnull(convert(varchar,P.ProjectID) + ' - ' + isnull(ProjectName,''),' ') as [Project],
DD.StockCode as [Code],DD.StockDescription AS [Description],
DM.Currency,convert(varchar,cast(DM.ROE as money),1) AS [R.O.E],Case WHEN isnull(P.ProjectID,0) > 0   then convert(varchar,case when DM.DocType like 'Supplier Credit Note' then -1 else 1 End *  cast(PriceEx * qty as money),1) ELSE ' ' END as [Allocated Total Ex. VAT],
Case WHEN isnull(P.ProjectID,0) > 0 then convert(varchar, (case DM.DocType when 'Supplier Credit Note' then -1 else 1 End)* cast((totalincl - (priceex  * qty)) * ((100 - discperc)/100)  as money),1)  ELSE ' ' END as [Allocated Total VAT],
Case WHEN isnull(P.ProjectID,0) > 0 then  convert(varchar,(case DM.DocType when 'Supplier Credit Note' then -1 else 1 End)* cast(totalincl  * ((100 - discperc)/100) as money),1)  ELSE ' ' END as [Allocated Total Incl. VAT],
Case WHEN isnull(P.ProjectID,0) < 1   then convert(varchar,(case DM.DocType when 'Supplier Credit Note' then -1 else 1 End)* cast((PriceEx * qty)  * ((100 - discperc)/100) as money),1)  ELSE ' ' END as [Overhead Total Ex. VAT],
Case WHEN isnull(P.ProjectID,0) < 1   then convert(varchar,(case DM.DocType when 'Supplier Credit Note' then -1 else 1 End)* cast((totalincl - (priceex  * qty)) *  ((100 - discperc)/100) as money),1)  ELSE ' ' END as [Overhead Total VAT] ,
Case WHEN isnull(P.ProjectID,0) < 1   then convert(varchar,(case DM.DocType when 'Supplier Credit Note' then -1 else 1 End)* cast(totalincl  * ((100 - discperc)/100) as money),1)  ELSE ' ' END as [Overhead Total Incl. VAT]
FROM Creditor_Detail DD
LEFT JOIN (SELECT EntityID, Company as [Client] FROM Entity) E2
ON DD.clientID = E2.Entityid
LEFT JOIN (SELECT DocType, DocID, DocNo, ClientPO, Entityid, DateCompleted,DateCreated, DocStatus, period,Currency, ROE from CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company,Accountnum FROM Entity) E
ON DM.Entityid = E.Entityid
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
on DD.ProjectID = P.ProjectID
{where}
ORDER BY DM.DocID DESC

","0","","1","LRA-FUSION","0","0","fusion"
"39618","cv_Acc_Creditor_Statement","","DECLARE @Div as int
DECLARE @Date as datetime
DECLARE @Period as integer
DECLARE @EntityID as integer
DECLARE @Currency as varchar(50)
DECLARE @UseEC as integer
set @date = '{date}'
set @Div = {divisionid} 
set @Period = {period}
set @EntityID = {entityid}
set @Currency = '{currency}'
set @UseEC = {useec}

{select}

(
	--opening balances
	SELECT convert(varchar,DateCreated,111) as [Date], 'Opening Balance' as  [Invoice No.], /*null as [Job], */
	dbo.fnFormatNumber(-1 * (isnull(AmtCurrent,0) + isnull(Amt30,0) +isnull(Amt60,0) +isnull(Amt90,0) +isnull(Amt120,0)))  as [Total Invoiced],
	dbo.fnFormatNumber(isnull(paid,0)) as [Paid],
	dbo.fnFormatNumber(0) as [Credited],
	dbo.fnFormatNumber(1 * (isnull(AmtCurrent,0) + isnull(Amt30,0) +isnull(Amt60,0) +isnull(Amt90,0) +isnull(Amt120,0))- isnull(Paid,0))  as [Outstanding],
	'' as [Project]
	FROM ACCOPENINGBALANCE  OB
	LEFT JOIN (SELECT sum(isnull(PaymentPortion,0)) as [Paid] ,InvoiceDocID, M.Entityid FROM CREDITOR_MASTER M 
	       LEFT JOIN (SELECT PaymentPortion, InvoiceDocID, PaymentDocID FROM CREDITOR_PAYMENT) P
	       ON M.DocID  = P.PaymentDocID
	       WHERE DocType = 'Supplier Payment'  AND DateCompleted < @Date
	       GROUP By InvoiceDocID,M.Entityid) DP
	ON OB.EntityID = DP.EntityID AND DP.InvoiceDocID = -1
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) EH
	ON OB.EntityID = EH.EntityID
	WHERE  (-1 * (isnull(AmtCurrent,0) + isnull(Amt30,0) +isnull(Amt60,0) +isnull(Amt90,0) +isnull(Amt120,0))- isnull(Paid,0) <> 0) 
	AND (OB.Entityid = @EntityID OR EH.AlternateCompanyID = @EntityID)
	AND OB.Currency = @Currency
	AND (OB.Divisionid = @Div OR @Div = 0)

	union all

	--Inter-Account Transfers
	SELECT Convert(Varchar,LAD.AdjustDate,111), 
	CASE WHEN isnull(LAM.IsInterAccountTransfer,0) = 1 THEN 'Inter-Account Transfer' WHEN isnull(LAM.IsInterLedgerTransfer,0) = 1 THEN 'Inter-Ledger Transfer' END, 
	dbo.fnFormatNumber(0) as [Total Invoiced], dbo.fnFormatNumber(0) as [Paid], 
	dbo.fnFormatNumber((isnull(Credit,0) - isnull(Debit,0)) / isnull(LAM.ROE,1)) as [Credited], 
    dbo.fnFormatNumber(( 1 * (isnull(Credit,0) - isnull(Debit,0))) / isnull(LAM.ROE,1)) as [Total],
	null as [Project]
	FROM LEDGER_ADJUST_MASTER LAM
	LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD 
	ON LAM.DocID= LAD.DocID
	LEFT JOIN (SELECT EntityID, Company, IsSupplier, EntityCategoryID, SalesConsID, AlternateCompanyID FROM Entity) E
	ON LAD.EntityID = E.EntityID
	WHERE (LAD.Entityid = @EntityID OR E.AlternateCompanyID =@EntityID )
	AND isnull(LAM.IsComplete,0) = 1
	AND LAD.AdjustDate < @Date
	and (LAD.divisionid = @Div OR @Div = 0)
	AND LAM.Currency = @Currency
	and isnull((SELECT top 1 AccPeriodID FROM ACCAccountingPeriod where LAD.AdjustDate between StartDate and EndDate),0) <= @Period


	UNION ALL	
	
	--Unallocated credit notes
	SELECT convert(varchar,DateCompleted,111),  isnull(DS.Prefix,'') + ' ' + convert(varchar, DM.DocNO) + ' Unallocated Credit Note',/*null as [Job],*/ 
	dbo.fnFormatNumber(0),dbo.fnFormatNumber(0), 
	dbo.fnFormatNumber((DD.Credit   - isnull(allocated,0))), 
	dbo.fnFormatNumber( -1 * ((DD.Credit  - isnull(allocated,0)))),
	convert(varchar,P.ProjectID) + ': ' + P.ProjectName as [Project]
	FROM CREDITOR_MASTER DM
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) E
	ON DM.EntityID = E.EntityID
	LEFT JOIN (SELECT  Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) )  as [Credit], DocID FROM CREDITOR_DETAIL /*WHERE isnull(ComponentOfLineID,0) = 0*/ group by docid) DD
	ON DM.DocID=DD.DocID 
	LEFT JOIN (SELECT DocID, ROE FROM CREDITOR_MASTER) DM2 
	ON Dm.PreviousDocID = DM2.DocID
	LEFT JOIN (SELECT PaymentDocID, sum(PaymentPortion) as [Allocated]  FROM CREDITOR_PAYMENT Group by PaymentDocID) DP
	ON DM.DocID = DP.PaymentDocID
	LEFT JOIN (SELECT DivisionID, Prefix from AccDocumentSetup ) DS 
	ON DM.DivisionID = DS.DivisionID
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON DM.ProjectID = P.ProjectID
	LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
	ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
	WHERE  (Dm.Entityid = @EntityID OR E.AlternateCompanyID = @EntityID)
	AND isnull(DM.UseEC,0) = @UseEc
	AND DM.DocType = 'Supplier Credit Note'
	AND DM.DocStatus = 'Completed'
	AND DM.DateCompleted < @Date
	AND DM2.Docid is  null
	and (dm.divisionid = @Div  OR @Div = 0)
	AND DM.Currency = @Currency
	AND -1 * ((DD.Credit  - isnull(allocated,0)))  <>0
	and DM.Period <= @Period
	AND DM.DateCompleted > isnull(AOB.DateCreated, '1800/01/01')
	
	Union All
	
	--Unallocated Payments
	SELECT convert(varchar,DateCompleted,111), isnull(DS.Prefix,'') + ' ' + convert(varchar, DM.DocNO) +  ' Unallocated Payment',/*null as [Job],*/ '0.00', 
	dbo.fnFormatNumber(DP.PaymentPortion /*/ isnull(DM.ROE,1)*/), 
	dbo.fnFormatNumber(0), 
	dbo.fnFormatNumber( -1 * DP.PaymentPortion  /*/ isnull(DM.ROE,1)*/),
	'' as [Project]
	FROM CREDITOR_MASTER DM
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) E
	ON DM.EntityID = E.EntityID
	LEFT JOIN (SELECT * FROM CREDITOR_PAYMENT ) DP
	ON DM.DocID = DP.PaymentDocID and InvoiceDocID = -2 
	LEFT JOIN (SELECT DivisionID, Prefix from AccDocumentSetup ) DS 
	ON DM.DivisionID = DS.DivisionID
	LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
	ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
	WHERE DocType in ('Supplier Payment')  AND DocStatus = 'Completed' 
	AND DateCompleted < @Date 
	and (Dm.Entityid =  @EntityID OR E.AlternateCompanyID =@EntityID )
	AND isnull(DM.UseEC,0) = @UseEc
	AND isnull(IsNotAllocated,0) = 1
	and (dm.divisionid = @Div  OR @Div = 0)
	AND DM.Currency = @Currency
	and DM.Period <= @Period
	AND DM.DateCompleted > isnull(AOB.DateCreated, '1800/01/01')
	
	union all
	
	
	SELECT convert(varchar,datecompleted,111) as [Date], isnull(DS.Prefix,'') + ' ' +  convert(varchar,DM.DocNo)  as [Invoice No.],/*Job, */
	dbo.fnFormatNumber(isnull(totalincl,0)  /*/ isnull(DM.ROE,1)*/) as [Total Invoiced],
	dbo.fnFormatNumber(isnull(DP.Paid,0)) as [Paid],
	dbo.fnFormatNumber(isnull(TotalCredit,0) + isnull(CrdAllocated,0)) as [Credited],
	dbo.fnFormatNumber(((isnull(DD.TotalIncl,0))   /*/ isnull(DM.ROE,1)*/ ) - (isnull(DP.Paid,0)) - isnull(CrdAllocated,0) -(isnull(TotalCredit,0))) as [Outstanding],
	convert(varchar,P.ProjectID) + ': ' + P.ProjectName as [Project]
	FROM CREDITOR_MASTER DM
	LEFT JOIN (SELECT DocID,  Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM CREDITOR_DETAIL /*WHERE isnull(ComponentOfLineID,0) = 0*/ group by docid) DD
	ON DD.DocID = DM.DocID
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) E
	ON DM.EntityID = E.EntityID
	LEFT JOIN (SELECT sum(isnull(PaymentPortion,0)) as [Paid] ,InvoiceDocID FROM CREDITOR_MASTER M 
	        LEFT JOIN (SELECT PaymentPortion, InvoiceDocID, PaymentDocID FROM CREDITOR_PAYMENT) P
	        ON M.DocID  = P.PaymentDocID
	       WHERE DocType = 'Supplier Payment' AND InvoiceDocID is not null  --AND DateCompleted < @Date  AND M.Period <= @Period
	       GROUP By InvoiceDocID) DP
	ON Dm.DocID = DP.InvoiceDocId
	LEFT JOIN(SELECT PreviousDocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) /*/ isnull(M.ROE,1) */ as [TotalCredit] FROM CREDITOR_MASTER M
		  LEFT JOIN (SELECT DocID, PriceEx, Qty,DiscPerc FROM CREDITOR_DETAIL /*WHERE isnull(ComponentOfLineID,0) = 0*/) D
		ON M.DocID = D.DocID
		WHERE DocType = 'Supplier Credit Note'  AND DocStatus = 'Completed' AND DateCompleted < @Date  AND M.Period <= @Period
		Group by PreviousDocID) DM2
	ON Dm.DocID = DM2.PreviousDocID
	LEFT JOIN (SELECT sum(isnull(PaymentPortion,0))  as [CrdAllocated] ,InvoiceDocID FROM CREDITOR_MASTER M 
	        LEFT JOIN (SELECT PaymentPortion, InvoiceDocID, PaymentDocID FROM CREDITOR_PAYMENT) P
	        ON M.DocID  = P.PaymentDocID
	       WHERE DocType = 'Supplier Credit Note'  AND InvoiceDocID is not null AND DateCompleted < @Date  AND M.Period <= @Period
	       GROUP By InvoiceDocID) CrdDP
	ON Dm.DocID = CrdDP.InvoiceDocId
	LEFT JOIN (SELECT ProjectID, ProjectName  From Projects) P
	ON DM.ProjectID = P.ProjectID
	LEFT JOIN (SELECT DivisionID, Prefix from AccDocumentSetup ) DS 
	ON DM.DivisionID = DS.DivisionID
	LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
	ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
	WHERE DocType in ('Supplier Invoice') AND DocStatus = 'Completed' AND DateCompleted < @Date 
	and (Dm.Entityid =  @EntityID OR E.AlternateCompanyID = @EntityID )
	AND isnull(DM.UseEC,0) = @UseEc
	AND ((isnull(DD.TotalIncl,0))   /*/ isnull(DM.ROE,1)*/ ) - (isnull(DP.Paid,0)) - isnull(CrdAllocated,0) -(isnull(TotalCredit,0)) <> 0.00
	and (dm.divisionid = @Div  OR @Div = 0)
	AND DM.Currency = @Currency
	AND DM.Period <= @Period
	AND DM.DateCompleted > isnull(AOB.DateCreated, '1800/01/01')

) A
ORDER BY [Date]
","0","","1","LRA-FUSION","0","0","fusion"
"39619","cv_Acc_Payment_Reciept_RPT","","Declare @StartDate as datetime
Declare @EndDate as datetime
Set @startDate = '{startdate}'
Set @endDate = '{enddate}'
	
SELECT newID(), Payment as [Document],ClientPO as [Ref.], Company as [Received From],Descr as [In To Account],
Convert(varchar,DateCompleted, 103) AS [Date],
Convert(varchar,cast([Total Received] as money),1) as [Total Received]
FROM (
	SELECT PaymentDocID,ADSP.Prefix + ' ' + convert(varchar,DMP.DocNo) as [Payment], DMP.ClientPO, E.Company,E.Company as [OrdCo],
	Descr ,DMP.DateCompleted,
	sum(PaymentPortion) as [Total Received],
	1 as [Rank]
	FROM DEBTOR_PAYMENT DP
	LEFT JOIN (SELECT DocNo,DocID, DateCompleted, EntityID,DivisionID,BankAccountID,ClientPO FROM DEBTOR_MASTER) DMP
	ON DP.PaymentDocID = DMP.DocID
	LEFT JOIN (SELECT DocNo, DocID FROM DEBTOR_MASTER) DM
	ON DP.InvoiceDocID = DM.DocID
	LEFT JOIN (SELECT EntityID, Company FROM Entity) E
	ON DMP.EntityID = E.EntityID
	LEFT JOIN AccDocumentSetup ADSP ON DMP.DivisionID = ADSP.DivisionID
	LEFT JOIN (SELECT BankAccountID, Descr FROM AccBankAccount) BA
	ON DMP.BankAccountID = BA.BankAccountID
	WHERE DMP.DocID is not Null 
	AND DMP.DateCompleted between @startdate AND @enddate
	{where}
	group by ADSP.Prefix,DMP.DocNo,E.Company,DMP.DateCompleted,BA.Descr,PaymentDocID,ClientPO
	
	Union ALL
	
	SELECT PaymentDocID, '   - ' + ADSP.Prefix + ' ' + convert(varchar,DM.DocNo), ClientPO,null, E.Company as [OrdCo],null, dm.DateCompleted,PaymentPortion, 2 as [Rank]
	FROM DEBTOR_PAYMENT DP
	LEFT JOIN (SELECT DocNo,DocID,DateCompleted,BankAccountID,DivisionID FROM DEBTOR_MASTER) DMP
	ON DP.PaymentDocID = DMP.DocID
	LEFT JOIN (SELECT DocNo, DocID, DateCompleted, DivisionID,DocType,ClientPO,Entityid FROM DEBTOR_MASTER) DM
	ON DP.InvoiceDocID = DM.DocID
	LEFT JOIN AccDocumentSetup ADSP ON DM.DivisionID = ADSP.DivisionID
	LEFT JOIN (SELECT EntityID, Company FROM Entity) E
	ON DM.EntityID = E.EntityID
	WHERE DMP.DocID is not Null 
	AND DMP.DateCompleted between @startdate AND @enddate
	{where}
	)a
ORDER BY OrdCo, Rank, DateCompleted Desc","0","","1","LRA-FUSION","0","0","fusion"
"39620","CV_AccSTOCK_Components_Totals","","SELECT L.LookupID,L.Value as [Unit Totals],
 round(sum(round(DepsellingQty / (case when isnull(strength,0) = 0 then 100 else strength end /100) * round(isnull(Wastage,1), 1),5)),2) as [Total Qty] 
FROM AccStock_Dep StkDep
LEFT JOIN (SELECT StockID, SoldBy FROM ACCStock) STK
ON StkDep.DepStockID = STK.StockID
LEFT JOIN Lookup L on STK.SoldBy = L.LookupID
WHERE PriStockID = {pristockid}
Group by L.LookupID, L.Value
ORDER BY L.Value
","0","","1","LRA-FUSION","0","0","fusion"
"39621","qf_AccStockFind_NoContainer","","select top 50 STK.Stockid, STK.StockCode as [Code], STK.StockDescription as [Description], LJ.Value as [GL Categroy],STK.Barcode, STK.SupplierStockCode as [Supplier Code]
from AccStock STK
LEFT JOIN (SELECT LookupID, Value from Lookup where class like 'JournalType') LJ
ON STK.JournalID = LJ.lookupid
where isnull(IsHidden,0) = 0 AND ((STK.SupplierStockCode like '%<%replace%>%') OR (STK.Barcode like '%<%replace%>%') OR (STK.StockCode like '%<%replace%>%') OR (STK.StockDescription Like '%<%replace%>%')) /*<%sType%>*/
order by STK.Stockcode, STK.StockDescription
","0","","1","LRA-FUSION","0","0","fusion"
"39622","cv_Acc_ReCalcPrices","","UPDATE AccStockPrice
SET
CostPriceEx = SD.MaterialCost,
ForexDepTotal = SD.MaterialCost,
SellingPriceEx = SD.MaterialCost * Markup,
LastUpdated = getdate()
FROM AccStockPrice SP
LEFT JOIN (	SELECT Dep.PriStockID,
			sum((isnull(SP.CostPriceEx,0) / STK.Ratio) * round(isnull(Wastage,1) * round(depsellingqty,5) / Case WHEN isnull(Dep.Strength,100) / 100 = 0 then 1 ELSE isnull(Dep.Strength,100) / 100 END, 5)) as [MaterialCost]
			FROM AccStock_Dep Dep
			LEFT JOIN (SELECT StockID,StockCode, StockDescription ,isnull(SoldbytoPurchasedByRatio,1) as [Ratio], SoldBy,Weight FROM AccSTOCK ) STK
			ON Dep.DepStockID = STK.StockID
			LEFT JOIN (SELECT StockID, PriceCategoryID, max(CostPriceEx) as [CostPriceEx] FROM AccStockPrice where getdate() between ValidFrom AND ValidTo GROUP BY StockID, PriceCategoryID) SP
			ON Dep.DepStockID = SP.StockID AND Dep.PriceCategoryID = SP.PriceCategoryID
			Group By Dep.PriStockID
			) SD
ON SP.StockID = SD.PriStockID 

WHERE isnull(SP.UseLandedCost,0) = 1
AND getdate() between SP.ValidFrom AND SP.ValidTo
AND round(SellingPriceEx,2) <>  Round(SD.MaterialCost * Markup,2)","0","","1","LRA-FUSION","0","0","fusion"
"39623","cv_AccSTOCKTAKE_Man","","Declare @Date as datetime
set @Date =  '{date}'



SELECT 
NewID(),LC.Value as [Container],A.StockID,Stk.StockCode as [Code], Stk.StockDescription as [Description],STK.Barcode, LL.Value as [Type],
A.SerialNumber as [S/N],isnull(convert(varchar,A.[Length]),'') as [Length], L.Value as [Unit], 
convert(varchar,cast(sum(round(isnull(A.QtyStores,0),4)) as money),1) as [Qty On System],
Case when sum(A.IsStockTake) = 0 THEN '' ELSE convert(varchar,cast(sum(round(A.QtyObserved,4)) as money),1) END as [Qty Observed],
Case when sum(A.IsStockTake) = 0 THEN '' ELSE convert(varchar,cast(round((sum(isnull(A.QtyObserved,0))) - sum(isnull(A.QtyStores,0)),4) as money),1) END as [Discrepancy],
isnull(max(U.[Captured By]),'') as [Captured By]
FROM (
	--Stock Control
	SELECT StockID,DivisionID, sum(qty * Ratio) as [QtyStores],0 as [QtyObserved], ContainerID, 
	isnull(SerialNumber,'') as [SerialNumber], 0 as [IsStockTake], 0 as [CapturedBy], [Length] 
	FROM AccStockControl 
	where Adjustdate <= @Date 
	AND NOT (DocType = 'Stock Take' and adjustdate between dateadd(d, -1,@Date) AND @Date)
	group by StockID, ContainerID,isnull(SerialNumber,''),DivisionID,[Length] 
	UNION ALL
	--Stock Take
	SELECT StockID, DivisionID, 0 as [QtyStores], QtyCaptured * CASE WHEN isnull([Length],0) <> 0 THEN  [Length] ELSE 1 END , ContainerID, isnull(SerialNumber,'') , 1 as [IsStockTake],CapturedBy, [Length]
	FROM  AccStockTake WHERE DateCaptured between dateadd(d, -1,@date) AND @date 
	UNION ALL
	--All Stock
	SELECT StockID, null,0,0,null,null, 0 as [IsStockTake], 0 as [CapturedBy] , null as [Length]
	FROM AccStock Where isnull(Istangible,0) = 1
	)A
LEFT JOIN AccStock STK ON A.StockID = STK.StockID	
LEFT JOIN Lookup L on  STK.SoldBy = L.LookupID 
LEFT JOIN Lookup LL on STK.StockType = LL.LookupID 
LEFT JOIN LinkLookup LC ON A.ContainerID = LC.LinkLookupID
LEFT JOIN (SELECT isnull(firstname, '') + ' ' + isnull(surname,'') as [Captured By], userid  FROM Users) U ON A.Capturedby = U.UserID

{where}   --**
Group by LC.Value, A.StockID, STK.StockCode, STK.StockDescription, LL.Value, A.SerialNumber, L.Value, A.[Length], STK.Barcode 
{having}
ORDER BY LC.Value, Stk.StockDescription, A.[Length]","0","","1","LRA-FUSION","0","0","fusion"
"39624","cv_Acc_Expense_Claim","","select accExpenseID, Convert(varchar, DateIncurred, 103) as [Date Incurred],Company, ProjectName as [Job], StockDescription as [Expense], Comments, Qty, 
convert(Varchar,cast(priceex as money),1) as [Price Ex. VAT],  
convert(Varchar,cast(totalex as money),1) as [Total Ex. VAT], 
convert(Varchar,cast(TotalInc as money),1) as [Total Incl. VAT]
FROM AccExpenses AE
LEFT JOIN (SELECT EntityID, Company From Entity) E
ON AE.EntityID = E.Entityid
LEFT JOin (SELECT ProjectID, ProjectName FROM Projects) IJ
ON AE.ProjectID = IJ.ProjectID
LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK
ON AE.StockID = Stk.StockID
Where ExpenseClaimID = {claimid}
ORDER BY DateIncurred","0","","1","LRA-FUSION","0","0","fusion"
"39625","cv_ACC_BankRecon_Man","","Declare @FromDate as datetime
Declare @ToDate as datetime
Declare @Account as int
Set @FromDate = '{fromdate}'
Set @ToDate =  '{todate}'
Set @Account =  {account}
if @FromDate <  (SELECT Top 1 OBDate FROM AccBankAccount WHERE BankAccountID = @Account)
Begin
	set @FromDate = (SELECT Top 1 OBDate FROM AccBankAccount WHERE BankAccountID = @Account)
End



SELECT convert(varchar,DocID) + '#' + convert(varchar(50),NewID()), Convert(varchar, DateCompleted, 103) as [Date],LD.value as [Division],A.DocNo as [Doc. No.], A.DocType as [Type], 
ClientPO as [Reference], Company as [To/From],[Acc No], 
CASE WHEN cast(Received as money) > 0 then convert(varchar,cast(Received as money),1) ELSE  '' END as [Dr.],
CASE WHEN cast(Received as money) < 0 then convert(varchar,cast(abs(Received) as money),1) ELSE  '' END as [Cr.],
CASE isnull(BR.BankReconID,0) when 0 then 'No' Else 'Yes' END As [Reconciled?]
FROM    (
    --Payment Receipts
    SELECT  DM.DocID, DateCompleted,DocNo , DocType,ClientPo,Company,e.accountnum as [Acc No],BankAccountID, isnull(DP.Received, 0) as [Received],DM.DivisionID  FROM DEBTOR_MASTER DM
    LEFT JOIN (SELECT PaymentDocID, sum(isnull(PaymentPortion,0)) as [Received] FROM DEBTOR_PAYMENT Group by PaymentDocID) DP
    ON DM.DocID = DP.PaymentDocID
    LEFT JOIN (SELECT Entityid, Company,accountnum FROM Entity) E
    ON DM.Entityid = E.Entityid
    WHERE DM.DocType = 'Payment Receipt' AND isnull(isreversed,0) = 0 and DocStatus = 'Completed'
    AND DateCompleted BETWEEN @FromDate and @ToDate
    AND BankAccountID = @Account    


    UNION ALL
    
    --Supplier Payments
    SELECT  DM.DocID, DateCompleted,DocNo , DocType,ClientPo,Company,e.accountnum as [Acc No],BankAccountID, - isnull(DP.Received, 0) as [Received],DM.DivisionID  FROM CREDITOR_MASTER DM
    LEFT JOIN (SELECT PaymentDocID, sum(isnull(PaymentPortion,0)) as [Received] FROM CREDITOR_PAYMENT
    NT Group by PaymentDocID) DP
    ON DM.DocID = DP.PaymentDocID
    LEFT JOIN (SELECT Entityid, Company,accountnum FROM Entity) E
    ON DM.Entityid = E.Entityid
    WHERE DM.DocType = 'Supplier Payment' AND isnull(isreversed,0) = 0 and DocStatus = 'Completed'
    AND DateCompleted BETWEEN @FromDate and @ToDate
    AND BankAccountID = @Account    

    UNION ALL
    
    --Expense Payments
    SELECT AccExpenseClaimID as [DocID], DatePaid, AccExpenseClaimID, 'Expense', PaymentRef, [Company],null, FromAccount, - Paid,AE.DivisionID FROM AccExpenseClaim EC
    LEFT JOIN (SELECT ExpenseClaimID,  sum(isnull(TotalInc,0)) as [Paid],DivisionID FROM ACCEXPENSES Group By ExpenseClaimID,DivisionID) AE
    ON EC.AccExpenseClaimID = AE.ExpenseClaimID
    LEFT JOIN (SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Company] FROM Staff) ST
    ON EC.IncurredBy = ST.StaffID
    WHERE DocStatus = 'Completed'
    AND DatePaid BETWEEN @FromDate and @ToDate
    AND FromAccount = @Account  
    
    UNION ALL

	--Ledger adjustments
    SELECT LAD.LineID AS [DocID], AdjustDate,LAM.DocID, 'General Journal Entry', LAD.Notes, BA.AccName as [Company], isnull(convert(varchar,GLCode),BA.AccountNo) as [Acc No], Ba.BankAccountID , isnull(Debit,0) - isnull(Credit,0),  GLC.DivisionID
    FROM Ledger_Adjust_Master LAM
    LEFT JOIN Ledger_Adjust_Detail LAD ON LAM.DocID = LAD.DocID
    LEFT JOIN (SELECT * FROM accBankAccount) BA ON LAD.GLCodeID = BA.GLCodeID
    LEFT JOIN (SELECT GLCodeID, DivisionID,GLCode FROM AccGlCode) GLC ON LAD.GlCodeID = GLC.GLCodeID
    WHERE BA.GLCodeID is not null
    AND AdjustDate BETWEEN @FromDate and @ToDate
    AND Ba.BankAccountID = @Account  

    UNION ALL

   select distinct * from (
    --Payroll
    SELECT AP.DocID, DatePaid, AP.DocID as [2], 'Payroll' as [doctype], '' as [NOtes],[Employee] as [Company] ,'' as [Acc No], FromAccount,Amount as [Amount],DivisionID  FROM AccPayroll AP
    LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Employee] From Staff) ST
    ON AP.StaffID = ST.StaffID
    --LEFT JOIN (SELECT DocID, sum(case when isdeduction = 1 then -1 ELSE 1 END * Amount) as [Total] FROM AccPayroll_Details Group by DocID) PD
    --ON AP.DocID = PD.DocID
    LEFT JOIN AccPayrollEarnings  APE ON AP.DocID = APE.DocID
    WHERE DocStatus = 'Completed'
    AND DatePaid BETWEEN @FromDate and @ToDate
    AND FromAccount = @Account    
  
    --UNION ALL   
  
    --SELECT AP.DocID, DatePaid, AP.DocID, 'Payroll', '',[Employee],null, FromAccount, [Total] as Amount,DivisionID  FROM AccPayroll AP
    --LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Employee] From Staff) ST
    --ON AP.StaffID = ST.StaffID
    --LEFT JOIN (SELECT DocID, (case when IsEmployerDeduction = 1 then 1 ELSE -1 END * Amount) as [Total] FROM AccPayrollDeductions )  APD 
    --ON AP.DocID = APD.DocID  
    --WHERE DocStatus = 'Completed'
    --AND DatePaid BETWEEN @FromDate and @ToDate
    --AND FromAccount = @Account       
) x where X. amount is not null


	UNION ALL

	--Bank Journal
	SELECT CD.LineID, CD.DatePaid, CD.DocID, 'Bank Journal', CD.RefNo, null, convert(varchar,GLC.GLCode),CM.BankAccountID ,- isnull(TotalIncl,0),CD.DivisionID   
	FROM CASH_TRANSACTION_DETAIL  CD
	LEFT JOIN CASH_TRANSACTION_MASTER CM ON CD.DocID = CM.DocID
	LEFT JOIN AccGLCode GLC ON CD.GLCodeID = GLC.GLCodeID
	WHERE isnull(CM.IsComplete,0) = 1
	AND isnull(SingleTransaction,0) = 0
	AND DatePaid BETWEEN @FromDate and @ToDate
    AND CM.BankAccountID = @Account 
    
    UNION ALL

	--Bank Journal (Single Entry)
	SELECT MIN(LineID) as [DocID], max(CD.DatePaid), CD.DocID, 'Bank Journal', max(CD.RefNo), null, /*convert(varchar,GLC.GLCode)*/ 'Multiple',CM.BankAccountID ,- sum(isnull(TotalIncl,0)) , 0 --GLC.DivisionID   
	FROM CASH_TRANSACTION_DETAIL  CD
	LEFT JOIN CASH_TRANSACTION_MASTER CM ON CD.DocID = CM.DocID
	LEFT JOIN AccGLCode GLC ON CD.GLCodeID = GLC.GLCodeID 
	WHERE isnull(CM.IsComplete,0) = 1
	AND isnull(SingleTransaction,0) = 1
	AND DatePaid BETWEEN @FromDate and @ToDate
    AND CM.BankAccountID = @Account 
    Group by CD.DocID,CM.BankAccountID ,GLC.DivisionID --,GLC.GLCode   
    
    	UNION ALL

	--Bank Journal (Transfers)
	SELECT CD.LineID, CD.DatePaid, CD.DocID, 'Bank Journal', CD.RefNo, null, convert(varchar,GLC.GLCode),CM.BankAccountID , isnull(TotalIncl,0),CD.DivisionID   
	FROM CASH_TRANSACTION_DETAIL  CD
	LEFT JOIN CASH_TRANSACTION_MASTER CM ON CD.DocID = CM.DocID
	LEFT JOIN AccGLCode GLC ON CD.GLCodeID = GLC.GLCodeID
	LEFT JOIN (SELECT BankAccountID, GLCodeID FROM AccBankAccount) BAL ON CD.GlCodeID = BAL.GLCodeID
	WHERE isnull(CM.IsComplete,0) = 1
	AND isnull(SingleTransaction,0) = 0
	AND DatePaid BETWEEN @FromDate and @ToDate
    AND  BAL.BankAccountID = @Account
    
    UNION ALL

	--Bank Journal (Single Entry) (Transfers)
	SELECT MIN(LineID) as [DocID], max(CD.DatePaid), CD.DocID, 'Bank Journal', max(CD.RefNo), null, /*convert(varchar,GLC.GLCode)*/ 'Multiple',CM.BankAccountID , sum(isnull(TotalIncl,0)) , 0 --GLC.DivisionID   
	FROM CASH_TRANSACTION_DETAIL  CD
	LEFT JOIN CASH_TRANSACTION_MASTER CM ON CD.DocID = CM.DocID
	LEFT JOIN AccGLCode GLC ON CD.GLCodeID = GLC.GLCodeID 
	LEFT JOIN (SELECT BankAccountID, GLCodeID FROM AccBankAccount) BAL ON CD.GlCodeID = BAL.GLCodeID
	WHERE isnull(CM.IsComplete,0) = 1
	AND isnull(SingleTransaction,0) = 1
	AND DatePaid BETWEEN @FromDate and @ToDate
    AND  BAL.BankAccountID = @Account
    Group by CD.DocID,CM.BankAccountID ,GLC.DivisionID --,GLC.GLCode  
    
    UNION ALL
        
    --Expenditures
    SELECT DocID,DateCompleted,DocNo,DocType,Memo,E.Company, E.AccountNum, BankAccountID, 
	-1 * Qty * CostPriceEx * (TAX /100 + 1),
	DivisionID
	FROM EXPENDITURE_MASTER DM
	LEFT JOIN (SELECT EntityID, Company,AccountNum FROM Entity ) E ON DM.ClientID = E.EntityID
	WHERE DocStatus = 'Completed'
	AND DocType IN ('Purchase')
	AND DateCompleted BETWEEN @FromDate and @ToDate
    AND  BankAccountID = @Account

    ) A
LEFT JOIN AccBankRecon BR ON A.DocType = BR.DocType and A.DocID = BR.DocNo
LEFT JOIN Lookup LD ON A.DivisionID = LD.LookupID
{where}
ORDER BY DateCompleted,ClientPO


","0","","1","LRA-FUSION","0","0","fusion"
"39626","cv_ACC_BankRecon_OB","","Declare @FromDate as datetime
Declare @ToDate as datetime
Declare @Account as int
Set @FromDate = (SELECT Top 1 OBDate FROM AccBankAccount WHERE BankAccountID = {account})
Set @ToDate = '{fromdate}'
Set @Account = {account}

SELECT Sum(isnull(Received,0)) as [OpeningSysBalance]
FROM    (
    --Payment Receipts
    SELECT  DateCompleted,DocNo , DocType,ClientPo,Company,BankAccountID, isnull(DP.Received, 0) as [Received]  FROM DEBTOR_MASTER DM
    LEFT JOIN (SELECT PaymentDocID, sum(isnull(PaymentPortion,0)) as [Received] FROM DEBTOR_PAYMENT Group by PaymentDocID) DP
    ON DM.DocID = DP.PaymentDocID
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E
    ON DM.Entityid = E.Entityid
    WHERE DM.DocType = 'Payment Receipt' AND isnull(isreversed,0) = 0 and DocStatus = 'Completed'
    AND DateCompleted BETWEEN @FromDate and @ToDate
    AND BankAccountID = @Account    

    UNION ALL

    --Opening Balance
    SELECT Top 1 OBDate, BankAccountID, 'Opening Balance', AccName, Bank, BankAccountID, OpeningBal FROM AccBankAccount
    WHERE BankAccountID = @Account

    UNION ALL
    
    --Supplier Payments
    SELECT  DateCompleted,DocNo , DocType,ClientPo,Company,BankAccountID, - isnull(DP.Received, 0) as [Received]  FROM CREDITOR_MASTER DM
    LEFT JOIN (SELECT PaymentDocID, sum(isnull(PaymentPortion,0)) as [Received] FROM CREDITOR_PAYMENT
    NT Group by PaymentDocID) DP
    ON DM.DocID = DP.PaymentDocID
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E
    ON DM.Entityid = E.Entityid
    WHERE DM.DocType = 'Supplier Payment' AND isnull(isreversed,0) = 0 and DocStatus = 'Completed'
    AND DateCompleted BETWEEN @FromDate and @ToDate
    AND BankAccountID = @Account    

    UNION ALL
    
    --Expense Payments
    SELECT  DatePaid, AccExpenseClaimID, 'Expense', PaymentRef, [Company], FromAccount, - Paid FROM AccExpenseClaim EC
    LEFT JOIN (SELECT ExpenseClaimID,  sum(isnull(TotalInc,0)) as [Paid] FROM ACCEXPENSES Group By ExpenseClaimID) AE
    ON EC.AccExpenseClaimID = AE.ExpenseClaimID
    LEFT JOIN (SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Company] FROM Staff) ST
    ON EC.IncurredBy = ST.StaffID
    WHERE DocStatus = 'Completed'
    AND DatePaid BETWEEN @FromDate and @ToDate
    AND FromAccount = @Account  
    
    UNION ALL
    
    --Cashbook Payments
    SELECT  DatePaid, AccOverheadID, 'Cashbook Payment', PaymentRef, Company, FromAccount,- isnull(TotalInc,0) FROM AccOverhead
    WHERE isnull(IsPaid,0) = 1 AND AccType = 'Supplier Payment'
    AND DatePaid BETWEEN @FromDate and @ToDate
    AND FromAccount = @Account      

    UNION ALL
    
    --Cashbook Receipts
    SELECT  DatePaid, AccOverheadID, 'Cashbook Receipt', PaymentRef, Company, toAccount, isnull(TotalInc,0) FROM AccOverhead
    WHERE isnull(IsPaid,0) = 1 AND AccType = 'Payment Receipt'
    AND DatePaid BETWEEN @FromDate and @ToDate
    AND ToAccount = @Account        
    
    UNION ALL
    
    --Cashbook Transfer From
    SELECT  DatePaid, AccOverheadID, 'Cashbook Transfer', PaymentRef, Company, fromAccount, - isnull(TotalInc,0) FROM AccOverhead
    WHERE isnull(IsPaid,0) = 1 AND AccType = 'Transfer'
    AND DatePaid BETWEEN @FromDate and @ToDate
    AND FromAccount = @Account          

    UNION ALL
    
    --Cashbook Transfer To
    SELECT  DatePaid, AccOverheadID, 'Cashbook Transfer', PaymentRef, Company, toAccount, isnull(TotalInc,0) FROM AccOverhead
    WHERE isnull(IsPaid,0) = 1 AND AccType = 'Transfer'
    AND DatePaid BETWEEN @FromDate and @ToDate
    AND ToAccount = @Account        

    UNION ALL

    --General Journal
    SELECT AdjustDate,LAM.DocID, 'General Journal Entry', LAD.Notes, BA.AccName as [Company], Ba.BankAccountID , isnull(Debit,0) - isnull(Credit,0)
    FROM Ledger_Adjust_Master LAM
    LEFT JOIN Ledger_Adjust_Detail LAD ON LAM.DocID = LAD.DocID
    LEFT JOIN (SELECT * FROM accBankAccount) BA ON LAD.GLCodeID = BA.GLCodeID
    LEFT JOIN (SELECT GLCodeID, DivisionID,GLCode FROM AccGlCode) GLC ON LAD.GlCodeID = GLC.GLCodeID
    WHERE BA.GLCodeID is not null
    AND AdjustDate BETWEEN @FromDate and @ToDate
    AND Ba.BankAccountID = @Account  

    UNION ALL

    --Payroll
    SELECT DatePaid, AP.DocID, 'Payroll', '',[Employee], FromAccount, -Total  FROM AccPayroll AP
    LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Employee] From Staff) ST
    ON AP.StaffID = ST.StaffID
    LEFT JOIN (SELECT DocID, sum(case when isdeduction = 1 then -1 ELSE 1 END * Amount) as [Total] FROM AccPayroll_Details Group by DocID) PD
    ON AP.DocID = PD.DocID
    WHERE DocStatus = 'Completed'
    AND DatePaid BETWEEN @FromDate and @ToDate
    AND FromAccount = @Account   
    
    UNION ALL
    
	--Cash Transactions
    SELECT CD.DatePaid, CD.DocID, 'Bank Journal', CD.RefNo, null,CM.BankAccountID ,- isnull(TotalIncl,0)
    FROM CASH_TRANSACTION_DETAIL  CD
    LEFT JOIN CASH_TRANSACTION_MASTER CM ON CD.DocID = CM.DocID
    LEFT JOIN AccGLCode GLC ON CD.GLCodeID = GLC.GLCodeID 
    WHERE isnull(CM.IsComplete,0) = 1
    AND DatePaid BETWEEN @FromDate and @ToDate
    AND CM.BankAccountID = @Account 
        
    UNION ALL
    
	--Cash Transactions
    SELECT CD.DatePaid, CD.DocID, 'Bank Journal', CD.RefNo, null,CM.BankAccountID , isnull(TotalIncl,0)
    FROM CASH_TRANSACTION_DETAIL  CD
    LEFT JOIN CASH_TRANSACTION_MASTER CM ON CD.DocID = CM.DocID
    LEFT JOIN AccGLCode GLC ON CD.GLCodeID = GLC.GLCodeID 
    WHERE isnull(CM.IsComplete,0) = 1
    AND DatePaid BETWEEN @FromDate and @ToDate
    AND  CD.GLCodeID = (SELECT top 1 GLCodeID  FROM AccBankAccount where BankAccountID = @Account)

    ) A



","0","","1","LRA-FUSION","0","0","fusion"
"39627","cv_AccSTOCK_ControlDrillDown","","SELECT  StockControlID, convert(varchar,AdjustDate,111) + ' ' + convert(varchar,AdjustDate,108) as [Adjustment Date] , Code, [Description], Barcode,
Container, [Adjusting Document], [Document No.], isnull(convert(varchar,[Length]),'') as [Length],[Qty Adjusted], Unit 
FROM (
	select StockControlID,AdjustDate,STK.StockCode as [Code], Stk.StockDescription as [Description], STK.Barcode, L.Value as [Container], sc.DocType as [Adjusting Document],
	convert(varchar,ISNULL(DM.DocNo, SC.DocID)) as [Document No.],
	dbo.fnFormatNumber(SC.[Qty] * Sc.[Ratio]) as [Qty Adjusted] , LL.Value as [Unit],CASE WHEN SC.Qty <0 THEN -1 ELSE 1 END * SC.[Length] as [Length], 
	1 as [Rank]
	from accStockControl SC
	LEFT JOIN (SELECT StockID, StockDescription,StockCode, IsSplittable,Barcode FROM AccStock) STK
	ON Sc.StockID = STK.StockID
	LEFT JOIN LinkLookup L 
	On SC.ContainerID = L.LinkLookupID
	LEFT JOIN (SELECT LookupID, Value FROM Lookup) LL
	ON SC.SoldBy = LL.LookupID
	LEFT JOIN (	SELECT DocID, DocNo, DocType FROM DEBTOR_MASTER
				UNION ALL 
				SELECT DocID, DocNo, DocType FROM CREDITOR_MASTER
				UNION ALL
				SELECT DocID, DocNo, DocType FROM EXPENDITURE_MASTER) DM
	ON SC.DocID = DM.DocID AND SC.DocType = DM.DocType 	
	{where}
		
	Union ALL
	--Total
	select 9999999999999999,Null,Null, null,null, null,null,'TOTAL :', dbo.fnFormatNumber(isnull(sum(SC.[Qty] * Sc.[Ratio]),0)) as [Qty Adjusted] ,null,null, 
	2 as [Rank]
	from accStockControl SC
	LEFT JOIN (SELECT StockID, IsSplittable FROM AccStock) STK
	ON SC.StockID = STK.StockID
	{where}
	) A
ORDER BY Rank, AdjustDate





","0","","1","LRA-FUSION","0","0","fusion"
"39628","cv_Acc_Invoice_PickingSlip","","
SELECT StockCode as [Code], [Description], qty as [Inv. Qty], Unit,
'&nbsp;' as [Qty Picked],'&nbsp;' as [Picked By]
FROM (
	SELECT DD.StockID as [Stock], '<B>' + convert(varchar,round(Sum(Qty),4)) + '</B>' as [qty], '<B>' + STK.StockCode + '</B>' as [StockCode], '<B>' + STK.StockDescription + '</B>' as [Description], '<B>' + L.Value +'</B>' as [Unit], 1 as [Rank]  FROM DEBTOR_DETAIL DD
	LEFT JOIN AccStock STK ON DD.StockID =STK.StockID
	LEFT JOIN Lookup L ON Stk.SoldBy = L.LookupID
	WHERE Stk.IsTangible = 1 and LineID in ({lines})
	Group by DD.StockID, STK.StockCode, STK.StockDescription, L.Value
	
	Union ALL
	
	SELECT StkDep.PriStockID as [Stock], convert(varchar,round(sum(DD.Qty * STKDep.DepSellingqty),4)) as [Qty], '&nbsp;' as [stockCode],STK.StockCode + ' : ' + Stk.StockDescription,Value, 2 as [Rank]  FROM DEBTOR_DETAIL DD
	LEFT JOIN AccStock_Dep STKDep ON DD.StockID =STKDep.PriStockID
	LEFT JOIN AccStock STK ON STKDep.DepStockID =STK.StockID
	LEFT JOIN Lookup L ON Stk.SoldBy = L.LookupID
	WHERE Stk.IsTangible = 1 and LineID in ({lines})
	Group By STKDep.PriStockID,STK.StockCode,STK.StockDescription,L.Value
	)A
ORDER BY  A.Stock,A.Rank, A.[Description]","0","","1","LRA-FUSION","0","0","fusion"
"39629","cv_Acc_OutstandingStock","","SELECT 
Max(LineID) as [LineID],
StockCode  as [Code],
StockDescription as [Description],
MAX(Comments) as [Comments],
[Into Container],
Company as [Supplier],
DocNo  as [Doc No.],
Max(Ref) as [Ref],
CONVERT(varchar,min(DateCompleted),111) as [Document Date],
CONVERT(varchar,max(DeliveryDate),111) as [Delivery Date],
[Unit],
SUM([Qty Expected]) as [Qty Expected],
SUM([Received]) as [Received],
SUM([Qty Expected]) - SUM([Received])  as [Discrepency]
FROM 
	(
	SELECT 
	DD.LineID,
	DD.StockCode,
	DD.StockDescription,
	DD.Comments,
	E.Company,
	CASE WHEN DM.DocType = '{basedoc}' then DM.DocNo Else isnull(CM.DocNo,DM.DocNo) END as [DocNo], 
	DM.DateCompleted, 
	DM.DeliveryDate,
	LP.Value as [Unit],
	CASE WHEN DM.DocType = '{basedoc}' then Qty Else 0  END as [Qty Expected],
	CASE WHEN DM.DocType = 'Goods Received Note' then Qty Else 0 END as [Received],
	isnull(DD.DivisionID, DM.DivisionID) as [DivisionID],
	LL.Value as [Into Container],
    DD.ContainerID,
    CASE WHEN DM.DocType = '{basedoc}' then DM.ClientPO Else isnull(CM.ClientPO,DM.ClientPO) END as [Ref], 
	DM.DocType,
    DM.PreviousDocID
	FROM CREDITOR_DETAIL DD
	LEFT JOIN (SELECT DocID, DocType, DocNo, Entityid, DateCompleted , DeliveryDate,DivisionID,PreviousDocID, ClientPO FROM CREDITOR_MASTER )DM
	ON DD.DocID = DM.DocID
	LEFT JOIN (SELECT DocID, DocNo,DocType, ClientPO FROM CREDITOR_MASTER) CM
	ON DM.PreviousDocID = CM.DocID AND CM.DocType=  '{basedoc}'
	LEFT JOIN (SELECT StockID, IsTangible ,PurchasedBy  FROM AccStock) STK
	ON DD.StockID = STK.StockID 
	LEFT JOIN Lookup LP
	ON Stk.PurchasedBy = LP.LookupID 
	LEFT JOIN (SELECT EntityID, Company FROM Entity) E
	ON DM.EntityID = E.EntityID
	LEFT JOIN LinkLookup LL 
	ON DD.ContainerID = LL.LinkLookupID 
	where DM.doctype in ('{basedoc}', 'Goods Received Note')
	AND STK.IsTangible =1 
	) A
{where}

Group BY A.StockCode,A.StockDescription,A.Company,A.Unit, A.DocNo,A.[Into Container]
HAVING SUM([Qty Expected]) - SUM([Received])<> 0","0","","1","LRA-FUSION","0","0","fusion"
"39630","cv_Acc_AssetInvoice","","select distinct top 50 CM.docID,DocType as [Document], E.Company as [Supplier], Prefix, DocNo as [Doc. No.], convert(varchar, DateCompleted, 111) as [Date]
FROM CREDITOR_MASTER CM
LEFT JOIN ACCDocumentSetup DS
ON CM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT StockID, DocID FROM CREDITOR_DETAIL) CD
ON CM.DocID = CD.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON CM.EntityID = E.EntityID
WHERE DocType = 'Supplier Invoice' 
AND CD.StockID = {stockid} 
AND convert(varchar, DocNo) Like '%<%replace%>%'
ORDER BY DocNo Desc","0","","1","LRA-FUSION","0","0","fusion"
"39631","cv_Acc_AssetSchedule","","SELECT AssetDetailID, convert(varchar,AD.SchedDate,111) as [Date],Units, convert( varchar, cast(DepRate * 100 as money))  as [Rate], 
convert(varchar,cast(AD.DepExpense as money),1) as [Dep. Expense],
convert(varchar,cast(sum(AD2.DepExpense) as money),1) as [Accumulated Dep.],
convert(varchar,cast(A.Cost - sum(AD2.DepExpense) as money),1) as [Book Value]
FROM AccAssetDetail AD
LEFT JOIN (SELECT DepExpense, AssetID, SchedDate FROM AccAssetDetail) AD2
ON AD.AssetID = AD2.AssetID  AND AD2.SchedDate <=  AD.SchedDate
LEFT JOIN (SELECT AssetID, Cost FROM AccASSET) A
ON AD.AssetID = A.AssetID
WHERE AD.AssetID = {assetid}
GROUP BY AD.AssetDetailID, AD.SchedDate, AD.Units, AD.DepRate, AD.DepExpense, A.Cost
ORDER BY AD.SchedDate","0","","1","LRA-FUSION","0","0","fusion"
"39632","cv_leaveDetails","","select 
	LeavedefaultID, 
	leavename as [Profile Name], 
	hoursperday as [Hours Per Day], 
	calcleave as [Leave Per Cycle],
	increment [Increment Per Year], 
	maxdays as [Max Leave Per Cycle], 
	studyleave as [Study Leave], 
	familyleave as [Family Leave], 
	sickleave as [Sick Leave] ,
	OvertimeLeave as [Overtime Leave]
from LeaveProfileDetails
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39633","cv_Acc_BudgetMan_Detail","","
SELECT
NewID(),
LD.Value as [Division],
convert(varchar, year(Date))  + '/' + convert(varchar, month(Date))  as [Date],
isnull(E.Company,'') as [Client],
isnull(P.ProjectName,'') as [Project],
isnull(LRC.Value,'') as [Report Category],
CASE WHEN A.StockID > 0 THEN STK.StockCode ELSE convert(varchar,GL.GLCode) END as [Code],
CASE WHEN A.StockID > 0 THEN STK.StockDescription ELSE LGL.Value END  as [Description],
dbo.fnFormatNumber(sum(isnull(A.[Budgeted Qty],0))) as [Budgeted Qty],
dbo.fnFormatNumber(sum(isnull(A.[Actual Qty],0))) as [Actual Qty],
dbo.fnFormatNumber(sum(isnull(A.[Budgeted Cost],0))) as [Budgeted Cost],
dbo.fnFormatNumber(sum(isnull(A.[Actual Cost],0))) as [Actual Cost],
dbo.fnFormatNumber(sum(isnull(A.[Budgeted Sales],0))) as [Budgeted Sales],
dbo.fnFormatNumber(sum(isnull(A.[Actual Sales],0))) as [Actual Sales]
FROM (
	--Select Cost Estimate items
	SELECT 
	CED.StockID, 
	CEM.EntityID,
	isnull(CED.ProjectID, CEM.ProjectID) as [ProjectID],
	isnull(CED.DivisionID, CEM.DivisionID) as [DivisionID],
	Qty as [Budgeted Qty],
	0 as [Actual Qty],
	(CostPriceEx * Qty ) as [Budgeted Cost],
	0 as [Actual Cost],
	PriceEx * qty * ((100 - isnull(discperc,0)) /100) as [Budgeted Sales],
	0 as [Actual Sales],
	CED.ReportCategoryID,
	CED.BudgetDate as [Date],
	0 as [AssetID]
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT DocID, PreviousDocID, RevisedToDoc,Revision, DocStatus,ProjectID,EntityID,DivisionID FROM Cost_Estimate_Master) CEM
	ON CED.DocID  = CEM.DocID
	where isnull(CEM.RevisedToDoc,0) = 0
	AND CEM.DocStatus <> 'Rejected'
	
	UNION ALL
	
	--Budget Items (May no longer be neccessary)
	SELECT 
	CED.StockID, 
	CED.EntityID,
	CED.ProjectID,
	CED.DivisionID,
	Qty as [Budgeted Qty],
	0 as [Actual Qty],
	(CostPriceEx * Qty ) as [Budgeted Cost],
	0 as [Actual Cost],
	UnitSellingPriceEx * qty  as [Budgeted Sales],
	0 as [Actual Sales],
	CED.GLReportCategoryID,
	CED.BudDate as [Date],
	0 as [AssetID]
	FROM AccBudget  CED
	WHERE isnull(CED.IsGLBudget,0) = 0
		
	UNION ALL 
	
	--Select Invoiced items
	SELECT 
	DD.StockID, 
	DM.EntityID,
	isnull(DD.ProjectID, DM.ProjectID) as [ProjectID],
	isnull(DD.DivisionID, DM.DivisionID) as [DivisionID],
	0 as [Budgeted Qty],
	Case when DM.Doctype =  'Credit Note' THEN -1 Else 1 END * Qty as [Actual Qty],
	0 as [Budgeted Cost],
	0 as [Actual Cost],
	0 as [Budgeted Sales],
	Case when DM.Doctype =  'Credit Note' THEN -1 Else 1 END * PriceEx * qty * ((100 - isnull(discperc,0)) /100) as [Actual Sales],
	DD.ReportCategoryID,
	DM.DateCompleted,
	0 as [AssetID]
	FROM Debtor_Detail  DD
	LEFT JOIN (SELECT DocID, DocStatus,ProjectID,EntityID,DivisionID,DocType,DateCompleted FROM DEBTOR_Master) DM
	ON DD.DocID  = DM.DocID
	where DM.DocStatus = 'Completed'
	AND DocType in  ('Invoice', 'Credit Note')
	
	UNION ALL 
	
	--Select Supplier Invoiced items
	SELECT 
	DD.StockID, 
	DM.EntityID,
	isnull(DD.ProjectID, DM.ProjectID) as [ProjectID],
	isnull(DD.DivisionID, DM.DivisionID) as [DivisionID],
	0 as [Budgeted Qty],
	0 as [Actual Qty],
	0 as [Budgeted Cost],
	Case when DM.Doctype =  'Supplier Credit Note' THEN -1 Else 1 END * PriceEx * qty * ((100 - isnull(discperc,0)) /100) as [Actual Cost],
	0 as [Budgeted Sales],
	0 as [Actual Sales],
	DD.ReportCategoryID,
	DM.DateCompleted,
	0 as [AssetID]
	FROM Creditor_Detail  DD
	LEFT JOIN (SELECT DocID, DocStatus,ProjectID,EntityID,DivisionID,DocType,DateCompleted FROM Creditor_Master) DM
	ON DD.DocID  = DM.DocID
	Where DM.DocStatus = 'Completed'
	AND DocType in ('Supplier Invoice', 'Supplier Credit Note')
	
	UNION ALL
	
	--Select Cash Transactions
	SELECT - CTD.GLCodeID, 
	P.EntityID, 
	P.ProjectID,
	CTD.DivisionID, 
	0 as [Budgeted Qty],
	0 as [Actual Qty],
	0 as [Budgeted Cost],
	Case when GL.GLType in ('EXPENSE', 'COST OF SALES') THEN  TotalIncl / (VatPerc/ 100 + 1) ELSE 0 END as [Actual Cost],
	0 as [Budgeted Sales],
	Case when GL.GLType in ('OTHER INCOME', 'INCOME') THEN - TotalIncl / (VatPerc/ 100 + 1) ELSE 0 END as [Actual Sales],
	CTD.ReportCategoryID,
	CTD.DatePaid,
	CTD.AssetID
	FROM Cash_Transaction_Detail CTD
	LEFT JOIN (SELECT ProjectID, EntityID FROM Projects) P
	ON CTD.ProjectID = P.ProjectID
	LEFT JOIN (SELECT * FROM Cash_Transaction_Master) CTM
	ON CTD.DocID = CTM.DocID
	LEFT JOIN (SELECT * FROM AccGLCode) GL
	ON CTD.GlCodeID = GL.GlCodeID
	where isnull(CTM.IsComplete,0)  = 1
	AND GL.GLType in ('OTHER INCOME', 'INCOME', 'EXPENSE', 'COST OF SALES')
	
	UNION ALL
	
	--Select GL Transactions
	SELECT - CTD.GLCodeID, 
	P.EntityID, 
	P.ProjectID,
	CTD.DivisionID, 
	0 as [Budgeted Qty],
	0 as [Actual Qty],
	0 as [Budgeted Cost],
	Case when GL.GLType in ('EXPENSE', 'COST OF SALES') THEN  isnull(Debit,0) - isnull(Credit,0) ELSE 0 END as [Actual Cost],
	0 as [Budgeted Sales],
	Case when GL.GLType in ('OTHER INCOME', 'INCOME') THEN isnull(Credit,0) - isnull(Debit,0) ELSE 0 END as [Actual Sales],
	CTD.ReportCategoryID,
	CTD.AdjustDate,
	CTD.AssetID
    FROM Ledger_Adjust_Detail CTD
	LEFT JOIN (SELECT ProjectID, EntityID FROM Projects) P
	ON CTD.ProjectID = P.ProjectID
	LEFT JOIN (SELECT * FROM Ledger_Adjust_Master) CTM
	ON CTD.DocID = CTM.DocID
	LEFT JOIN (SELECT * FROM AccGLCode) GL
	ON CTD.GlCodeID = GL.GlCodeID
	where isnull(CTM.IsComplete,0)  = 1
	AND GL.GLType in ('OTHER INCOME', 'INCOME', 'EXPENSE', 'COST OF SALES')
	
	UNION ALL 
	
	--Select Expense Claims
    SELECT E.StockID,
    EntityID, 
    E.ProjectID,
    E.DivisionID,
    0 as [Budgeted Qty],
	0 as [Actual Qty],
	0 as [Budgeted Cost],
	TotalEx as [Actual Cost],
	0 as [Budgeted Sales],
	0 as [Actual Sales],
	0 as [ReportCategoryID],
	EC.DatePaid,
	0 as [AssetID]
	FROM AccExpenses E
    LEFT JOIN AccExpenseClaim EC ON E.ExpenseClaimID = EC.AccExpenseClaimID
    LEFT JOIN (SELECT StockID, StockCode, StockDescription, SoldBy, SoldBytoPurchasedbyRatio FROM AccStock) STK
    ON E.StockID = STK.StockID
    WHERE EC.DocStatus = 'Completed'
) A
LEFT JOIN (SELECT EntityID, Company FROM Entity ) E ON A.EntityID = E.EntityID
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P ON A.ProjectID = P.ProjectID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LD ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LRC ON A.ReportCategoryID = LRC.LookupID
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID AND A.StockID > 0 
LEFT JOIN (SELECT * FROM AccGLCode) GL ON A.StockID = - GL.GlCodeID AND A.StockID < 0 
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC ON A.ReportCategoryID = RC.LookupID
LEFT JOIN (	SELECT LookupID, Value
			FROM Lookup 
			where class like 'JournalType' 
		 	UNION ALL
			SELECT -1, 'ACCOUNTS RECEIVABLE'
			UNION ALL
			SELECT -2, 'OUTPUT VAT CONTROL' 
			UNION ALL
			SELECT -3, 'COST OF SALES' 
			UNION ALL
			SELECT -4, 'INVENTORY' 
			UNION ALL
			SELECT -5, 'INPUT VAT CONTROL' 
			UNION ALL
			SELECT -6, 'BANK' 
			UNION ALL
			SELECT -8, 'FOREIGN EXCHANGE' 
			UNION ALL
			SELECT -9, 'ACCOUNTS PAYABLE' 
			UNION ALL
			SELECT -10, 'UN-RECEIVED INVENTORY' 
			UNION ALL
			SELECT -11, 'PREPAID EXPENSE' 
			UNION ALL
			SELECT -12, 'CAPITAL' 
			UNION ALL
			SELECT -13, 'INVENTORY EXPENSE' 
			UNION ALL
			SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
			UNION ALL
			SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
			UNION ALL
			SELECT -16, 'DISCOUNT ALLOWED' 
			UNION ALL
			SELECT -17, 'DISCOUNT RECEIVED'
			UNION ALL
			SELECT -18, 'OPENING BALANCE' 
) LGL ON GL.GLCategoryID = LGL.LookupID
{where}
Group by LD.Value, convert(varchar, year(Date))  + '/' + convert(varchar, month(Date)), E.Company, P.ProjectName,LRC.Value,
STK.StockCode, A.StockID, STK.StockDescription, GL.GLCode,LGL.Value
ORDER BY [Date], Division, Code","0","","1","LRA-FUSION","0","0","fusion"
"39634","cv_Acc_BudgetMan_Summary","","
SELECT
NewID(),
LD.Value as [Division],
convert(varchar, year(Date))  + '/' + convert(varchar, month(Date))  as [Date],
--isnull(E.Company,'') as [Client],
--isnull(P.ProjectName,'') as [Project],
--isnull(LRC.Value,'') as [Report Category],
--CASE WHEN A.StockID > 0 THEN STK.StockCode ELSE convert(varchar,GL.GLCode) END as [Code],
--CASE WHEN A.StockID > 0 THEN STK.StockDescription ELSE LGL.Value END  as [Description],
dbo.fnFormatNumber(sum(isnull(A.[Budgeted Qty],0))) as [Budgeted Qty],
dbo.fnFormatNumber(sum(isnull(A.[Actual Qty],0))) as [Actual Qty],
dbo.fnFormatNumber(sum(isnull(A.[Budgeted Cost],0))) as [Budgeted Cost],
dbo.fnFormatNumber(sum(isnull(A.[Actual Cost],0))) as [Actual Cost],
dbo.fnFormatNumber(sum(isnull(A.[Budgeted Sales],0))) as [Budgeted Sales],
dbo.fnFormatNumber(sum(isnull(A.[Actual Sales],0))) as [Actual Sales]
FROM (
	--Select Cost Estimate items
	SELECT 
	CED.StockID, 
	CEM.EntityID,
	isnull(CED.ProjectID, CEM.ProjectID) as [ProjectID],
	isnull(CED.DivisionID, CEM.DivisionID) as [DivisionID],
	Qty as [Budgeted Qty],
	0 as [Actual Qty],
	(CostPriceEx * Qty ) as [Budgeted Cost],
	0 as [Actual Cost],
	PriceEx * qty * ((100 - isnull(discperc,0)) /100) as [Budgeted Sales],
	0 as [Actual Sales],
	CED.ReportCategoryID,
	CED.BudgetDate as [Date],
	0 as [AssetID]
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT DocID, PreviousDocID, RevisedToDoc,Revision, DocStatus,ProjectID,EntityID,DivisionID FROM Cost_Estimate_Master) CEM
	ON CED.DocID  = CEM.DocID
	where isnull(CEM.RevisedToDoc,0) = 0
	AND CEM.DocStatus <> 'Rejected'
	
	UNION ALL
	
	--Budget Items (May no longer be neccessary)
	SELECT 
	CED.StockID, 
	CED.EntityID,
	CED.ProjectID,
	CED.DivisionID,
	Qty as [Budgeted Qty],
	0 as [Actual Qty],
	(CostPriceEx * Qty ) as [Budgeted Cost],
	0 as [Actual Cost],
	UnitSellingPriceEx * qty  as [Budgeted Sales],
	0 as [Actual Sales],
	CED.GLReportCategoryID,
	CED.BudDate as [Date],
	0 as [AssetID]
	FROM AccBudget  CED
	WHERE isnull(CED.IsGLBudget,0) = 0
		
	UNION ALL 
	
	--Select Invoiced items
	SELECT 
	DD.StockID, 
	DM.EntityID,
	isnull(DD.ProjectID, DM.ProjectID) as [ProjectID],
	isnull(DD.DivisionID, DM.DivisionID) as [DivisionID],
	0 as [Budgeted Qty],
	Case when DM.Doctype =  'Credit Note' THEN -1 Else 1 END * Qty as [Actual Qty],
	0 as [Budgeted Cost],
	0 as [Actual Cost],
	0 as [Budgeted Sales],
	Case when DM.Doctype =  'Credit Note' THEN -1 Else 1 END * PriceEx * qty * ((100 - isnull(discperc,0)) /100) as [Actual Sales],
	DD.ReportCategoryID,
	DM.DateCompleted,
	0 as [AssetID]
	FROM Debtor_Detail  DD
	LEFT JOIN (SELECT DocID, DocStatus,ProjectID,EntityID,DivisionID,DocType,DateCompleted FROM DEBTOR_Master) DM
	ON DD.DocID  = DM.DocID
	where DM.DocStatus = 'Completed'
	AND DocType in  ('Invoice', 'Credit Note')
	
	UNION ALL 
	
	--Select Supplier Invoiced items
	SELECT 
	DD.StockID, 
	DM.EntityID,
	isnull(DD.ProjectID, DM.ProjectID) as [ProjectID],
	isnull(DD.DivisionID, DM.DivisionID) as [DivisionID],
	0 as [Budgeted Qty],
	0 as [Actual Qty],
	0 as [Budgeted Cost],
	Case when DM.Doctype =  'Supplier Credit Note' THEN -1 Else 1 END * PriceEx * qty * ((100 - isnull(discperc,0)) /100) as [Actual Cost],
	0 as [Budgeted Sales],
	0 as [Actual Sales],
	DD.ReportCategoryID,
	DM.DateCompleted,
	0 as [AssetID]
	FROM Creditor_Detail  DD
	LEFT JOIN (SELECT DocID, DocStatus,ProjectID,EntityID,DivisionID,DocType,DateCompleted FROM Creditor_Master) DM
	ON DD.DocID  = DM.DocID
	Where DM.DocStatus = 'Completed'
	AND DocType in ('Supplier Invoice', 'Supplier Credit Note')
	
	UNION ALL
	
	--Select Cash Transactions
	SELECT - CTD.GLCodeID, 
	P.EntityID, 
	P.ProjectID,
	CTD.DivisionID, 
	0 as [Budgeted Qty],
	0 as [Actual Qty],
	0 as [Budgeted Cost],
	Case when GL.GLType in ('EXPENSE', 'COST OF SALES') THEN  TotalIncl / (VatPerc/ 100 + 1) ELSE 0 END as [Actual Cost],
	0 as [Budgeted Sales],
	Case when GL.GLType in ('OTHER INCOME', 'INCOME') THEN - TotalIncl / (VatPerc/ 100 + 1) ELSE 0 END as [Actual Sales],
	CTD.ReportCategoryID,
	CTD.DatePaid,
	CTD.AssetID
	FROM Cash_Transaction_Detail CTD
	LEFT JOIN (SELECT ProjectID, EntityID FROM Projects) P
	ON CTD.ProjectID = P.ProjectID
	LEFT JOIN (SELECT * FROM Cash_Transaction_Master) CTM
	ON CTD.DocID = CTM.DocID
	LEFT JOIN (SELECT * FROM AccGLCode) GL
	ON CTD.GlCodeID = GL.GlCodeID
	where isnull(CTM.IsComplete,0)  = 1
	AND GL.GLType in ('OTHER INCOME', 'INCOME', 'EXPENSE', 'COST OF SALES')
	
	UNION ALL
	
	--Select GL Transactions
	SELECT - CTD.GLCodeID, 
	P.EntityID, 
	P.ProjectID,
	CTD.DivisionID, 
	0 as [Budgeted Qty],
	0 as [Actual Qty],
	0 as [Budgeted Cost],
	Case when GL.GLType in ('EXPENSE', 'COST OF SALES') THEN  isnull(Debit,0) - isnull(Credit,0) ELSE 0 END as [Actual Cost],
	0 as [Budgeted Sales],
	Case when GL.GLType in ('OTHER INCOME', 'INCOME') THEN isnull(Credit,0) - isnull(Debit,0) ELSE 0 END as [Actual Sales],
	CTD.ReportCategoryID,
	CTD.AdjustDate,
	CTD.AssetID
    FROM Ledger_Adjust_Detail CTD
	LEFT JOIN (SELECT ProjectID, EntityID FROM Projects) P
	ON CTD.ProjectID = P.ProjectID
	LEFT JOIN (SELECT * FROM Ledger_Adjust_Master) CTM
	ON CTD.DocID = CTM.DocID
	LEFT JOIN (SELECT * FROM AccGLCode) GL
	ON CTD.GlCodeID = GL.GlCodeID
	where isnull(CTM.IsComplete,0)  = 1
	AND GL.GLType in ('OTHER INCOME', 'INCOME', 'EXPENSE', 'COST OF SALES')
	
	UNION ALL 
	
	--Select Expense Claims
    SELECT E.StockID,
    EntityID, 
    E.ProjectID,
    E.DivisionID,
    0 as [Budgeted Qty],
	0 as [Actual Qty],
	0 as [Budgeted Cost],
	TotalEx as [Actual Cost],
	0 as [Budgeted Sales],
	0 as [Actual Sales],
	0 as [ReportCategoryID],
	EC.DatePaid,
	0 as [AssetID]
	FROM AccExpenses E
    LEFT JOIN AccExpenseClaim EC ON E.ExpenseClaimID = EC.AccExpenseClaimID
    LEFT JOIN (SELECT StockID, StockCode, StockDescription, SoldBy, SoldBytoPurchasedbyRatio FROM AccStock) STK
    ON E.StockID = STK.StockID
    WHERE EC.DocStatus = 'Completed'
) A
LEFT JOIN (SELECT EntityID, Company FROM Entity ) E ON A.EntityID = E.EntityID
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P ON A.ProjectID = P.ProjectID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LD ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LRC ON A.ReportCategoryID = LRC.LookupID
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID AND A.StockID > 0 
LEFT JOIN (SELECT * FROM AccGLCode) GL ON A.StockID = - GL.GlCodeID AND A.StockID < 0 
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC ON A.ReportCategoryID = RC.LookupID
LEFT JOIN (	SELECT LookupID, Value
			FROM Lookup 
			where class like 'JournalType' 
		 	UNION ALL
			SELECT -1, 'ACCOUNTS RECEIVABLE'
			UNION ALL
			SELECT -2, 'OUTPUT VAT CONTROL' 
			UNION ALL
			SELECT -3, 'COST OF SALES' 
			UNION ALL
			SELECT -4, 'INVENTORY' 
			UNION ALL
			SELECT -5, 'INPUT VAT CONTROL' 
			UNION ALL
			SELECT -6, 'BANK' 
			UNION ALL
			SELECT -8, 'FOREIGN EXCHANGE' 
			UNION ALL
			SELECT -9, 'ACCOUNTS PAYABLE' 
			UNION ALL
			SELECT -10, 'UN-RECEIVED INVENTORY' 
			UNION ALL
			SELECT -11, 'PREPAID EXPENSE' 
			UNION ALL
			SELECT -12, 'CAPITAL' 
			UNION ALL
			SELECT -13, 'INVENTORY EXPENSE' 
			UNION ALL
			SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
			UNION ALL
			SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
			UNION ALL
			SELECT -16, 'DISCOUNT ALLOWED' 
			UNION ALL
			SELECT -17, 'DISCOUNT RECEIVED'
			UNION ALL
			SELECT -18, 'OPENING BALANCE' 
) LGL ON GL.GLCategoryID = LGL.LookupID
{where}
Group by LD.Value, convert(varchar, year(Date))  + '/' + convert(varchar, month(Date))
ORDER BY [Date], Division","0","","1","LRA-FUSION","0","0","fusion"
"39635","cv_Acc_CheckScanned","","select Sum(DD.QTY) as [Invoiced], isnull(Scanned,0) as [Scanned],DD.StockID, DD.StockCode 
from DEBTOR_DETAIL DD
Left join (SELECT StockId, RequiresScanning FROM AccStock) STK
ON DD.StockID = STK.StockID
LEFT JOIN (SELECT StockID, sum(QTY * Ratio) as [Scanned] FROM AccStockControl WHERE DocType = 'Invoice' AND DocID = {docid} group by StockId) SC
ON SC.StockID = DD.StockID
where DD.DocID = {docid} and isnull(stk.requiresscanning,0) = 1
Group By DD.StockID, DD.StockCode,Scanned
HAVING round(Sum(DD.QTY),6) + isnull(round(Scanned,6),0) <> 0

","0","","1","LRA-FUSION","0","0","fusion"
"39636","cv_Acc_LIFO_Stock","","SELECT Isnull(
(select Top 1 UnitPurchasePriceEx / Ratio FROM AccStockControl
where StockID = {stockid} AND DocType= 'Supplier Invoice' and adjustdate <= getdate()
ORDER BY AdjustDate desc)
,
(SELECT costpriceex / soldbytopurchasedbyratio from AccStock
where stockid = {stockid})
)","0","","1","LRA-FUSION","0","0","fusion"
"39637","cv_glpTask","","SELECT 
	GLP.TaskId,
	GLP.TaskId AS [Task ID],
	ISNULL(CONVERT(VARCHAR(30) ,GLP.TaskIDParent),'Parent') AS [Task ID Parent],
	CASE WHEN ISNULL(GLP.TaskIDParent,'') = '' THEN '' ELSE ISNULL(P.Displayname,'Unasigned') END AS [Task Parent],
	GLP.Displayname AS [Display Name],
	ISNULL(GLP.FormName,'Management Form') AS [Form Name],
	GLP.NavigationGroup AS [Navigation Group],
	GLP.valueRegistry AS [Value Registry],
	RIGHT('       ' + CAST(GLP.Rank AS VARCHAR(7)),7) AS [Rank],
	CASE GLP.hidden WHEN 1 THEN 'Hidden' ELSE 'Visible' END  AS [Hidden]
FROM glpTask GLP
LEFT JOIN glpTask P ON GLP.TaskIDParent = P.TaskID
{where}
ORDER BY ISNULL(CONVERT(VARCHAR(30) ,GLP.TaskIDParent),'Parent') desc","0","","1","LRA-FUSION","0","0","fusion"
"39638","cv_Acc_BudgetMan_Budget","","
SELECT
E.EntityID,
convert(varchar, year(Date))  + '/' + convert(varchar, month(Date))  as [Date],
isnull(E.Company,'') as [Client],
dbo.fnFormatNumber(sum(isnull(A.[Budgeted Sales],0)) - sum(isnull(A.[Budgeted Cost],0))) as [Budgeted Amt.]
FROM (
	--Select Cost Estimate items
	SELECT 
	CED.StockID, 
	CEM.EntityID,
	isnull(CED.ProjectID, CEM.ProjectID) as [ProjectID],
	isnull(CED.DivisionID, CEM.DivisionID) as [DivisionID],
	Qty as [Budgeted Qty],
	0 as [Actual Qty],
	(CostPriceEx * Qty ) as [Budgeted Cost],
	0 as [Actual Cost],
	PriceEx * qty * ((100 - isnull(discperc,0)) /100) as [Budgeted Sales],
	0 as [Actual Sales],
	CED.ReportCategoryID,
	CED.BudgetDate as [Date],
	0 as [AssetID]
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT DocID, PreviousDocID, RevisedToDoc,Revision, DocStatus,ProjectID,EntityID,DivisionID FROM Cost_Estimate_Master) CEM
	ON CED.DocID  = CEM.DocID
	where isnull(CEM.RevisedToDoc,0) = 0
	AND CEM.DocStatus <> 'Rejected'
	
	UNION ALL
	
	--Budget Items (May no longer be neccessary)
	SELECT 
	CED.StockID, 
	CED.EntityID,
	CED.ProjectID,
	CED.DivisionID,
	Qty as [Budgeted Qty],
	0 as [Actual Qty],
	(CostPriceEx * Qty ) as [Budgeted Cost],
	0 as [Actual Cost],
	UnitSellingPriceEx * qty  as [Budgeted Sales],
	0 as [Actual Sales],
	CED.GLReportCategoryID,
	CED.BudDate as [Date],
	0 as [AssetID]
	FROM AccBudget  CED
	WHERE isnull(CED.IsGLBudget,0) = 0
		
	UNION ALL 
	
	--Select Invoiced items
	SELECT 
	DD.StockID, 
	DM.EntityID,
	isnull(DD.ProjectID, DM.ProjectID) as [ProjectID],
	isnull(DD.DivisionID, DM.DivisionID) as [DivisionID],
	0 as [Budgeted Qty],
	Case when DM.Doctype =  'Credit Note' THEN -1 Else 1 END * Qty as [Actual Qty],
	0 as [Budgeted Cost],
	0 as [Actual Cost],
	0 as [Budgeted Sales],
	Case when DM.Doctype =  'Credit Note' THEN -1 Else 1 END * PriceEx * qty * ((100 - isnull(discperc,0)) /100) as [Actual Sales],
	DD.ReportCategoryID,
	DM.DateCompleted,
	0 as [AssetID]
	FROM Debtor_Detail  DD
	LEFT JOIN (SELECT DocID, DocStatus,ProjectID,EntityID,DivisionID,DocType,DateCompleted FROM DEBTOR_Master) DM
	ON DD.DocID  = DM.DocID
	where DM.DocStatus = 'Completed'
	AND DocType in  ('Invoice', 'Credit Note')
	
	UNION ALL 
	
	--Select Supplier Invoiced items
	SELECT 
	DD.StockID, 
	DM.EntityID,
	isnull(DD.ProjectID, DM.ProjectID) as [ProjectID],
	isnull(DD.DivisionID, DM.DivisionID) as [DivisionID],
	0 as [Budgeted Qty],
	0 as [Actual Qty],
	0 as [Budgeted Cost],
	Case when DM.Doctype =  'Supplier Credit Note' THEN -1 Else 1 END * PriceEx * qty * ((100 - isnull(discperc,0)) /100) as [Actual Cost],
	0 as [Budgeted Sales],
	0 as [Actual Sales],
	DD.ReportCategoryID,
	DM.DateCompleted,
	0 as [AssetID]
	FROM Creditor_Detail  DD
	LEFT JOIN (SELECT DocID, DocStatus,ProjectID,EntityID,DivisionID,DocType,DateCompleted FROM Creditor_Master) DM
	ON DD.DocID  = DM.DocID
	Where DM.DocStatus = 'Completed'
	AND DocType in ('Supplier Invoice', 'Supplier Credit Note')
	
	UNION ALL
	
	--Select Cash Transactions
	SELECT - CTD.GLCodeID, 
	P.EntityID, 
	P.ProjectID,
	CTD.DivisionID, 
	0 as [Budgeted Qty],
	0 as [Actual Qty],
	0 as [Budgeted Cost],
	Case when GL.GLType in ('EXPENSE', 'COST OF SALES') THEN  TotalIncl / (VatPerc/ 100 + 1) ELSE 0 END as [Actual Cost],
	0 as [Budgeted Sales],
	Case when GL.GLType in ('OTHER INCOME', 'INCOME') THEN - TotalIncl / (VatPerc/ 100 + 1) ELSE 0 END as [Actual Sales],
	CTD.ReportCategoryID,
	CTD.DatePaid,
	CTD.AssetID
	FROM Cash_Transaction_Detail CTD
	LEFT JOIN (SELECT ProjectID, EntityID FROM Projects) P
	ON CTD.ProjectID = P.ProjectID
	LEFT JOIN (SELECT * FROM Cash_Transaction_Master) CTM
	ON CTD.DocID = CTM.DocID
	LEFT JOIN (SELECT * FROM AccGLCode) GL
	ON CTD.GlCodeID = GL.GlCodeID
	where isnull(CTM.IsComplete,0)  = 1
	AND GL.GLType in ('OTHER INCOME', 'INCOME', 'EXPENSE', 'COST OF SALES')
	
	UNION ALL
	
	--Select GL Transactions
	SELECT - CTD.GLCodeID, 
	P.EntityID, 
	P.ProjectID,
	CTD.DivisionID, 
	0 as [Budgeted Qty],
	0 as [Actual Qty],
	0 as [Budgeted Cost],
	Case when GL.GLType in ('EXPENSE', 'COST OF SALES') THEN  isnull(Debit,0) - isnull(Credit,0) ELSE 0 END as [Actual Cost],
	0 as [Budgeted Sales],
	Case when GL.GLType in ('OTHER INCOME', 'INCOME') THEN isnull(Credit,0) - isnull(Debit,0) ELSE 0 END as [Actual Sales],
	CTD.ReportCategoryID,
	CTD.AdjustDate,
	CTD.AssetID
    FROM Ledger_Adjust_Detail CTD
	LEFT JOIN (SELECT ProjectID, EntityID FROM Projects) P
	ON CTD.ProjectID = P.ProjectID
	LEFT JOIN (SELECT * FROM Ledger_Adjust_Master) CTM
	ON CTD.DocID = CTM.DocID
	LEFT JOIN (SELECT * FROM AccGLCode) GL
	ON CTD.GlCodeID = GL.GlCodeID
	where isnull(CTM.IsComplete,0)  = 1
	AND GL.GLType in ('OTHER INCOME', 'INCOME', 'EXPENSE', 'COST OF SALES')
	
	UNION ALL 
	
	--Select Expense Claims
    SELECT E.StockID,
    EntityID, 
    E.ProjectID,
    E.DivisionID,
    0 as [Budgeted Qty],
	0 as [Actual Qty],
	0 as [Budgeted Cost],
	TotalEx as [Actual Cost],
	0 as [Budgeted Sales],
	0 as [Actual Sales],
	0 as [ReportCategoryID],
	EC.DatePaid,
	0 as [AssetID]
	FROM AccExpenses E
    LEFT JOIN AccExpenseClaim EC ON E.ExpenseClaimID = EC.AccExpenseClaimID
    LEFT JOIN (SELECT StockID, StockCode, StockDescription, SoldBy, SoldBytoPurchasedbyRatio FROM AccStock) STK
    ON E.StockID = STK.StockID
    WHERE EC.DocStatus = 'Completed'
) A
LEFT JOIN (SELECT EntityID, Company FROM Entity ) E ON A.EntityID = E.EntityID
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P ON A.ProjectID = P.ProjectID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LD ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LRC ON A.ReportCategoryID = LRC.LookupID
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID AND A.StockID > 0 
LEFT JOIN (SELECT * FROM AccGLCode) GL ON A.StockID = - GL.GlCodeID AND A.StockID < 0 
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC ON A.ReportCategoryID = RC.LookupID
LEFT JOIN (	SELECT LookupID, Value
			FROM Lookup 
			where class like 'JournalType' 
		 	UNION ALL
			SELECT -1, 'ACCOUNTS RECEIVABLE'
			UNION ALL
			SELECT -2, 'OUTPUT VAT CONTROL' 
			UNION ALL
			SELECT -3, 'COST OF SALES' 
			UNION ALL
			SELECT -4, 'INVENTORY' 
			UNION ALL
			SELECT -5, 'INPUT VAT CONTROL' 
			UNION ALL
			SELECT -6, 'BANK' 
			UNION ALL
			SELECT -8, 'FOREIGN EXCHANGE' 
			UNION ALL
			SELECT -9, 'ACCOUNTS PAYABLE' 
			UNION ALL
			SELECT -10, 'UN-RECEIVED INVENTORY' 
			UNION ALL
			SELECT -11, 'PREPAID EXPENSE' 
			UNION ALL
			SELECT -12, 'CAPITAL' 
			UNION ALL
			SELECT -13, 'INVENTORY EXPENSE' 
			UNION ALL
			SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
			UNION ALL
			SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
			UNION ALL
			SELECT -16, 'DISCOUNT ALLOWED' 
			UNION ALL
			SELECT -17, 'DISCOUNT RECEIVED'
			UNION ALL
			SELECT -18, 'OPENING BALANCE' 
) LGL ON GL.GLCategoryID = LGL.LookupID
{where}
Group by LD.Value, convert(varchar, year(Date))  + '/' + convert(varchar, month(Date)), E.entityid, E.Company
ORDER BY E.Company,[Date]","0","","1","LRA-FUSION","0","0","fusion"
"39639","cv_Calc_Leave_Taken","","-----Calculates used leave for a given range of cycle dates---------

DECLARE @CycleStart as datetime
DECLARE @CycleEnd as datetime
Set @CycleStart = '{cyclestart}'
Set @CycleEnd = '{cycleend}'

SELECT Sum((NoDays - Holidays) * PeriodMult) as [LeaveTaken] FROM 
(
        SELECT 
    CASE 
        WHEN (StartDate < @cycleStart AND EndDate > @cycleEnd) THEN DateDiff(d, @CycleStart, @CycleEnd) + 1                 	--i
        WHEN (EndDate between @cycleStart AND @cycleEnd AND StartDate < @CycleStart) THEN DateDiff(d, @CycleStart, EndDate) +1	--ii
        WHEN (StartDate >= @cycleStart AND EndDate <= @cycleEnd) THEN DateDiff(d, StartDate, EndDate) + 1 			--iii
        WHEN (StartDate between @cycleStart AND @cycleEnd AND EndDate > @CycleEnd) THEN DateDiff(d, StartDate, @CycleEnd) +1	--iv
    END as [NoDays],
    CASE 
        WHEN (StartDate < @cycleStart AND EndDate > @cycleEnd) THEN (SELECT count(NonWorkDay) from NonWorkDayTab)           --i
        WHEN (EndDate between @cycleStart AND @cycleEnd AND StartDate < @CycleStart) THEN (SELECT count(NonWorkDay) from NonWorkDayTab WHERE NonWorkDay between @CycleStart AND EndDate)--ii
        WHEN (StartDate >= @cycleStart AND EndDate <= @cycleEnd) THEN (SELECT count(NonWorkDay) from NonWorkDayTab WHERE NonWorkDay between StartDate AND EndDate)--iii
        WHEN (StartDate between @cycleStart AND @cycleEnd AND EndDate > @CycleEnd) THEN (SELECT count(NonWorkDay) from NonWorkDayTab WHERE NonWorkDay between StartDate AND @CycleEnd)--ii
    END as [Holidays], 
    UserID as [StaffID], PeriodTypeID, isGranted, LeaveTypeID, 
    Case When PeriodTypeID = 8 then 0.5 Else 1 END as [PeriodMult]
	
    FROM Leave 
    WHERE 
    (StartDate between @cycleStart AND @cycleEnd AND EndDate > @CycleEnd)       --iv
    OR (EndDate between @cycleStart AND @cycleEnd AND StartDate < @CycleStart)  --ii
    OR (StartDate < @cycleStart AND EndDate > @cycleEnd)                --i
    OR (StartDate >= @cycleStart AND EndDate <= @cycleEnd)              --iii
)A
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39640","cv_Calc_Leave_Holidays","","Delete From NonWorkDayTab
DECLARE @CycleStart as datetime
DECLARE @CycleEnd as datetime
Set @CycleStart = '{cyclestart}'
Set @CycleEnd = '{cycleend}'
--Count the number of weekend days in the given cycle
While @CycleStart <=  @CycleEnd
Begin
	IF DateNAME(dw,@CycleStart) = 'Saturday' or DateNAME(dw,@CycleStart) = 'Sunday' 
	BEGIN
		Insert into NonWorkDayTab(NonWorkDay) SELECT @CycleStart
	END	
	Set @CycleStart = dateadd(d,1,@CycleStart)
End
--Count the number of public holidays in the cycle (excluding Saturdays and Sundays)
Set @CycleStart = '{cyclestart}'
Set @CycleEnd = '{cycleend}'
insert into NonWorkDayTab(NonWorkDay) SELECT [Date] FROM PublicHoliday where [Date] Between @CycleStart AND @CycleEnd AND (DateNAME(dw, [Date]) <> 'Saturday' or DateNAME(dw, [Date]) <> 'Sunday' )","0","","1","LRA-FUSION","0","0","fusion"
"39641","cv_Project_Attendee","","select A.AttendeeID, EC.Firstname as [First Name], EC.Surname, Company,
NoOfAttendees as [No. Of Attendees],
convert(varchar,cast(costExVat as money),1) as [Attendance Fee],
convert(varchar,cast(costExVat * NoOfAttendees as money),1) as [Total],
case when isnull(isconfirmed,0) = 1 then 'Yes' ELSE 'No' END as [Confirmed],
case when isnull(hasAttended,0) = 1 then 'Yes' ELSE 'No' END as [Attended]
from ProjectAttendee A
LEFT JOIN (SELECT EntityID, Company From Entity )E
ON A.Entityid = E.Entityid
LEFT JOIN (SELECT EntityContactID, Firstname, Surname FROM EntityContact) EC
ON A.EntityContactID = Ec.EntityContactid
{where}
ORDER By Firstname, Surname","0","","1","LRA-FUSION","0","0","fusion"
"39642","cv_Acc_Billing","","
DECLARE @docid as integer
set @docid =  {docid}
SELECT DD.DocID, DD.StockID,DD.StockCode, DD.StockDescription, sum(DD.Qty) as [Qty],
sum(isnull(DDPrev.Qty,0)) as [qtyinvoiced], sum(isnull(DDPrev.Qty,0) - isnull(Credqty,0)) as [QtyOutstanding],
DD.PriceEx, DD.PriceIncl,sum(DD.TotalIncl) as [TotalIncl], DD.Comments,CostPriceEx,ClientID,ProjectID,DD.ContainerID
FROM BILLING_DETAIL DD
LEFT JOIN (SELECT DocID, PreviousDocID FROM BILLING_MASTER) DM
ON DD.DocID = Dm.Docid
LEFT JOIN (SELECT sum(Qty) as [Qty], DocID, StockID, Comments, PriceEx FROM BILLING_DETAIL Group by DocID, StockID, Comments, PriceEx) DDPrev	--Qty invoiced
ON Dm.PreviousDocID = DDPrev.DocID AND DD.StockID = DDPrev.StockID AND DD.Comments = ddprev.comments and dd.PriceEx = ddPrev.Priceex
LEFT JOIN (SELECT Sum(qty) as [CredQty], StockID, PriceEx, PreviousDocID,Comments FROM BILLING_DETAIL DD							--Qty Credited
		LEFT JOIN (SELECT DocID, PreviousDocID FROM BILLING_MASTER) DM
		ON DD.DocID = DM.DocID 
		Group by StockID, PriceEx, PreviousDocID,Comments
		) DDCred	
ON Dm.PreviousDocID = DDCred.PreviousDocID AND DD.StockID = DDCred.StockID AND DD.Comments = ddCred.comments and dd.PriceEx = ddCred.Priceex
WHERE DD.DocID = @DocID
Group by DD.DocID, DD.StockID,DD.StockCode, DD.StockDescription,DD.PriceEx, DD.PriceIncl, DD.Comments,CostPriceEx,ClientID,ProjectID,DD.ContainerID

","0","","1","LRA-FUSION","0","0","fusion"
"39643","cv_Acc_Billing_Man","","
SELECT DocID, [Doc. Type], [Doc. No.], LD.Value as [Division], 
CASE WHEN isnull(A.UseEC,0) = 1 then EC.AccountNum ELSE E.AccountNum END as [Account],
CASE WHEN isnull(A.UseEC,0) = 1 then EC.Contact ELSE E.Company END as [Client],
isnull(EH.Company,'') as [Holding Company],
A.ClientPo as [Customer Order Number], Project,Notes, 
Convert(varchar,Created,111) as [Created],Convert(varchar,[Doc. Date],111) as [Doc. Date],
[Status], U.Consultant,ExtSal.Value as [Ext. Consultant], Currency, [R.O.E.], 
dbo.fnFormatNumber([Total Ex. VAT]) as [Total Ex. VAT], 
dbo.fnFormatNumber([Total VAT]) as [Total VAT],
dbo.fnFormatNumber([Total Incl. VAT]) as [Total Incl. VAT],
dbo.fnFormatNumber([Est. Cost]) as [Est. Cost]
FROM 
(
	SELECT Convert(Varchar,DM.DocID) + '#' + DocType as [DocID], DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
	DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
	[ClientPO], P.ProjectName  as [Project],	isnull(DM.Memo,'') as Notes, 
	DateCreated as [Created],DateCompleted as [Doc. Date],DocStatus as [Status], DM.SalesRepID as [SalesRepID],DM.CreatedBy,
	DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1)) as [Total Ex. VAT], 
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * (([Total Incl. VAT] - [Total Ex. VAT])  / isnull(DM.ROE,1)) as [Total VAT], 
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT]  / isnull(DM.ROE,1))  as [Total Incl. VAT],
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))  as [Est. Cost],
	DM.Period, DM.BatchID, DM.Startdate, DM.EndDate, DM.OCInterval
	FROM BILLING_MASTER DM
	LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
	             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
	             FROM BILLING_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
	ON DM.DocID = DD.Docid
	LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM BILLING_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
	ON DM.DocID = SD.DocID
	LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
	ON DM.ProjectID = P.ProjectID

) A
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
	On A.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
	ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
	ON A.EntityID = E.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
	ON E.AlternateCompanyID = EH.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
	ON A.Entityid = EC.EntityContactID AND isnull(A.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
	ON E.SalesConsID = ExtSal.lookupid
{where}
ORDER BY A.DocID desc



","0","","1","LRA-FUSION","0","0","fusion"
"39644","cv_Project_Budget","","SELECT BudgetID, DocType as [Type], Company as [Supplier], convert(varchar,year(buddate))  + '/' + convert(varchar,month(buddate)) as [Date] ,
STK.StockDescription as [Item], convert(varchar,cast(case when DocType = 'Expense' then -1 else 1 End *  TotalSellingPriceEx as money),1) as [Total Ex.], 
convert(varchar,cast(isnull(CostPriceEx,0) * qty as money),1) as [C.O.S.]
FROM AccBudget B
LEFT JOIN (SELECT Entityid, Company FROM Entity) E
ON B.supplierid = E.Entityid
LEFT JOIN (SELECT StockID , StockDescription FROM AccStock) STK
ON B.StockID= STK.StockID 
{where}
ORDER BY BudDate","0","","1","LRA-FUSION","0","0","fusion"
"39645","cv_ProjectTeamMan","","SELECT PT.TeamID, TeamName as [Team Name] ,[No. of Members]
,isnull(firstname,'') + ' ' + isnull(Surname,'') as [Project Manager]
FROM ProjectTeam PT
LEFT JOIN (SELECT Count(staffid) as [No. of Members] , TeamID FROM ProjectTeamMembers Group By TeamID) PTM
ON PT.TeamID = PTM.TeamID
Left Join Staff S on S.StaffID=PT.ProjectManagerID
{where}
Order by TeamName","0","","1","LRA-FUSION","0","0","fusion"
"39646","cv_ContactsToMerge","","Select * from EntityContact 
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39647","cv_Mass_ContactTypes","","select distinct ct.contacttypeid, ct.[contacttype], isnull(eg.contacttypeid,0) as assigned
from contacttypes ct
left join (select contacttypeid from entitycontacttypes where entitycontactid in (<%entitycontactid%>)) eg on ct.contacttypeid = eg.contacttypeid
order by ct.[contacttype] desc","0","","1","LRA-FUSION","0","0","fusion"
"39648","cv_Mass_MOComms","","select distinct m.MOCommid, m.[MOComm], isnull(em.MOCommid,0) as assigned
from MOComm m
left join (select MOCommid from entitycontactMOComm where entitycontactid in (<%entitycontactid%>)) em on m.MOCommid = em.MOCommid
order by m.[MOComm] desc","0","","1","LRA-FUSION","0","0","fusion"
"39649","cv_Mass_Group","","select distinct
 g.groupid, g.[group], isnull(eg.groupid,0) as assigned
from (select lookup.lookupid as groupid, value as [group] from lookup 
LEFT JOIN LookupDivision  
ON LookupDivision.lookupid = lookup.lookupid  
where class like 'group' and (LookupDivision.divisionid in (<%divid%>))) g
left join (select groupid from entitycontactgroup where entitycontactid in (<%entitycontactid%>)) eg 
on g.groupid = eg.groupid
order by g.[group] desc","0","","1","LRA-FUSION","0","0","fusion"
"39650","cv_Tickets","","SELECT 
	t.TicketID, 
	[Developer], 
	e.Company,
	isnull(E.accountnum,'') as Accounts,  
	t.tMessage as [Subject], 
	t.tStatus as [Ticket Status],
	TicketType, 
	T.ProbType,
	ec.[Contact], 
	[Contact Email],
	Reference,
	isnull(US.FirstName,'') + ' ' + isnull(US.Surname,'') as [Assignned],
	isnull(t.ClientPO,'') as [Client Order],
	CONVERT(VARCHAR(10), t.DispatchDate, 103) AS [Delivery Date],
	ISNULL(Addr.Address1,'') as Add1,
	ISNULL(Addr.Address2,'') + ' ' + ISNULL(Addr.Address3,'') as Add2,
	ISNULL(Addr.Code,'') as Code,
	isnull((SELECT TOP 1 Currentstatus  FROM ticketStatus_log GL where Gl.TicketID=t.TicketID order by ID desc),Tstatus) as [Staus],
	isnull((SELECT TOP 1 CONVERT(VARCHAR(10), [Date], 103)   FROM ticketStatus_log LG where LG.TicketID=t.TicketID order by ID desc), CONVERT(VARCHAR(10), [DateCaptured], 103)) as [Staus date],
	SNO.Tel
FROM Tickets t
LEFT JOIN (SELECT staffID, eMail as [Developer Email], FirstName + ' ' + Surname as [Developer] FROM Staff) s ON s.StaffID = t.DeveloperID
LEFT JOIN Entity e ON t.EntityID = e.EntityID
LEFT JOIN Projects p ON p.ProjectID = t.ProjectID
LEFT JOIN (select entityContactID, Email as [Contact Email],isnull(FirstName,'') + ' ' + isnull(Surname,'')  as [Contact] from EntityContact) ec ON ec.EntityContactID = (SELECT Top 1 EntityContactID FROM TicketContacts where TicketID = T.TicketID)
LEFT JOIN Users US ON US.UserID= t.UserID
LEFT JOIN Staff SNO on SNO.StaffID = US.StaffID
LEFT JOIN (SELECT TicketID,Address1,Address2,Address3, Code FROM TicketAddress WHERE isTicketLocation = 1) Addr on Addr.TicketID = t.TicketID
Left Join EntityAddress EA on EA.EntityID = E.EntityID and EA.AddressType like 'Physical%'
Left Join EntityAddress ED on ED.EntityID = E.EntityID and ED.AddressType like 'POstal%'
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39651","cv_Acc_Payroll_Man","","SELECT P.DocID, ld.Value as [Division], [Staff Member] ,DocStatus as [Status],convert(varchar,DateCreated,111) as [Date Created], 
convert(varchar,DatePaid,111) as [Date Paid], PeriodType as [Period Type],
convert(varchar,cast(isnull([Gross Earnings], 0) as money),1) as [Gross Earnings],
convert(varchar,cast(isnull([Employee Deductions], 0) as money),1) as [Employee Deductions],
convert(varchar,cast(isnull([Employer Deductions], 0) as money),1) as [Employer Deductions],
convert(varchar,cast(isnull([Gross Earnings] , 0) - isnull([Employee Deductions], 0) as money),1) as [Nett Pay]
FROM AccPayroll P
LEFT JOIN (SELECT Staffid, isnull(firstname, '') + ' ' +  isnull(Surname,'') as [Staff Member] FROM Staff ) ST
ON P.Staffid =  ST.Staffid
LEFT JOIN Lookup LD  ON P.DivisionID = LD.LookupID
LEFT JOIN (SELECT Docid, sum(isnull(Amount,0)) as [Gross Earnings] FROM AccPayrollEarnings Group By DocID) PE
ON P.DocID = PE.DocID
LEFT JOIN (SELECT Docid, sum(isnull(Amount,0)) as [Employee Deductions] FROM AccPayrollDeductions WHERE Isnull(IsEmployerDeduction,0) = 0 Group By DocID) PED
ON P.DocID = PED.DocID
LEFT JOIN (SELECT Docid, sum(isnull(Amount,0)) as [Employer Deductions] FROM AccPayrollDeductions WHERE Isnull(IsEmployerDeduction,0) = 1 Group By DocID) PCD
ON P.DocID = PCD.DocID

{where}
ORDER By DatePaid Desc, [Staff Member]","0","","1","LRA-FUSION","0","0","fusion"
"39652","cv_Acc_Print_Payroll","","SELECT STK.StockDescription as [Description], isnull(Notes,' ') as [Notes],  
case when isdeduction = 1 then convert(varchar,cast(amount as money),1) Else ' ' End as [Deductions],
case when isdeduction = 0 then  convert(varchar,cast(amount as money),1) Else ' ' End as [Income]
FROM AccPayroll_Details PD
LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK
ON PD.Stockid = Stk.stockid
{where}
ORDER BY isDeduction , amount

","0","","1","LRA-FUSION","0","0","fusion"
"39653","cv_Acc_Print_CreditNote","","Declare @docID  as integer
Declare @CommentsBelow as bit
Declare @ShowComponents as integer
Set @DocID = {docid}
Set @CommentsBelow  = isnull((SELECT Top 1 Selected from crmSetup where variable = 'CommentsBelow'),0)
SET @ShowComponents = isnull((SELECT top 1 Selected  FROM CRMSetup WHERE [Description]  = 'AccPrint' AND Variable = 'PrintComponents' and custValue = 'Credit Note'),0)

{select} (
    SELECT LineId, 
    DD.GroupName,
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '-    ' ELSE '' END + StockCode as [Code], 
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '-    ' ELSE '' END + StockDescription  as [Description],
    comments,
    convert(varchar,round((Qty),4))  as [Qty], 
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber(PriceEx / isnull(DM.ROE,1)) END as [Price Ex. VAT], 
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber(( PriceEx) / isnull(DM.ROE,1)*Tax/100 ) END as [Unit VAT],
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber(( PriceEx) / isnull(DM.ROE,1)+(( PriceEx) / isnull(DM.ROE,1)*Tax/100) ) END as [Price Incl],
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) ) END as [Total Ex. VAT],
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1)*Tax/100 ) END as [VAT],
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1)+((Qty * PriceEx) / isnull(DM.ROE,1)*Tax/100) ) END as [Total Incl],
    isnull(BarCode,'') as [Barcode],
	isnull(SB.Value,'') as [Sold In],
    1 as [Rank],
    R.StartDate As [Rental Start Date],
    R.EndDate As [Rental End Date]
    FROM DEBTOR_DETAIL DD
    LEFT JOIN (SELECT StockID , BarCode, SoldBy FROM AccStock ) ACC
	ON DD.StockID = ACC.StockID
	LEFT JOIN Lookup SB ON SB.LookupID = ACC.SoldBy 
    LEFT JOIN (SELECT DocID , ROE FROM DEBTOR_MASTER ) DM
    ON DD.DocID = DM.DocID 
    LEFT JOIN (Select StartDate,EndDate,RentalID from RENTAL) R
    on R.RentalID = DD.RentalLineID
    WHERE DD.DocID = @docid
    AND (isnull(ComponentOfLineID,0) = @ShowComponents OR @ShowComponents = 1) 
    
    UNION ALL
 
    SELECT LineId, GroupName, '' as [Code],'-  ' + Comments as [Description],''as [Comments],  ''  as [Qty], 
    '' as [Price Ex. VAT], 
    '' as [Unit VAT],
    '' as [Price Incl. VAT],
    '' as [Total Ex. VAT],
    '' as [Tax],
    '' as [Total Incl],
    '' as [Barcode],
	'' as [Sold In],
    2 as [Rank],
    '' As [Rental Start Date],
    '' As [Rental End Date]
    FROM DEBTOR_DETAIL DD
    LEFT JOIN (SELECT DocID , ROE FROM DEBTOR_MASTER ) DM
    ON DD.DocID = DM.DocID 
    WHERE DD.DocID = @docid
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
    AND (isnull(ComponentOfLineID,0) = @ShowComponents OR @ShowComponents = 1) 
    ) A
ORDER By Lineid,Rank
","0","","1","LRA-FUSION","0","0","fusion"
"39654","SMS_app_name","","C:\Program Files\FusionSMSExpress\FusionSMSExpress.exe","0","","1","LRA-FUSION","0","0","fusion"
"39655","cv_Stock","","select 'StockID=' + rtrim(StockID) + '#S;BranchID=' + rtrim(ST.BranchID) + '#S;' as [StockID], [Description] as [Stock Item], 
Case isnull(IsStocking,1) When 1 then 'Stocking' else 'Non-Stocking' end as 'Item Type', StockId as [Stock Code], 
Case isnull(IsStocking,1) When 1 then PC.CatDesc Else '' End as [Price Cat],
Case isnull(IsStocking,1) When 1 then Convert(varchar(20),isnull(PC.Price,0),1) Else Convert(varchar(20),isnull(NonStkingPrice,0),1) End as [Selling Price],
Convert(varchar(20),isnull(DepCostPrice,0),1) as [Cost Price],
BarCode, ISBN as [ISBN Number], CC.CostCentre as [Cost Centre]
From Stock ST
LEFT JOIN CostCentre CC ON CC.CostCentreID = ST.CostCentreID and CC.BranchID = ST.BranchID
LEFT JOIN PriceCategory PC on PC.PriceCatId = ST.PriceCatID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39656","cv_contract","","SELECT 
 contractid,jobno AS [Job Number],
 cast(datepart(d,datefrom) AS nvarchar) + ' ' + left(datename(mm,datefrom),3) + ' ' + cast(datepart(yyyy,datefrom) AS nvarchar) AS [Start Date],
 cast(datepart(d,dateto) AS nvarchar) + ' ' + left(datename(mm,dateto),3) + ' ' + cast(datepart(yyyy,dateto) AS nvarchar) AS [End Date],
 Description, add1 + ' ' + add2 + ' ' + add3 + ' ' + code AS Address,phoneno AS [Phone Number],cellno AS [Cell Number]
FROM contracts
<%where%>","0","","1","LRA-FUSION","0","0","fusion"
"39657","cv_learnerprog","","Select learnerprogid, isnull(USTitle,'') as [US Title], isnull(SAQAUSID,'') as [SAQA us ID], isnull(Credits,'') as [Credits], isnull(field,'') as [Field], isnull(subfield,'') as [Sub Field],
isnull(NQFLevel,'') as [NQF Level], Convert(varchar, RegStartDate, 103) as [Reg Start Date], Convert(Varchar, RegEndDate, 103) as [Reg End Date], RegStatus as [Reg Status]
FROM LearnerProg
{where}
 order by ustitle","0","","1","LRA-FUSION","0","0","fusion"
"39658","cv_qualifications","","select Qualificationid, Qualtitle as [Qualification Title], saqaqualid as [SAQA Qual ID], Field, Subfield as [Sub Field],
nqflevel as [NQF Level], Convert(Varchar, regstartdate, 103) as [Reg Start Date], Convert(varchar, regenddate, 103) as [Reg End Date], regstatus as [Reg Status], mincredit as [Min Credit]
from qualification
{where}
 order by qualtitle","0","","1","LRA-FUSION","0","0","fusion"
"39659","cv_learners","","select l.learnerid, ISNULL(l.surname, '') + ', ' + ISNULL(l.firstname, '') as [Learner Name], e.company as [Company], l.learnerid As [Learner No.],l.NationalID As [ID] ,  l.Gender, l.telno as [Telephone No], l.cellno as [Cellphone No], l.email as [Email]
from learners l 
LEFT JOIN entity e on l.entityid = e.entityid
{where}
 order by l.surname + ' ' + l.firstname","0","","1","LRA-FUSION","0","0","fusion"
"39660","cv_documents2","","select entitydocumentid, l.value as [Doc Type], [Name], path as Location
from entitydocument d
left join lookup l on l.lookupid = d.doctypeid
<%where%>
order by [Name]
","0","","1","LRA-FUSION","0","0","fusion"
"39661","cv_learnprog","","select p.PFLearnProgramid,[Code], p.ProgName as [Learning Programme Name], p.type as [Learning Programme Type], q.qualtitle As 'Qualification', CONVERT(varchar, p.starttime, 108) as [Start Time], CONVERT(varchar, p.endtime, 108) as [End Time]
From PFLearnProgram p
LEFT JOIN Qualification q ON p.qualificationid = q.qualificationid
{where}
 order by p.progname","0","","1","LRA-FUSION","0","0","fusion"
"39662","cv_Assignments","","SELECT p.PFAssignmentID, p.Assname As 'Assignment Name', l.value As 'Assignment Type', CONVERT(varchar, p.Passmark) + '%' As 'Pass Mark'
FROM PFAssignment p
LEFT JOIN Lookup l ON p.AssType = l.lookupid {where}","0","","1","LRA-FUSION","0","0","fusion"
"39663","cv_CourseMaterials","","declare @ProjectID as int
set @ProjectID = {pid}

SELECT LineID, [Group], [Stock Code], [Description], [Comments], [Supplier], Qty, Discount, [Cost Ex.], [Price Ex.], [Price Incl.],[Total Incl.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.],
	dbo.fnFormatNumber(cast(PriceEx as money) * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1))) as [Total Incl.],
	Rank, -1000 as [Rank2]
	FROM pfcoursematerial  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND ced.PFLearnProgramID =  @ProjectID


	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.],
	dbo.fnFormatNumber(cast(PriceEx as money) * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1))) as [Total Incl.],
	--convert(varchar,cast(TotalIncl as money),1) as [Total Incl.], 
	ISNULL((SELECT Top 1 Rank From pfcoursematerial Where LineID = CED.ComponentOfLineID),1) ,Rank as [Rank2]
	FROM pfcoursematerial CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND ced.PFLearnProgramID =  @ProjectID


	) A

ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"39664","cv_CourseSchedule","","SELECT {top} c.CourseScheduleID, convert(varchar,CSD.[Start Date], 111) as [Start Date], c.CourseTitle As 'Course Title', p.ProgName As 'Programme Name', v.venue As 'Venue', isnull(t.surname,'') + ', ' + isnull(t.firstname,'') As 'Assessor', l.value As 'Region', q.QualTitle As 'Qualification', p.minlearners as [Min. Learners], p.maxlearners as [Max. Learners]
FROM CourseSchedule c
LEFT JOIN EntityContact t ON c.AssessorID = t.EntityContactID
LEFT JOIN Venue v ON c.VenueID = v.VenueID
LEFT JOIN lookup l ON l.lookupid = v.region
LEFT JOIN PFLearnProgram p ON c.PFLearnProgramID = p.PFLearnProgramID
LEFT JOIN Qualification q ON p.qualificationid = q.qualificationid
LEFT JOIN (SELECT Min([Date]) as [Start Date], CoursescheduleID FROM CourseScheduleDays group by CoursescheduleID ) CSD
ON c.coursescheduleid = CSD.CourseScheduleID
{where}
 order by csd.[Start Date] Desc,  c.CourseTitle","0","","1","LRA-FUSION","0","0","fusion"
"39665","cv_CourseScheduleDays","","select coursescheduledaysid, convert(varchar,[Date],103) As 'Training Date', Convert(varchar,StartTime,108) As 'Start Time', Convert(varchar,EndTime,108) As 'End Time', Descr As 'Description'
from CourseScheduleDays {where}
ORDER BY [Date]","0","","1","LRA-FUSION","0","0","fusion"
"39666","cv_CourseScheduleEnrol","","
SELECT  c.CourseScheduleEnrolementID, l.surname + ', ' + l.firstname As [Learner], Company, Convert(varchar, c.[Date], 103) As 'Date Enroled',
Case when sum(case when isnull(actual,0) - isnull(passmark,0) < 0 then 1 else 0 end) > 0 then 'Not Yet Competent' else 'Competent' end as [Status] ,
CASE WHEN (c.Cancelled = 1) THEN 'Yes' ELSE '' END As [Cancelled]
from CourseScheduleEnrolement C
LEFT JOIN (SELECT CourseScheduleID, PFLearnProgramID FROM CourseSchedule) CS
ON C.CoursescheduleID = CS.CoursescheduleID
LEFT JOIN (SELECT * FROM PFAssignment ) PF
ON CS.PFLearnprogramID = PF.PFLearnProgramID
LEFT JOIN learners l ON c.learnerid = l.learnerid
LEFT JOIN entity e ON l.entityid = e.entityid
LEFT JOIN (SELECT CourseScheduleEnrolementID, PFAssignmentID,Actual,'Competant' as [Value] FROM courseschedulemark) CSM
ON C.CourseScheduleEnrolementID = CSM.CourseScheduleEnrolementID and PF.PFAssignmentID = CSM.PFAssignmentID 
{where}
Group by c.CourseScheduleEnrolementID, l.surname,l.firstname, Company, [Date],Cancelled","0","","1","LRA-FUSION","0","0","fusion"
"39667","cv_CourseScheduleDaysCount","","SELECT  count(distinct [date]) from CourseScheduledays
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39668","cv_CourseScheduleDaysGet","","SELECT duration FROM pflearnprogram WHERE pflearnprogramid = 
(SELECT pflearnprogramid FROM CourseSchedule {where})","0","","1","LRA-FUSION","0","0","fusion"
"39669","cv_Venue","","select v.venueid, v.venue As 'Venue Name', lv.value As 'Venue Type', v.capacity As 'Capacity', lci.value As 'City', lr.value As 'Region', lco.value As 'Country'
FROM venue v
LEFT JOIN lookup lv ON lv.lookupid = v.type
LEFT JOIN lookup lci ON lci.value = v.city
LEFT JOIN lookup lr ON lr.lookupid = v.region
LEFT JOIN lookup lco ON lco.lookupid = v.country
{where}
 order by v.venue","0","","1","LRA-FUSION","0","0","fusion"
"39670","cv_PFLearnProgTask","","select p.Actionid as ""Action Taken"", convert(varchar,nextactiondate,103) as ""Due Date"",U.[Assigned To], comments as ""Comments"", lookup.[value] as ""Priority"", result as ""Results"" , convert(varchar, PercentageID) + ' %' as [Percentage Complete]
from Actions p
left join lookup on lookup.lookupid = p.priorityid
LEFT JOIN (SELECT UserID, Surname + ', '+ Firstname as [Assigned To] FROM Users) U
ON p.AssignedTo = U.userid
{where}
order by nextactiondate,priority","0","","1","LRA-FUSION","0","0","fusion"
"39671","cv_EmailLearners","","select *
FROM CourseSchedule c
LEFT JOIN coursescheduleenrolement ce ON c.coursescheduleid = ce.coursescheduleid
LEFT JOIN learners l ON ce.learnerid = l.learnerid
LEFT JOIN (SELECT venueid, venue FROM venue) v ON c.venueid = v.venueid
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39672","cv_AssignmentMarks","","SELECT newID(),CSM.CourseScheduleMarkID as [MarkID], A.PFAssignmentID, A.Assname As [Assignment Name],L.Value As [Assignment Type],Convert(Varchar, A.Passmark) + '%' As [Pass Mark], Convert(Varchar, CSM.Actual) + '%' As [Actual Mark],
CASE WHEN (cSm.actual >= A.passmark) THEN 'Competent' ELSE 'Not yet Competent' END as [Result] 
 FROM PFAssignment A
LEFT JOIN (SELECT CourseScheduleID, PFLearnProgramID FROM CourseSchedule) CS
ON A.PFLearnProgramid = CS.PFLearnProgramID
LEFT JOIN (SELECT CourseScheduleID, LearnerID,CourseScheduleEnrolementID FROM CourseScheduleEnrolement) CSE
ON CS.CourseScheduleID = CSE.CourseScheduleID
LEFT JOIN (SELECT Lookupid, Value From Lookup ) L
ON L.Lookupid = A.Asstype
LEFT JOIN (SELECT * FROM CourseScheduleMark ) CSM
ON A.PfAssignmentID = CSM.PFAssignmentID AND CSE.CourseScheduleEnrolementID = CSM.CourseScheduleEnrolementID 
 WHERE CSE.CourseScheduleEnrolementID = {where}
order by A.Assname





/*SELECT p.pfassignmentid, AssName AS 'Assignment Name', l.Value AS 'Assignment Type', CONVERT(varchar, p.passmark) + ' %' As 'Required Mark', CONVERT(VARCHAR, cm.actual) + ' %' As 'Actual Mark', CASE WHEN (cm.actual >= p.passmark) THEN 'Competent' ELSE 'Not yet Competent' END as [Result] FROM PFAssignment p

LEFT JOIN lookup l ON l.lookupid = p.asstype
LEFT JOIN courseschedule c ON p.pflearnprogramid = c.pflearnprogramid
LEFT JOIN coursescheduleenrolement ce ON c.coursescheduleid = ce.coursescheduleid
LEFT JOIN CourseScheduleMark cm ON ce.Coursescheduleenrolementid = ce.coursescheduleenrolementid and p.pfassignmentid = cm.pfassignmentid

 WHERE p.PFLearnProgramID = 
(SELECT PFLearnProgramID FROM CourseSchedule WHERE CourseScheduleID = 27
AND ce.LearnerID = {where2}*/


","0","","1","LRA-FUSION","0","0","fusion"
"39673","cv_AttendanceRegister","","SELECT ar.AttendanceRegisterID, isnull(l.surname,'') + ', ' + isnull(l.firstname,'') As [Learner], Convert(Varchar, ar.TrainingDate, 103) As [Date], CASE WHEN (ar.Present = 1) THEN 'Yes' ELSE 'No' END As [Attended]
FROM AttendanceRegister ar
LEFT JOIN Learners l ON l.learnerid = ar.learnerid
WHERE coursescheduleid = ","0","","1","LRA-FUSION","0","0","fusion"
"39674","cv_CourseScheduleTrainer","","SELECT t.CourseScheduleTrainerID, ec.surname + ', ' + firstname As 'Name' 
FROM CourseScheduleTrainer t
LEFT JOIN entitycontact ec ON ec.entitycontactid = t.entitycontactid
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39675","cv_CourseScheduleEnrolQual","","SELECT o.Outcomeid, Outcometitle as [Outcome Title], OutcomeType as [Outcome Type], OutcomeDesc as [Outcome Description], e.Evidence
FROM OutcomeQual2 o
LEFT JOIN Evidence e ON o.OutcomeID = e.OutcomeID AND e.LearnerID = {where2} AND e.Type = 'Qualification' AND e.CourseScheduleID = {where} 
WHERE QualificationID =
(SELECT QualificationID FROM PFLearnProgram WHERE PFLearnProgramID = 
(SELECT PFLearnProgramID FROM CourseSchedule WHERE CourseScheduleID = {where}))
","0","","1","LRA-FUSION","0","0","fusion"
"39676","cv_CourseScheduleEnrolOutcome","","SELECT o.Outcomeid, Outcometitle as [Outcome Title], OutcomeType as [Outcome Type], OutcomeDesc as [Outcome Description], e.Evidence
FROM Outcome o
LEFT JOIN Evidence e ON o.OutcomeID = e.OutcomeID AND e.LearnerID = {where2} AND e.type = 'Outcome' AND e.coursescheduleid = {where} 
WHERE LearnerProgID = 
(SELECT LearnerProgID FROM LearnerProg WHERE SAQAUSID = 
(SELECT SAQAUSID FROM LearnerProg lp WHERE learnerprogid IN 
(SELECT learnerprogid FROM pfqualificationsoutcome WHERE saqaqualid = 
(SELECT SAQAQualID FROM Qualification WHERE qualificationid = 
(SELECT qualificationid FROM PFLearnProgram WHERE PFLearnProgramid = 
(SELECT PFLearnProgramID FROM CourseSchedule WHERE CourseScheduleID = {where}))))))
","0","","1","LRA-FUSION","0","0","fusion"
"39677","cv_LearnerHistory","","-- If total amount of passed assignments = total amount of Assignments Then display 1
IF (SELECT COUNT(*) FROM CourseScheduleEnrolement CSE
    LEFT JOIN CourseScheduleMark CSM ON CSE.coursescheduleenrolementid = CSM.coursescheduleenrolementid
    LEFT JOIN PFAssignment PFA ON PFA.PFAssignmentID = CSM.PFAssignmentID
    WHERE CSE.LearnerID = {learnerid} AND CSM.Actual >= PFA.Passmark AND CSE.coursescheduleid = {coursescheduleid})

=  (SELECT COUNT(*) FROM PFAssignment PFA
    LEFT JOIN CourseSchedule CS ON PFA.PFLearnProgramID = CS.PFLearnProgramID
    LEFT JOIN CourseScheduleEnrolement CSE ON CS.CourseScheduleID = CSE.CourseScheduleID
    WHERE CSE.LearnerID = {learnerid} AND CSE.coursescheduleid = {coursescheduleid})

BEGIN
    SELECT '1'
END
ELSE
    SELECT '0'","0","","1","LRA-FUSION","0","0","fusion"
"39678","cv_LearnerHistoryDisplay","","SELECT CS.CourseScheduleID, CS.CourseTitle As 'Course Title', CSE.[Date] FROM CourseScheduleEnrolement CSE
LEFT JOIN Courseschedule CS ON CS.CourseScheduleID = CSE.CourseScheduleID
WHERE CSE.LearnerID = {learnerid}  AND ({coursescheduleid})
","0","","1","LRA-FUSION","0","0","fusion"
"39679","cv_Vision_history","","SELECT TrainHistoryID, CourseCode as [CourseCode], Course, Convert(varchar,Startdate, 103) as [Start],
Convert(varchar,enddate, 103) as [End], Mark, PassMark as [Required Pass Mark], Notes
 FROM LearnerHistory
where LearnerID = {learnerid}
ORDER BY StartDate","0","","1","LRA-FUSION","0","0","fusion"
"39680","rpt_Assessment","","select ce.CourseScheduleEnrolementID, Q.QualTitle,Q.SAQAQualID As QNum, PLP.ProgName, PLP.Code As ProgNum, [LName],IDNum,USTitle,LP.SAQAUSID, LP.Credits, Evidence AS Remarks, isnull(tst.Value, 'Not Yet Competent') As Status, [Assessor], StaffID, certificatetext1, certificatetext2 from CourseScheduleEnrolement ce
left join
(select CourseScheduleID, PFLearnProgramID,VenueID,AssessorID from CourseSchedule) cs
on cs.coursescheduleid = ce.coursescheduleid
left join
(select PFLearnProgramID, QualificationID, ProgName, Code, certificatetext1, certificatetext2 from PFLearnProgram) PLP
on PLP.PFLearnProgramID = CS.PFLearnProgramID
left join
(select QualificationID, QualTitle,SAQAQualID from qualification) Q
ON Q.QualificationID = PLP.QualificationID
left join
(select VenueID, Venue from Venue) V
on V.VenueID = cs.VenueID
left join
(select learnerid, isnull(firstname, '') + isnull(Surname,'') As [LName], NationalID As [IDNum] from learners) l
on l.learnerid = ce.learnerID
left join
(select EvidenceID, learnerID, Evidence From Evidence) E
on E.LearnerID = l.LearnerId
left join 
(select SAQAQualID, QualTitle, LearnerProgID, QualificationID from PFQualificationsOutcome) QOUT
On QOUT.QualificationID = Q.QualificationID
left join
(select learnerProgID, USTitle, SAQAUSID,Credits from LearnerProg) LP
on LP.learnerProgID = QOUT.LearnerProgID
LEFT JOIN (SELECT distinct case when (isnull(Actual,0) - isnull(PF.Passmark,0)) < 0 then 'Not Yet Competent' 
else 'Competent' END as [Value], coursescheduleenrolementid FROM  courseschedulemark csm 
LEFT JOIN (SELECT * FROM PFAssignment ) PF ON csm.PFassignmentid = pf.PFassignmentid) Tst
ON ce.CourseScheduleEnrolementID = Tst.CourseScheduleEnrolementID and tst.value = 'Not Yet Competent'
left join
(select StaffID, isnull(FirstName, '') + ' ' + isnull(Surname, '') As [Assessor] from Staff) S
on S.StaffID = cs.AssessorID
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"39681","rpt_Assessment2","","select USTitle as [Unit standard type and title],LP.SAQAUSID as [U/S CODE], LP.Credits as [Credit value awarded], AssessDate AS [Assessment Date],V.Venue As [Assessment Venue], isnull(tst.Value, 'Not Yet Competent') As Status,Evidence AS Remarks from CourseScheduleEnrolement ce
left join
(select CourseScheduleID, PFLearnProgramID,VenueID,AssessorID from CourseSchedule) cs
on cs.coursescheduleid = ce.coursescheduleid
left join
(select PFLearnProgramID, QualificationID, ProgName, Code from PFLearnProgram) PLP
on PLP.PFLearnProgramID = CS.PFLearnProgramID
left join
(select QualificationID, QualTitle,SAQAQualID from qualification) Q
ON Q.QualificationID = PLP.QualificationID
left join
(select VenueID, Venue from Venue) V
on V.VenueID = cs.VenueID
left join
(select learnerid, isnull(firstname, '') + isnull(Surname,'') As [LName], NationalID As [IDNum] from learners) l
on l.learnerid = ce.learnerID
left join
(select EvidenceID, learnerID, Evidence From Evidence) E
on E.LearnerID = l.LearnerId
left join 
(select SAQAQualID, QualTitle, LearnerProgID, QualificationID from PFQualificationsOutcome) QOUT
On QOUT.QualificationID = Q.QualificationID
left join
(select learnerProgID, USTitle, SAQAUSID,Credits from LearnerProg) LP
on LP.learnerProgID = QOUT.LearnerProgID
LEFT JOIN (SELECT distinct case when (isnull(Actual,0) - isnull(PF.Passmark,0)) < 0 then 'Not Yet Competent' 
else 'Competent' END as [Value], coursescheduleenrolementid, assessDate FROM  courseschedulemark csm 
LEFT JOIN (SELECT * FROM PFAssignment ) PF ON csm.PFassignmentid = pf.PFassignmentid) Tst
ON ce.CourseScheduleEnrolementID = Tst.CourseScheduleEnrolementID and tst.value = 'Not Yet Competent'
left join
(select StaffID, isnull(FirstName, '') + ' ' + isnull(Surname, '') As [Assessor] from Staff) S
on S.StaffID = cs.AssessorID
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"39682","rpt_AttendReg","","Select isnull(CourseTitle, '') AS COURSE, isnull(VENUE, '') As VENUE, isnull(TRAINER, '') AS TRAINER, Convert(varchar,csd.[Date],103) As [Date] from courseschedule cs
left join
(select venueID, Venue from Venue) v
on v.venueID = cs.venueID
left join 
(select * from CourseScheduleEnrolement) cse
on cse.coursescheduleid = cs.coursescheduleid
left join
(select CourseScheduleDaysID,CourseScheduleID, [Date] from coursescheduledays) csd
on csd.coursescheduleid = cs.coursescheduleid
left join 
(select learnerid,entityID, isnull(Surname, '') As [SURNAME], isnull(Firstname, '') AS [FIRST NAMES],learnerid As [LEARNER NO] from learners) l
on l.learnerid = cse.learnerid
left join
(select CourseScheduleEnrolementID, Actual As [RESULT] from CourseScheduleMark) csm
on csm.CourseScheduleEnrolementID = cse.CourseScheduleEnrolementID
left join
(select entityContactID, CourseScheduleDaysID from coursescheduletrainer) ct
On ct.CourseScheduleDaysID = csd.CourseScheduleDaysID
left join
(select entityContactID, isnull(Firstname,'') + ' ' + isnull(Surname, '') As Trainer from entityContact) T
on T.entityContactID = ct.entityContactID
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"39683","RPT_Assess","","
SELECT  USTitle,US.SAQAUSID, 
convert(varchar,case when isnull(a.Competent, 'NYC') = 'C' then  Credits Else Credits End) as [CreditsAwarded],
A.AssessDate, '{venue}' as [Venue],
case when isnull(a.Competent, 'NYC') = 'C' then  '&nbsp;' End as [C],
case when isnull(a.Competent, 'NYC') = 'NYC' then  '&nbsp;' End as [NYC],
Null as [Remarks]
FROM PFUnitStandards  LP
LEFT JOIN (SELECT LearnerProgID, USTitle,SAQAUSID, Credits FROM LearnerProg) US
ON LP.UnitStandardID = US.LearnerProgID
LEFT JOIN (
	SELECT  c.CourseScheduleEnrolementID,max(csm.assessdate) as [AssessDate],
	Case when sum(case when isnull(actual,0) - isnull(passmark,0) < 0 then 1 else 0 end) > 0 then 'NYC' else 'C' end as [Competent] 
	from CourseScheduleEnrolement C
	LEFT JOIN (SELECT CourseScheduleID, PFLearnProgramID FROM CourseSchedule) CS
	ON C.CoursescheduleID = CS.CoursescheduleID
	LEFT JOIN (SELECT * FROM PFAssignment ) PF
	ON CS.PFLearnprogramID = PF.PFLearnProgramID
	LEFT JOIN (SELECT CourseScheduleEnrolementID, PFAssignmentID,Actual,'Competant' as [Value],assessdate FROM courseschedulemark) CSM
	ON C.CourseScheduleEnrolementID = CSM.CourseScheduleEnrolementID and PF.PFAssignmentID = CSM.PFAssignmentID 
	where c.coursescheduleenrolementID = {enrolid}
	Group by c.CourseScheduleEnrolementID
) A
ON A.coursescheduleenrolementID = {enrolid}
where PFLearnProgramID = {lpid}


UNION ALL

SELECT '<B>TOTAL UNIT STANDARDS AND CREDITS OBTAINED</B>', '<B>' + convert(varchar,Count(USTitle)) + '</B>',
'<B>' + convert(varchar,sum(case when isnull(a.Competent, 'NYC') = 'C' then  Credits Else cast(Credits as integer) End))+ '</B>',
null,null,null,null,null 
FROM PFUnitStandards  LP
LEFT JOIN (SELECT LearnerProgID, USTitle,SAQAUSID, Credits FROM LearnerProg) US
ON LP.UnitStandardID = US.LearnerProgID
LEFT JOIN (
    	SELECT  c.CourseScheduleEnrolementID,max(csm.assessdate) as [AssessDate],
	Case when sum(case when isnull(actual,0) - isnull(passmark,0) < 0 then 1 else 0 end) > 0 then 'NYC' else 'C' end as [Competent] 
	from CourseScheduleEnrolement C
	LEFT JOIN (SELECT CourseScheduleID, PFLearnProgramID FROM CourseSchedule) CS
	ON C.CoursescheduleID = CS.CoursescheduleID
	LEFT JOIN (SELECT * FROM PFAssignment ) PF
	ON CS.PFLearnprogramID = PF.PFLearnProgramID
	LEFT JOIN (SELECT CourseScheduleEnrolementID, PFAssignmentID,Actual,'Competant' as [Value],Assessdate FROM courseschedulemark) CSM
	ON C.CourseScheduleEnrolementID = CSM.CourseScheduleEnrolementID and PF.PFAssignmentID = CSM.PFAssignmentID 
	where c.coursescheduleenrolementID = {enrolid}
	Group by c.CourseScheduleEnrolementID
) A
ON A.coursescheduleenrolementID = {enrolid}
where PFLearnProgramID = {lpid}
","0","","1","LRA-FUSION","0","0","fusion"
"39684","rpt_AssessHTML","","				<TR>
			<TD align=""center"" rowspan=""2""><B>Unit standard type and title</B></TD>	<TD align=""center"" rowspan=""2""><B>U/S CODE</B></TD>	<TD rowspan=""2"" align=""center""><B>Credit value awarded</B></TD> <TD rowspan=""2"" align=""center""><B>Assessment Date</B></TD>	<TD rowspan=""2"" align=""center""><B>Assessment Venue</B></TD>	<TD colspan=""3"" align=""center""><B>Assessment Results</B></TD>
		</TR
		<TR>
			<TD align=""center""><B>C</B></TD>	<TD align=""center""><B>NYC</B></TD> 		<TD align=""center""><B>Remarks</B></TD>
		</TR>","0","","1","LRA-FUSION","0","0","fusion"
"39685","cv_Learner_Course_History","","
SELECT  c.CourseScheduleEnrolementID, CourseTitle as [Course], Convert(varchar, min(csd.[Date]), 103) As 'Start Date', Convert(varchar, max(csd.[Date]), 103) As 'End Date',
Case when sum(case when isnull(actual,0) - isnull(passmark,0) < 0 then 1 else 0 end) > 0 then 'Not Yet Competent' else 'Competent' end as [Status],CSE.Notes
from CourseScheduleEnrolement C
LEFT JOIN (SELECT CourseScheduleID, CourseTitle,  PFLearnProgramID FROM CourseSchedule) CS
ON C.CoursescheduleID = CS.CoursescheduleID
LEFT JOIN (SELECT * FROM PFAssignment ) PF
ON CS.PFLearnprogramID = PF.PFLearnProgramID
LEFT JOIN learners l ON c.learnerid = l.learnerid
LEFT JOIN (SELECT CourseScheduleEnrolementID, PFAssignmentID,Actual,'Competant' as [Value] FROM courseschedulemark) CSM
ON C.CourseScheduleEnrolementID = CSM.CourseScheduleEnrolementID and PF.PFAssignmentID = CSM.PFAssignmentID 
LEFT JOIN (SELECT CourseScheduleID, [Date] FROM CourseScheduleDays) CSD
ON CS.CoursescheduleID = csd.CoursescheduleID
LEFT JOIN (SELECT CourseScheduleEnrolementID, cast(Notes as varchar) as [Notes] FROM CourseScheduleEnrolement) CSE
ON CSM.CourseScheduleEnrolementid = CSE.CourseScheduleEnrolementid
{where}
Group by c.CourseScheduleEnrolementID , CourseTitle, CSE.Notes
ORDER BY c.CourseScheduleEnrolementID
","0","","1","LRA-FUSION","0","0","fusion"
"39686","rpt_Training","","SELECT c.CourseScheduleEnrolementID, E.Company,
(SELECT Top 1 Address1  from Entityaddress  EA where EA.entityid = E.entityid and addressType = 'Postal') as [Postal Address 1],
(SELECT Top 1 Address2  from Entityaddress  EA where EA.entityid = E.entityid and addressType = 'Postal') as [Postal Address 2],
(SELECT Top 1 City  from Entityaddress  EA where EA.entityid = E.entityid and addressType = 'Postal') as [City],
(SELECT Top 1 Code  from Entityaddress  EA where EA.entityid = E.entityid and addressType = 'Postal') as [Code], 
[Co. Contact Title],[Company Contact],l.Title As [Learner Title],l.firstname as [First Name], 
l.surname as [Surname],l.NationalID as [ID],l.Gender,l.Race,CourseTitle as [Course], Convert(varchar, min(csd.[Date]), 103) As 'Start Date', 
Convert(varchar, max(csd.[Date]), 103) As 'End Date',
Case when sum(case when isnull(actual,0) - isnull(passmark,0) < 0 then 1 else 0 end) > 0 
then 'Not Yet Competent' else 'Competent' end as [Status],CSE.Notes
from CourseScheduleEnrolement C
LEFT JOIN (SELECT CourseScheduleID, CourseTitle,  PFLearnProgramID FROM CourseSchedule) CS
ON C.CoursescheduleID = CS.CoursescheduleID
LEFT JOIN (SELECT * FROM PFAssignment ) PF
ON CS.PFLearnprogramID = PF.PFLearnProgramID
LEFT JOIN learners l ON c.learnerid = l.learnerid
LEFT JOIN (SELECT distinct CourseScheduleEnrolementID, PFAssignmentID,Actual,'Competant' as [Value] FROM courseschedulemark) CSM
ON C.CourseScheduleEnrolementID = CSM.CourseScheduleEnrolementID and PF.PFAssignmentID = CSM.PFAssignmentID 
LEFT JOIN (SELECT CourseScheduleID, [Date] FROM CourseScheduleDays) CSD
ON CS.CoursescheduleID = csd.CoursescheduleID
inner JOIN (SELECT distinct CourseScheduleEnrolementID, cast(Notes as varchar) as [Notes] FROM CourseScheduleEnrolement) CSE
ON CSM.CourseScheduleEnrolementid = CSE.CourseScheduleEnrolementid
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON l.EntityID = E.Entityid
LEFT JOIN (Select EntityContactID,Title As [Co. Contact Title],isnull(Firstname,'') + ' ' + isnull(Surname,'') As [Company Contact] 
from EntityContact) EC 
on l.EntityContactID = EC.EntityContactID
{where}
Group by c.CourseScheduleEnrolementID , CourseTitle, CSE.Notes,l.title,l.firstname, l.surname,E.Company,l.NationalID,E.Entityid,
[Co. Contact Title],[Company Contact],l.Gender,l.Race

","0","","1","LRA-FUSION","0","0","fusion"
"39687","Cv_SETAReport","","SELECT cse.CourseScheduleEnrolementID,PFL.Type as [Learning Programme Type],PFL.ProgName as [Learning Programme Name],PFL.SDPRegNo as [Number of Learning program],L.NationalID as [Identity Number], L.Title as [Title of Learner], L.Firstname as [Name of Learner], L.Surname as [Surname of Learner], L.Race,
L.Gender,L.Dissability as [Disability], SocioEconomic as [Employment Status],L.Dissability as [Description of Disability],convert(varchar, BirthDate,103) as [Date of Birth],
L.Nationality,HomeLanguage as [Home Language], Lo.Value as [Highest School Qualification], HighestQual as [Highest Qualification],Q.RegStartDate as [Start Date],Q.RegEndDate as [End Date],
L.address1 as [Home Address (street and number)], Address2 as [Home Address (Suburb)], Address3 as [Home Address (City)],
Homeaddress as [Home Address (Province)],L.Postal1 as [Postal Address (street and number)], Postal2 as [Postal Address (Suburb)], 
Postal3 as [Postal Address (City)], l.PostalCode as [Postal Address (Postal Code)],
null as [Home Tel Number Code],TelNo as [Home Tel Number], null as [Work Tel Number Code], E.Switchboard as [Work Tel Number],
CellNo as [Cell Number], null as [Fax Code], FaxNo as [Fax Number], L.email as [E-mail],E.SDLNo as [Employer SDL number], E.Company as [Name of Company],
null as [Training Provider SDL Number], 'Plastics Federation of South Africa' as [Training Provider Name], '17-QA/ACC/0109/07' as [Training Provider Acreditation Number]
FROM Learners L
LEFT Join (SELECT Lookupid, Value FROM Lookup) Lo
ON L.HighestSchoolQual = Lo.Lookupid

LEFT JOIN (SELECT * FROM Entity ) E 
ON L.Entityid = E.Entityid
LEFT JOIN (SELECT CourseScheduleEnrolementID, LearnerID, CourseScheduleID FROM CourseScheduleEnrolement) CSE
ON L.LearnerID = CSE.LearnerID
LEFT JOIN (SELECT CourseScheduleID, PFLearnProgramID FROM CourseSchedule ) CS
ON CSE.CourseScheduleID = Cs.CourseScheduleID
LEFT JOIN (SELECT * from PFLearnProgram) PFL
on CS.PFLearnProgramID = PFL.PFLearnProgramID
Left JOIN (select * from Qualification) Q
ON PFL.QualificationID = Q.QualificationID

where CSE.CourseScheduleID = {courseschedid}
AND CSE.CourseScheduleEnrolementID IN ({learners})
","0","","1","LRA-FUSION","0","0","fusion"
"39688","cv_EmailLearners2","","select distinct l.entityContactID, EA.Address1,EA.Address2,EA.Address3,EA.City,EA.Code,ea.Region,Ea.Country,Ea.State
FROM CourseSchedule c
LEFT JOIN coursescheduleenrolement ce ON c.coursescheduleid = ce.coursescheduleid
LEFT JOIN learners l ON ce.learnerid = l.learnerid
LEFT JOIN (SELECT venueid, venue FROM venue) v ON c.venueid = v.venueid
left join EntityContact EC on l.entitycontactid = ec.entitycontactid
LEFT JOIN EntityAddress EA on ec.postaladdrID = EA.EntityAddressID 
{where} ","0","","1","LRA-FUSION","0","0","fusion"
"39689","cv_InternalProcess","","Select InternalProcessID,Regionalobjective As [Objective],l.value as [Division],Target,[Date],Complete from InternalProcessDetails ip
left join lookup l on l.lookupid = ip.division
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39690","cv_StaffDevelopment","","Select * from StaffDevelopmentDetails
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39691","cv_QuestionareTemp","","Select * from QuestionareTemplates
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39692","cv_QuestionareDetails","","Select * from QuestionDetails
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39693","cv_QuestionareMarks","","Select QD.QuestID,Question,Coursetrainer,Mark from Questiondetails QD
left join (select * from QuestionMarks) QM
on QM.QuestID = QD.QuestID
left join (select * from QuestionareTemplates) QT
on QT.QuestionareID = QD.QuestionareID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39694","cv_Questionare","","Select QuestionareDetailID,CourseTitle,Company,[Name] from QuestionareDetails QD
left join (Select CourseScheduleID,CourseTitle from CourseSchedule) CS
on QD.CourseScheduleID = CS.CourseScheduleID
left join (Select EntityID,Company from Entity) E
on QD.EntityID = E.EntityID
left join (Select Learnerid, isnull(Firstname,'') + ' ' + isnull(Surname,'') As [Name] from Learners) l
on QD.LearnerID = l.LearnerID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39695","rpt_Course_Date","","Select top 1 cs.CourseScheduleID,Convert(varchar,csd.[Date],103) As [Date] from courseschedule cs
left join
(select CourseScheduleDaysID,CourseScheduleID, [Date] from coursescheduledays) csd
on csd.coursescheduleid = cs.coursescheduleid

{where}
","0","","1","LRA-FUSION","0","0","fusion"
"39696","rpt_training_Vision","","Select distinct TrainHistoryID,E.Company,
(SELECT Top 1 Address1  from Entityaddress  EA where EA.entityid = E.entityid and addressType = 'Postal') as [Postal Address 1],
(SELECT Top 1 Address2  from Entityaddress  EA where EA.entityid = E.entityid and addressType = 'Postal') as [Postal Address 2],
(SELECT Top 1 City  from Entityaddress  EA where EA.entityid = E.entityid and addressType = 'Postal') as [City],
(SELECT Top 1 Code  from Entityaddress  EA where EA.entityid = E.entityid and addressType = 'Postal') as [Code],
[Co. Contact Title],[Company Contact],l.Title As [Learner Title],FirstName As [First Name],Surname,NationalID AS [ID],L.Gender,l.Race,
Course,StartDate As [Start Date],EndDate AS [End Date],
Case when sum(case when isnull(Mark,0) - isnull(passmark,0) < 0 then 1 else 0 end) > 0 
then 'Not Yet Competent' else 'Competent' end as [Status],LH.Notes from Learnerhistory LH
LEFT JOIN learners l ON LH.learnerid = l.learnerid
left join Entity E on l.EntityID = E.EntityID
LEFT JOIN (SELECT top 1 EntityID,EntityAddressID,AddressType,Address1,Address2,City,Code FROM EntityAddress where AddressType = 'Postal') EA
ON l.EntityID = EA.Entityid
LEFT JOIN (Select top 1 EntityContactID,EntityID,Title As [Co. Contact Title],isnull(Firstname,'') + ' ' + isnull(Surname,'') As [Company Contact] 
from EntityContact) EC 
on l.EntityContactID = EC.EntityContactID
{where}
Group By TrainHistoryID,E.Company,title,FirstName,Surname,NationalID,Course,StartDate,EndDate,LH.Notes,Ea.Address1,
Ea.Address2,City,Code,[Co. Contact Title],[Company Contact],E.EntityID,l.Gender,l.Race","0","","1","LRA-FUSION","0","0","fusion"
"39697","qf_CourseSearch","","Select top 50 * from (
Select distinct CS.CourseScheduleID, CourseTitle As Course,/*Trainer,*/
(select min(convert(varchar,[Date],103)) From CourseScheduleDays csd Where csd.CourseScheduleID = CS.CourseScheduleID) as [From Date],
(select max([Date]) From CourseScheduleDays csd Where csd.CourseScheduleID = CS.CourseScheduleID) as [To Date] 
from CourseSchedule CS
left join
(Select distinct CourseScheduleID,CourseScheduleDaysID from CourseScheduleDays) CD
on CS.CourseScheduleID = CD.CourseScheduleID
left join
(Select * from courseScheduleTrainer) CT
on CD.CourseScheduleDaysID = CT.CourseScheduleDaysID
left join 
(Select top 1 EntityContactID, isnull(Firstname,'') + ' ' + isnull(Surname,'') As Trainer from EntityContact) EC
on CT.EntityContactID = EC.EntityContactID
) a Where course like '%<%replace%>%'","0","","1","LRA-FUSION","0","0","fusion"
"39698","cv_NameCardDtls","","SELECT  c.CourseScheduleEnrolementID, l.knownas + ' ' + l.surname As [Learner], Company,ProgName, FromDate,ToDate
from CourseScheduleEnrolement C
LEFT JOIN (SELECT CourseScheduleID, PFLearnProgramID FROM CourseSchedule) CS
ON C.CoursescheduleID = CS.CoursescheduleID
LEFT JOIN (SELECT * FROM PFAssignment ) PF
ON CS.PFLearnprogramID = PF.PFLearnProgramID
LEFT JOIN learners l ON c.learnerid = l.learnerid
LEFT JOIN entity e ON l.entityid = e.entityid
LEFT JOIN (SELECT PFLearnProgramID, ProgName  FROM PFLearnProgram) LP
ON CS.PFLearnProgramID = LP.PFLearnProgramID
LEFT JOIN (SELECT CourseScheduleID, min([Date]) as  [FromDate] FROM CourseScheduleDays group by CourseScheduleID) dayMin
oN CS.CourseScheduleID = daymin.CourseScheduleID
LEFT JOIN (SELECT CourseScheduleID, max([Date]) as  [ToDate] FROM CourseScheduleDays group by CourseScheduleID) dayMax
oN CS.CourseScheduleID = daymax.CourseScheduleID
{where}
Group by c.CourseScheduleEnrolementID, l.surname,l.knownas, Company, [Date],Cancelled,ProgName,FromDate,ToDate","0","","1","LRA-FUSION","0","0","fusion"
"39699","cv_Acc_Scan_Invoice","","Declare @DocID as integer
Set @DocID =  {docid}


SELECT convert(varchar,DD.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, Sum(Qty) - isnull(SC.[QtyScanned],0) as [Qty], 'NOT SCANNED' as [S/N] 
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType FROM DEBTOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON DD.StockID = STK.StockID
LEFT JOIN (SELECT DocID, DocType, StockID,  sum(abs(Qty * Ratio)) as [QtyScanned] FROM  AccStockControl where DocID = @DocID Group by DocID, DocType, StockID) SC
ON DD.DocID = SC.DocID  AND DM.DocType = SC.DocType AND SC.StockID = DD.StockID 
WHERE DD.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1
GROUP BY STK.StockDescription,SC.[QtyScanned], DD.StockID
HAVING Sum(Qty) - isnull(SC.[QtyScanned],0) > 0

UNION ALL

SELECT convert(varchar,STK.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, [QtyScanned], SC.SerialNumber
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT  DocID, DocType, StockID, SerialNumber,abs(Qty * Ratio) as [QtyScanned]  FROM AccStockControl) SC
ON DM.DocID = SC.DocID AND DM.DocType = SC.DocType
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON SC.StockID = STK.StockID
WHERE DM.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1","0","","1","LRA-FUSION","0","0","fusion"
"39700","cv_Acc_Check_Un-Allocated","","--cv_Acc_Check_Un-Allocated

DECLARE @docid as integer
SET @DocID = {docid}

SELECT sum(DD.Qty) - isnull(Scanned,0) as [Un-Allocated], DD.StockDescription 
FROM DEBTOR_DETAIL DD
LEFT JOIN DEBTOR_MASTER DM ON DD.DocID =DM.DocID 
LEFT JOIN AccStock STK ON DD.StockID = STK.StockID
LEFT JOIN (SELECT StockID, DocID, DocType, abs(sum(qty * ratio)) as [Scanned] FROM AccStockControl WHERE DocID = @DocID GROUP BY StockID, DocID, DocType ) SC
ON DD.StockID = SC.StockID AND DM.DocType = Sc.DocType AND DD.DocID = SC.DocID 
Where DD.docID = @DocID
AND isnull(Stk.RequiresScanning,0) = 1
Group by SC.Scanned, DD.StockDescription
HAVING sum(DD.Qty) > isnull(Scanned,0) 
","0","","1","LRA-FUSION","0","0","fusion"
"39701","cv_Acc_Credit_Offset","","select DM.DocID, DocNo as [Doc. No.], 
dbo.fnFormatNumber(DD.Credit / isnull(DM.ROE,1)) as [Credit Value] ,  
dbo.fnFormatNumber((DD.Credit / isnull(DM.ROE,1)) - isnull(used,0)) as [Credit Available]
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT sum(PriceEx * qty * ((100 - isnull(DiscPerc,0))/100) * (isnull(Tax,0)/100 + 1) ) as [Credit], DocID FROM DEBTOR_DETAIL Group By DocID) DD
ON DM.DocID = DD.DocID
LEFT JOIN (SELECT PaymentDocID, sum(PaymentPortion) as [Used]  FROM DEBTOR_PAYMENT Group by PaymentDocID) DP
ON DM.DocID = DP.PaymentDocID
WHERE 
(DOCType like 'Credit Note' OR DocType Like 'Supplier Credit Note')
AND Isnull(PreviousDocID, 0 ) = 0
AND DD.Credit - isnull(used,0) > 0
{where}
ORDER BY DocNo","0","","1","LRA-FUSION","0","0","fusion"
"39702","cv_Acc_Check_Un-Received","","
DECLARE @docid as integer
SET @DocID = {docid}

SELECT DD.Qty * isnull(soldbytopurchasedbyratio,1) - isnull(Scanned,0) as [Un-Allocated], DD.StockDescription FROM CREDITOR_DETAIL DD
LEFT JOIN CREDITOR_MASTER DM ON DD.DocID =DM.DocID 
LEFT JOIN AccStock STK ON DD.StockID = STK.StockID
LEFT JOIN (SELECT StockID, DocID, DocType, sum(qty * ratio) as [Scanned] FROM AccStockControl GROUP BY StockID, DocID, DocType ) SC
ON DD.StockID = SC.StockID AND DM.DocType = Sc.DocType AND DD.DocID = SC.DocID 
Where DD.docID = @DocID
AND DD.Qty * isnull(soldbytopurchasedbyratio,1) - isnull(Scanned,0) > 0
AND isnull(Stk.istangible,0) = 1


","0","","1","LRA-FUSION","0","0","fusion"
"39703","cv_Acc_GL_HEADER","","DECLARE @StartDate as datetime
DECLARE @EndDate as datetime
Set @StartDate = '{startdate}'
Set @EndDate = '{enddate}'","0","","1","LRA-FUSION","0","0","fusion"
"39704","cv_Acc_GL_SALESJOURNAL","","--Sales Journal
--*******************************************************************************************************************************************
--Invoices***********************************************************************************************************************************
--*******************************************************************************************************************************************

--Invoice Completed : Dr. A.R.
SELECT DM.DateCompleted,DD.DocID,
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Invoice' as [Doc],'ACCOUNTS RECEIVABLE' as [GL],'ASSET' as [Type],
'Sales to: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
PriceEx * qty * ((100.00 - isnull(discperc,0))/100.00) * (isnull(DD.Tax,0) / 100 + 1)   as [Dr], null as [Cr],
PriceEx * qty * ((100.00 - isnull(discperc,0))/100.00) * (isnull(DD.Tax,0) / 100 + 1) / isnull(ROE,1)  as [ForeignDr], null as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], -1 as [JournalID], null as [ReportCategoryID],DM.Memo as [Notes], null as [ProjectID], null as [AssetID]
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,ClientPO,Memo,Currency, ProjectID FROM DEBTOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON DD.Stockid = STK.StockID
WHERE DM.DocType = 'Invoice' AND DocStatus = 'Completed' 
AND isnull(DD.ComponentOfLineID,0) = 0
AND isnull(DD.StockID,0) <> 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Invoice Completed : Cr. Income
SELECT DM.DateCompleted,DD.DocID, 
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID], 
'Invoice' as [Doc],
upper(L.Value)  + isnull(' - ' + RC.Value,'') as [GL],
CASE WHEN isnull(STK.BalanceSheetOnly,0)  = 1 then 'ASSET' ELSE 'INCOME' END as [Type],
'Sales to: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
null as [Dr], (PriceEx * Qty)  as [Cr],
null as [ForeignDr], (PriceEx * Qty) / isnull(DM.ROE,1) as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], STK.JournalID, DD.ReportCategoryID, DM.Memo, isnull(DD.ProjectID,DM.ProjectID), DD.AssetID
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,ClientPO,Memo, Currency, ProjectID FROM DEBTOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT StockID, JournalID,IsTangible,BalanceSheetOnly FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DD.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL'
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED'  
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON STK.JournalID = L.LookupID
WHERE DM.DocType = 'Invoice' AND DocStatus = 'Completed'
AND isnull(DD.ComponentOfLineID,0) = 0
AND isnull(DD.StockID,0) > 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Invoice Completed : Cr. Direct GL Code
SELECT DM.DateCompleted,DD.DocID, 
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID], 
'Invoice' as [Doc],
upper(L.Value)  + isnull(' - ' + RC.Value,'') as [GL],
GLType as [Type],
'Sales to: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
 null as [Dr], (PriceEx * Qty)  as [Cr],
 null as [ForeignDr], (PriceEx * Qty) / isnull(DM.ROE,1)  as [ForeignCr],
 DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], STK.GLCategoryID, DD.ReportCategoryID, DM.Memo, isnull(DD.ProjectID,DM.ProjectID),DD.AssetID
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,ClientPO,Memo, Currency,ProjectID FROM DEBTOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT * FROM AccGLCode) STK
ON DD.Stockid = - STK.GLCodeID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DD.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL'
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED'  
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON STK.GLCategoryID = L.LookupID
WHERE DM.DocType = 'Invoice' AND DocStatus = 'Completed'
AND isnull(DD.ComponentOfLineID,0) = 0
AND isnull(DD.StockID,0) < 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Invoice Completed : Dr. Discount Allowed Expense
SELECT DM.DateCompleted,DD.DocID, 
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Invoice' as [Doc],
'DISCOUNT ALLOWED' + isnull(' - ' + RC.Value,'') as [GL],
'EXPENSE' as [Type], 'Discount given to: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
PriceEx * Qty * (( isnull(discperc,0))/100) as [Dr], null as [Cr],
(PriceEx * Qty * (( isnull(discperc,0))/100)) / isnull(DM.ROE,1) as [ForeignDr], null as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], -16 as [JournalID],DD.ReportCategoryID, DM.Memo, isnull(DD.ProjectID,DM.ProjectID), DD.AssetID
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,ClientPO, Memo, Currency, ProjectID FROM DEBTOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT StockID, JournalID,IsTangible FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DD.ReportCategoryID = RC.LookupID
WHERE DM.DocType = 'Invoice' AND DocStatus = 'Completed'
AND round(PriceEx * Qty * (( isnull(discperc,0))/100),2) * isnull(ROE,1) <>0
AND isnull(ComponentOfLineID,0) = 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Invoice Completed : Cr. VAT Control
SELECT DM.DateCompleted,DD.DocID,
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Invoice' as [Doc],'OUTPUT VAT CONTROL' as [GL],'LIABILITY' as [Type],
'Sales to: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
 null as [Dr],
PriceEx * Qty * ((100 - isnull(discperc,0))/100) * (isnull(DD.TAX,0) / 100) as [Cr],
null as [ForeignDr],
(PriceEx * Qty * ((100 - isnull(discperc,0))/100) * (isnull(DD.TAX,0) / 100)) / isnull(DM.ROE,1) as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], -2,null, DM.Memo, null as [ProjectID],null as [AssetID]
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocNo,DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,clientpo,Memo, Currency, ProjectID FROM DEBTOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON DD.Stockid = STK.StockID
WHERE DM.DocType = 'Invoice' AND DocStatus = 'Completed'
AND isnull(DD.ComponentOfLineID,0) = 0
AND isnull(DD.StockID,0) <> 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--*******************************************************************************************************************************************
--Credit Notes*******************************************************************************************************************************
--*******************************************************************************************************************************************

--Credit Note Completed : Cr. A.R.
SELECT DM.DateCompleted,DD.DocID,
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Credit Note' as [Doc],'ACCOUNTS RECEIVABLE' as [GL],'ASSET' as [Type],
'Credited: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
null as [Dr], PriceEx * qty * ((100.00 - isnull(discperc,0))/100.00) * (isnull(DD.Tax,0) / 100.00 + 1)  as [Cr],
null as [Dr], (PriceEx * qty * ((100.00 - isnull(discperc,0))/100.00) * (isnull(DD.Tax,0) / 100.00 + 1)) / isnull(DM.ROE,1)  as [Cr],
DM.Currency, DM.ROE,
DD.StockID, DM.ClientPO as [Ref], -1,null, DM.Memo, null as [ProjectID], null as [AssetID]
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocNo,DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ClientPO,Memo,ROE,Currency, ProjectID FROM DEBTOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN Lookup L On STK.JournalID = L.LookupID
WHERE  DM.DocType = 'Credit Note' AND DocStatus = 'Completed'
AND isnull(DD.ComponentOfLineID,0) = 0
AND isnull(DD.StockID,0) <> 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Credit Note Completed : Dr. Income
SELECT DM.DateCompleted,DD.DocID,
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Credit Note' as [Doc],
upper(L.Value) + isnull(' - ' + RC.value,'') as [GL],
CASE WHEN isnull(STK.BalanceSheetOnly,0)  = 1 then 'ASSET' ELSE 'INCOME' END as [Type],
'Credited: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
PriceEx * qty * ((100.00 - isnull(discperc,0))/100.00) as [Dr] ,null as [Cr],
(PriceEx * qty * ((100.00 - isnull(discperc,0))/100.00)) / isnull(DM.ROE,1) as [ForeignDr] ,null as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], STK.JournalID, DD.ReportCategoryID, DM.Memo, isnull(DD.ProjectID,DM.ProjectID), DD.AssetID
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID,DocNo, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ClientPO,Memo,ROE,Currency, ProjectID FROM DEBTOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT StockID, JournalID,IsTangible,BalanceSheetOnly FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DD.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON STK.JournalID= L.LookupID
WHERE DM.DocType = 'Credit Note' AND DocStatus = 'Completed'
AND isnull(DD.ComponentOfLineID,0) = 0
AND isnull(DD.StockID,0) > 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Credit Note Completed : Dr. Direct GL
SELECT DM.DateCompleted,DD.DocID,
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Credit Note' as [Doc],
upper(L.Value) + isnull(' - ' + RC.value,'') as [GL],
STK.GLType as [Type],
'Credited: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
round(PriceEx * Qty ,2) * isnull(ROE,1) as [Dr] ,null as [Cr],
(round(PriceEx * Qty ,2) * isnull(ROE,1)) / isnull(DM.ROE,1) as [ForeignDr] ,null as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], STK.GLCategoryID, DD.ReportCategoryID, DM.Memo, isnull(DD.ProjectID,DM.ProjectID), DD.AssetID
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID,DocNo, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ClientPO,Memo,ROE, Currency, ProjectID FROM DEBTOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT * FROM AccGLCode) STK
ON DD.Stockid =  - STK.GLCodeID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DD.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON STK.GLCategoryID= L.LookupID
WHERE DM.DocType = 'Credit Note' AND DocStatus = 'Completed'
AND isnull(DD.ComponentOfLineID,0) = 0
AND isnull(DD.StockID,0) < 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Credit Note Completed : Dr. VAT Control
SELECT DM.DateCompleted,DD.DocID,
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Credit Note' as [Doc],'OUTPUT VAT CONTROL' as [GL],'LIABILITY' as [Type],'Credited: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END)  as [Description],
PriceEx * Qty * ((100 - isnull(discperc,0))/100) * (isnull(Tax,0) /100) as [Dr], null as [Cr],
(PriceEx * Qty * ((100 - isnull(discperc,0))/100) * (isnull(Tax,0) /100)) / isnull(DM.ROE,1) as [ForeignDr], null as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], -2, null,DM.Memo,null as [ProjectID],null as [AssetID]
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocNo,DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,clientpo,Memo,ROE, Currency, ProjectID FROM DEBTOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON DD.Stockid = STK.StockID
WHERE DM.DocType = 'Credit Note' AND DocStatus = 'Completed'
AND isnull(DD.ComponentOfLineID,0) = 0
AND isnull(DD.StockID,0) <> 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Credit Note Completed : Dr. Cost Of Sales
SELECT AdjustDate, Sc.DocID, Sc.DivisionID, 'Credit Note' AS [Doc], upper(L.Value) + isnull(' - ' + RC.Value,'') as [GL], 'COST OF SALES' as [Type], 'Credited: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
Null as [Dr],(SELECT Top 1 CostPriceEx  FROM DEBTOR_DETAIL WHERE DocID = SC.DocID AND StockID = SC.StockID) * SC.Qty * Ratio as [Cr],
Null as [ForeignDr],((SELECT Top 1 CostPriceEx  FROM DEBTOR_DETAIL WHERE DocID = SC.DocID AND StockID = SC.StockID) * SC.Qty * Ratio) / isnull(DM.ROE,1) as [ForeignCr],
DM.Currency, DM.ROE,
SC.StockID,DM.ClientPO as [Ref], STK.JournalID, SC.ReportCategoryID, DM.Memo, SC.ProjectID, null as [AssetID]
FROM AccStockControl SC
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,clientpo,Memo, Currency FROM DEBTOR_MASTER) DM
ON SC.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON SC.Stockid = STK.StockID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON STK.JournalID= L.LookupID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON SC.ReportCategoryID = RC.LookupID
WHERE SC.DocType = 'Credit Note'
AND SC.AdjustDate between @StartDate and @EndDate

UNION ALL

--Credit Note Completed : Cr. Inventory
SELECT AdjustDate, Sc.DocID, Sc.DivisionID, 'Credit Note' AS [Doc], upper(L.Value) as [GL], 'ASSET' as [Type], 'Credited: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
(SELECT Top 1 CostPriceEx FROM DEBTOR_DETAIL WHERE DocID = SC.DocID AND StockID = SC.StockID) * SC.Qty * Ratio as [Dr],Null as [Cr],
((SELECT Top 1 CostPriceEx FROM DEBTOR_DETAIL WHERE DocID = SC.DocID AND StockID = SC.StockID) * SC.Qty * Ratio) / isnull(DM.ROE,1) as [ForeignDr],Null as [ForeignCr],
DM.Currency, DM.ROE,
SC.StockID,DM.ClientPO as [Ref],STK.JournalID, null, DM.Memo, Null as [ProjectID], null as [AssetID]
FROM AccStockControl SC
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,clientpo,Memo, Currency FROM DEBTOR_MASTER) DM
ON SC.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON SC.Stockid = STK.StockID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON STK.JournalID= L.LookupID
WHERE SC.DocType = 'Credit Note'
AND SC.AdjustDate between @StartDate and @EndDate

UNION ALL

--*******************************************************************************************************************************************
--Payment Receipts***************************************************************************************************************************
--*******************************************************************************************************************************************

--Allocated Payment Receipt : Dr. Bank
SELECT Dm.DateCompleted, PaymentDocID, DM.DivisionID, 'Payment Receipt' as [Doc], upper(L.Value) as [GL], 'ASSET' as [Type],'Payment Received' as [Description] ,
round(round(sum(PaymentPortion * isnull(DM.ROE,1)),3),2)  as [Dr], null as [Cr],
round(round(sum(PaymentPortion),3),2)  as [ForeignDr], null as [ForeignCr],
DM.Currency, DM.ROE,
null as [StockID],DM.ClientPO as [Ref], GLC.GLCategoryID, Null,DM.Memo, Null as [ProjectID], Null as [AssetID]
FROM DEBTOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,clientPO,Memo, Currency FROM DEBTOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT BankAccountID, AccName, OBdate,GLCodeID FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT * FROM AccGLCode ) GLC
ON BNK.GLCodeID = GLC.GLCodeID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON GLC.GLCategoryID = L.LookupID
WHERE DM.DocType = 'Payment Receipt' 
AND InvoiceDocID > 0
AND DM.DateCompleted Between @startdate and @enddate 
GROUP BY  DateCompleted, PaymentDocID, DM.DivisionID,L.Value,dm.clientpo,GLC.GLCategoryID, DM.Memo, DM.Currency,DM.ROE

UNION ALL

---Allocated Payment Receipt : Cr. Accounts receivable
SELECT DM.DateCompleted, PaymentDocID, DM.DivisionID, 'Payment Receipt' as [Doc], 'ACCOUNTS RECEIVABLE' as [GL], 'ASSET' as [Type],
'Payment received from: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
null as [Dr],round(round(sum(PaymentPortion * isnull(DM2.ROE,1)),3),2) as [Cr],
null as [ForeignDr],round(round(sum(PaymentPortion ),3),2) as [ForeignCr],
DM.Currency, DM.ROE,
null as [StockID],DM.ClientPO as [Ref], -1,Null, DM.Memo, Null as [ProjectID], Null as [AssetID]
FROM DEBTOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,clientpo,Memo,Currency FROM DEBTOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE FROM DEBTOR_MASTER) DM2
ON DP.InvoiceDocID = DM2.DocID
LEFT JOIN (SELECT BankAccountID, AccName FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
WHERE DM.DocType = 'Payment Receipt' 
AND InvoiceDocID >0
AND DM.DateCompleted Between @startdate and @enddate 
GROUP BY  DM.DateCompleted, PaymentDocID, DM.DivisionID,E.Company, EC.Contact,DM.UseEC, DM.clientpo, DM.Memo, DM.Currency, DM.ROE

UNION ALL

---Allocated Payment Receipt with discount : Cr. Accounts receivable
SELECT DM.DateCompleted, PaymentDocID, DM.DivisionID, 'Payment Receipt' as [Doc], 'ACCOUNTS RECEIVABLE' as [GL], 'ASSET' as [Type],
'Discount Allowed: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
null as [Dr],round(round(sum(SettlementDiscount * isnull(DM2.ROE,1)),3),2) as [Cr],
null as [ForeignDr],round(round(sum(SettlementDiscount),3),2) as [ForeignCr],
DM.Currency, DM.ROE,
null as [StockID],DM.ClientPO as [Ref], -1,Null, DM.Memo, Null as [ProjectID], Null as [AssetID]
FROM DEBTOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,clientpo,Memo,Currency FROM DEBTOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE FROM DEBTOR_MASTER) DM2
ON DP.InvoiceDocID = DM2.DocID
LEFT JOIN (SELECT BankAccountID, AccName FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
WHERE DM.DocType = 'Payment Receipt' 
AND InvoiceDocID >0
AND DM.DateCompleted Between @startdate and @enddate 
GROUP BY  DM.DateCompleted, PaymentDocID, DM.DivisionID,E.Company, EC.Contact,DM.UseEC, DM.clientpo, DM.Memo, DM.Currency, DM.ROE

UNION ALL

--Allocated Payment Receipt with discount : Dr. Discount Allowed
SELECT DM.DateCompleted, PaymentDocID, DM.DivisionID, 'Payment Receipt' as [Doc], 'DISCOUNT ALLOWED' as [GL], 'EXPENSE' as [Type],
'Discount Allowed: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
round(round(sum(SettlementDiscount * isnull(DM2.ROE,1)),3),2) as [Dr],null as [Cr],
round(round(sum(SettlementDiscount ),3),2) as [ForeignDr],null as [ForeignCr],
DM.Currency, DM.ROE,
null as [StockID],DM.ClientPO as [Ref], -16,Null, DM.Memo, Null as [ProjectID], Null as [AssetID]
FROM DEBTOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,clientpo,Memo, Currency FROM DEBTOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE FROM DEBTOR_MASTER) DM2
ON DP.InvoiceDocID = DM2.DocID
LEFT JOIN (SELECT BankAccountID, AccName FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
WHERE DM.DocType = 'Payment Receipt' 
AND InvoiceDocID >0
AND DM.DateCompleted Between @startdate and @enddate 
GROUP BY  DM.DateCompleted, PaymentDocID, DM.DivisionID,E.Company, EC.Contact,DM.UseEC, DM.clientpo, DM.Memo, DM.Currency, DM.ROE

UNION ALL

--Allocated Payment Receipt : Dr/Cr. ForeEx Profit/Loss
SELECT DM.DateCompleted, PaymentDocID, DM.DivisionID, 'Payment Receipt' as [Doc], 'FOREIGN EXCHANGE' as [GL], 
CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) <= 0 then 'EXPENSE' ELSE 'OTHER INCOME' END  as [Type],
'Payment received from: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
round(round(CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) <= 0 then -1 * (sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1))) END,3),2) as [Dr],
round(round(CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) >= 0 then sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) END,3),2) as [Cr],
round(round(CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) <= 0 then -1 * (sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1))) END / isnull(DM.ROE,1) ,3),2) as [ForeignDr],
round(round(CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) >= 0 then sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) END / isnull(DM.ROE,1),3),2) as [ForeignCr],
DM.Currency, DM.ROE,
null as [StockID],DM.ClientPO as [Ref],-7,null, DM.Memo, Null as [ProjectID], Null as [AssetID]
FROM DEBTOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,clientpo,Memo, Currency FROM DEBTOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE FROM DEBTOR_MASTER) DM2
ON DP.InvoiceDocID = DM2.DocID
LEFT JOIN (SELECT BankAccountID, AccName FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
WHERE DM.DocType = 'Payment Receipt' 
AND InvoiceDocID >0
AND DM.DateCompleted Between @startdate and @enddate 
GROUP BY  DM.DateCompleted, DM.DivisionID,DP.PaymentDocID,E.Company, DM.UseEC, EC.Contact,DM.UseEc,dm.clientpo, DM.Memo, DM.Currency, DM.ROE

UNION ALL

--Un-Allocated Payment Receipt : Dr. Bank
SELECT DM.DateCompleted, PaymentDocID, DM.DivisionID, 'Payment Receipt' as [Doc],  upper(L.Value) as [GL], 'ASSET' as [Type],'Payment Received' as [Description] ,
round(round(sum(PaymentPortion * isnull(DM.ROE,1)),3),2)  as [Dr], null as [Cr],
round(round(sum(PaymentPortion),3),2)  as [ForeignDr], null as [ForeignCr],
DM.Currency,DM.ROE,
null as [StockID],DM.ClientPO as [Ref], GLC.GLCategoryID,null, DM.Memo, Null as [ProjectID], Null as [AssetID]
FROM DEBTOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,clientpo,Memo, Currency FROM DEBTOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT BankAccountID, AccName,OBDate,GLCodeID  FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT * FROM AccGLCode ) GLC
ON BNK.GLCodeID = GLC.GLCodeID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON GLC.GLCategoryID = L.LookupID
LEFT JOIN (SELECT DocID, DateCompleted FROM DEBTOR_MASTER) DMU
ON DP.InvoiceDocID = DMU.docid 
WHERE DM.DocType = 'Payment Receipt' 
AND InvoiceDocID = -2 
AND DM.DateCompleted Between @startdate and @enddate 
GROUP BY  DM.DateCompleted, PaymentDocID, DM.DivisionID,L.Value,dm.clientpo,GLC.GLCategoryID, DM.Memo, DM.Currency,DM.ROE
Having  Min(isnull(DMU.DateCompleted,'2200/01/01')) > DM.DateCompleted

UNION ALL

--Un-Allocated Payment Receipt : Cr. Accounts Receivable
SELECT DM.Datecompleted, DM.DocID, DM.DivisionID, 'Payment Receipt' as [Doc], 'ACCOUNTS RECEIVABLE' as [GL], 'ASSET' as [Type],
'Payment received from: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
null as [Dr], round(round(sum(PaymentPortion * isnull(DM.ROE,1)),3),2)  as [Cr],
null as [ForeignDr], round(round(sum(PaymentPortion ),3),2)  as [ForeignCr],
DM.Currency,DM.ROE,
null as [StockID],DM.ClientPO as [Ref], -1,null, DM.Memo, Null as [ProjectID], Null as [AssetID]
FROM DEBTOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,clientpo,Memo, Currency FROM DEBTOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE FROM DEBTOR_MASTER) DM2
ON DP.InvoiceDocID = DM2.DocID
LEFT JOIN (SELECT BankAccountID, AccName FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT DocID, DateCompleted FROM DEBTOR_MASTER) DMU
ON DP.InvoiceDocID = DMU.docid 
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
WHERE DM.DocType = 'Payment Receipt' 
AND DM.Datecompleted Between @startdate and @enddate 
AND InvoiceDocID = -2 
GROUP BY  DM.DateCompleted,DM.DocID, DM.DivisionID,E.Company,DM.UseEC,EC.Contact,DM.UseEC,dm.clientpo, DM.Memo, DM.Currency,DM.ROE
--??Having  Min(isnull(DMU.DateCompleted,'2200/01/01')) > DM.DateCompleted

UNION ALL

--*******************************************************************************************************************************************
--Dispatch Notes*******************************************************************************************************************************
--*******************************************************************************************************************************************

--Dispatch Note Completed : Dr. Cost Of Sales
SELECT SC.AdjustDate, SC.DocID, SC.DivisionID, 'Dispatch Note' AS [Doc], upper(L.Value) + isnull(' - ' + RC.Value,'') as [GL], 'COST OF SALES' as [Type], 'Stock dispatched to: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
SCV.CalculatedCost as [Dr], Null as [Cr],
SCV.CalculatedCost / isnull(DM.ROE,1) as [ForeignDr], Null as [ForeignCr],
DM.Currency, DM.ROE,
SC.StockID,DM.ClientPO as [Ref], STK.JournalID,SC.ReportCategoryID,DM.Memo, SC.ProjectID as [ProjectID], null as [AssetID]
FROM AccStockControl SC
LEFT JOIN (SELECT * FROM AccStockControlValuation) SCV
ON SC.StockControlID = SCV.StockControlID
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,clientpo, Memo, Currency FROM DEBTOR_MASTER) DM
ON SC.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON SC.Stockid = STK.StockID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON SC.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON STK.JournalID = L.LookupID
WHERE SC.DocType in ('Dispatch Note', 'Invoice')
AND SC.AdjustDate between @StartDate and @EndDate

UNION ALL

--Dispatch Note Completed : Cr. Inventory
SELECT SC.AdjustDate, SC.DocID, Sc.DivisionID, 'Dispatch Note' AS [Doc], upper(L.Value) as [GL], 'ASSET' as [Type], 'Stock dispatched to: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
Null as [Dr],SCV.CalculatedCost as [Cr],
Null as [ForeignDr], SCV.CalculatedCost / isnull(DM.ROE,1) as [ForeignCr],
DM.Currency, DM.ROE,
SC.StockID,DM.ClientPO as [Ref],  STK.JournalID,null, DM.Memo, Null as [ProjectID],null as [AssetID]
FROM AccStockControl SC
LEFT JOIN (SELECT * FROM AccStockControlValuation) SCV
ON SC.StockControlID = SCV.StockControlID
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,ClientPO,Memo, Currency FROM DEBTOR_MASTER) DM
ON SC.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON SC.Stockid = STK.StockID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON STK.JournalID = L.LookupID
WHERE SC.DocType in ('Dispatch Note', 'Invoice')
AND SC.AdjustDate between @StartDate and @EndDate","0","","1","LRA-FUSION","0","0","fusion"
"39705","cv_Acc_GL_PURCHASEJOURNAL","","--*******************************************************************************************************************************************
--Supplier Invoices**************************************************************************************************************************
--*******************************************************************************************************************************************

--Supplier Invoice Completed : Cr. A.P.
SELECT DM.DateCompleted,DD.DocID,
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Supplier Invoice' as [Doc],'ACCOUNTS PAYABLE' as [GL],'LIABILITY' as [Type],
'Purchases from: ' + Upper([Company]) as [Description],
null as [Dr],
PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(DD.Tax,0) /100 + 1) * isnull(ROE,1) as [Cr],
null as [ForeignDr],
PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(DD.Tax,0) /100 + 1) as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], -9 as [JournalID], null as [ReportCategoryID],DM.Memo, null as [ProjectID], null as [AssetID]
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,clientpo, Memo, Currency, ProjectID FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN Lookup L On STK.JournalID = L.LookupID
WHERE DM.DocType = 'Supplier Invoice' AND DocStatus = 'Completed' 
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Invoice Completed : Dr. VAT Control
SELECT DM.DateCompleted,DD.DocID,
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Supplier Invoice' as [Doc],'INPUT VAT CONTROL' as [GL],'ASSET' as [Type],'Purchases from: ' + Upper(E.Company) as [Description],
PriceEx * Qty * ((100 - isnull(discperc,0)) /100) * (isnull(DD.TAX,0) /100) * isnull(ROE,1) as [Dr],
null as [Cr],
PriceEx * Qty * ((100 - isnull(discperc,0)) /100) * (isnull(DD.TAX,0) /100) as [ForeignDr],
null as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], -5 as [JournalID],Null,DM.Memo,null as [ProjectID], null as [AssetID]
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,Clientpo,Memo, Currency, ProjectID FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN Lookup L On STK.JournalID = L.LookupID
WHERE DM.DocType = 'Supplier Invoice' AND DocStatus = 'Completed'
AND DM.DateCompleted between @StartDate and @EndDate


UNION ALL

--Supplier Invoice Completed-InTangible Items : Dr. Expenses
SELECT DM.DateCompleted,DD.DocID, 
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Supplier Invoice' as [Doc],upper(L.Value) + isnull(' - ' + RC.Value,'') as [GL],
CASE WHEN isnull(STK.BalanceSheetOnly,0)  = 1 then 'LIABILITY' ELSE 'EXPENSE' END as [Type],
'Purchases from: ' + Upper(E.Company) as [Description] ,
PriceEx * Qty  * isnull(ROE,1) as [Dr],Null as [Cr],
PriceEx * Qty   as [ForeignDr],Null as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], STK.JournalID as [JournalID],DD.ReportCategoryID, DM.Memo, isnull(DD.ProjectID,DM.ProjectID), DD.AssetID
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,Clientpo,Memo, Currency, ProjectID FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT StockID, JournalID,IsTangible,BalanceSheetOnly FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DD.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L  On STK.JournalID = L.LookupID
WHERE DM.DocType = 'Supplier Invoice' AND DocStatus = 'Completed'
AND STK.IsTangible = 0
AND DD.StockID > 0 
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Supplier Invoice Completed-InTangible Items : Dr. Direct GL
SELECT DM.DateCompleted,DD.DocID, 
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Supplier Invoice' as [Doc],upper(L.Value) + isnull(' - ' + RC.Value,'') as [GL],
STK.GLType as [Type],
'Purchases from: ' + Upper(E.Company) as [Description] ,
PriceEx * Qty  * isnull(ROE,1) as [Dr],Null as [Cr],
PriceEx * Qty  as [ForeignDr],Null as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], STK.GLCategoryID as [JournalID],DD.ReportCategoryID, DM.Memo, isnull(DD.ProjectID,DM.ProjectID), DD.AssetID
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,Clientpo,Memo, Currency, ProjectID FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT * FROM AccGLCode) STK
ON  - DD.Stockid = STK.GLCodeID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DD.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L  On STK.GLCategoryID = L.LookupID
WHERE DM.DocType = 'Supplier Invoice' AND DocStatus = 'Completed'
AND DD.StockID < 0
AND DM.DateCompleted between @StartDate and @EndDate


UNION ALL

--Supplier Invoice Completed-Tangible Items : Dr. Unreceived Inventory Asset
SELECT DM.DateCompleted,DD.DocID, 
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Supplier Invoice' as [Doc],'UN-RECEIVED INVENTORY' as [GL],'ASSET' as [Type],
'Un-received inventory from: ' + upper(E.Company)  as [Description],
PriceEx * Qty * isnull(ROE,1) as [Dr],Null as [Cr],
PriceEx * Qty as [ForeignDr],Null as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], -10 as [JournalID],null,DM.Memo, null as [ProjectID], null as [AssetID]
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID,DocNo, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,ClientPO, Memo, Currency, ProjectID FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT StockID, JournalID,IsTangible FROM AccStock) STK
ON DD.Stockid = STK.StockID
WHERE DM.DocType = 'Supplier Invoice' AND DocStatus = 'Completed'
AND STK.IsTangible = 1
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Supplier Invoice Completed : Cr. Discount Received Income 
SELECT DM.DateCompleted,DD.DocID, 
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Supplier Invoice' as [Doc],'DISCOUNT RECEIVED' + isnull(' - ' + RC.Value,'') as [GL],'INCOME' as [Type],
'Discount received from: ' + upper(E.Company)  as [Description],
Null as [Dr], PriceEx * Qty * (isnull(discperc,0) / 100) * isnull(ROE,1) as [Cr],
Null as [ForeignDr], PriceEx * Qty * (isnull(discperc,0) / 100) as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], -17 as [JournalID],DD.ReportCategoryID, DM.Memo, isnull(DD.ProjectID,DM.ProjectID), DD.AssetID
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,ClientPO, Memo, Currency, ProjectID FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT StockID, JournalID,IsTangible FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DD.ReportCategoryID = RC.LookupID
WHERE DM.DocType = 'Supplier Invoice' AND DocStatus = 'Completed'
AND PriceEx * Qty * (isnull(discperc,0) / 100) * isnull(ROE,1) <> 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--*******************************************************************************************************************************************
--Goods Received Notes***********************************************************************************************************************
--*******************************************************************************************************************************************

--Goods Received Note Completed-Stock Received : Dr. Inventory
SELECT AdjustDate, SC.DocID, DivisionID, 'Goods Received Note' AS [Doc], upper(L.Value) as [GL], 'ASSET' as [Type], 'Inventory received from: ' + Upper(E.Company) as [Description],
round(round((SELECT Top 1 priceEx /** ((100 - isnull(discperc,0))/100)*/ * isnull(ROE,1) FROM CREDITOR_DETAIL CD LEFT JOIN CREDITOR_MASTER CM ON CD.docID = CM.DocID WHERE CD.DocID = SC.DocID AND StockID = SC.StockID) * SC.Qty ,8),8)  as [Dr], null as [Cr],
round(round((SELECT Top 1 priceEx /** ((100 - isnull(discperc,0))/100)*/  FROM CREDITOR_DETAIL CD LEFT JOIN CREDITOR_MASTER CM ON CD.docID = CM.DocID WHERE CD.DocID = SC.DocID AND StockID = SC.StockID) * SC.Qty ,8),8)  as [ForeignDr], null as [ForeignCr],
CM.Currency, CM.ROE,
SC.StockID,cM.ClientPO as [Ref], STK.JournalID [JournalID],null, CM.Memo, null as [ProjectID], null as [assetid]
FROM AccStockControl SC
LEFT JOIN (SELECT DocID, EntityID,ClientPO, Memo, Currency, ROE FROM CREDITOR_MASTER) CM
ON SC.DocID = CM.DocID
LEFT JOIN (SELECT Entityid, company FROM Entity ) E
ON CM.Entityid= E.Entityid
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON SC.Stockid = STK.StockID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L  On STK.JournalID = L.LookupID
WHERE SC.DocType = 'Goods Received Note'
AND SC.AdjustDate between @StartDate and @EndDate



UNION ALL

--Goods Received Note Completed-Stock Received : Cr. Un-Received Inventory
SELECT AdjustDate, SC.DocID, DivisionID, 'Goods Received Note' AS [Doc], 'UN-RECEIVED INVENTORY' as [GL], 'ASSET' as [Type], 'Inventory received from: ' + Upper(E.Company) as [Description],
null as [Dr],round(round((SELECT Top 1 priceEx /** ((100 - isnull(discperc,0))/100)*/ * isnull(ROE,1) FROM CREDITOR_DETAIL CD LEFT JOIN CREDITOR_MASTER CM ON CD.docID = CM.DocID WHERE CD.DocID = SC.DocID AND StockID = SC.StockID) * SC.Qty,8),8)  as [Cr],
null as [ForeignDr],round(round((SELECT Top 1 priceEx /** ((100 - isnull(discperc,0))/100)*/  FROM CREDITOR_DETAIL CD LEFT JOIN CREDITOR_MASTER CM ON CD.docID = CM.DocID WHERE CD.DocID = SC.DocID AND StockID = SC.StockID) * SC.Qty,8),8)  as [ForeignCr],
CM.Currency, CM.ROE,
SC.StockID,cM.ClientPO as [Ref], -10 as [JournalID],null,CM.Memo, null as [ProjectID], null as [AssetID]
FROM AccStockControl SC
LEFT JOIN (SELECT DocID, EntityID,ClientPO,Memo,ROE,Currency FROM CREDITOR_MASTER) CM
ON SC.DocID = CM.DocID
LEFT JOIN (SELECT Entityid, company FROM Entity ) E
ON CM.Entityid= E.Entityid
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON SC.Stockid = STK.StockID
WHERE SC.DocType = 'Goods Received Note'
AND SC.AdjustDate between @StartDate and @EndDate

UNION ALL
--*******************************************************************************************************************************************
--Credit Notes*******************************************************************************************************************************
--*******************************************************************************************************************************************

--Credit Note Completed : Dr. A.P.
SELECT DM.DateCompleted,DD.DocID,
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Supplier Credit Note' as [Doc],'ACCOUNTS PAYABLE' as [GL],'LIABILITY' as [Type],
'Credit received from: ' + Upper([Company]) As [Description],
PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(DD.Tax,0 ) /100 + 1) * isnull(ROE,1) as [Dr],null as [Cr],
PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(DD.Tax,0 ) /100 + 1)  as [ForeignDr],null as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], -9 as [JournalID],null,DM.Memo,null as [ProjectID], null as [AssetID]
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,ClientPO,Memo, Currency, ProjectID FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN Lookup L On STK.JournalID = L.LookupID
WHERE DM.DocType = 'Supplier Credit Note' AND DocStatus = 'Completed'
AND DD.StockID <> 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Credit Note Completed : Cr. Direct GL
SELECT DM.DateCompleted,DD.DocID, 
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Supplier Credit Note' as [Doc],upper(L.Value) + isnull(' - ' + RC.Value,'') as [GL],
STK.GLType as [Type],
'Credit received from: ' + Upper(E.Company) as [Description] ,
Null as [Dr], PriceEx * Qty  * isnull(ROE,1) as [Cr],
Null as [foreignDr], PriceEx * Qty  as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], STK.GLCategoryID as [JournalID],DD.ReportCategoryID, DM.Memo, isnull(DD.ProjectID,DM.ProjectID), DD.AssetID
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,Clientpo,Memo, Currency, ProjectID FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT * FROM AccGLCode) STK
ON  - DD.Stockid = STK.GLCodeID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DD.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L  On STK.GLCategoryID = L.LookupID
WHERE DM.DocType = 'Supplier Credit Note' AND DocStatus = 'Completed'
AND DD.StockID < 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Supplier Credit Note Completed : Cr. VAT Control
SELECT DM.DateCompleted,DD.DocID,
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Supplier Credit Note' as [Doc],'INPUT VAT CONTROL' as [GL],'ASSET' as [Type],'Credit received from: ' + Upper(e.Company) as [Description],
null as [Dr], PriceEx * Qty * ((100 - isnull(discperc,0))/100) * (isnull(DD.Tax,0) /100) * isnull(ROE,1) as [Cr],
null as [ForeignDr], PriceEx * Qty * ((100 - isnull(discperc,0))/100) * (isnull(DD.Tax,0) /100) as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], -5 as [JournalID],null, DM.Memo, null as [ProjectID], null as [AssetID]
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,ClientPO,Memo,Currency,ProjectID FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN Lookup L On STK.JournalID = L.LookupID
WHERE DM.DocType = 'Supplier Credit Note' AND DocStatus = 'Completed'
AND DD.StockID <> 0
AND DM.DateCompleted between @StartDate and @EndDate


UNION ALL

--Supplier Credit Note Completed : Cr. Expenses
SELECT DM.DateCompleted,DD.DocID, 
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Supplier Credit Note' as [Doc],upper(L.Value) + isnull(' - ' + RC.Value,'') as [GL],
CASE WHEN isnull(STK.BalanceSheetOnly,0)  = 1 then 'LIABILITY' ELSE 'EXPENSE' END as [Type],
Upper(L.Value) as [Description],
null as [Dr], PriceEx * Qty *  isnull(ROE,1) as [Cr],
null as [ForeignDr], PriceEx * Qty as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], STK.JournalID as [JournalID],
DD.ReportCategoryID, DM.Memo, isnull(DD.ProjectID,DM.ProjectID), DD.AssetID
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,ClientPO,Memo, Currency, ProjectID FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT StockID, JournalID,IsTangible,BalanceSheetOnly FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN Lookup L On STK.JournalID = L.LookupID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DD.ReportCategoryID = RC.LookupID
WHERE DM.DocType = 'Supplier Credit Note' AND DocStatus = 'Completed'
AND STK.IsTangible = 0
AND DD.StockID > 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Supplier Credit Note Completed-Tangible Stock : Cr. Un-Received Inventory
SELECT DM.DateCompleted,DD.DocID, 
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Supplier Credit Note' as [Doc],'UN-RECEIVED INVENTORY' as [GL],'ASSET' as [Type],
'Credit received from: ' + Upper(e.Company) as [Description],
null as [Dr],PriceEx * Qty *  isnull(ROE,1) as [Cr],
null as [ForeignDr],PriceEx * Qty  as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], -10 as [JournalID],null, DM.Memo, null as [ProjectID], null as [AssetID]
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,ClientPO,Memo,Currency, ProjectID FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT StockID, JournalID,IsTangible FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN Lookup L On STK.JournalID = L.LookupID
WHERE DM.DocType = 'Supplier Credit Note' AND DocStatus = 'Completed'
AND STK.IsTangible = 1
AND DD.StockID > 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--Supplier Credit Note Completed : Cr. Inventory
SELECT AdjustDate, SC.DocID, DivisionID, 'Supplier Credit Note' AS [Doc], upper(L.Value) as [GL], 'ASSET' as [Type], 'Credit received from: ' +  Upper(E.Company) as [Description],
null as [Dr],
(SELECT Top 1 priceEx * ((100 - isnull(discperc,0))/100) * isnull(ROE,1) FROM CREDITOR_DETAIL CD LEFT JOIN CREDITOR_MASTER CM ON CD.docID = CM.DocID WHERE CD.DocID = SC.DocID AND StockID = SC.StockID) * -SC.Qty  as [Cr] ,
null as [ForeignDr],
(SELECT Top 1 priceEx * ((100 - isnull(discperc,0))/100) FROM CREDITOR_DETAIL CD LEFT JOIN CREDITOR_MASTER CM ON CD.docID = CM.DocID WHERE CD.DocID = SC.DocID AND StockID = SC.StockID) * -SC.Qty  as [ForeignCr] ,
CM.Currency, CM.ROE,
SC.StockID,cM.ClientPO as [Ref],STK.JournalID as [JournalID],null, CM.Memo, null as [ProjectID] , null as [AssetID]
FROM AccStockControl SC
LEFT JOIN (SELECT DocID, Entityid,clientpo,Memo, ROE, Currency, ProjectID FROM CREDITOR_MASTER) CM
ON SC.DocID = CM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity)E
ON CM.EntityID = E.Entityid
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON SC.Stockid = STK.StockID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L  On STK.JournalID = L.LookupID
WHERE SC.DocType = 'Supplier Credit Note'
AND SC.AdjustDate between @StartDate and @EndDate


UNION ALL

--Supplier Credit Note Completed : Dr. Un-Received Inventory
SELECT AdjustDate, SC.DocID, DivisionID, 'Supplier Credit Note' AS [Doc], 'UN-RECEIVED INVENTORY' as [GL], 'ASSET' as [Type], 'Inventory returned to: ' +  Upper(E.Company) as [Description],
round(round((SELECT Top 1 priceEx * ((100 - isnull(discperc,0))/100) * isnull(ROE,1) FROM CREDITOR_DETAIL CD LEFT JOIN CREDITOR_MASTER CM ON CD.docID = CM.DocID WHERE CD.DocID = SC.DocID AND StockID = SC.StockID) * -SC.Qty,8),8)  as [Dr],null as [Cr] ,
round(round((SELECT Top 1 priceEx * ((100 - isnull(discperc,0))/100)  FROM CREDITOR_DETAIL CD LEFT JOIN CREDITOR_MASTER CM ON CD.docID = CM.DocID WHERE CD.DocID = SC.DocID AND StockID = SC.StockID) * -SC.Qty,8),8)  as [ForeignDr],null as [ForeignCr] ,
CM.Currency, CM.ROE,
SC.StockID,cM.ClientPO as [Ref], -10 as [JournalID],null, CM.Memo, null  as [ProjectID], null as [AssetID]
FROM AccStockControl SC
LEFT JOIN (SELECT DocID, Entityid,clientpo, Memo, Currency, ROE FROM CREDITOR_MASTER) CM
ON SC.DocID = CM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity)E
ON CM.EntityID = E.Entityid
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON SC.Stockid = STK.StockID
WHERE SC.DocType = 'Supplier Credit Note'
AND SC.AdjustDate between @StartDate and @EndDate

UNION ALL

--Supplier Credit Note Completed : Dr. Discount Received Income 
SELECT DM.DateCompleted,DD.DocID, 
CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
'Supplier Credit Note' as [Doc],'DISCOUNT RECEIVED' + isnull(' - ' + RC.Value,'') as [GL],'INCOME' as [Type],
'Discount received from: ' + upper(E.Company)  as [Description],
PriceEx * Qty * (isnull(discperc,0) / 100) * isnull(ROE,1) as [Cr],Null as [Cr],
PriceEx * Qty * (isnull(discperc,0) / 100)  as [ForeignCr],Null as [ForeignCr],
DM.Currency, DM.ROE,
DD.StockID,DM.ClientPO as [Ref], -17 as [JournalID],DD.ReportCategoryID, DM.Memo, isnull(DD.ProjectID,DM.ProjectID), DD.AssetID
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,ROE,ClientPO, Memo, Currency, ProjectId FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT StockID, JournalID,IsTangible FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DD.ReportCategoryID = RC.LookupID
WHERE DM.DocType = 'Supplier Credit Note' AND DocStatus = 'Completed'
AND PriceEx * Qty * (isnull(discperc,0) / 100) * isnull(ROE,1) <> 0
AND DM.DateCompleted between @StartDate and @EndDate

UNION ALL

--*******************************************************************************************************************************************
--Supplier Payment***************************************************************************************************************************
--*******************************************************************************************************************************************

--Allocated Supplier Payment: Cr. Bank
SELECT DateCompleted, PaymentDocID, DM.DivisionID, 'Supplier Payment' as [Doc],  upper(L.Value) as [GL], 'ASSET' as [Type], 'Payment Made' as [Description] ,
null as [Dr], sum(PaymentPortion * isnull(DM.ROE,1))  as [Cr], 
null as [ForeignDr], sum(PaymentPortion )  as [ForeignCr], 
DM.Currency, DM.ROE,
Null as [StockID],DM.ClientPO as [Ref], GLC.GLCategoryID as [JournalID],null, DM.Memo, Null as [ProjectID], null as [AssetID]
FROM CREDITOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,clientpo,Memo, Currency FROM CREDITOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT BankAccountID, AccName,OBDate,GLCodeID  FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN AccGLCode GLC 
ON BNK.GlCodeID = GLC.GLCodeID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON GLC.GLCategoryID = L.LookupID
WHERE DM.DocType = 'Supplier Payment' 
AND DM.DateCompleted Between @startdate and @enddate 
GROUP BY  DateCompleted, PaymentDocID, DM.DivisionID,L.Value,DM.clientpo,GLC.GLCategoryID, DM.Memo, DM.Currency, DM.ROE

UNION ALL

--Allocated Supplier Payment: Dr. Accounts Payable
SELECT DM.DateCompleted, PaymentDocID, DM.DivisionID, 'Supplier Payment' as [Doc], 'ACCOUNTS PAYABLE' as [GL], 'LIABILITY' as [Type],
'Paid: ' + Upper([Company]) as [Description],
sum(PaymentPortion * isnull(DM2.ROE,1)) as [Dr], Null as [Cr],
sum(PaymentPortion ) as [ForeignDr], Null as [ForeignCr],
DM.Currency, DM.ROE,
Null as [stockid],DM.ClientPO as [Ref], -9 as [JournalID],null, DM.Memo, Null as [ProjectID], null as [AssetID]
FROM CREDITOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,Clientpo,Memo, Currency FROM CREDITOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE FROM CREDITOR_MASTER) DM2
ON DP.InvoiceDocID = DM2.DocID
LEFT JOIN (SELECT BankAccountID, AccName FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
WHERE DM.DocType = 'Supplier Payment' 
AND DM.DateCompleted Between @startdate and @enddate 
GROUP BY  DM.DateCompleted, PaymentDocID, DM.DivisionID,E.Company,dm.clientpo, DM.Memo,DM.Currency, DM.ROE

UNION ALL

--Allocated Supplier Payment : Dr/Cr. ForeEx Profit/Loss
SELECT DM.DateCompleted, PaymentDocID, DM.DivisionID, 'Supplier Payment' as [Doc], 'FOREIGN EXCHANGE' as [GL], 
CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) <= 0 then 'OTHER INCOME' ELSE 'EXPENSE' END  as [Type],
'Paid: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) >= 0 then sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) END as [Dr],
CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) <= 0 then -1 * (sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1))) END as [Cr],
(CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) >= 0 then sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) END)/ isnull(DM.ROE,1) as [ForeignDr],
(CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) <= 0 then -1 * (sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1))) END) / isnull(DM.ROE,1) as [ForeignCr],
DM.Currency, DM.ROE,
null as [Stockid],DM.ClientPO as [Ref], -7 as [JournalID],null,DM.Memo, Null as [ProjectID], null as [AssetID]
FROM CREDITOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,ClientPO,Memo, Currency FROM CREDITOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE FROM CREDITOR_MASTER) DM2
ON DP.InvoiceDocID = DM2.DocID
LEFT JOIN (SELECT BankAccountID, AccName FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
WHERE DM.DocType = 'Supplier Payment' 
AND DM.DateCompleted Between @startdate and @enddate 
GROUP BY  DM.DateCompleted, DM.DivisionID,DP.PaymentDocID,E.Company, DM.UseEC, EC.Contact,DM.UseEc,dm.clientpo, DM.Memo, DM.Currency, DM.ROE

","0","","1","LRA-FUSION","0","0","fusion"
"39706","cv_Acc_GL_OPENINGBALANCE","","
--*******************************************************************************************************************************************
--Opening Balances***************************************************************************************************************************
--*******************************************************************************************************************************************

--Opening Balance : Dr. A.R., Cr A.P.
SELECT DM.DateCreated as [DateCompleted],DM.Entityid as [DocID], dm.[DivisionID], 'Opening Balance' as [Doc], 
Case WHEN (CASE When isnull(DM.UseEC,0) = 1 THEN 0 ELSE isnull(E.Issupplier,0) END) = 1 then 'ACCOUNTS PAYABLE' ELSE 'ACCOUNTS RECEIVABLE' END as [GL], 
Case WHEN (CASE When isnull(DM.UseEC,0) = 1 THEN 0 ELSE isnull(E.Issupplier,0) END) = 1 then 'LIABILITY' ELSE 'ASSET' END as [Type],
'Opening balance: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
Case WHEN (CASE When isnull(DM.UseEC,0) = 1 THEN 0 ELSE isnull(E.Issupplier,0) END) = 0 then 
-(isnull(AmtCurrent,0) + isnull(amt30,0) + isnull(amt60,0) + isnull(amt90,0) + isnull(amt120,0)) * ROE END as [Dr],
Case WHEN (CASE When isnull(DM.UseEC,0) = 1 THEN 0 ELSE isnull(E.Issupplier,0) END) = 1 then 
(isnull(AmtCurrent,0) + isnull(amt30,0) + isnull(amt60,0) + isnull(amt90,0) + isnull(amt120,0)) * ROE END as [Cr],

Case WHEN (CASE When isnull(DM.UseEC,0) = 1 THEN 0 ELSE isnull(E.Issupplier,0) END) = 0 then 
-(isnull(AmtCurrent,0) + isnull(amt30,0) + isnull(amt60,0) + isnull(amt90,0) + isnull(amt120,0))  END as [ForeignDr],
Case WHEN (CASE When isnull(DM.UseEC,0) = 1 THEN 0 ELSE isnull(E.Issupplier,0) END) = 1 then 
(isnull(AmtCurrent,0) + isnull(amt30,0) + isnull(amt60,0) + isnull(amt90,0) + isnull(amt120,0))  END as [ForeignCr],
DM.Currency, DM.ROE,
null as [StockID],Null as [Client PO], Case WHEN (CASE When isnull(DM.UseEC,0) = 1 THEN 0 ELSE isnull(E.Issupplier,0) END) = 1 then -9 ELSE -1 END as [Journalid],null, null, null as [ProjectID], null as [AssetID]
FROM ACCOpeningBalance DM
LEFT JOIN (SELECT EntityID, Company,IsSupplier FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact],IsSupplier FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
WHERE  DM.DateCreated Between @startdate and @enddate 


UNION ALL

--Opening Balance : Dr. Expense, Cr Income.
SELECT DM.DateCreated as [DateCompleted],DM.Entityid as [DocID], dm.[DivisionID], 'Opening Balance' as [Doc], 
'OPENING BALANCE' as [GL],
--Case WHEN (CASE When isnull(DM.UseEC,0) = 1 THEN 0 ELSE isnull(E.Issupplier,0) END) = 1 then 'EXPENSE' ELSE 'INCOME' END as [Type],
'CAPITAL' as [Type],
'Opening balance: ' + upper(case isnull(DM.UseEC,0) when 0 then E.Company else EC.Contact End)   as [Description],
Case WHEN (CASE When isnull(DM.UseEC,0) = 1 THEN 0 ELSE isnull(E.Issupplier,0) END) = 1 then 
(isnull(AmtCurrent,0) + isnull(amt30,0) + isnull(amt60,0) + isnull(amt90,0) + isnull(amt120,0)) * ROE END as [Dr],
Case WHEN (CASE When isnull(DM.UseEC,0) = 1 THEN 0 ELSE isnull(E.Issupplier,0) END) = 0 then 
-(isnull(AmtCurrent,0) + isnull(amt30,0) + isnull(amt60,0) + isnull(amt90,0) + isnull(amt120,0)) * ROE END as [Cr],
Case WHEN (CASE When isnull(DM.UseEC,0) = 1 THEN 0 ELSE isnull(E.Issupplier,0) END) = 1 then 
(isnull(AmtCurrent,0) + isnull(amt30,0) + isnull(amt60,0) + isnull(amt90,0) + isnull(amt120,0))  END as [ForeignDr],
Case WHEN (CASE When isnull(DM.UseEC,0) = 1 THEN 0 ELSE isnull(E.Issupplier,0) END) = 0 then 
-(isnull(AmtCurrent,0) + isnull(amt30,0) + isnull(amt60,0) + isnull(amt90,0) + isnull(amt120,0))  END as [ForeignCr],
DM.Currency, DM.ROE,
null as [StockID],Null as [Client PO],-18 as [Journalid],null,null, null as [ProjectID], null as [AssetID]
FROM ACCOpeningBalance DM
LEFT JOIN (SELECT EntityID, Company,IsSupplier FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact],IsSupplier FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
WHERE  DM.DateCreated Between @startdate and @enddate 

UNION ALL
--*******************************************************************************************************************************************
--Opening Balance Payment Receipts***********************************************************************************************************
--*******************************************************************************************************************************************

--Opening Balance Payment Receipt : Dr. Bank
SELECT DateCompleted, PaymentDocID, DM.DivisionID, 'Payment Receipt' as [Doc], upper(L.Value) as [GL], 'ASSET' as [Type],'Payment Receipt' as [Description] ,
sum(PaymentPortion * isnull(DM.ROE,1))  as [Dr], null as [Cr],
sum(PaymentPortion )  as [ForeignDr], null as [ForeignCr],
DM.Currency, DM.ROE,
null as [StockID], DM.ClientPO, GLC.GLCategoryID as [JournalID],null, DM.Memo, null as [ProjectID], null as [AssetID]
FROM DEBTOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,ClientPO, Memo, Currency FROM DEBTOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT BankAccountID, AccName,OBDate,GLCodeID  FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT * FROM AccGLCode ) GLC
ON BNK.GLCodeID = GLC.GLCodeID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON GLC.GLCategoryID = L.LookupID
WHERE DM.DocType = 'Payment Receipt' 
AND InvoiceDocID = -1
AND DM.DateCompleted >= ISNULL(obdate,'1900/01/01')
GROUP BY  DateCompleted, PaymentDocID, DM.DivisionID,BNK.AccName,DM.ClientPO, DM.Memo,L.Value,GLC.GLCategoryID, DM.Currency, DM.ROE

UNION ALL

---Opening Balance Payment Receipt : Cr. Accounts receivable
SELECT DM.DateCompleted, PaymentDocID, DM.DivisionID, 'Payment Receipt' as [Doc], 'ACCOUNTS RECEIVABLE' as [GL], 'ASSET' as [Type],
'Payment received from: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
null as [Dr],sum(PaymentPortion * isnull(DM2.ROE,1)) as [Cr],
null as [ForeignDr],sum(PaymentPortion ) as [ForeignCr],
DM.Currency, DM.ROE,
null as [StockID], DM.ClientPO, -1 as [JournalID],null, DM.Memo, null as [ProjectID], null as [AssetID]
FROM DEBTOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,clientpo, Memo, Currency FROM DEBTOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT Entityid, UseEC, ROE FROM AccOpeningBalance) DM2
ON DM.Entityid = DM2.Entityid AND isnull(DM.UseEc,0) = isnull(DM2.UseEC,0)
LEFT JOIN (SELECT BankAccountID, AccName FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
WHERE DM.DocType = 'Payment Receipt' 
AND InvoiceDocID = -1
AND DM.DateCompleted Between @startdate and @enddate 
GROUP BY  DM.DateCompleted, PaymentDocID, DM.DivisionID,E.Company, EC.Contact,DM.UseEC,dm.clientpo, DM.Memo, DM.Currency, DM.ROE

UNION ALL

--Opening Balance Payment Receipt : Dr/Cr. ForeEx Profit/Loss
SELECT DM.DateCompleted, PaymentDocID, DM.DivisionID, 'Payment Receipt' as [Doc], 'FOREIGN EXCHANGE' as [GL], 
CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) <= 0 then 'EXPENSE' ELSE 'OTHER INCOME' END  as [Type],
'Payment received from: ' + Upper(CASE isnull(dm.UseEC,0) WHEN 0 then [Company] WHEN 1 THEN Contact END) as [Description],
CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) <= 0 then -1 * (sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1))) END as [Dr],
CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) >= 0 then sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) END as [Cr],
(CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) <= 0 then -1 * (sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1))) END) / isnull(DM.ROE,1) as [ForeignDr],
(CASE WHEN sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) >= 0 then sum(PaymentPortion * isnull(DM.ROE,1)) - sum(PaymentPortion * isnull(DM2.ROE,1)) END) / isnull(DM.ROE,1) as [ForeignCr],
DM.Currency, DM.ROE,
null as [StockID], DM.ClientPO, -7 as [JournalID],null, DM.Memo, null as [ProjectID], null as [AssetID]
FROM DEBTOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted, UseEC,Entityid,DivisionID,BankAccountID,ROE,clientpo,Memo, Currency FROM DEBTOR_MASTER) DM
ON DP.PaymentDocID = DM.DocID
LEFT JOIN (SELECT Entityid, UseEC, ROE FROM AccOpeningBalance) DM2
ON DM.Entityid = DM2.Entityid AND isnull(DM.UseEc,0) = isnull(DM2.UseEC,0)
LEFT JOIN (SELECT BankAccountID, AccName FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.Entityid = E.Entityid AND isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntitycontactID, isnull(firstname, '') + ' ' + Isnull(Surname,'') AS [Contact] FROM EntityContact)  EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
WHERE DM.DocType = 'Payment Receipt' 
AND InvoiceDocID = -1
AND DM.DateCompleted Between @startdate and @enddate 
GROUP BY  DM.DateCompleted, DM.DivisionID,DP.PaymentDocID,E.Company, DM.UseEC, EC.Contact,DM.UseEc,dm.clientpo,DM.Memo, DM.Currency, DM.ROE

","0","","1","LRA-FUSION","0","0","fusion"
"39707","cv_Acc_GL_CASHBOOK","","--*******************************************************************************************************************************************
--Quick Cashbook Entry***********************************************************************************************************************
--*******************************************************************************************************************************************

--Quick Cashbook Entry : Dr./Cr. Bank line-by-line
SELECT CTD.DatePaid,CTD.DocID, isnull(CTD.DivisionID,0) as [Divisionid], 'Bank Journal' as [Doc], UPPER(L.Value) as [GL], 'ASSET'  as [Type], 'Cash Transaction' as [Description],
CASE WHEN TotalIncl < 0 THEN abs(TotalIncl) * isnull(CTM.ROE,1) ELSE 0 END as [Dr], 
CASE WHEN TotalIncl > 0 THEN abs(TotalIncl) * isnull(CTM.ROE,1) ELSE 0 END as [Cr], 
CASE WHEN TotalIncl < 0 THEN abs(TotalIncl) ELSE 0 END as [ForeignDr], 
CASE WHEN TotalIncl > 0 THEN abs(TotalIncl) ELSE 0 END as [ForeignCr], 
CTM.Currency, CTM.ROE,
null as [stockid], RefNo, GLC.GLCategoryID as [JournalID],CTD.ReportCategoryID, CTD.Notes,
CTD.ProjectID, null as [AssetID]
FROM CASH_TRANSACTION_DETAIL CTD
LEFT JOIN CASH_TRANSACTION_MASTER CTM 
ON CTD.DocID = CTM.DocID
LEFT JOIN (SELECT BankAccountID, AccName,OBDate,GLCodeID  FROM ACCBankAccount) BNK
ON CTM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT GLCodeID, DivisionID,GLCategoryID  FROM AccGLCode ) GLC
ON BNK.GLCodeId = GLC.GLCodeID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED'
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L On GLC.GLCategoryID = L.LookupID  
WHERE isnull(CTM.IsComplete,0)= 1
and ISNULL(CTM.SingleTransaction,0) = 0
AND CTD.DatePaid >= ISNULL(Obdate,'1900/01/01')
AND CTD.DatePaid between @StartDate and @EndDate

UNION ALL

--Quick Cashbook Entry : Dr./Cr. Bank all lines combined
SELECT max(CTD.DatePaid),CTD.DocID, max(isnull(CTD.DivisionID,0)) as [Divisionid], 'Bank Journal' as [Doc], UPPER(L.Value) as [GL], 'ASSET'  as [Type], 'Cash Transaction' as [Description],
sum(CASE WHEN TotalIncl < 0 THEN abs(TotalIncl) * isnull(CTM.ROE,1) ELSE 0 END) as [Dr], 
sum(CASE WHEN TotalIncl > 0 THEN abs(TotalIncl) * isnull(CTM.ROE,1) ELSE 0 END) as [Cr], 
sum(CASE WHEN TotalIncl < 0 THEN abs(TotalIncl)  ELSE 0 END) as [ForeignDr], 
sum(CASE WHEN TotalIncl > 0 THEN abs(TotalIncl)  ELSE 0 END) as [ForeignCr], 
CTM.Currency, CTM.ROE,
null as [stockid], max(RefNo), GLC.GLCategoryID as [JournalID],CTD.ReportCategoryID, max(CTD.Notes),
CTD.ProjectID, null as [AssetID]
FROM CASH_TRANSACTION_DETAIL CTD
LEFT JOIN CASH_TRANSACTION_MASTER CTM 
ON CTD.DocID = CTM.DocID
LEFT JOIN (SELECT BankAccountID, AccName,OBDate,GLCodeID  FROM ACCBankAccount) BNK
ON CTM.BankAccountID = BNK.BankAccountID
LEFT JOIN (SELECT GLCodeID, DivisionID ,GLCategoryID FROM AccGLCode ) GLC
ON BNK.GLCodeId = GLC.GLCodeID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED'
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L On GLC.GLCategoryID = L.LookupID 
WHERE isnull(CTM.IsComplete,0)= 1
and ISNULL(CTM.SingleTransaction,0) = 1
--AND CTD.DatePaid >= ISNULL(Obdate,'1900/01/01')
AND CTD.DatePaid between @StartDate and @EndDate
Group by CTD.DocID , L.Value ,GLC.GLCategoryID, CTD.ProjectID,CTD.ReportCategoryID, CTM.Currency, CTM.ROE 

UNION ALL

--Quick Cashbook Entry : Dr./Cr. Contra GL)
SELECT CTD.DatePaid,CTD.DocID, isnull(CTD.DivisionID,0), 'Bank Journal' as [Doc], 
upper(L.Value)  + isnull(' - ' + RC.Value,'') as [GL], GLC.GLType as [Type], 'Cash Transaction' as [Description],
CASE WHEN TotalIncl > 0 THEN round(abs(TotalIncl) / (isnull(VatPerc,0) /100 + 1),2) ELSE 0 END * isnull(CTM.ROE,1) as [Dr], 
CASE WHEN TotalIncl < 0 THEN round(abs(TotalIncl) / (isnull(VatPerc,0) /100 + 1),2) ELSE 0 END * isnull(CTM.ROE,1) as [Cr], 
CASE WHEN TotalIncl > 0 THEN round(abs(TotalIncl) / (isnull(VatPerc,0) /100 + 1),2) ELSE 0 END as [ForeignDr], 
CASE WHEN TotalIncl < 0 THEN round(abs(TotalIncl) / (isnull(VatPerc,0) /100 + 1),2) ELSE 0 END as [ForeignCr], 
CTM.Currency, CTM.ROE,
null as [stockid], RefNo, L.LookupID as [JournalID],CTD.ReportCategoryID, Notes,
CTD.ProjectID, CTD.AssetID
FROM CASH_TRANSACTION_DETAIL CTD
LEFT JOIN CASH_TRANSACTION_MASTER CTM 
ON CTD.DocID = CTM.DocID
LEFT JOIN (SELECT BankAccountID, AccName FROM ACCBankAccount) BNK
ON CTM.BankAccountID = BNK.BankAccountID
LEFT JOIN AccGLCode GLC ON CTD.GLCodeID = GLC.GLCodeID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC ON CTD.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED'
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L On GLC.GLCategoryID = L.LookupID
WHERE isnull(CTM.IsComplete,0)= 1
AND CTD.DatePaid between @StartDate and @EndDate

UNION ALL

--Quick Cashbook Entry : Dr. VAT Control GL
SELECT CTD.DatePaid,CTD.DocID, ISNULL(CTD.DivisionID,0), 'Bank Journal' as [Doc], 'OUTPUT VAT CONTROL' as [GL], 'LIABILITY' as [Type], (l.Value)  as [Description],
null as [Dr],
CASE WHEN TotalIncl < 0 THEN abs(TotalIncl) - round(abs(TotalIncl) / (isnull(VatPerc,0) /100 + 1),2) ELSE 0 END * isnull(CTM.ROE,1) as [Cr], 
null as [ForeignDr],
CASE WHEN TotalIncl < 0 THEN abs(TotalIncl) - round(abs(TotalIncl) / (isnull(VatPerc,0) /100 + 1),2) ELSE 0 END as [ForeignCr], 
CTM.Currency, CTM.ROE,
null as [stockid], RefNo, -2 as [JournalID],CTD.ReportCategoryID, CTD.Notes,
CTD.ProjectID, null as [AssetID]
FROM CASH_TRANSACTION_DETAIL CTD
LEFT JOIN CASH_TRANSACTION_MASTER CTM 
ON CTD.DocID = CTM.DocID
LEFT JOIN AccGLCode GLC ON CTD.GLCodeID = GLC.GLCodeID
LEFT JOIN Lookup L On GLC.GLCategoryID = L.LookupID
WHERE isnull(CTM.IsComplete,0)= 1
AND isnull(totalincl,0) < 0
AND CTD.DatePaid between @StartDate and @EndDate


UNION ALL

--Quick Cashbook Entry : Cr. VAT Control GL
SELECT CTD.DatePaid,CTD.DocID, ISNULL(CTD.DivisionID,0), 'Bank Journal' as [Doc], 'INPUT VAT CONTROL' as [GL], 'ASSET' as [Type],(l.Value)  as [Description],
CASE WHEN TotalIncl > 0 THEN abs(TotalIncl) - round(abs(TotalIncl) / (isnull(VatPerc,0) /100 + 1),2) ELSE 0 END * isnull(CTM.ROE,1) as [Dr], 
null as [Cr],
CASE WHEN TotalIncl > 0 THEN abs(TotalIncl) - round(abs(TotalIncl) / (isnull(VatPerc,0) /100 + 1),2) ELSE 0 END as [ForeignDr], 
null as [ForeignCr],
CTM.Currency, CTM.ROE,
null as [stockid], RefNo,-5 as [JournalID],CTD.ReportCategoryID, CTD.Notes,
CTD.ProjectID, null as [AssetID]
FROM CASH_TRANSACTION_DETAIL CTD
LEFT JOIN CASH_TRANSACTION_MASTER CTM 
ON CTD.DocID = CTM.DocID
LEFT JOIN AccGLCode GLC ON CTD.GLCodeID = GLC.GLCodeID
LEFT JOIN Lookup L On GLC.GLCategoryID = L.LookupID
WHERE isnull(CTM.IsComplete,0)= 1
AND isnull(totalincl,0) > 0
AND CTD.DatePaid between @StartDate and @EndDate



","0","","1","LRA-FUSION","0","0","fusion"
"39708","cv_Acc_GL_EXPENSES","","
--*******************************************************************************************************************************************
--Expense Claims*****************************************************************************************************************************
--*******************************************************************************************************************************************
/*
--Expense Claims : Dr. Expense
SELECT DatePaid as [DateCompleted],ExpenseClaimID as [DocID],DivisionID, 'Expense Claim' as [Doc],UPPER(l.Value) as [GL], 'EXPENSE' as [Type],
Employee as [Description],
TotalEx as [Dr], null as [Cr],DD.StockID,null as [Ref], STK.JournalID as [JournalID],Null, DD.Comments,
DD.ProjectID
FROM AccExpenses DD
LEFT JOIN AccExpenseClaim DM ON DD.ExpenseClaimID = DM.AccExpenseClaimID
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN Lookup L On STK.JournalID = L.LookupID
LEFT JOIN (SELECT isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Employee], Staffid FROM Staff) ST
ON DM.IncurredBy = ST.Staffid
WHERE DocStatus = 'Completed'
AND DatePaid between @StartDate AND @EndDate

UNION ALL

--Expense Claims : Dr. VAT Control
SELECT DatePaid as [DateCompleted],ExpenseClaimID as [DocID],DivisionID, 'Expense Claim' as [Doc],'INPUT VAT CONTROL' as [GL], 'ASSET' as [Type],
UPPER(l.Value)  as [Description],
TotalVat as [Dr], null as [Cr] ,DD.StockID,null as [Ref], -5 as [JournalID],Null, DD.Comments,
DD.ProjectID
FROM AccExpenses DD
LEFT JOIN AccExpenseClaim DM ON DD.ExpenseClaimID = DM.AccExpenseClaimID
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN Lookup L On STK.JournalID = L.LookupID
WHERE DocStatus = 'Completed'
AND DatePaid between @StartDate AND @EndDate

UNION ALL

--Expense Claims : Cr. Bank
SELECT DatePaid as [DateCompleted],ExpenseClaimID as [DocID],DD.DivisionID, 'Expense Claim' as [Doc],'BANK: ' + upper(AccName) as [GL], 'ASSET' as [Type],
'Payment Made' as [Description],
null as [Dr],TotalInc as [Cr],DD.StockID,null as [Ref], GLC.GLCategoryID as [JournalID],Null, DD.Comments,
DD.ProjectID
FROM AccExpenses DD
LEFT JOIN AccExpenseClaim DM ON DD.ExpenseClaimID = DM.AccExpenseClaimID
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON DD.Stockid = STK.StockID
LEFT JOIN Lookup L On STK.JournalID = L.LookupID
LEFT JOIN (SELECT BankAccountID, AccName,OBDate,GLCodeID  FROM ACCBankAccount) BNK
ON DM.FromAccount = BNK.BankAccountID
LEFT JOIN ACCGlCode GLC 
ON BNK.GLCodeID = GLC.GLCodeID
WHERE DocStatus = 'Completed'
AND DatePaid between @StartDate AND @EndDate
AND DatePaid >= ISNULL(OBDate,'1900/01/01')

UNION ALL
*/
--*******************************************************************************************************************************************
--Expenditures*******************************************************************************************************************************
--*******************************************************************************************************************************************

--Expenditure Purchase: Dr. Contra Account
SELECT DM.DateCompleted, DM.DocID, DM.DivisionID, DM.DocType, 
Upper(L.VALUE) [GL], 
CASE WHEN DM.StockID < 0 THEN GLC.GLType ELSE  CASE WHEN isnull(STK.IsTangible,0) = 1 then 'ASSET' ELSE 'EXPENSE' END END as [Type], 
'Purchases from ' + DM.SupplierName, 
isnull(Qty,0) * isnull(CostPriceEx,0) * isnull(ROE,1) as [Dr], null as [Cr], 
isnull(Qty,0) * isnull(CostPriceEx,0)  as [ForeignDr], null as [ForeignCr], 
DM.Currency, DM.ROE,
DM.StockID, DM.Memo, L.LookupID ,  DM.ReportCategoryID, Memo, 
CASE WHEN isnull(STK.IsTangible,0) = 1 then null ELSE ProjectID END, 
CASE WHEN isnull(STK.IsTangible,0) = 1 then null ELSE AssetID END
FROM EXPENDITURE_MASTER DM
LEFT JOIN (SELECT StockID, IsTangible, JournalID FROM AccStock) STK
ON DM.StockID = STK.StockID 
LEFT JOIN (SELECT * FROM AccGLCode) GLC
ON ABS(DM.StockID) = GLC.GLCodeID AND DM.StockID < 0
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DM.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL'
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED'  
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON (STK.JournalID = L.LookupID AND DM.StockID > 0 ) OR (GLC.GLCategoryID = L.LookupID AND DM.StockID < 0)
WHERE DM.DocType = 'Purchase'
AND DM.DocStatus = 'Completed'
AND DM.DateCompleted between @StartDate AND @EndDate

UNION ALL

--Expenditure Purchase: Cr. Bank Account
SELECT DM.DateCompleted, DM.DocID, DM.DivisionID, DM.DocType, 
'BANK: ' + upper(AccName) as [GL], 'ASSET' as [Type],
'Purchases from ' + DM.SupplierName,
null as [Dr],  isnull(Qty,0) * isnull(CostPriceEx,0) * isnull(ROE,1) * (isnull(DM.TAX,0) /100 + 1) as [Cr], 
null as [ForeignDr],  isnull(Qty,0) * isnull(CostPriceEx,0) * (isnull(DM.TAX,0) /100 + 1) as [ForeignCr], 
DM.Currency,DM.ROE,
DM.StockID, DM.Memo,GLC.GLCategoryID, DM.ReportCategoryID, Memo, null as [ProjectID], null as [AssetID]
FROM EXPENDITURE_MASTER DM
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DM.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT BankAccountID, AccName,OBDate,GLCodeID  FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN ACCGlCode GLC 
ON BNK.GLCodeID = GLC.GLCodeID
WHERE DM.DocType = 'Purchase'
AND DM.DocStatus = 'Completed'
AND DM.DateCompleted between @StartDate AND @EndDate

UNION ALL

--Expenditure Purchase: Dr. VAT Control
SELECT DM.DateCompleted, DM.DocID, DM.DivisionID, DM.DocType, 
'INPUT VAT CONTROL' as [GL], 'ASSET' as [Type],
'Purchases from ' + DM.SupplierName,  
isnull(Qty,0) * isnull(CostPriceEx,0) * isnull(ROE,1) * (isnull(DM.TAX,0) /100 )  as [Dr], null as [Cr], 
isnull(Qty,0) * isnull(CostPriceEx,0) * (isnull(DM.TAX,0) /100 )  as [ForeignDr], null as [ForeignCr], 
DM.Currency, DM.ROE,
DM.StockID, DM.Memo, -5 as [JournalID],DM.ReportCategoryID, Memo, null as [PrijectID], null as [AssetID]
FROM EXPENDITURE_MASTER DM
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON DM.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT BankAccountID, AccName,OBDate,GLCodeID  FROM ACCBankAccount) BNK
ON DM.BankAccountID = BNK.BankAccountID
LEFT JOIN ACCGlCode GLC 
ON BNK.GLCodeID = GLC.GLCodeID
WHERE DM.DocType = 'Purchase'
AND DM.DocStatus = 'Completed'
AND DM.DateCompleted between @StartDate AND @EndDate


UNION ALL


--Disbursement Completed : Dr. Cost Of Sales or Override GL Code
SELECT SC.AdjustDate, SC.DocID, SC.DivisionID,'Stock Disbursement' AS [Doc], 
upper(L.Value) + isnull(' - ' + RC.Value,'') as [GL], 
isnull(GL.GLType, 'COST OF SALES') as [Type], 
'Stock disbursed' as [Description],
SCV.CalculatedCost as [Dr], Null as [Cr],
SCV.CalculatedCost as [ForeignDr], Null as [ForeignCr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [Currency],
SC.StockID,DM.ClientPO as [Ref], 
isnull(GL.GlCategoryID,STK.JournalID),
SC.ReportCategoryID,DM.Memo, DM.ProjectID, DM.AssetID
FROM AccStockControl SC
LEFT JOIN (SELECT * FROM AccStockControlValuation) SCV
ON SC.StockControlID = SCV.StockControlID
LEFT JOIN (SELECT DocID, DocType, ClientPO, Memo, ProjectID, AssetID,OverrideGLCodeID FROM EXPENDITURE_MASTER) DM
ON SC.DocID = DM.DocID AND SC.DocType= DM.DocType
LEFT JOIN (SELECT * FROM AccGLcode) GL
ON DM.OverrideGLCodeID = GL.GLCodeID 
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON SC.Stockid = STK.StockID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC
ON SC.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON isnull(GL.GLCategoryID, STK.JournalID) = L.LookupID
WHERE SC.DocType = 'Stock Disbursement'
AND SC.AdjustDate between @StartDate and @EndDate

UNION ALL

--Disbursement Completed : Cr. Inventory
SELECT SC.AdjustDate, SC.DocID, Sc.DivisionID, 'Stock Disbursement' AS [Doc], upper(L.Value) as [GL], 'ASSET' as [Type], 'Stock disbursed' as [Description],
Null as [Dr],SCV.CalculatedCost as [Cr],
Null as [ForeignDr],SCV.CalculatedCost as [ForeignCr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [Currency],
SC.StockID,DM.ClientPO as [Ref],  STK.JournalID,SC.ReportCategoryID, DM.Memo, null as [ProjectID], null as [AssetID]
FROM AccStockControl SC
LEFT JOIN (SELECT * FROM AccStockControlValuation) SCV
ON SC.StockControlID = SCV.StockControlID
LEFT JOIN (SELECT DocID, DocType, DocStatus, ROE,ClientPO,Memo, ProjectID FROM EXPENDITURE_MASTER) DM
ON SC.DocID = DM.DocID AND SC.Doctype = DM.DocType
LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
ON SC.Stockid = STK.StockID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON STK.JournalID = L.LookupID
WHERE SC.DocType = 'Stock Disbursement'
AND SC.AdjustDate between @StartDate and @EndDate","0","","1","LRA-FUSION","0","0","fusion"
"39709","cv_Acc_GL_General_Journal","","SELECT newID(), convert(varchar,DateCompleted,111) as [Date], GC.GLCode as [GL Code], GL , Type,[Description], isnull(P.ProjectNum + ' - ', '') + P.ProjectName as [Project], isnull(A.SerialNo + ' - ' ,'') +  STKA.StockDescription as [Asset] ,e.accountNum as [Acc No],g.ref as [Ref No], convert(varchar,cast(sum(Dr) as money),1) as [Dr], convert(varchar,cast(sum(Cr) as money),1) as [Cr]
FROM AccGL G
LEFT JOIN (SELECT DocID,DocNo ,Period,entityID,ClientPO FROM DEBTOR_MASTER) DM
ON G.DocID = DM.DocID and G.Doc in ('Invoice', 'Credit Note','Payment Receipt')
LEFT JOIN (SELECT DocID,DocNo ,Period,entityID,ClientPO FROM CREDITOR_MASTER) CM
ON G.DocID = CM.DocID and G.Doc in ('Supplier Invoice', 'Supplier Credit Note')
LEFT JOIN (SELECT AccOverheadID, Period,entityID,Paymentref FROM AccOverHead) CB
ON G.DocID = CB.AccOverheadID and G.Doc like 'Cashbook%'
LEFT JOIN (SELECT AccExpenseClaimID, Period,incurredBy as entityID,Paymentref FROM AccExpenseClaim) ExC
ON G.DocID = ExC.AccExpenseClaimID and G.Doc like 'Expense%'
left join entity e on (e.EntityID = DM.EntityID or e.EntityID = CM.EntityID or e.EntityID = CB.EntityID or e.EntityID = ExC.EntityID)
LEFT JOIN (SELECT Stockid, Journalid FROM AccStock) STK
ON G.Stockid = Stk.Stockid
left join (SELECT * FROM AccGLCode) GC
on (g.DivisionID = GC.Divisionid OR GC.Divisionid = 0) and upper(G.Type) = upper(GC.gltype) and g.JournalID = GC.GLCategoryid
LEFT JOIN (SELECT ProjectID, ProjectName, ProjectNum FROM Projects )P
ON G.ProjectID = P.ProjectID
LEFT JOIN (SELECT AssetID, StockID, SerialNo FROM AccAsset) A
ON G.AssetID = A.AssetID
LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STKA
ON A.StockID = STKA.StockID
WHERE isnull(cr,0) + isnull(dr,0) <> 0

{where}
Group by convert(varchar,DateCompleted,111),g.GL,g.[Description],g.Type,g.DocID,Doc,g.ref,e.accountNum,gc.glcode, P.ProjectNum, P.ProjectName, A.SerialNo, STKA.StockDescription
ORDER BY convert(varchar,DateCompleted,111),g.Doc,G.DocID,Cr,Dr 
","0","","1","LRA-FUSION","0","0","fusion"
"39710","cv_Acc_GL_STOCKTAKE","","--*******************************************************************************************************************************************
--Stock Takes********************************************************************************************************************************
--*******************************************************************************************************************************************

--Stock Take Shortage : Cr. Inventory
SELECT DM.AdjustDate as [DateCompleted], DM.StockControlID as [DocID], DM.DivisionID, 'Stock Take' as [Doc],upper(L.Value) as [GL], 'ASSET' as [Type],
'Stock take' as [Description], 
null as [Dr],SCV.CalculatedCost as [Cr],
null as [ForeignDr],SCV.CalculatedCost as [ForeignCr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [ROE],
DM.StockID,null as [Ref], L.LookupID as [JournalID],null,null,null as [ProjectID], null as [AssetID]
FROM ACCStockControl DM
LEFT JOIN (SELECT * FROM AccStockControlValuation) SCV
ON DM.StockControlID = SCV.StockControlID
LEFT JOIN (SELECT StockID, JournalID,SoldByToPurchasedByRatio FROM AccStock) STK
ON DM.Stockid = STK.StockID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY ADJUSTMENT' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED' 
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON STK.JournalID = L.LookupID
WHERE DM.DocType like 'Stock Take' AND Qty < 0 
AND DM.AdjustDate between @startdate AND @enddate

UNION ALL

--Stock Take Shortage : Dr. Expense
SELECT DM.AdjustDate as [DateCompleted], DM.StockControlID as [DocID], DM.DivisionID, 'Stock Take' as [Doc], 'INVENTORY ADJUSTMENT' as [GL], 'EXPENSE' as [Type],
'Stock take' as [Description],
SCV.CalculatedCost  as [Dr], null as [Cr],
SCV.CalculatedCost  as [ForeignDr], null as [ForeignCr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [ROE],
DM.StockID,null as [Ref], -13 as [JournalID],DM.ReportCategoryID,null, null as [ProjectID], null as [AssetID]
FROM ACCStockControl DM
LEFT JOIN (SELECT * FROM AccStockControlValuation) SCV
ON DM.StockControlID = SCV.StockControlID
LEFT JOIN (SELECT StockID, JournalID,SoldByToPurchasedByRatio FROM AccStock) STK
ON DM.Stockid = STK.StockID
WHERE DM.DocType like 'Stock Take' AND Qty < 0 
AND DM.AdjustDate between @startdate AND @enddate

","0","","1","LRA-FUSION","0","0","fusion"
"39711","cv_Acc_GL_Trial_Balance","","DECLARE @Date as datetime
DECLARE @PeriodStart as datetime
SET @Date = '{date}'
SET @PeriodStart = '{periodstart}'

--Trial Balance
SELECT NEWID(),Type, GLCode as [Code], [Description], [Project], [Asset],
Convert(varchar,sum(MonthDr),1) as [Month To Date Dr], 
Convert(varchar,sum(MonthCr),1) as [Month To Date Cr],
convert(varchar,sum(YearDr),1) as [YTD Dr],
convert(varchar,sum(YearCr),1) as [YTD Cr] 
FROM 	(
	
	SELECT GC.GLCode, GL as [Description],
	[Type],
	isnull(P.ProjectNum + ' - ','') + P.ProjectName as [Project],
	isnull(A.SerialNo + ' - ','') + STK.StockDescription as [Asset],
	0 as [MonthDr],
	0 as [MonthCr],
	isnull(cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) > 0  then sum(isnull(Dr,0)) - sum(isnull(Cr,0)) END as money),0) as [YearDr],
	isnull(cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) < 0  then sum(isnull(Cr,0)) - sum(isnull(Dr,0)) END as money),0) as [YearCr],
	1 as [Rank]
	FROM AccGL G
	LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
	LEFT JOIN Lookup LD ON G.DivisionID = LD.LookupID
	LEFT JOIN (SELECT ProjectID, ProjectName, ProjectNum From Projects) P ON G.ProjectID = P.ProjectID
	LEFT JOIN (SELECT AssetID, SerialNo, StockID FROM ACCAsset) A ON G.AssetID = A.AssetID
	LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID
	where isnull(Dr,0) + isnull(Cr,0) <>0 
	AND DateCompleted <= @Date 
	{where}
	GROUP BY GL ,Type,GC.GLCode,isnull(P.ProjectNum + ' - ','') + P.ProjectName,isnull(A.SerialNo + ' - ','') + STK.StockDescription

	UNION ALL
	
	SELECT GC.GLCode, GL as [Description],
	[Type],
	isnull(P.ProjectNum + ' - ','') + P.ProjectName as [Project],
	isnull(A.SerialNo + ' - ','') + STK.StockDescription as [Asset],
	isnull(cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) > 0  then sum(isnull(Dr,0)) - sum(isnull(Cr,0)) END as money),0) as [MonthDr],
	isnull(cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) < 0  then sum(isnull(Cr,0)) - sum(isnull(Dr,0)) END as money),0) as [MonthCr],
	0 as [YearDr],
	0 as [YearCr],
	1 as [Rank]
	FROM AccGL G
	LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
	LEFT JOIN Lookup LD ON G.DivisionID = LD.LookupID
	LEFT JOIN (SELECT ProjectID, ProjectName, ProjectNum From Projects) P ON G.ProjectID = P.ProjectID
	LEFT JOIN (SELECT AssetID, SerialNo, StockID FROM ACCAsset) A ON G.AssetID = A.AssetID
	LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID
	where isnull(Dr,0) + isnull(Cr,0) <>0 
	AND DateCompleted <= @Date AND DateCompleted >= @PeriodStart
	{where}
	GROUP BY GL ,Type,GC.GLCode,isnull(P.ProjectNum + ' - ','') + P.ProjectName,isnull(A.SerialNo + ' - ','') + STK.StockDescription
		
	UNION ALL
	
	SELECT null as [GLCode],  null as  [Description],null as [Project], null as [Asset],
	'TOTAL: ' as [Type],
	sum(isnull(MonthDr,0)),
	sum(isnull(MonthCr,0)), 
	sum(isnull(YearDr,0)),
	sum(isnull(YearCr,0)),
	2 as [Rank]
	FROM	(
		SELECT 
		0 as [MonthDr],
		0 as [MonthCr],
		cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) > 0  then sum(isnull(Dr,0)) - sum(isnull(Cr,0)) END as money) as [YearDr],
		cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) < 0  then sum(isnull(Cr,0)) - sum(isnull(Dr,0)) END as money) as [YearCr]
		FROM AccGL g
		LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
		LEFT JOIN (SELECT ProjectID, ProjectName, ProjectNum From Projects) P ON G.ProjectID = P.ProjectID
		LEFT JOIN (SELECT AssetID, SerialNo, StockID FROM ACCAsset) A ON G.AssetID = A.AssetID
		LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID
		where isnull(Dr,0) + isnull(Cr,0) <>0 
		AND DateCompleted <= @Date 
		{where}
		group by GL,Type 
		
		UNION ALL
		
		SELECT 
		cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) > 0  then sum(isnull(Dr,0)) - sum(isnull(Cr,0)) END as money) as [MonthDr],
		cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) < 0  then sum(isnull(Cr,0)) - sum(isnull(Dr,0)) END as money) as [MonhtCr],
		0 as [YearDr],
		0 as [YearCr]
		FROM AccGL g
		LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
		LEFT JOIN (SELECT ProjectID, ProjectName, ProjectNum From Projects) P ON G.ProjectID = P.ProjectID
		LEFT JOIN (SELECT AssetID, SerialNo, StockID FROM ACCAsset) A ON G.AssetID = A.AssetID
		LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID
		where isnull(Dr,0) + isnull(Cr,0) <>0 
		AND DateCompleted >= @PeriodStart  AND DateCompleted <= @Date 
		{where}
		group by GL,Type 
		)B
	) A
Group by A.[Type], A.GLCode, A.[Description]  ,A.Rank, A.[Project], A.[Asset]
ORDER BY [Rank],[Code],[Type],[Description]
","0","","1","LRA-FUSION","0","0","fusion"
"39712","cv_Acc_GL_Vat_Control","","SELECT NewID(),G.DocID as [Document No.], G.Doc as [Document Type] ,[Description],e.AccountNum as [Acc No],A.ClientPO as [Ref No]
 , convert(varchar,datecompleted,111) as [Document Date],G.GL,
convert(varchar,cast(Case when GL like '%INPUT%' then sum(isnull(dr,0)) - sum(isnull(cr,0)) END as money),1) as [Input VAT (Dr)],
Convert(varchar,cast(Case when GL like '%OUTPUT%' then sum(isnull(Cr,0)) - sum(isnull(Dr,0)) END as money),1) as [Output VAT (Cr)]

FROM AccGL G
LEFT JOIN (SELECT DocID,DocNo ,Period,entityID,ClientPO FROM DEBTOR_MASTER) DM
ON G.DocID = DM.DocID and G.Doc in ('Invoice', 'Credit Note','Payment Receipt')
LEFT JOIN (SELECT DocID,DocNo ,Period,entityID,ClientPO FROM CREDITOR_MASTER) CM
ON G.DocID = CM.DocID and G.Doc in ('Supplier Invoice', 'Supplier Credit Note')
LEFT JOIN (SELECT AccOverheadID, Period,entityID,Paymentref FROM AccOverHead) CB
ON G.DocID = CB.AccOverheadID and G.Doc like 'Cashbook%'
LEFT JOIN (SELECT AccExpenseClaimID, Period,incurredBy as entityID,Paymentref FROM AccExpenseClaim) ExC
ON G.DocID = ExC.AccExpenseClaimID and G.Doc like 'Expense%'
left join entity e on (e.EntityID = DM.EntityID or e.EntityID = CM.EntityID or e.EntityID = CB.EntityID or e.EntityID = ExC.EntityID)
left join (
Select distinct ClientPO from(select ClientPO 
from DEBTOR_MASTER

union all

select ClientPO 
from CREDITOR_MASTER

union all

select PaymentRef 
from AccOverHead

union all

select PaymentRef
from AccExpenseClaim
)
a) a on (a.ClientPO = DM.ClientPO or a.ClientPO = CM.ClientPO or a.ClientPO = CB.Paymentref or a.ClientPO = ExC.Paymentref)
WHERE GL Like '%VAT CONTROL%' 
{where}
GROUP BY G.DocID, G.Doc, [Description],GL,convert(varchar,datecompleted,111),e.AccountNum,a.ClientPO
ORDER BY convert(varchar,datecompleted,111) Desc
","0","","1","LRA-FUSION","0","0","fusion"
"39713","cv_ContractNotes","","select n.NoteID, n.Subject, n.Description, [Note Type], [Creator], [Modified By] 
From contractnotes n
Left Join (select lookupid, value as [Note Type] from lookup) l on l.lookupid = n.NoteTypeID
Left Join (select userID, isnull(firstname,'') + ' ' + isnull(surname,'') as [Creator] from users) u on u.userID = n.createbyid
Left Join (select userID, isnull(firstname,'') + ' ' + isnull(surname,'') as [Modified By] from users) us on us.userID = n.ModifiedByID
where n.entityID = {entityid} AND n.EntityContactID = {entitycontactid}

","0","","1","LRA-FUSION","0","0","fusion"
"39714","cv_ContractMan","","SELECT  
	P.ProjectID, 
	LD.Value as [Division],
	LEFT('00000000', 8 - LEN(P.ProjectNum)) + P.ProjectNum as [Contract No.],
	LS.Value as [Status],
	E.AccountNum as [Account],
	E.Company as [Client],
	EC.Contact as [Contact],
	isnull(P.ProjectName,'') as [Contract Description],
	Phone1 as [Phone],
	Cell,
	P.ClientPO as [Client Order Number],
	CONVERT(VARCHAR, P.CustomerDueDate, 111) as [Client Due Date],
	Convert(varchar,P.DateAdded,111) as [Created],
	Convert(varchar,RSD.[Start],111) as [Start],
	Convert(varchar,RED.[End],111) as [End],
	dbo.fnFormatNumber(([Total Ex. VAT] / isnull(P.ROE,1))) as [Total Ex. VAT], 
	dbo.fnFormatNumber((([Total Incl. VAT] - [Total Ex. VAT])  / isnull(P.ROE,1))) as [Total VAT], 
	dbo.fnFormatNumber(([Total Incl. VAT]  / isnull(P.ROE,1)))  as [Total Incl. VAT]
FROM Projects P
LEFT JOIN (SELECT EntityID, AccountNum, Company, VATnum, compregnum From Entity) E
ON P.EntityID = E.EntityID
LEFT JOIN (SELECT EntityContactID, isnull(Firstname, '') + ' ' + isnull(Surname,'') as [Contact], Phone1, Cell FROM EntityContact) EC
ON P.EntityContactID = EC.EntityContactID
LEFT JOIN (SELECT min(StartDate) AS [Start], DocID FROM Rental where DocType = 'Contract' Group by DocID ) RSD
ON P.ProjectID = RSD.DocID
LEFT JOIN (SELECT max(endDate) AS [End], DocID FROM Rental where DocType = 'Contract' Group by DocID ) RED
ON P.ProjectID = RED.DocID
LEFT JOIN Lookup LD
ON P.DivID = LD.LookupID
LEFT JOIN Lookup LS
ON P.ProjectStateID = LS.LookupID
LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
	             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
	             FROM CONTRACT_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
ON P.ProjectID = DD.Docid
{where}
ORDER BY ProjectID desc","0","","1","LRA-FUSION","0","0","fusion"
"39715","cv_CompanyReport","","Select ActivityID, [Company], [Company Type], [Supplier Type], [Switchboard], [email], [Website],
case when (select top 1 entitycontactid from salesPipeline sp where sp.entitycontactid = a.entitycontactid and isHotList = 1) > 0 Then 'Hot List' else
case when (select top 1 entitycontactid from lead l where l.entitycontactid = a.entitycontactid) > 0 Then 'Lead' else 'Client' END END as [L/H/C],
[Sales Agent],[Action], DateNextAction as [Action Date], [contact],
[Contact Number]
from Activity a
Left Join (select entityID, Company as [Company], switchboard as [Switchboard], url as [Website], email as [email] from entity) e 
	on (select entityid from entitycontact eec where a.entitycontactid = eec.entitycontactid) = e.entityID

Left Join (select entitycontactid, rtrim(ltrim(firstname)) + ' ' + rtrim(ltrim(surname)) as [Contact] from entitycontact) ec 
	on ec.entitycontactid = a.entitycontactid

Left Join (select lookupid, value as [Sales Agent] from lookup) lsa 
	on (select salesconsid from entitycontact sEc where a.entitycontactid = sEc.entitycontactid) = lsa.lookupid

Left Join (select lookupid, value as [Action] from lookup) la
	on la.lookupid = a.ActivityTypeid

Left Join (select entitycontactID, phone1 as [Contact number] from entitycontact) ecp 
	on ecp.entitycontactid = a.entitycontactid

Left Join (select lookupid, value as [Company Type] from lookup) lcc
	on (select buscatid from entity where entityid = (Select entityid from entitycontact ecct where ecct.entitycontactid = a.entitycontactid)) = lcc.lookupid

Left Join (select lookupid, value as [Supplier Type] from lookup) lst
	on (select entitytypeid from entity where entityID = (select entityid from entitycontact ecst where ecst.entitycontactid = a.entitycontactid)) = lst.lookupid

where DateNextAction is not null /*> getdate()*/ <%and%>
Order By [Company]","0","","1","LRA-FUSION","0","0","fusion"
"39716","cv_NetCash","","SELECT 
Case when NCB.UseEC = 1 then EC2.AccountNum Else E.AccountNum End as [AccountNum],
Case when NCB.UseEC = 1 then isnull(EC2.Firstname,'') + ' ' + isnull(EC2.Surname,'') Else E.Company End as [ClientName],
Case when NCB.UseEC = 1 then isnull(EC2.AccountName,isnull(EC2.Firstname,'') + ' ' + isnull(EC2.Surname,''))  Else E.Company End as [AccName],
isnull(Case when NCB.UseEC = 1 then EC2.AccTypeID Else EC1.AccTypeID End,1) as [AccType],
Case when NCB.UseEC = 1 then EC2.BranchCode Else EC1.BranchCode End as [BranchCode],
Case when NCB.UseEC = 1 then EC2.AccountNo Else EC1.AccountNo End as [AccNo],
round(BM.Contract * 100,0) as [ContractAmt],
round(NCB.Balance * 100 , 0 ) as [BatchAmt],
Case when NCB.UseEC = 1 then EC2.email Else EC1.email End as [Email],
Case when NCB.UseEC = 1 then EC2.CreditCardName Else EC1.CreditCardName End as [CCName],
Case when NCB.UseEC = 1 then EC2.CreditCardNumber Else EC1.CreditCardNumber End as [CCNumber],
Case when NCB.UseEC = 1 then EC2.IsCreditCard Else EC1.IsCreditCard End as [IsCC],
Case when NCB.UseEC = 1 then EC2.ExpiryDate Else EC1.ExpiryDate End as [ExpDate],
Case when NCB.UseEC = 1 then EC2.cardtypeid Else EC1.cardtypeid End as [CardType],
NCB.UseEC as [Extra1],
NCB.Entityid as [Extra2]

FROM NetCash_Batch NCB
LEFT JOIN Entity E
ON NCB.Entityid = E.Entityid AND NCB.UseEC = 0
LEFT JOIN EntityContact EC1
ON E.InvoiceTo = EC1.EntityContactid AND NCB.UseEC = 0
LEFT JOIN EntityContact EC2
ON NCB.Entityid = EC2.EntityContactid AND NCB.UseEC = 1
LEFT JOIN (SELECT EntityID, UseEC, sum([Contract]) as [Contract] FROM BILLING_MASTER BM
	   LEFT JOIN (SELECT Sum(TotalIncl * ((100 - isnull(discperc,0))/100)) as [Contract],DocID FROM BILLING_DETAIL GROUP BY DOCID) BD
	  ON BM.DocID = BD.DocID
	  group by Entityid, UseEC
	   ) BM
ON NCB.Entityid = BM.Entityid AND NCB.UseEc = BM.UseEC

","0","","1","LRA-FUSION","0","0","fusion"
"39717","cv_Acc_GL_ADJUSTMENTS","","
--New GL Module
SELECT LAD.AdjustDate, LAD.DocID, isnull(LAD.DivisionID,0) as [DivisionID], 'General Ledger Adjustment' as [Doc] ,
upper(LGL.Value)  + isnull(' - ' + RC.Value,'') as [GL], upper(GLC.GLType)  as [Type], LAM.TransNotes as [Description],
isnull(Debit,0) * isnull(LAM.ROE,1) as [Dr], isnull(Credit,0) * isnull(LAM.ROE,1) as [Cr], 
isnull(Debit,0) as [ForeignDr], isnull(Credit,0) as [ForeignCr], 
LAM.Currency, LAM.ROE,
null as [StockID], LAD.Notes as [Ref],GLC.GLCategoryID as [JournalId],LAD.ReportCategoryID, LAD.Notes,
LAD.ProjectID, LAD.AssetID
FROM LEDGER_ADJUST_DETAIL LAD
LEFT JOIN LEDGER_ADJUST_MASTER LAM ON LAD.DocID = LAM.DocID
LEFT JOIN ACCGLCode GLC ON LAD.GLCodeID = GLC.GLCodeID
LEFT JOIN (SELECT * FROM Lookup WHERE Class ='GLReportCategory') RC ON LAD.ReportCategoryID = RC.LookupID
LEFT JOIN 
(
	SELECT LookupID, Value
	FROM Lookup 
	where class like 'JournalType' 
	 
	UNION ALL

	SELECT -1, 'ACCOUNTS RECEIVABLE'

	UNION ALL

	SELECT -2, 'OUTPUT VAT CONTROL' 

	UNION ALL

	SELECT -3, 'COST OF SALES' 

	UNION ALL

	SELECT -4, 'INVENTORY' 

	UNION ALL

	SELECT -5, 'INPUT VAT CONTROL' 

	UNION ALL

	SELECT -6, 'BANK' 

	UNION ALL

	SELECT -8, 'FOREIGN EXCHANGE' 

	UNION ALL

	SELECT -9, 'ACCOUNTS PAYABLE' 

	UNION ALL

	SELECT -10, 'UN-RECEIVED INVENTORY' 

	UNION ALL

	SELECT -11, 'PREPAID EXPENSE' 

	UNION ALL

	SELECT -12, 'CAPITAL' 

	UNION ALL

	SELECT -13, 'INVENTORY EXPENSE' 

	UNION ALL

	SELECT -14, 'CAPITAL INPUT VAT CONTROL' 

	UNION ALL

	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
	
	UNION ALL
	
	SELECT -16, 'DISCOUNT ALLOWED' 
	
	UNION ALL
	
	SELECT -17, 'DISCOUNT RECEIVED'
	
    UNION ALL

    SELECT -18, 'OPENING BALANCE' 
)
LGL ON GLC.GLCategoryID = LGL.LookupID
WHERE isnull(LAM.IsComplete,0) = 1
AND AdjustDate between  @StartDate and @EndDate

UNION ALL

--Bank Opening Balances: Dr. Bank
SELECT OBDate, BankAccountID,BNK.DivisionID ,
'Bank Account Opening Balance' as [Doc], upper(L.Value) as [GL], 
'ASSET' as [Type], 'Bank account opening balance' as [Description],
round(round(Case when ISNULL(OpeningBal,0) >= 0 then abs(ISNULL(OpeningBal,0)) END,3),2) AS [Dr],
round(round(Case when ISNULL(OpeningBal,0) < 0 then abs(ISNULL(OpeningBal,0)) END,3),2) AS [Cr],
round(round(Case when ISNULL(OpeningBal,0) >= 0 then abs(ISNULL(OpeningBal,0)) END,3),2) AS [ForeignDr],
round(round(Case when ISNULL(OpeningBal,0) < 0 then abs(ISNULL(OpeningBal,0)) END,3),2) AS [ForeignCr],
(SELECT Top 1 Currency FROM ExchangeRates where isDefault =1 ), 1,
Null as [Stockid], null as [Ref], GLC.GLCategoryID as [JournalID],null,null,
Null as [ProjectID],
Null as [AssetID]
FROM AccBankAccount BNK
LEFT JOIN (SELECT * FROM AccGLCode ) GLC
ON BNK.GLCodeID = GLC.GLCodeID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED'
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON GLC.GLCategoryID = L.LookupID
WHERE OBDate between @StartDate and @EndDate

UNION ALL 

--Bank Opening Balances: Cr. Capital
SELECT OBDate, BankAccountID,BNK.DivisionID,
'Bank Account Opening Balance' as [Doc], 'BANK ACCOUNT OPENING BALANCE' as [GL], 
'CAPITAL' as [Type], L.Value as [Description],
Case when ISNULL(OpeningBal,0) < 0 then abs(ISNULL(OpeningBal,0)) END AS [Dr],
Case when ISNULL(OpeningBal,0) >= 0 then ISNULL(OpeningBal,0) END AS [Cr],
Case when ISNULL(OpeningBal,0) < 0 then abs(ISNULL(OpeningBal,0)) END AS [Dr],
Case when ISNULL(OpeningBal,0) >= 0 then ISNULL(OpeningBal,0) END AS [Cr],
(SELECT Top 1 Currency FROM ExchangeRates where isDefault =1 ), 1,
Null as [Stockid], null as [Ref], GLC.GLCategoryID as [JournalID] ,
Null as [ProjectID],null,null,null
FROM AccBankAccount BNK
LEFT JOIN (SELECT * FROM AccGLCode ) GLC
ON BNK.GLCodeID = GLC.GLCodeID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED'
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON GLC.GLCategoryID = L.LookupID
WHERE OBDate between @StartDate and @EndDate
","0","","1","LRA-FUSION","0","0","fusion"
"39718","cv_tasks","","select e.company,l.value as [Status], ca.dateissued, ca.datedue  
from clientactivitylist ca
left join projects p on p.projectid = ca.projectid 
left join entity  e on e.entityid = p.entityid
LEFT JOIN Lookup l on l.lookupid = ca.StatusID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39719","cv_Project_Calendar","","Declare @Start as datetime
Declare @End as datetime
Set @start = '{start}'
Set @end =   '{end}'


SELECT Distinct M.ModuleID,P.ProjectID, Modulename,null as [ProjectName], M.Startdate, Enddate,Progress,E.Company
From modules M
LEFT JOIN moduleAssignees MA ON M.ModuleID = MA.ModuleID
LEFT JOIN Projects P ON M.ProjectID = P.ProjectID
LEFT JOIN (SELECT Entityid, Company From Entity) E
ON P.Entityid = E.Entityid
WHERE ((M.startdate between  @start and @end) OR (enddate between @start AND  @end) OR ((M.startdate < @start) and (enddate > @end))) 
{where}

UNION ALL 

SELECT Distinct null, P.ProjectID,null, ProjectName , P.StartDate ,PD2.enddate,Null,E.Company
From Projects P 
LEFT JOIN (SELECT Min(ProjDate) as [StartDate], ProjectID FROM ProjectDates group by ProjectID) PD 
ON P.ProjectID = PD.ProjectID
LEFT JOIN (SELECT Max(ProjDate) as [endDate], ProjectID FROM ProjectDates group by ProjectID) PD2 
ON P.ProjectID = PD2.ProjectID
LEFT JOIN (SELECT Entityid, Company From Entity) E
ON P.Entityid = E.Entityid
LEFT JOIN (SELECT ModuleID, ModuleName,ProjectID,startdate,enddate From Modules) M
ON P.ProjectID = M.ProjectID
LEFT JOIN moduleAssignees MA 
ON M.ModuleID = MA.ModuleID
WHERE ((M.startdate between  @start and @end) OR (m.enddate between @start AND  @end) OR ((M.startdate < @start) and (m.enddate > @end))) 

/*((P.startdate between  @start and @end) OR (enddate between @start AND  @end) OR ((P.startdate <= @start) and (enddate >= @end))) */
{where}
<%where%>


ORDER BY e.company,P.ProjectID , ProjectName Desc","0","","1","LRA-FUSION","0","0","fusion"
"39720","cv_Acc_GL_Trial_Balance_Detailed","","--Trial Balance Detailed
SELECT ID,[GL Code],  [Description],Type, Project, Asset, Dr,Cr 
FROM 	(
	SELECT newid() as [ID], convert(varchar,isnull(GC.GLCode,'')) as [GL Code] , GL as [GL], GL as [Description],
	CASE WHEN Type ='ASSET' AND sum(isnull(Dr,0)) - sum(isnull(Cr,0)) < 0 THEN 'LIABILITY' WHEN Type ='LIABILITY' AND sum(isnull(Dr,0)) - sum(isnull(Cr,0)) > 0 THEN 'ASSET' ELSE Type END as [Type],
	isnull(convert(varchar,cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) > 0  then sum(isnull(Dr,0)) - sum(isnull(Cr,0)) END as money),1),'') as [Dr],
	isnull(convert(varchar,cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) < 0  then sum(isnull(Cr,0)) - sum(isnull(Dr,0)) END as money),1),'') as [Cr],
	1 as [Rank],
	null as [Project],
	null as [Asset]
	FROM AccGL G
	LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
	LEFT JOIN (SELECT ProjectID, ProjectName, ProjectNum From Projects) P ON G.ProjectID = P.ProjectID
	LEFT JOIN (SELECT AssetID, SerialNo, StockID FROM ACCAsset) A ON G.AssetID = A.AssetID
	LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID
	where isnull(Dr,0) + isnull(Cr,0) <>0 {where}
	GROUP BY GL ,Type, GC.GLCode,isnull(P.ProjectNum + ' - ','') + P.ProjectName,isnull(A.SerialNo + ' - ','') + STK.StockDescription
	
	UNION ALL

	SELECT newid(),null,GL, '  -  ' + [Description] , convert(varchar,DateCompleted, 111) + ' ' + Doc as [Type],isnull(convert(varchar,Dr,1),'') as [Dr], isnull(convert(varchar,Cr,1),'') as [Cr],2 as [Rank], 
	isnull(P.ProjectNum + ' - ','') + P.ProjectName as [Project],
	isnull(A.SerialNo + ' - ','') + STK.StockDescription as [Asset]
	FROM AccGL G
	LEFT JOIN (SELECT ProjectID, ProjectName, ProjectNum From Projects) P ON G.ProjectID = P.ProjectID
	LEFT JOIN (SELECT AssetID, SerialNo, StockID FROM ACCAsset) A ON G.AssetID = A.AssetID
	LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID
	where isnull(Dr,0) + isnull(Cr,0) <>0 {where}
	
	UNION ALL
	
	SELECT newID(),null,'ZZZZZZZZZZZ99999' as[GL],  null as  [Description],'TOTAL: ' as [Type],convert(varchar,sum(isnull(Dr,0)),1),convert(varchar,sum(isnull(Cr,0)),1), 3 as [Rank], null as [Project], null as [Asset]
	FROM	(
		SELECT 
		cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) > 0  then sum(isnull(Dr,0)) - sum(isnull(Cr,0)) END as money) as [Dr],
		cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) < 0  then sum(isnull(Cr,0)) - sum(isnull(Dr,0)) END as money) as [Cr]
		FROM AccGL G
		LEFT JOIN (SELECT ProjectID, ProjectName, ProjectNum From Projects) P ON G.ProjectID = P.ProjectID
		LEFT JOIN (SELECT AssetID, SerialNo, StockID FROM ACCAsset) A ON G.AssetID = A.AssetID
		LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID
		where isnull(Dr,0) + isnull(Cr,0) <>0 {where}
		group by GL
		)B

	) A
ORDER BY GL,Rank, Type","0","","1","LRA-FUSION","0","0","fusion"
"39721","cv_Acc_Print_DeliveryNote","","Declare @docID  as integer
Set @DocID =  {docid}

{select} 
	(
	SELECT LineId,
	LLC.Value AS [Container], 
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '-    ' ELSE '' END + isnull(ESC.EntityStockCode,StockCode) as [Code], 
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '-    ' ELSE '' END + isnull(ESC.EntityStockDescription,StockDescription)  as [Description],
    convert(varchar,round((Qty),4))  as [Qty], 
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber(PriceEx / isnull(DM.ROE,1)) END as [Price Ex. VAT],
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx) / isnull(DM.ROE,1) *Tax/100 ) END as [Unit VAT], 
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx) / isnull(DM.ROE,1) *Tax/100 + (PriceEx) / isnull(DM.ROE,1) ) END as [Price Incl. VAT],
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) ) END as [Total Ex. VAT],
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 ) END as [VAT],
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1) ) END as [Total Incl],
	CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber(((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1) )) END as [Sub Total],  
    CASE WHEN isnull(ComponentOfLineID,0) <> 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx * Qty * (isnull(discperc,0))/100)) END as [Discount],
	CASE WHEN isnull(ComponentOfLineID ,0) = 0 then LineID ELSE  ComponentOfLineID END as [Rank],
	isnull(BarCode,'') as [Barcode],
	isnull(SB.Value,'') as [Sold In],
	1 as [SubRank], 
	--ISNULL(ADSN.ConSerialNumber,SerialNumber) as SerialNumber 
    R.StartDate As [Rental Start Date],
	R.EndDate As [Rental End Date],
	DD.Comments,
	GLC.GLCode as [GL Code],
	L.Value as [GL]
	FROM DEBTOR_DETAIL DD
	LEFT JOIN (SELECT DocID , ROE,EntityID, DivisionID  FROM DEBTOR_MASTER ) DM
	ON DD.DocID = DM.DocID
	LEFT JOIN (SELECT StockID , BarCode, SoldBy,JournalID FROM AccStock ) ACC
	ON DD.StockID = ACC.StockID
	LEFT JOIN (SELECT * FROM AccGLCode WHERE GLType = 'ASSET') GLC
	ON Acc.JournalID = GLC.GLCategoryID AND (ISNULL(DD.DivisionID, DM.DivisionID) = GLC.DivisionID  OR GLC.DivisionID = 0)
	LEFT JOIN (SELECT LookupID, Value FROM Lookup UNION ALL Select -4, 'INVENTORY') L 
	ON ACC.JournalID = L.LookupID  
	LEFT JOIN Lookup SB ON SB.LookupID = ACC.SoldBy  
	LEFT JOIN LinkLookup LLC
	ON DD.ContainerID = LLC.LinkLookupID 
	--This is here for a reason
	/* Yes, that reason is your FUCKING STUPIDITY! YOU USELEES PILE OF SHIT! Don't EVER code crap like this again! - Hal */
	--LEFT JOIN (SELECT DISTINCT DocID, StockID, ConSerialNumber FROM AccDispatchSerialNumbers) ADSN
    --ON ADSN.DocID = DD.DocID AND ADSN.StockID = DD.StockID
    --
    LEFT JOIN (SELECT * FROM EntityStockCode) ESC
    ON DD.StockID = ESC.StockID AND DM.EntityID = ESC.EntityID
    LEFT JOIN (Select StartDate,EndDate,RentalID from RENTAL) R
	on R.RentalID = DD.RentalLineID
	WHERE DD.DocID = @docid
	
	--Serial Numbers
	UNION ALL
	
	SELECT DD.LineId, 
	'' as [Code],
	'' as [Container], 
	'S/N: ' + SC.SerialNumber as [Description],  
	''  as [Qty], 
	'' as [Price Ex. VAT], 
	'' as [Unit VAT],
	'' as [Price Incl. VAT],
	'' as [Total Ex. VAT],
	'' as [VAT], 
	'' as [Total Incl],
	'' as [Sub Total],
	'' as [Discount],
	CASE WHEN isnull(ComponentOfLineID ,0) = 0 then DD.LineID ELSE  ComponentOfLineID END as [Rank],
	'' as [Barcode],
	'' as [Sold In],
	2 as [SubRank], 
    '' As [Rental Start Date],
	'' As [Rental End Date],
	'' as [Comments],
	'' as [GL Code],
	'' as [GL]
	FROM DEBTOR_DETAIL DD
	LEFT JOIN (SELECT DocID , DocType FROM DEBTOR_MASTER ) DM
	ON DD.DocID = DM.DocID 
	LEFT JOIN (SELECT StockID, DocID, DocType, LineID, SerialNumber FROM AccStockControl WHERE isnull(SerialNumber,'') <> '') SC
	ON DD.DocID = SC.DocID AND DD.LineID = SC.LineID 
	WHERE DD.DocID = @docid
	AND SC.LineID is not null
	
	UNION ALL
	
	--Comments
	SELECT LineId, '' as [Code],'' as [Container], Comments as [Description],  ''  as [Qty], 
	'' as [Price Ex. VAT], 
	'' as [Unit VAT],
	'' as [Price Incl. VAT],
	'' as [Total Ex. VAT],
	'' as [VAT], 
	'' as [Total Incl],
	'' as [Sub Total],
	'' as [Discount],
	CASE WHEN isnull(ComponentOfLineID ,0) = 0 then LineID ELSE  ComponentOfLineID END as [Rank],
	'' as [Barcode],
	'' as [Sold In],
	3 as [SubRank],
	'' As [Rental Start Date],
	'' As [Rental End Date],
	'' as [Comments],
	'' as [GL Code],
	'' as [GL]
	FROM DEBTOR_DETAIL DD
	LEFT JOIN (SELECT DocID , ROE FROM DEBTOR_MASTER ) DM
	ON DD.DocID = DM.DocID 
	WHERE DD.DocID = @docid
	AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
	AND 1 = (SELECT Top 1 ISNULL(Selected,0) FROM CRMSetup WHERE Description ='AccPrint' and Variable = 'CommentsBelow' )
	) A
ORDER By Rank, LineID,SubRank","0","","1","LRA-FUSION","0","0","fusion"
"39722","cv_Acc_Cost_Estimate_Details","","
declare @DocID as int
set @DocID = {docid}

SELECT LineID, [Group],Project, [Stock Code] as [Code], [Description], [Comments], [Supplier], Qty, Discount, [Cost Ex.], [Price Ex.], [Price Incl.],[Total Ex.],[Total Incl.],[Rank]
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * Qty ) as [Total Ex.],
	dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1) ) as [Total Incl.],
	Rank, -1000 as [Rank2],
	0 as [IsComponent]
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	
	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * Qty) as [Total Ex.], 
	dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1)) as [Total Incl.], 
	(SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2],
	1 as [IsComponent]
	FROM Cost_Estimate_Detail CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND DocID =  @DocID
	) A
{where}
ORDER BY  Rank,Rank2,LineID","0","","1","LRA-FUSION","0","0","fusion"
"39723","cv_Acc_RPT_JobRecon","","SET ANSI_WARNINGS OFF
SET NOCOUNT ON

DECLARE @EndDate as datetime
DECLARE @Project as int
SET @EndDate = '{enddate}' 
SET @Project = {project}


IF OBJECT_ID(N'tempdb..#ProjRecon', N'U') IS NOT NULL 
BEGIN
    DROP TABLE #ProjRecon;
END

CREATE TABLE #ProjRecon
(
[DETAILED SUMMARY] Varchar(4000),
[CODE] Varchar(4000),
[BUDGETED] Money,
[INVOICED] Money,
[FORECAST COST] Money,
[ACT. COST] Money
)

--Budgeted and Forecast Cost
INSERT INTO #ProjRecon([CODE], [DETAILED SUMMARY],[BUDGETED], [FORECAST COST] )
SELECT DD.StockCode, DD.StockDescription , 
cast(sum( qty * priceEx * ((100 - isnull(discperc,0)) / 100) ) as money) AS [BUDGETED],
cast(sum( qty * CostPriceEx ) as money) AS [FORECAST COST]
FROM COST_ESTIMATE_MASTER DM
LEFT JOIN (SELECT DocID, Qty, CASE WHEN isnull(ComponentOfLineID,0) = 0 THEN 1 ELSE 0 END * PriceEx as [PriceEx],CASE WHEN isnull(ComponentOfLineID,0) = 0 THEN 1 ELSE 0 END * CostPriceEx as [CostPriceEx],StockCode, StockDescription, Comments,DiscPerc, ProjectID FROM COST_ESTIMATE_DETAIL ) DD
ON DM.DocID = DD.DocID
LEFT JOIN (SELECT * FROM ProjectBudgetQuotes) PBQ ON PBQ.DocID = DM.DocID AND PBQ.ProjectID = DM.ProjectID
WHERE 
DocStatus in ( 'Completed' , 'Accepted')
AND isnull(DM.RevisedToDoc,0) = 0 
AND StartDate <= @enddate
AND isnull(DM.ProjectID,0) = @Project

AND DM.DocID NOT IN (SELECT DocID FROM ProjectBudgetQuotes WHERE ProjectID = @Project)
GROUP BY StockCode, StockDescription

--Client Invoices (for income and costs)
INSERT INTO #ProjRecon([CODE], [DETAILED SUMMARY],[INVOICED],[ACT. COST])
SELECT DD.StockCode, DD.StockDescription , cast(sum(CASE when DocType = 'Invoice' then 1 Else -1 END  * qty * priceEx * ((100 - isnull(discperc,0)) / 100) ) as money) AS [TOTAL. EX. VAT.],
cast(sum(CASE when DocType = 'Invoice' then 1 Else -1 END  * qty * CostPriceEx ) as money) AS [TOTAL COST]
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT DocID, Qty, CASE WHEN isnull(ComponentOfLineID,0) = 0 THEN 1 ELSE 0 END * PriceEx as [PriceEx],CASE WHEN isnull(ComponentOfLineID,0) = 0 THEN 1 ELSE 0 END * CostPriceEx as [CostPriceEx],StockCode, StockDescription, Comments,DiscPerc, ProjectID FROM DEBTOR_DETAIL ) DD
ON DM.DocID = DD.DocID
WHERE 
DocType in ('Invoice', 'Credit Note')
AND DocStatus = 'Completed'
AND DateCompleted <= @enddate
AND isnull(DD.ProjectID,DM.ProjectID) = @Project
GROUP BY StockCode, StockDescription

/*
--Client Invoices
INSERT INTO #ProjRecon([CODE], [DETAILED SUMMARY],[INVOICED] )
SELECT DD.StockCode, DD.StockDescription , cast(sum(CASE when DocType = 'Invoice' then 1 Else -1 END  * qty * priceEx * ((100 - isnull(discperc,0)) / 100) ) as money) AS [TOTAL. EX. VAT.]
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT DocID, Qty, CASE WHEN isnull(ComponentOfLineID,0) = 0 THEN 1 ELSE 0 END * PriceEx as [PriceEx],StockCode, StockDescription, Comments,DiscPerc, ProjectID FROM DEBTOR_DETAIL ) DD
ON DM.DocID = DD.DocID
WHERE 
DocType in ('Invoice', 'Credit Note')
AND DocStatus = 'Completed'
AND DateCompleted <= @enddate
AND isnull(DD.ProjectID,DM.ProjectID) = @Project
GROUP BY StockCode, StockDescription


--Supplier  Invoices
INSERT INTO #ProjRecon([CODE], [DETAILED SUMMARY],[ACT. COST] )
SELECT DD.StockCode, DD.StockDescription , cast(sum(CASE when DocType = 'Supplier Invoice' then 1 Else -1 END  * qty * priceEx * ((100 - isnull(discperc,0)) / 100) ) as money) AS [TOTAL. EX. VAT.]
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT DocID, Qty,  PriceEx as [PriceEx],StockCode, StockDescription, Comments,DiscPerc, ProjectID FROM CREDITOR_DETAIL ) DD
ON DM.DocID = DD.DocID
WHERE 
DocType in ('Supplier Invoice', 'Supplier Credit Note')
AND DocStatus = 'Completed'
AND DateCompleted <= @enddate
AND isnull(DD.ProjectID,DM.ProjectID) = @Project
GROUP BY StockCode, StockDescription
*/

--Timesheets
INSERT INTO #ProjRecon([CODE], [DETAILED SUMMARY],[ACT. COST] )
SELECT STK.StockCode, STK.StockDescription, 
(datediff(n, DA.[Date], DA.[EndDate]) / 60.00)
*	case when isnull(RC.RateCardID,0) > 0  THEN isnull(RCA.RateAmount,0) ELSE
		case when isnull(S.CostToCompany,0) <> 0 THEN S.CostToCompany ELSE 
			isnull(SP.CostPriceEx,0) 
		END
	END
as [ActCost]
FROM DEVAPPOINTMENT DA 
LEFT JOIN (SELECT ProjectID, DivID FROM Projects) P
ON DA.ProjectID = P.ProjectID
LEFT JOIN (SELECT ModuleID, StockID FROM Modules) M
ON DA.ModuleID = M.ModuleID
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK
ON M.StockID = STK.StockID
LEFT JOIN (SELECT StockID, DivisionID, CostPriceEx, ValidFrom, ValidTo FROM AccStockPrice ) SP
ON M.StockID = SP.StockID AND P.DivID = SP.DivisionID AND DA.[Date] BETWEEN SP.ValidFrom AND SP.ValidTo
LEFT JOIN (SELECT UserID, StaffID FROM Users) U
ON DA.ForUserID = U.UserID
LEFT JOIN (SELECT StaffID, CostToCompany FROM Staff) S
ON U.StaffID = S.StaffID
LEFT JOIN (SELECT * FROM RateCardAmount where IsCostToCompany = 1) RCA
ON DA.ProjectID = RCA.ProjectID AND DA.ModuleID = RCA.ModuleID AND S.StaffID = RCA.ConsultantID
LEFT JOIN (SELECT * FROM RateCard) RC
ON RCA.RateCardID = RC.RateCardID AND (DA.[Date] BETWEEN RC.StartDate AND RC.EndDate OR (DA.[Date] >= RC.StartDate AND RC.NeverExpire = 1))
WHERE DA.ProjectID = @Project
AND isnull(DA.Approved,0) = 1
AND M.StockID is not null
AND DA.EndDate <= @EndDate

--Expenditures
INSERT INTO #ProjRecon([CODE], [DETAILED SUMMARY],[ACT. COST] )
SELECT * FROM 
(
	SELECT 	STK.StockCode as [CODE], STK.StockDescription as [DESCRIPTION],isnull(DD.QTY,0) * isnull(DD.PriceEx ,0) as [TOTAL EX. VAT.]
	FROM AccExpenseClaim DM
	LEFT JOIN (SELECT * FROM AccExpenses) DD ON DM.AccExpenseClaimID = DD.ExpenseClaimID
	LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK ON DD.StockID = STK.StockID
	WHERE DM.DatePaid <= @EndDate
	AND DD.ProjectID = @Project

	UNION ALL 

	SELECT convert(varchar,GLC.GLCode) as [CODE],L.Value as [DESCRIPTION], CTD.TotalIncl / (CTD.VATPerc / 100 + 1)  as [TOTAL EX. VAT.]
	FROM CASH_TRANSACTION_MASTER CTM
	LEFT JOIN (SELECT * FROM CASH_TRANSACTION_DETAIL) CTD ON CTM.DocID = CTD.DocID
	LEFT JOIN (SELECT * FROM AccGLCode) GLC ON CTD.GLCodeID = GLC.GLCodeID
	LEFT JOIN (SELECT LookupID, Value 
	FROM Lookup 
	where class like 'JournalType' 
	UNION ALL
	SELECT -1, 'ACCOUNTS RECEIVABLE'
	UNION ALL
	SELECT -2, 'OUTPUT VAT CONTROL' 
	UNION ALL
	SELECT -3, 'COST OF SALES' 
	UNION ALL
	SELECT -4, 'INVENTORY' 
	UNION ALL
	SELECT -5, 'INPUT VAT CONTROL' 
	UNION ALL
	SELECT -6, 'BANK' 
	UNION ALL
	SELECT -8, 'FOREIGN EXCHANGE' 
	UNION ALL
	SELECT -9, 'ACCOUNTS PAYABLE' 
	UNION ALL
	SELECT -10, 'UN-RECEIVED INVENTORY' 
	UNION ALL
	SELECT -11, 'PREPAID EXPENSE' 
	UNION ALL
	SELECT -12, 'CAPITAL' 
	UNION ALL
	SELECT -13, 'INVENTORY EXPENSE' 
	UNION ALL
	SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
	UNION ALL
	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL'
	UNION ALL
	SELECT -16, 'DISCOUNT ALLOWED' 
	UNION ALL
	SELECT -17, 'DISCOUNT RECEIVED'  
	UNION ALL
	SELECT -18, 'OPENING BALANCE' 
	) L 
	ON GLC.GLCategoryID = L.LookupID
	WHERE CTD.DatePaid <= @EndDate
	AND CTD.ProjectID = @Project
	AND Isnull(CTM.IsComplete,0) = 1
	AND GLC.[GLType] in ('COST OF SALES', 'EXPENSE')

	UNION ALL

	SELECT StockCode, StockDescription,Qty * CostPriceEx 
	FROM EXPENDITURE_MASTER
	WHERE DateCompleted <= @EndDate
	AND DocStatus = 'Completed'
	AND ProjectID = @Project
	AND DocType IN ('Purchase', 'Stock Disbursement')
) A

--REPORT:
SELECT NEWID(), [DETAILED SUMMARY], [CODE], 
Convert(Varchar,Cast(sum(isnull([BUDGETED],0)) as money),1) as [BUDGETED], 
Convert(Varchar,Cast(sum(isnull([INVOICED],0)) as money),1) as [INVOICED],
Convert(Varchar,Cast(sum(isnull([BUDGETED],0)) - sum(isnull([INVOICED],0)) as money),1) as [VARIANCE],
Convert(Varchar,Cast(sum(isnull([FORECAST COST],0)) as money),1) as [FORECAST COST], 
Convert(Varchar,Cast(sum(isnull([ACT. COST],0)) as money),1) as [ACT. COST],
Convert(Varchar,Cast(sum(isnull([FORECAST COST],0)) - sum(isnull([ACT. COST],0)) as money),1) as [VARIANCE],
(1 - sum(isnull([FORECAST COST],0)) / CASE WHEN sum(isnull([BUDGETED],0)) = 0 THEN 1 ELSE sum(isnull([BUDGETED],0)) END) * 100 as [BUD. % MARGIN],
(1 - sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([INVOICED],0)) = 0 THEN 1 ELSE sum(isnull([INVOICED],0)) END) * 100 as [ACT. % MARGIN]
FROM #ProjRecon
GROUP BY  [DETAILED SUMMARY], [CODE] 

UNION ALL

SELECT NEWID(), '<B>TOTAL:</B>' AS [DETAILED SUMMARY], '' as [CODE], 
Convert(Varchar,Cast(sum(isnull([BUDGETED],0)) as money),1) as [BUDGETED], 
Convert(Varchar,Cast(sum(isnull([INVOICED],0)) as money),1) as [INVOICED],
Convert(Varchar,Cast(sum(isnull([BUDGETED],0)) - sum(isnull([INVOICED],0)) as money),1) as [VARIANCE],
Convert(Varchar,Cast(sum(isnull([FORECAST COST],0)) as money),1) as [FORECAST COST], 
Convert(Varchar,Cast(sum(isnull([ACT. COST],0)) as money),1) as [ACT. COST],
Convert(Varchar,Cast(sum(isnull([FORECAST COST],0)) - sum(isnull([FORECAST COST],0))  as money),1) as [VARIANCE],
(1 - sum(isnull([FORECAST COST],0)) / CASE WHEN sum(isnull([BUDGETED],0)) = 0 THEN 1 ELSE sum(isnull([BUDGETED],0)) END) * 100 as [BUD. % MARGIN],
(1 - sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([INVOICED],0)) = 0 THEN 1 ELSE sum(isnull([INVOICED],0)) END) * 100 as [ACT. % MARGIN]
FROM #ProjRecon


SET NOCOUNT OFF","0","","1","LRA-FUSION","0","0","fusion"
"39724","cv_acc_RPT_JobReconBill","","DECLARE @StartDate as datetime
DECLARE @EndDate as datetime
DECLARE @Project as int
DECLARE @Client as int
SET @StartDate = '{startdate}' 
SET @EndDate = '{enddate}' 
SET @Project = {project}
SET @Client = {entityid}
SELECT DocNo as [DOC. NO.], DocType as [TYPE],convert(varchar, DateCompleted,103) as [DATE],
DD.StockCode as [CODE], DD.StockDescription as [DESCRIPTION], DD.COMMENTS, DD.QTY, 
convert(varchar,cast(DD.PriceEx as money),1) as [UNIT PRICE], 
convert(varchar,cast(DiscPerc as money),1) as [DISCOUNT],
Convert(Varchar,cast(CASE when DocType = 'Invoice' then 1 ELSE -1 END * qty * priceEx * ((100 - isnull(discperc,0)) / 100)  as money),1) AS [TOTAL. EX. VAT.]
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT DocID, Qty, CASE WHEN isnull(ComponentOfLineID,0) = 0 THEN PriceEx ELSE 0 END as [PriceEx],StockCode, StockDescription, Comments,DiscPerc, ProjectID FROM DEBTOR_DETAIL  ) DD
ON DM.DocID = DD.DocID
WHERE 
DocType in ('Invoice', 'Credit Note')
AND DocStatus = 'Completed'
AND DateCompleted between @startdate and @enddate
AND Entityid = @Client
AND isnull(DD.ProjectID,DM.ProjectID) = @Project

UNION ALL

SELECT null,null,null,null,null,null,null,null, '<B>TOTAL</B>',
'<B>' + Convert(Varchar,cast(sum(CASE when DocType = 'Invoice' then 1 Else -1 END  * qty * priceEx * ((100 - isnull(discperc,0)) / 100) ) as money),1) + '</B>' AS [TOTAL. EX. VAT.]
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT DocID, Qty, PriceEx,StockDescription, Comments,DiscPerc, ProjectID FROM DEBTOR_DETAIL  WHERE isnull(ComponentOfLineID,0) = 0) DD
ON DM.DocID = DD.DocID
WHERE 
DocType in ('Invoice', 'Credit Note')
AND DocStatus = 'Completed'
AND DateCompleted between @startdate and @enddate
AND Entityid = @Client
AND isnull(DD.ProjectID,DM.ProjectID) = @Project


","0","","1","LRA-FUSION","0","0","fusion"
"39725","cv_Acc_RPT_JobReconGLAdjustments","","DECLARE @StartDate as datetime
DECLARE @EndDate as datetime
DECLARE @Project as int
SET @StartDate = '{startdate}' 
SET @EndDate = '{enddate}' 
SET @Project = {project}



SELECT [DOC. NO.], [TYPE], convert(varchar,[DATE],111) as [DATE],[CODE], [DESCRIPTION], COMMENTS, QTY, [UNIT PRICE], [TOTAL EX. VAT.]
FROM (	
	SELECT LAM.DocID as [DOC. NO.],GLC.GLType as [TYPE], AdjustDate as [DATE], 
	GLC.GLCode as [CODE], L.Value as [DESCRIPTION], LAD.Notes as [COMMENTS], 1 as [QTY], 
	convert(varchar, cast(LAD.Credit - LAD.Debit as money),1) as [UNIT PRICE], 
	convert(varchar, cast(LAD.Credit - LAD.Debit as money),1) as [TOTAL EX. VAT.],
	1 as [Rank]
	FROM LEDGER_ADJUST_MASTER LAM
	LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD ON LAM.DocID = LAD.DocID
	LEFT JOIN (SELECT * FROM AccGLCode) GLC ON LAD.GLCodeID = GLC.GLCodeID
	LEFT JOIN (SELECT LookupID, Value 
	FROM Lookup 
	where class like 'JournalType' 
	UNION ALL
	SELECT -1, 'ACCOUNTS RECEIVABLE'
	UNION ALL
	SELECT -2, 'OUTPUT VAT CONTROL' 
	UNION ALL
	SELECT -3, 'COST OF SALES' 
	UNION ALL
	SELECT -4, 'INVENTORY' 
	UNION ALL
	SELECT -5, 'INPUT VAT CONTROL' 
	UNION ALL
	SELECT -6, 'BANK' 
	UNION ALL
	SELECT -8, 'FOREIGN EXCHANGE' 
	UNION ALL
	SELECT -9, 'ACCOUNTS PAYABLE' 
	UNION ALL
	SELECT -10, 'UN-RECEIVED INVENTORY' 
	UNION ALL
	SELECT -11, 'PREPAID EXPENSE' 
	UNION ALL
	SELECT -12, 'CAPITAL' 
	UNION ALL
	SELECT -13, 'INVENTORY EXPENSE' 
	UNION ALL
	SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
	UNION ALL
	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL'
	UNION ALL
	SELECT -16, 'DISCOUNT ALLOWED' 
	UNION ALL
	SELECT -17, 'DISCOUNT RECEIVED'  
	UNION ALL
	SELECT -18, 'OPENING BALANCE' 
	) L 
	ON GLC.GLCategoryID = L.LookupID
	WHERE LAD.AdjustDate <= @EndDate
	AND LAD.ProjectID = @Project
	AND Isnull(LAM.IsComplete,0) = 1
	AND GLC.[GLType] in ('COST OF SALES', 'EXPENSE', 'INCOME', 'OTHER INCOME')

	UNION ALL

	SELECT  null, null, null, null,null,null ,null, '<B>TOTAL</B>','<B>' + convert(varchar,  cast(sum(isnull(LAD.Credit - LAD.Debit,0)) as money),1) + '</B>' as [TOTAL EX. VAT.],2 as [Rank]
	FROM LEDGER_ADJUST_MASTER LAM
	LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD ON LAM.DocID = LAD.DocID
	LEFT JOIN (SELECT * FROM AccGLCode) GLC ON LAD.GLCodeID = GLC.GLCodeID
	WHERE LAD.AdjustDate <= @EndDate
	AND LAD.ProjectID = @Project
	AND Isnull(LAM.IsComplete,0) = 1
	AND GLC.[GLType] in ('COST OF SALES', 'EXPENSE', 'INCOME', 'OTHER INCOME')
) B
ORDER BY [Rank], [Date]","0","","1","LRA-FUSION","0","0","fusion"
"39726","cv_Acc_RPT_JobReconExpense","","DECLARE @EndDate as datetime
DECLARE @Project as int
SET @EndDate = '{enddate}' 
SET @Project = {project}



SELECT [DOC. NO.], [TYPE], convert(varchar,[DATE],111) as [DATE],[CODE], [DESCRIPTION], COMMENTS, QTY, [UNIT PRICE], [TOTAL EX. VAT.]
FROM (	
	SELECT AccExpenseClaimID as [DOC. NO.], 'Expense Claim' as [TYPE], DateIncurred as [DATE],
	STK.StockCode as [CODE], STK.StockDescription as [DESCRIPTION],DD.COMMENTS, DD.QTY, convert(varchar,cast(DD.PriceEx as money),1) as [UNIT PRICE],
	convert(varchar,cast(isnull(DD.QTY,0) * isnull(DD.PriceEx ,0) as money),1) as [TOTAL EX. VAT.],
	1 as [Rank]
	FROM AccExpenseClaim DM
	LEFT JOIN (SELECT * FROM AccExpenses) DD ON DM.AccExpenseClaimID = DD.ExpenseClaimID
	LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK ON DD.StockID = STK.StockID
	WHERE DM.DatePaid <= @EndDate
	AND DD.ProjectID = @Project

	UNION ALL 

	SELECT CTM.DocID as [DOC. NO.], 'Bank Journal' as [TYPE], DatePaid as [DATE], 
	convert(varchar,GLC.GLCode) as [CODE],L.Value as [DESCRIPTION], CTD.RefNo as [COMMENTS], 1 as [QTY], 
	convert(varchar, cast(CTD.TotalIncl / (CTD.VATPerc / 100 + 1) as money),1) as [UNIT PRICE], convert(varchar, cast(CTD.TotalIncl / (CTD.VATPerc / 100 + 1) as money),1) as [TOTAL EX. VAT.],
	1 as [Rank]
	FROM CASH_TRANSACTION_MASTER CTM
	LEFT JOIN (SELECT * FROM CASH_TRANSACTION_DETAIL) CTD ON CTM.DocID = CTD.DocID
	LEFT JOIN (SELECT * FROM AccGLCode) GLC ON CTD.GLCodeID = GLC.GLCodeID
	LEFT JOIN (SELECT LookupID, Value 
	FROM Lookup 
	where class like 'JournalType' 
	UNION ALL
	SELECT -1, 'ACCOUNTS RECEIVABLE'
	UNION ALL
	SELECT -2, 'OUTPUT VAT CONTROL' 
	UNION ALL
	SELECT -3, 'COST OF SALES' 
	UNION ALL
	SELECT -4, 'INVENTORY' 
	UNION ALL
	SELECT -5, 'INPUT VAT CONTROL' 
	UNION ALL
	SELECT -6, 'BANK' 
	UNION ALL
	SELECT -8, 'FOREIGN EXCHANGE' 
	UNION ALL
	SELECT -9, 'ACCOUNTS PAYABLE' 
	UNION ALL
	SELECT -10, 'UN-RECEIVED INVENTORY' 
	UNION ALL
	SELECT -11, 'PREPAID EXPENSE' 
	UNION ALL
	SELECT -12, 'CAPITAL' 
	UNION ALL
	SELECT -13, 'INVENTORY EXPENSE' 
	UNION ALL
	SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
	UNION ALL
	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL'
	UNION ALL
	SELECT -16, 'DISCOUNT ALLOWED' 
	UNION ALL
	SELECT -17, 'DISCOUNT RECEIVED'  
	UNION ALL
	SELECT -18, 'OPENING BALANCE' 
	) L 
	ON GLC.GLCategoryID = L.LookupID
	WHERE CTD.DatePaid <= @EndDate
	AND CTD.ProjectID = @Project
	AND Isnull(CTM.IsComplete,0) = 1
	AND GLC.[GLType] in ('COST OF SALES', 'EXPENSE')

	UNION ALL

	SELECT DocNo, DocType, DateCompleted,StockCode, StockDescription, Memo, Qty, 
	convert(varchar, cast(CostPriceEx as money),1), 
	convert(varchar, cast(Qty * CostPriceEx as money),1) , 1 as [Rank]
	FROM EXPENDITURE_MASTER
	WHERE DateCompleted <= @EndDate
	AND DocStatus = 'Completed'
	AND ProjectID = @Project
	AND DocType IN ('Purchase', 'Stock Disbursement')
	
	
	UNION ALL

	--Project Assets
	SELECT AD.AssetDetailID, 'Asset Depreciation', AD.SchedDate,STK.StockCode, STK.StockDescription,A.SerialNo,1 as [Qty], 
	convert(varchar, cast(AD.DepExpense as money),1), convert(varchar, cast(AD.DepExpense as money),1), 1 as [Rank] 
	FROM ProjectAsset PA
	LEFT JOIN (SELECT * FROM AccAssetDetail) AD
	ON PA.AssetID = AD.AssetID AND AD.SchedDate Between PA.StartDate AND PA.EndDate
	LEFT JOIN (SELECT AssetID,StockID,SerialNo FROM  AccAsset ) A
	ON AD.AssetID = A.AssetID
	LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK
	ON A.StockID = STK.StockID 	
	WHERE AD.SchedDate <= @EndDate
	AND PA.ProjectID = @Project
	
	UNION ALL
	
	SELECT  null, null, null, null,null,null ,null, '<B>TOTAL</B>','<B>' + convert(varchar,  cast(sum(isnull([TOTAL EX. VAT.],0)) as money),1) + '</B>' as [TOTAL EX. VAT.],2 as [Rank]
	FROM (
		SELECT sum(isnull(DD.QTY,0) * isnull(DD.PriceEx ,0)) as [TOTAL EX. VAT.]
		FROM AccExpenseClaim DM
		LEFT JOIN (SELECT * FROM AccExpenses) DD ON DM.AccExpenseClaimID = DD.ExpenseClaimID
		WHERE DM.DatePaid <= @EndDate
		AND DD.ProjectID = @Project

		UNION ALL 

		SELECT sum(CTD.TotalIncl / (CTD.VATPerc / 100 + 1)) as [TOTAL EX. VAT.]
		FROM CASH_TRANSACTION_MASTER CTM
		LEFT JOIN (SELECT * FROM CASH_TRANSACTION_DETAIL) CTD ON CTM.DocID = CTD.DocID
		LEFT JOIN (SELECT * FROM AccGLCode) GLC ON CTD.GLCodeID = GLC.GLCodeID
		WHERE CTD.DatePaid <= @EndDate
		AND CTD.ProjectID = @Project
		AND Isnull(CTM.IsComplete,0) = 1
		AND GLC.[GLType] in ('COST OF SALES', 'EXPENSE')
		
		UNION ALL 
		
		SELECT  sum(isnull(Qty,0) * isnull(CostPriceEx ,0))
		FROM EXPENDITURE_MASTER
		WHERE DateCompleted <= @EndDate
		AND DocStatus = 'Completed'
		AND ProjectID = @Project
		AND DocType IN ('Purchase', 'Stock Disbursement')
	) A
) B
ORDER BY [Rank], [Date]


","0","","1","LRA-FUSION","0","0","fusion"
"39727","cv_acc_RPT_JobReconOutstanding","","DECLARE @StartDate as datetime
DECLARE @EndDate as datetime
DECLARE @Project as int
DECLARE @Client as int
SET @StartDate =  '{startdate}' 
SET @EndDate = '{enddate}' 
SET @Project = {project}

SELECT DocNo as [DOC. NO.], ClientPO as [SUPPLIER DOC.], [SUPPLIER], DocType as [TYPE],convert(varchar, DateCompleted,103) as [DATE],
DD.StockCode as [CODE], DD.StockDescription as [DESCRIPTION], DD.COMMENTS, DD.QTY, 
convert(varchar,cast(DD.PriceEx as money),1) as [UNIT PRICE], 
convert(varchar,cast(DiscPerc as money),1) as [DISCOUNT],
Convert(Varchar,cast(CASE when DocType = 'Purchase Order' then 1 ELSE -1 END * qty * priceEx * ((100 - isnull(discperc,0)) / 100)  as money),1) AS [TOTAL. EX. VAT.]
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT DocID, Qty, PriceEx,StockCode, StockDescription, Comments,DiscPerc, ProjectID FROM CREDITOR_DETAIL  ) DD
ON DM.DocID = DD.DocID
LEFT JOIN (SELECT EntityID , Company as [Supplier] From Entity) E 
ON DM.Entityid = E.EntityID
WHERE 
DocType in ('Purchase Order')
AND DateCreated between @startdate and @enddate
AND isnull(DD.ProjectID,DM.ProjectID) = @Project

UNION ALL

SELECT null,null,null,null,null,null,null,null,null,null, '<B>TOTAL</B>',
'<B>' + Convert(Varchar,cast(sum(CASE when DocType = 'Purchase Order' then 1 Else -1 END  * qty * priceEx * ((100 - isnull(discperc,0)) / 100) ) as money),1) + '</B>' AS [TOTAL. EX. VAT.]
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT DocID, Qty, PriceEx,StockDescription, Comments,DiscPerc, ProjectID FROM CREDITOR_DETAIL ) DD
ON DM.DocID = DD.DocID
WHERE 
DocType in ('Purchase Order')
AND DateCompleted between @startdate and @enddate
AND isnull(DD.ProjectID,DM.ProjectID) = @Project


","0","","1","LRA-FUSION","0","0","fusion"
"39728","cv_acc_RPT_JobReconSupp","","DECLARE @StartDate as datetime
DECLARE @EndDate as datetime
DECLARE @Project as int
SET @StartDate =  '{startdate}' 
SET @EndDate = '{enddate}' 
SET @Project = {project}

SELECT DocNo as [DOC. NO.], ClientPO as [SUPPLIER DOC.], [SUPPLIER], DocType as [TYPE],convert(varchar, DateCompleted,103) as [DATE],
DD.StockCode as [CODE], DD.StockDescription as [DESCRIPTION], DD.COMMENTS, DD.QTY, 
convert(varchar,cast(DD.PriceEx as money),1) as [UNIT PRICE], 
convert(varchar,cast(DiscPerc as money),1) as [DISCOUNT],
Convert(Varchar,cast(CASE when DocType = 'Supplier Invoice' then 1 ELSE -1 END * qty * priceEx * ((100 - isnull(discperc,0)) / 100)  as money),1) AS [TOTAL. EX. VAT.]
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT DocID, Qty, PriceEx,StockCode, StockDescription, Comments,DiscPerc, ProjectID FROM CREDITOR_DETAIL  ) DD
ON DM.DocID = DD.DocID
LEFT JOIN (SELECT EntityID , Company as [Supplier] From Entity) E 
ON DM.Entityid = E.EntityID
WHERE 
DocType in ('Supplier Invoice', 'Supplier Credit Note')
AND DocStatus = 'Completed'
AND DateCompleted between @startdate and @enddate
AND isnull(DD.ProjectID,DM.ProjectID) = @Project

UNION ALL

SELECT null,null,null,null,null,null,null,null,null,null, '<B>TOTAL</B>',
'<B>' + Convert(Varchar,cast(sum(CASE when DocType = 'Supplier Invoice' then 1 Else -1 END  * qty * priceEx * ((100 - isnull(discperc,0)) / 100) ) as money),1) + '</B>' AS [TOTAL. EX. VAT.]
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT DocID, Qty, PriceEx,StockDescription, Comments,DiscPerc, ProjectID FROM CREDITOR_DETAIL ) DD
ON DM.DocID = DD.DocID
WHERE 
DocType in ('Supplier Invoice', 'Supplier Credit Note')
AND DocStatus = 'Completed'
AND DateCompleted between @startdate and @enddate
AND isnull(DD.ProjectID,DM.ProjectID) = @Project


","0","","1","LRA-FUSION","0","0","fusion"
"39729","cv_Acc_RPT_JobVar","","DECLARE @StartDate as datetime
DECLARE @EndDate as datetime
SET @StartDate = '{startdate}' 
SET @EndDate = '{enddate}' 
DECLARE @StartPeriod as int
DECLARE @EndPeriod as int
SET @StartPeriod = {startperiod} 
SET @EndPeriod =  {endperiod} 

    SELECT
    Convert(varchar,P.ProjectID) + ' - ' + P.ProjectName as [PROJECT],E.COMPANY,
    convert(varchar,cast(sum(CostPriceEX * QTY) as Money),1) as [EST COST],
    convert(varchar,cast(sum(SupPrice * SupQTY * ((100 - isnull(discperc,0)) /100)) as Money),1) as [ACT COST],
    convert(varchar,cast(sum(CostPriceEX * QTY) - sum(SupPrice * SupQTY  * ((100- isnull(discperc,0)) /100)) as Money),1) as [JOB VAR]
    FROM    (

        --Opening Balances From Jobs
        SELECT top 100 Percent StartDate as [DateCompleted], null as [StockID], 'Opening Balance' as [StockDescription],null as [Forecast], isnull(OpeningBalance,0) as [PriceEx],isnull(OBEstCost,0) as [CostPriceEx], 1 as [Qty], 1 as [SupQty], isnull(OBActCost,0) as [SupPrice], 1 as [Rank],
        Entityid, ProjectID, 0 as [DiscPerc]
        FROM  Projects
    
        Union ALL
    
        --Debtor Docs
        SELECT  top 100 Percent DateCompleted, StockID, StockDescription, null as [Forecast],PriceEx, CostPriceEx,
        CASE DocType when 'Invoice' then 1 WHEN 'Credit Note' then -1 END * Qty  as [QTY], 0 as [SupQTY] ,0 as [SupPrice], 2 as [Rank],
        DM.EntityID, DM.ProjectID,[DiscPerc]
        FROM DEBTOR_MASTER DM
        LEFT JOIN (SELECT DOCID, StockID,StockDescription, QTY, CostPriceEx,PriceEx, DiscPerc FROM DEBTOR_DETAIL) DD
        ON DM.DocID = DD.DocID
        WHERE 
        DocType in ('Invoice', 'Credit Note')
        --AND datecompleted between @startdate and @enddate
        
        UNION ALL
            
         --Creditor Docs
        SELECT top 100 Percent DateCompleted,StockID, StockDescription, null as [Forecast],0,0, 0,
        CASE DocType when 'Supplier Invoice' then QTY WHEN 'Supplier Credit Note' then -1 * Qty END as [QTY] , 
        PriceEx,3 as [Rank],
        CD.clientid,CD.ProjectID, [DiscPerc]
        FROM CREDITOR_DETAIL CD
        LEFT JOIN (SELECT DocID, DocNo, ClientPO, DateCompleted, EntityID,DocStatus,DocType FROM CREDITOR_MASTER) CM
        ON CD.DocID = Cm.DocID
        LEFT JOIN (SELECT EntityID, Company FROM Entity) E
        ON Cm.EntityID = E.EntityID
        WHERE 
        Doctype in ('Supplier Invoice', 'Supplier Credit Note')
        --AND DateCompleted between @startdate and @EndDate
        and docstatus = 'Completed'
    
    
    
        UNION ALL
    
        --Cashbook entries
        SELECT top 100 Percent DatePaid, StockID,ASTK.StockDescription,null as [Forecast],0,0,Qty, Qty, PriceEx,4 as [Rank],
        clientid,ProjectID, 0 as [DiscPerc] 
        FROM AccOverhead AO
        LEFT JOIN (SELECT StockID as [StkID] , StockDescription FROM ACCStock) ASTK
        ON AO.StockID = ASTK.StkID 
        WHERE 
        ispaid = 1
        -- AND DatePaid between @startdate and @enddate 
        AND AccType = 'Supplier Payment'
    
       UNION ALL
    
        --Expenses
        SELECT top 100 Percent DateIncurred, StockID, isnull(StockDescription, 'Expense'),null as [Forecast], 0,0,Qty,qty,PriceEx, 5 as [Rank],
        EntityID, ProjectID, 0 as [DiscPerc]    
        FROM AccExpenses AE 
        LEFT JOIN (SELECT StockID as [StkID] , StockDescription FROM ACCStock) ASTK
        ON AE.StockID = ASTK.StkID 
        -- WHERE DateIncurred between @startdate and @enddate 
    
        UNION ALL
    
        SELECT top 100 percent [budDate],StockID, StockDescription,isnull(TotalSellingPriceEx,0),0,0,0,0,0,0,
        Entityid, ProjectID , 0 as [DiscPerc]    
        FROM AccBudget SF
        LEFT JOIN (SELECT StockID as [StkID] , StockDescription FROM ACCStock) ASTK
        ON SF.StockID = ASTK.StkID 
        --WHERE [Month] between @startdate and @enddate 
    
        ) A
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E
    ON A.Entityid = E.Entityid
    LEFT JOIN (SELECT ProjectID,ProjectName,DateCompleted,Period FROM Projects) P
    ON A.ProjectID = P.ProjectID
    WHERE A.ProjectID is not null
    AND A.ProjectID <> 0
    AND isnull(P.DateCompleted, '9999/12/31' ) Between @Startdate AND @EndDate
    AND Isnull(P.Period, -1) Between @StartPeriod AND @EndPeriod
    Group By E.Company,P.ProjectID,P.ProjectName
    
    Union ALL
    

    
    SELECT  '<B> TOTAL JOBS CLOSED </B>',null,
    '<B>' + convert(varchar, cast(sum(CostPriceEX * QTY) as Money),1) + '</B>' as [EST COST],
    '<B>' + convert(varchar, cast(sum(SupPrice * SupQTY  * ((100- isnull(discperc,0)) /100)) as Money),1) + '</B>' as [ACT COST],
    '<B>' + convert(varchar, cast(sum(CostPriceEX * QTY) -sum (SupPrice * SupQTY  * ((100- isnull(discperc,0)) /100)) as Money),1) + '</B>' as [JOB VAR]
    FROM    (
        --Opening Balances From Jobs
        SELECT top 100 Percent StartDate as [DateCompleted], null as [StockID], 'Opening Balance' as [StockDescription],null as [Forecast], isnull(OpeningBalance,0) as [PriceEx],isnull(OBEstCost,0) as [CostPriceEx], 1 as [Qty], 1 as [SupQty], isnull(OBActCost,0) as [SupPrice], 1 as [Rank],
        Entityid, ProjectID, 0 as [DiscPerc]
        FROM  Projects
    
        Union ALL
    
        --Debtor Docs
        SELECT  top 100 Percent DateCompleted, StockID, StockDescription, null as [Forecast],PriceEx, CostPriceEx,
        CASE DocType when 'Invoice' then QTY WHEN 'Credit Note' then -1 * Qty END as [QTY], 0 as [SupQTY] ,0 as [SupPrice], 2 as [Rank],
        DM.EntityID, DM.ProjectID,[DiscPerc]
        FROM DEBTOR_MASTER DM
        LEFT JOIN (SELECT DOCID, StockID,StockDescription, QTY, CostPriceEx,PriceEx, DiscPerc FROM DEBTOR_DETAIL) DD
        ON DM.DocID = DD.DocID
        WHERE 
        DocType in ('Invoice', 'Credit Note')
        --AND datecompleted between @startdate and @enddate
        
        UNION ALL
            
         --Creditor Docs
        SELECT top 100 Percent DateCompleted,StockID, StockDescription, null as [Forecast],0,0, 0,
        CASE DocType when 'Supplier Invoice' then QTY WHEN 'Supplier Credit Note' then -1 * Qty END as [QTY] , 
        PriceEx,3 as [Rank],
        CD.clientid,CD.ProjectID, [DiscPerc]
        FROM CREDITOR_DETAIL CD
        LEFT JOIN (SELECT DocID, DocNo, ClientPO, DateCompleted, EntityID,DocStatus,DocType FROM CREDITOR_MASTER) CM
        ON CD.DocID = Cm.DocID
        LEFT JOIN (SELECT EntityID, Company FROM Entity) E
        ON Cm.EntityID = E.EntityID
        WHERE 
        Doctype in ('Supplier Invoice', 'Supplier Credit Note')
        --AND DateCompleted between @startdate and @EndDate
        and docstatus = 'Completed'
    
    
    
        UNION ALL
    
        --Cashbook entries
        SELECT top 100 Percent DatePaid, StockID,ASTK.StockDescription,null as [Forecast],0,0,Qty, Qty, PriceEx,4 as [Rank],
        clientid,ProjectID, 0 as [DiscPerc] 
        FROM AccOverhead AO
        LEFT JOIN (SELECT StockID as [StkID] , StockDescription FROM ACCStock) ASTK
        ON AO.StockID = ASTK.StkID 
        WHERE 
        ispaid = 1
        -- AND DatePaid between @startdate and @enddate 
        AND AccType = 'Supplier Payment'
    
       UNION ALL
    
        --Expenses
        SELECT top 100 Percent DateIncurred, StockID, isnull(StockDescription, 'Expense'),null as [Forecast], 0,0,Qty,qty,PriceEx, 5 as [Rank],
        EntityID, ProjectID, 0 as [DiscPerc]    
        FROM AccExpenses AE 
        LEFT JOIN (SELECT StockID as [StkID] , StockDescription FROM ACCStock) ASTK
        ON AE.StockID = ASTK.StkID 
        -- WHERE DateIncurred between @startdate and @enddate 
    
        UNION ALL
    
        SELECT top 100 percent [budDate],StockID, StockDescription,isnull(TotalSellingPriceEx,0),0,0,0,0,0,0,
        Entityid, ProjectID , 0 as [DiscPerc]    
        FROM AccBudget SF
        LEFT JOIN (SELECT StockID as [StkID] , StockDescription FROM ACCStock) ASTK
        ON SF.StockID = ASTK.StkID 
        --WHERE [Month] between @startdate and @enddate 
    
        ) A
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E
    ON A.Entityid = E.Entityid
    LEFT JOIN (SELECT ProjectID,ProjectName, DateCompleted,Period FROM Projects) P
    ON A.ProjectID = P.ProjectID
    WHERE A.ProjectID is not null
    AND isnull(P.DateCompleted, '9999/12/31' ) BETWEEN @Startdate AND  @EndDate
    AND Isnull(P.Period,-1) Between @StartPeriod AND @EndPeriod
ORDER BY Company DEsc


","0","","1","LRA-FUSION","0","0","fusion"
"39730","cv_Acc_RPT_WIP","","SET ANSI_WARNINGS OFF
SET NOCOUNT ON

DECLARE @EndDate as datetime
SET @EndDate = '{enddate}' 


IF OBJECT_ID(N'tempdb..#ProjWIP', N'U') IS NOT NULL 
BEGIN
    DROP TABLE #ProjWIP;
END

CREATE TABLE #ProjWIP
(
[DETAILED SUMMARY] Varchar(3000),
[CODE] Varchar(3000),
[BUDGETED] Money,
[INVOICED] Money,
[FORECAST COST] Money,
[ACT. COST] Money,
[PAID] Money,
[PROJECTID] Int,
[STOCKID] Int
)

--Budgeted and Forecast Cost
INSERT INTO #ProjWIP([CODE], [DETAILED SUMMARY],[BUDGETED], [FORECAST COST], [PROJECTID], [STOCKID])
SELECT DD.StockCode, DD.StockDescription , 
cast(sum( qty * priceEx * ((100 - isnull(discperc,0)) / 100) ) as money) AS [BUDGETED],
cast(sum( qty * CostPriceEx ) as money) AS [FORECAST COST],
DM.ProjectID, DD.StockID
FROM COST_ESTIMATE_MASTER DM
LEFT JOIN (SELECT DocID, Qty, StockID, CASE WHEN isnull(ComponentOfLineID,0) = 0 THEN 1 ELSE 0 END * PriceEx as [PriceEx],CASE WHEN isnull(ComponentOfLineID,0) = 0 THEN 1 ELSE 0 END * CostPriceEx as [CostPriceEx],StockCode, StockDescription, Comments,DiscPerc, ProjectID FROM COST_ESTIMATE_DETAIL ) DD
ON DM.DocID = DD.DocID
LEFT JOIN (SELECT * FROM ProjectBudgetQuotes) PBQ ON PBQ.DocID = DM.DocID AND PBQ.ProjectID = DM.ProjectID
WHERE 
DocStatus in ( 'Completed' , 'Accepted')
AND isnull(DM.RevisedToDoc,0) = 0 
AND StartDate <= @enddate
AND isnull(DM.ProjectID,0) <>0
AND ISNULL(PBQ.ProjBudgetQuoteID,0) = 0


GROUP BY StockCode, StockDescription, DM.ProjectID, DD.StockID


--Client Invoices
INSERT INTO #ProjWIP([CODE], [DETAILED SUMMARY],[INVOICED], [PROJECTID], [STOCKID])
SELECT DD.StockCode, DD.StockDescription , cast(sum(CASE when DocType = 'Invoice' then 1 Else -1 END  * qty * priceEx * ((100 - isnull(discperc,0)) / 100) ) as money) AS [TOTAL. EX. VAT.],
isnull(DD.ProjectID,isnull(DM.ProjectID,0)), DD.StockID
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT DocID, Qty, StockID, CASE WHEN isnull(ComponentOfLineID,0) = 0 THEN 1 ELSE 0 END * PriceEx as [PriceEx],StockCode, StockDescription, Comments,DiscPerc, ProjectID FROM DEBTOR_DETAIL ) DD
ON DM.DocID = DD.DocID
WHERE 
DocType in ('Invoice', 'Credit Note')
AND DocStatus = 'Completed'
AND DateCompleted <= @enddate
AND isnull(DD.ProjectID,isnull(DM.ProjectID,0)) <> 0
GROUP BY StockCode, StockDescription,isnull(DD.ProjectID,isnull(DM.ProjectID,0)), DD.StockID

--Client Payments
INSERT INTO #ProjWIP([PROJECTID], [PAID])
SELECT isnull(DM.ProjectID, isnull(DMP.ProjectID,0)) as [PROJECTID], isnull(DMP.ROE,1) * PaymentPortion FROM DEBTOR_PAYMENT DP
LEFT JOIN (SELECT DocID, DateCompleted,ROE, ProjectID FROM DEBTOR_MASTER) DMP
ON DP.PaymentDocID = DMP.DocID
LEFT JOIN (SELECT DocID, ProjectID FROM DEBTOR_MASTER) DM 
ON DP.InvoiceDocID = DM.DocID
WHERE 
isnull(DM.ProjectID,isnull(DMP.ProjectID,0)) <> 0
AND DMP.DateCompleted <= @EndDate



--Supplier  Invoices
INSERT INTO #ProjWIP([CODE], [DETAILED SUMMARY],[ACT. COST],[PROJECTID], [STOCKID])
SELECT DD.StockCode, DD.StockDescription , cast(sum(CASE when DocType = 'Supplier Invoice' then 1 Else -1 END  * qty * priceEx * ((100 - isnull(discperc,0)) / 100)* isnull(ROE,1) ) as money) AS [TOTAL. EX. VAT.],
isnull(DD.ProjectID,isnull(DM.ProjectID,0)), DD.StockID
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT DocID, Qty, StockID, PriceEx as [PriceEx],StockCode, StockDescription, Comments,DiscPerc, ProjectID FROM CREDITOR_DETAIL ) DD
ON DM.DocID = DD.DocID
WHERE 
DocType in ('Supplier Invoice', 'Supplier Credit Note')
AND DocStatus = 'Completed'
AND DateCompleted <= @enddate
AND isnull(DD.ProjectID,isnull(DM.ProjectID,0)) <> 0
GROUP BY StockCode, StockDescription,isnull(DD.ProjectID,isnull(DM.ProjectID,0)), DD.StockID

--Expenditures
INSERT INTO #ProjWIP([CODE], [DETAILED SUMMARY],[ACT. COST], [STOCKID])
SELECT * FROM 
(
	SELECT 	STK.StockCode as [CODE], STK.StockDescription as [DESCRIPTION],isnull(DD.QTY,0) * isnull(DD.PriceEx ,0) as [TOTAL EX. VAT.], DD.StockID
	FROM AccExpenseClaim DM
	LEFT JOIN (SELECT * FROM AccExpenses) DD ON DM.AccExpenseClaimID = DD.ExpenseClaimID
	LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK ON DD.StockID = STK.StockID
	WHERE DM.DatePaid <= @EndDate
	AND isnull(DD.ProjectID,0) <>0

	UNION ALL 

	SELECT convert(varchar,GLC.GLCode) as [CODE],L.Value as [DESCRIPTION], CTD.TotalIncl / (CTD.VATPerc / 100 + 1)  as [TOTAL EX. VAT.], null as [StockID]
	FROM CASH_TRANSACTION_MASTER CTM
	LEFT JOIN (SELECT * FROM CASH_TRANSACTION_DETAIL) CTD ON CTM.DocID = CTD.DocID
	LEFT JOIN (SELECT * FROM AccGLCode) GLC ON CTD.GLCodeID = GLC.GLCodeID
	LEFT JOIN (SELECT LookupID, Value 
	FROM Lookup 
	where class like 'JournalType' 
	UNION ALL
	SELECT -1, 'ACCOUNTS RECEIVABLE'
	UNION ALL
	SELECT -2, 'OUTPUT VAT CONTROL' 
	UNION ALL
	SELECT -3, 'COST OF SALES' 
	UNION ALL
	SELECT -4, 'INVENTORY' 
	UNION ALL
	SELECT -5, 'INPUT VAT CONTROL' 
	UNION ALL
	SELECT -6, 'BANK' 
	UNION ALL
	SELECT -8, 'FOREIGN EXCHANGE' 
	UNION ALL
	SELECT -9, 'ACCOUNTS PAYABLE' 
	UNION ALL
	SELECT -10, 'UN-RECEIVED INVENTORY' 
	UNION ALL
	SELECT -11, 'PREPAID EXPENSE' 
	UNION ALL
	SELECT -12, 'CAPITAL' 
	UNION ALL
	SELECT -13, 'INVENTORY EXPENSE' 
	UNION ALL
	SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
	UNION ALL
	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL'
	UNION ALL
	SELECT -16, 'DISCOUNT ALLOWED' 
	UNION ALL
	SELECT -17, 'DISCOUNT RECEIVED'  
	UNION ALL
	SELECT -18, 'OPENING BALANCE' 
	) L 
	ON GLC.GLCategoryID = L.LookupID
	WHERE CTD.DatePaid <= @EndDate
	AND isnull(CTD.ProjectID,0) <> 0
	AND Isnull(CTM.IsComplete,0) = 1
	AND GLC.[GLType] in ('COST OF SALES', 'EXPENSE')

	UNION ALL

	SELECT StockCode, StockDescription,Qty * CostPriceEx, StockID 
	FROM EXPENDITURE_MASTER
	WHERE DateCompleted <= @EndDate
	AND DocStatus = 'Completed'
	AND isnull(ProjectID,0) <> 0
	AND DocType IN ('Purchase', 'Stock Disbursement')
) A




--REPORT:
SELECT   PV.ProjectID,E.Company as [COMPANY], P.ProjectID as [PROJECT NO.], P.ProjectName as [PROJECT], '' as [CODE], 
--Revenue
dbo.fnFormatNumber(sum(isnull([BUDGETED],0))) as [TOTAL PRICE], 
dbo.fnFormatNumber(sum(isnull([INVOICED],0))) as [AMT. INVOICED],
dbo.fnFormatNumber(sum(isnull([INVOICED],0)) / CASE WHEN sum(isnull([BUDGETED],0)) = 0 THEN 1 ELSE sum(isnull([BUDGETED],0)) END *100) as [%],
dbo.fnFormatNumber(sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([FORECAST COST],0)) = 0 THEN 1 ELSE sum(isnull([FORECAST COST],0)) END * sum(isnull([BUDGETED],0)) ) as [GRADE OF COMPLETION],
dbo.fnFormatNumber(sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([FORECAST COST],0)) = 0 THEN 1 ELSE sum(isnull([FORECAST COST],0)) END * 100) as [%],
dbo.fnFormatNumber(CASE WHEN sum(isnull([PAID],0)) - sum(isnull([INVOICED],0)) > 0 THEN sum(isnull([PAID],0)) - sum(isnull([INVOICED],0)) ELSE 0 END)  as [REVENUE IN ADVANCE],
dbo.fnFormatNumber(
	(sum(isnull([INVOICED],0)) / CASE WHEN sum(isnull([BUDGETED],0)) = 0 THEN 1 ELSE sum(isnull([BUDGETED],0)) END * 100)
	- (sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([FORECAST COST],0)) = 0 THEN 1 ELSE sum(isnull([FORECAST COST],0)) END * 100)
) as [%],
--Cost
dbo.fnFormatNumber(sum(CASE WHEN isnull(STK.IsTangible,0) = 1 then isnull([FORECAST COST],0) ELSE 0 END)) as [TOTAL EST. PURCHASE COST],
'100.00' as [%],
dbo.fnFormatNumber(sum(CASE WHEN isnull(STK.IsTangible,0) = 0 then isnull([FORECAST COST],0) ELSE 0 END)) as [TOTAL EST. LABOUR COST],
'100.00' as [%],
dbo.fnFormatNumber(sum(isnull([FORECAST COST],0))) as [TOTAL EST. COST],
'100.00' as [%],
dbo.fnFormatNumber(sum(CASE WHEN isnull(STK.IsTangible,0) = 1 then isnull([ACT. COST],0) ELSE 0 END)) as [TOTAL ACT. PURCHASE COST],
dbo.fnFormatNumber(sum(CASE WHEN isnull(STK.IsTangible,0) = 1 then isnull([ACT. COST],0) ELSE 0 END)  /  CASE WHEN sum(CASE WHEN isnull(STK.IsTangible,0) = 1 then isnull([FORECAST COST],0) ELSE 0 END) = 0 THEN 1 ELSE sum(CASE WHEN isnull(STK.IsTangible,0) = 1 then isnull([FORECAST COST],0) ELSE 0 END) END * 100) as [%],
dbo.fnFormatNumber(sum(CASE WHEN isnull(STK.IsTangible,0) = 0 then isnull([ACT. COST],0) ELSE 0 END)) as [TOTAL ACT. LABOUR COST],
dbo.fnFormatNumber(sum(CASE WHEN isnull(STK.IsTangible,0) = 0 then isnull([ACT. COST],0) ELSE 0 END)  /  CASE WHEN sum(CASE WHEN isnull(STK.IsTangible,0) = 0 then isnull([FORECAST COST],0) ELSE 0 END) = 0 THEN 1 ELSE sum(CASE WHEN isnull(STK.IsTangible,0) = 1 then isnull([FORECAST COST],0) ELSE 0 END) END * 100) as [%],
dbo.fnFormatNumber(sum(isnull([ACT. COST],0))) as [TOTAL ACT. COST],
dbo.fnFormatNumber((sum(isnull([ACT. COST],0)) / sum(CASE WHEN isnull([FORECAST COST],0) = 0 THEN 1 ELSE isnull([FORECAST COST],0) END)) * 100) as [%],
--WIP
dbo.fnFormatNumber(sum(CASE WHEN isnull(STK.IsTangible,0) = 1 then isnull([FORECAST COST],0) ELSE 0 END) 
*
sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([FORECAST COST],0)) = 0 THEN 1 ELSE sum(isnull([FORECAST COST],0)) END 
) AS [WIP PURCHASE COST],

dbo.fnFormatNumber((sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([FORECAST COST],0)) = 0 THEN 1 ELSE sum(isnull([FORECAST COST],0)) END ) * 100
) AS [%],

dbo.fnFormatNumber(sum(CASE WHEN isnull(STK.IsTangible,0) = 1 then isnull([ACT. COST],0) ELSE 0 END) -
(
	sum(CASE WHEN isnull(STK.IsTangible,0) = 1 then isnull([FORECAST COST],0) ELSE 0 END) 
	*
	sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([FORECAST COST],0)) = 0 THEN 1 ELSE sum(isnull([FORECAST COST],0)) END 
)
) AS [WIP],

dbo.fnFormatNumber((sum(CASE WHEN isnull(STK.IsTangible,0) = 0 then isnull([FORECAST COST],0) ELSE 0 END))
*
(sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([FORECAST COST],0)) = 0 THEN 1 ELSE sum(isnull([FORECAST COST],0)) END )
) AS [WIP LABOUR COST],

dbo.fnFormatNumber((sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([FORECAST COST],0)) = 0 THEN 1 ELSE sum(isnull([FORECAST COST],0)) END ) * 100
) AS [%],

dbo.fnFormatNumber((sum(CASE WHEN isnull(STK.IsTangible,0) = 0 then isnull([ACT. COST],0) ELSE 0 END)) 
-
(
	(sum(CASE WHEN isnull(STK.IsTangible,0) = 0 then isnull([FORECAST COST],0) ELSE 0 END))
	*
	(sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([FORECAST COST],0)) = 0 THEN 1 ELSE sum(isnull([FORECAST COST],0)) END )
)) AS [WIP],


dbo.fnFormatNumber(sum(isnull([ACT. COST],0))
-
(
	(sum(isnull([FORECAST COST],0)))
	*
	(sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([FORECAST COST],0)) = 0 THEN 1 ELSE sum(isnull([FORECAST COST],0)) END )
)) AS [TOTAL WIP],

dbo.fnFormatNumber(sum(isnull([FORECAST COST],0)) 
*
(
	(sum(isnull([INVOICED],0)) / CASE WHEN sum(isnull([BUDGETED],0)) = 0 THEN 1 ELSE sum(isnull([BUDGETED],0)) END  
	-
	sum(isnull([ACT. COST],0)) / CASE WHEN sum(isnull([FORECAST COST],0)) = 0 THEN 1 ELSE sum(isnull([FORECAST COST],0)) END  )
))  as [COST TO COMPLETE]
FROM #ProjWIP PV
LEFT JOIN (SELECT ProjectID, ProjectName, EntityID FROM Projects) P
ON P.ProjectID = PV.ProjectID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON P.EntityID = E.EntityID
LEFT JOIN (SELECT StockID, IsTangible FROM AccStock) STK
ON PV.StockID = STK.StockID
{where}
GROUP BY PV.ProjectID,P.ProjectName,P.ProjectID,E.Company

SET ANSI_WARNINGS ON
SET NOCOUNT OFF","0","","1","LRA-FUSION","0","0","fusion"
"39731","cv_Acc_Cost_Estimate_Man","","SELECT * FROM (
SELECT Distinct convert(varchar,CEM.DocID) +  case when isnull(CEM.RevisedToDoc,0) = 0 then '##LatestRev' Else ''END as [DocID],
left('00000000', 8- len(CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END)) + convert(varchar,CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END) as [Doc. No.]
,CEM.Revision,D.Value as [Division],
case isnull(CEM.UseEC, 0) When 1 then isnull(EC.AccountNum,EC.EntityContactID) Else isnull(E.Accountnum,E.EntityID) END as [Account],
case isnull(CEM.UseEC, 0) When 1 then EC.Client ELSE E.Company END as [Client], Att.[Attn.],isnull( Att.[Tel],E.[Tel]) as [Tel.],Email,
US.[Sales Consultant],
ConE.[Consultant],
CEM.Descr as [Description],
P.projectName as [Project Name],
P.ProjectNum as [Project Code],
Convert(Varchar, CEM.DateCreated,111) as [Created],
Convert(Varchar, CEM.StartDate,111) as [Doc. Date],
CEM.DocStatus as [Status], U.[Created By], CEM.Currency, CEM.ROE as [R.O.E],
dbo.fnFormatNumber([Est. Cost] / isnull(CEM.ROE,1)) as [Est. Cost],
dbo.fnFormatNumber([Total Ex. VAT] / isnull(CEM.ROE,1)) as [Total Ex. VAT],
dbo.fnFormatNumber([Total Incl. VAT] / isnull(CEM.ROE,1)) as [Total Incl. VAT]
,convert(varchar,daterevised,111) as [Date Revised]
FROM Cost_Estimate_Master CEM
LEFT JOIN Lookup D 
    ON CEM.DivisionID = D.LookupID
LEFT JOIN (SELECT Company, EntityID, salesconsid, AccountNum,Switchboard as [Tel]FROM Entity) E
    ON CEM.Entityid = E.Entityid AND isnull(CEM.UseEC,0) = 0
LEFT JOIN (SELECT isnull(Firstname,'') + ' ' + isnull(surname,'') as [Client], EntityContactID,SalesConsID, AccountNum FROM EntityContact) EC
    ON CEM.Entityid = EC.EntityContactid AND isnull(CEM.UseEC,0) = 1
LEFT JOIN (SELECT isnull(firstname,'') + ' ' + isnull(surname,'') as [Created By], UserID From Users) U
    ON CEM.CreatedBy = U.UserID
LEFT JOIN (SELECT DocID, Sum(CostPriceEx * Qty ) as [Est. Cost], sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) as [Total Ex. VAT], sum((PriceEx * qty * ((100 - isnull(discperc,0)) /100)) * (TAX /100 + 1)) as [Total Incl. VAT] FROM Cost_Estimate_Detail  WHERE isnull(componentOfLineID,0) = 0 {groups}  Group By DocID) CED
    ON CEM.DocID = CED.DocID
LEFT JOIN (SELECT userid, Isnull(Firstname,'') +  ' ' + isnull(Surname,'') as [Sales Consultant] FROM USERS ) US
    ON CEM.SalesRepID = US.UserID
left join (SELECT Entitycontactid, isnull(firstname,'') + ' ' + isnull(Surname,'') as [Attn.], Email,Phone1 as[Tel] FROM  EntityContact) Att 
    ON Att.EntityContactid = CEM.AttentionOf
Left join (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Staff) ConEC on  EC.SalesConsID= ConEC.StaffID
Left join (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Staff) ConE on E.salesconsid =ConE.StaffID
Left join EntityGroup g on g.EntityID = E.EntityID
LEFT JOIN (SELECT ProjectID, ProjectNum, ProjectName FROM Projects) P 
	ON P.ProjectID = CEM.ProjectID
) A
{where}
ORDER BY [Doc. No.] Desc","0","","1","LRA-FUSION","0","0","fusion"
"39732","cv_Acc_Commision_Report","","DECLARE @ReportDate as datetime
DECLARE @ExpiryDate as datetime
Declare @GlobalPerc as float
Set @GlobalPerc = isnull((SELECT Top 1 optVal FROM Options where optname = 'GLOBAL_COMM'),0)
Set @ReportDate = '{rptdate}'
SET @ExpiryDate = '{expdate}'


SELECT DM.DocID,DM.DocType, DM.DocNo,DM.ClientPO as [Ref No],LD.Value as [Division],
--AEC.Agent, 
U.[Sales Consultant], LSR.Value as [Sales Rep],
DM.DateCompleted as [Doc. Date],
CASE isnull(DM.UseEC,0) When 1 then isnull(EC.Accountnum,'') + ' ' + isnull(EC.Client,'') ELSE isnull(E.Accountnum,'') + ' ' + isnull(E.Company,'') END as [Client],
DM.Currency, DM.ROE as [R.O.E],
Convert(varchar,cast(Sum(case DM.Doctype when 'Credit Note' then -1 ELSE 1 End * DD.PriceEx * DD.Qty * ((100 - isnull(DD.discperc,0)) / 100)) as money),1) as [Total Ex. VAT.],
Convert(varchar,cast(Sum(case DM.Doctype when 'Credit Note' then -1 ELSE 1 End * ((DD.TotalIncl * ((100 - isnull(DD.discperc,0)) / 100)) - ( DD.PriceEx * DD.Qty * ((100 - isnull(DD.discperc,0)) / 100)))) as money),1)   as [Total VAT],
Convert(varchar,cast(Sum(case DM.Doctype when 'Credit Note' then -1 ELSE 1 End * DD.TotalIncl * ((100 - isnull(DD.discperc,0)) / 100)) as money),1) as [Total Incl. VAT.],

Convert(varchar,cast(Sum(Case Stk.CommType 
	--Use global commission percentage
	when 1 then ( @GlobalPerc /100) 	*	case DM.Doctype when 'Credit Note' then -1 ELSE 1 End * DD.PriceEx * DD.Qty * ((100 - isnull(DD.discperc,0)) / 100)
	--Use resource specified commision percentage
	when 2 then ( Stk.CommFlatPerc /100) 	*	case DM.Doctype when 'Credit Note' then -1 ELSE 1 End * DD.PriceEx * DD.Qty * ((100 - isnull(DD.discperc,0)) / 100)
	--Use resource specified flat amount
	--when 3 then (Stk.CommFlatPerc / STK.SellingPriceEx) 	*	case DM.Doctype when 'Credit Note' then -1 ELSE 1 End * DD.PriceEx * DD.Qty * ((100 - isnull(DD.discperc,0)) / 100)
	when 3 then   CASE WHEN  DD.PriceEx * ((100 - isnull(DD.discperc,0)) /100) < STK.SellingPriceEx THEN  CASE WHEN Stk.CommFlatPerc - ((STK.SellingPriceEx - DD.PriceEx * ((100 - isnull(DD.discperc,0)) /100))) < 0  then 0 ELSE Stk.CommFlatPerc -  ((STK.SellingPriceEx - DD.PriceEx * ((100 - isnull(DD.discperc,0)) /100))) END  ELSE Stk.CommFlatPerc END 		*	(case DM.Doctype when 'Credit Note' then -1 ELSE 1 End  * DD.Qty)
END) as money),1) as [Provisional Comm. Ex. VAT],
Convert(varchar,cast(isnull(DP.Paid,0) as money),1) as [Payment Received at Time of Report],
Convert(varchar,cast(CASE WHEN round(isnull(DP.Paid,0),2) >= round(sum(DD.TotalIncl * ((100 - isnull(DD.discperc,0)) /100)),2) THEN 
	Sum(Case Stk.CommType 
	--Use global commission percentage
	when 1 then ( @GlobalPerc /100) 	*	case DM.Doctype when 'Credit Note' then -1 ELSE 1 End * DD.PriceEx * DD.Qty * ((100 - isnull(DD.discperc,0)) / 100)
	--Use resource specified commision percentage
	when 2 then ( Stk.CommFlatPerc /100) 	*	case DM.Doctype when 'Credit Note' then -1 ELSE 1 End * DD.PriceEx * DD.Qty * ((100 - isnull(DD.discperc,0)) / 100)
	--Use resource specified flat amount
	--when 3 then (Stk.CommFlatPerc / STK.SellingPriceEx) 	*	case DM.Doctype when 'Credit Note' then -1 ELSE 1 End * DD.PriceEx * DD.Qty * ((100 - isnull(DD.discperc,0)) / 100)
when 3 then   CASE WHEN  DD.PriceEx * ((100 - isnull(DD.discperc,0)) /100) < STK.SellingPriceEx THEN  CASE WHEN Stk.CommFlatPerc - ((STK.SellingPriceEx - DD.PriceEx * ((100 - isnull(DD.discperc,0)) /100))) < 0  then 0 ELSE Stk.CommFlatPerc -  ((STK.SellingPriceEx - DD.PriceEx * ((100 - isnull(DD.discperc,0)) /100))) END  ELSE Stk.CommFlatPerc END 		*	(case DM.Doctype when 'Credit Note' then -1 ELSE 1 End  * DD.Qty)
	END)
else 0 END as money),1)  as [Comm. Due at Time of Report],
Convert(varchar,cast(isnull(DPA.PaidAfter,0) as money),1) as [Payment Received after Time of Report],
Convert(varchar,cast(CASE WHEN round(isnull(DP.Paid,0) + isnull(DPA.PaidAfter,0),2) >= round(sum(DD.TotalIncl * ((100 - isnull(DD.discperc,0)) /100)),2) THEN 
	Sum(Case Stk.CommType 
	--Use global commission percentage
	when 1 then ( @GlobalPerc /100) 	*	case DM.Doctype when 'Credit Note' then -1 ELSE 1 End * DD.PriceEx * DD.Qty * ((100 - isnull(DD.discperc,0)) / 100)
	--Use resource specified commision percentage
	when 2 then ( Stk.CommFlatPerc /100) 	*	case DM.Doctype when 'Credit Note' then -1 ELSE 1 End * DD.PriceEx * DD.Qty * ((100 - isnull(DD.discperc,0)) / 100)
	--Use resource specified flat amount
	--when 3 then (Stk.CommFlatPerc / STK.SellingPriceEx) 	*	case DM.Doctype when 'Credit Note' then -1 ELSE 1 End * DD.PriceEx * DD.Qty * ((100 - isnull(DD.discperc,0)) / 100)
	when 3 then   CASE WHEN  DD.PriceEx * ((100 - isnull(DD.discperc,0)) /100) < STK.SellingPriceEx THEN  CASE WHEN Stk.CommFlatPerc - ((STK.SellingPriceEx - DD.PriceEx * ((100 - isnull(DD.discperc,0)) /100))) < 0  then 0 ELSE Stk.CommFlatPerc -  ((STK.SellingPriceEx - DD.PriceEx * ((100 - isnull(DD.discperc,0)) /100))) END  ELSE Stk.CommFlatPerc END 		*	(case DM.Doctype when 'Credit Note' then -1 ELSE 1 End  * DD.Qty)
	END)
else 0 END as money),1)  as [Comm. Due]
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT * FROM DEBTOR_MASTER) DM
ON DD.DocID = DM.DocID
--Company that was invoiced
LEFT JOIN (SELECT Entityid, Company, InvoiceTo,isnull(AccountNum,entityid ) AS [Accountnum],SalesConsID FROM Entity) E
ON DM.EntityID = E.Entityid AND isnull(useEc,0) = 0
--Companie's contact that was invoiced
LEFT JOIN (SELECT Entityid, EntitycontactID , AgnetID, isnull(firstname,'') + ' ' + isnull(surname,'') as [Client] FROM Entitycontact) InvTo
ON E.InvoiceTo =  InvTo.Entitycontactid  and isnull(DM.useec,0) = 0
--Contact that was invoiced
LEFT JOIN (SELECT Entityid, EntitycontactID , AgnetID, isnull(firstname,'') + ' ' + isnull(surname,'') as [Client],isnull(Accountnum, Entitycontactid) as [AccountNum] FROM Entitycontact) EC
ON DM.Entityid =  EC.Entitycontactid  and isnull(DM.useec,0) = 1
--Commission types and values
LEFT JOIN (SELECT StockID, Commtype, CommFlatPerc,sellingpriceex FROM AccStock) STK
ON DD.StockID = STK.StockID
--Contact's/Companie's Contact's Agent
LEFT JOIN (SELECT Entityid, EntitycontactID , isnull(Accountnum, convert(varchar, entitycontactid)) + ' ' + isnull(firstname,'') + ' ' + isnull(surname,'') as [Agent] FROM Entitycontact) AEC
ON Case isnull(DM.UseEC,0) WHEN 1 then EC.AgnetID ELSE InvTo.AgnetID END = AEC.EntityContactID
--Document's Sales Consultant
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') AS [Sales Consultant] FROM Users) U
ON DM.SalesRepID = U.UserID
--Client's Sales Rep
LEFT JOIN (SELECT * FROM Lookup) LSR 
ON E.SalesConsID = LSR.LookupID
--Division
LEFT JOIN Lookup LD ON DM.DivisionID = LD.LookupID
--Payments Received up until the report date
LEFT JOIN (SELECT InvoiceDocID, Sum(PaymentPortion) as [Paid] FROM DEBTOR_Payment DPs
		LEFT JOIN (SELECT DateCompleted, DocID FROM DEBTOR_MASTER ) DMs
		ON DPs.PaymentdocID = DMs.DocID
		WHERE DMs.DateCompleted <= @ReportDate
		Group By InvoiceDocID) DP
ON DM.DocID = DP.InvoiceDocID
--Payments Received after the report date
LEFT JOIN (SELECT InvoiceDocID, Sum(PaymentPortion) as [PaidAfter] FROM DEBTOR_Payment DPs
		LEFT JOIN (SELECT DateCompleted, DocID FROM DEBTOR_MASTER ) DMs
		ON DPs.PaymentdocID = DMs.DocID
		WHERE DMs.DateCompleted > @ReportDate AND DMs.DateCompleted < = @ExpiryDate
		Group By InvoiceDocID) DPA
ON DM.DocID = DPA.InvoiceDocID

WHERE isnull(STK.CommType,0) > 0
AND DM.DocType in ('Invoice', 'Credit Note')
AND DM.DocStatus = 'Completed'
And DM.DateCompleted <= @reportDate
{where}
GROUP BY DM.DocID, DM.DocType, DM.DocNo, LD.Value, U.[Sales Consultant], LSR.Value, /*AEC.Agent,*/ DM.DateCompleted,EC.Client,DM.UseEC,E.Company,DM.Currency,DM.ROE,DP.Paid,DPA.PaidAfter,
EC.Accountnum, E.Accountnum,DM.ClientPO","0","","1","LRA-FUSION","0","0","fusion"
"39733","CV_Acc_Auto_Allocate_Payments","","DECLARE @Entityid as integer
DECLARE @UseEC as integer
Set @Entityid = {entityid}
Set @UseEc = {useec}


SELECT DM.DocID, DD.Invoiced, isnull(DP.Paid,0) as [Paid], isnull(DDCred.[Credited],0) as [Credited],
round(DD.Invoiced - isnull(DP.Paid,0)  -  isnull(DDCred.[Credited],0),2) as [Balance],
Dm.Entityid, DM.UseEc,DM.Currency
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT DocID, round(sum(((PriceEx * Qty) *  ((100-isnull(discperc,0))/100) )*  round((priceincl / CASE PriceEx when 0 then 1 Else PriceEx END),2)),2)  as [Invoiced] FROM DEBTOR_DETAIL GROUP BY DocID) DD
ON DM.DocID = DD.DocID
LEFT JOIN (SELECT DMc.PreviousDocID, round(sum(((PriceEx * Qty) *  ((100-isnull(discperc,0))/100) )*  round((priceincl / CASE PriceEx when 0 then 1 Else PriceEx END),2)),2)  as [Credited] FROM DEBTOR_DETAIL DDc
    LEFT JOIN DEBTOR_MASTER DMc
	ON DDc.DocID = DMc.DocID
	WHERE DMc.DocType= 'Credit Note' AND DMc.DocStatus = 'Completed'
	GROUP BY DMc.PreviousDocID) DDCred
ON DM.DocID = DDCred.PreviousDocID

LEFT JOIN (SELECT Sum(PaymentPortion) as [Paid], InvoiceDocID, UseEC  FROM DEBTOR_PAYMENT DP1
		LEFT JOIN DEBTOR_MASTER DM1
		ON DP1.PaymentDocID = DM1.DocID
		Group by InvoiceDocID, UseEC) DP
ON DM.DocID = DP.InvoiceDocID And Isnull(DM.UseEC,0) = isnull(DP.useec,0)
WHERE DocType = 'Invoice' AND DocStatus = 'Completed'
AND DM.UseEc = @UseEc and Entityid = @Entityid
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"39734","cv_Acc_Print_Cost_Estimate_Client_Recon","","
declare @DocID as int
set @DocID = {docid}

SELECT  [DESCRIPTION], [COMMENTS], QTY,  [PRICE EX.], [TOTAL EX.], [ACTUAL],[VARIANCE]
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],null as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	convert(varchar,Qty) as [Qty],convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.], convert(varchar,cast(PriceEx * qty as money),1) as [Total Ex.],
	convert(varchar,cast(ActPriceEx * qty as money),1)  as [Actual],
	convert(varchar,cast( (PriceEx * qty) - (ActPriceEx * qty)   as money),1)  as [Variance],
	convert(varchar,cast(ActCostPriceEx * qty as money),1)  as [Cost],
	convert(varchar,cast((ActPriceEx * qty) - (ActCostPriceEx * qty) as money),1)  as [Profit],
	convert(varchar,cast(ActBilled  as money),1)  as [Billed],
	convert(varchar,cast(ActPriceEx * qty  - ActBilled  as money),1)  as [Billed Variance],
	RecComments,
	Rank, -1000 as [Rank2]
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID = @DocID
	
	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	convert(varchar,Qty),convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	'' as [Price Ex.],'' as [Total Ex.], 
	null,null,null,null,null,null,null,
	(SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) , Rank as [Rank2]
	FROM Cost_Estimate_Detail CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND DocID = @DocID

	UNION ALL

	--Select Groups
	SELECT Distinct null, '&nbsp;', '&nbsp;', '&nbsp;', '<B>' + upper(isnull(GroupName, 'Not Specified')) + '</B>',  '&nbsp;', '&nbsp;','&nbsp;', '&nbsp;', '&nbsp;', '&nbsp;', 
	'<B>' + convert(varchar,cast(sum(PriceEx * qty) as money),1)  + '</B>' as [Total Ex.],
	'<B>' +convert(varchar,cast(sum(ActPriceEx * qty) as money),1)  + '</B>' as [Actual],
	'<B>' +convert(varchar,cast( sum((PriceEx * qty) - (ActPriceEx * qty))   as money),1)  + '</B>' as [Variance],
	'<B>' +convert(varchar,cast(sum(ActCostPriceEx * qty) as money),1)  + '</B>' as [Cost],
	'<B>' +convert(varchar,cast(sum((ActPriceEx * qty) - (ActCostPriceEx * qty)) as money),1) + '</B>'  as [Profit],
	'<B>' +convert(varchar,cast(sum(ActBilled)  as money),1)  + '</B>' as [Billed],
	'<B>' +convert(varchar,cast(sum(ActPriceEx * qty  - ActBilled)  as money),1)  + '</B>' as [Billed Variance],
	null,
	isnull(min(Rank),0),-2000
	FROM Cost_Estimate_Detail  CED
	WHERE DocID = @DocID
	AND isnull(ComponentOfLineID,0)  = 0
	GROUP BY CED.GroupName

	UNION ALL
	
	--Select Summary info
	SELECT null,'&nbsp;', '&nbsp;', '&nbsp;', '<B>SUMMARY:</B>',  '&nbsp;', '&nbsp;','&nbsp;', '&nbsp;', '&nbsp;', '&nbsp;', 
	'&nbsp;',null,null,null,null,null,null,null,
	9999999999999998,9999999999999998

	UNION ALL

	--Select Summary info
	SELECT Distinct null, '&nbsp;', '&nbsp;', '&nbsp;','<B>' + upper(isnull(GroupName, 'Not Specified')) + '</B>',  '&nbsp;', '&nbsp;','&nbsp;', '&nbsp;', '&nbsp;', '&nbsp;', 
	'<B>' + convert(varchar,cast(sum(PriceEx * qty) as money),1)  + '</B>' as [Total Ex.],
	'<B>' +convert(varchar,cast(sum(ActPriceEx * qty) as money),1)  + '</B>' as [Actual],
	'<B>' +convert(varchar,cast( sum((PriceEx * qty) - (ActPriceEx * qty))   as money),1)  + '</B>' as [Variance],
	'<B>' +convert(varchar,cast(sum(ActCostPriceEx * qty) as money),1)  + '</B>' as [Cost],
	'<B>' +convert(varchar,cast(sum((ActPriceEx * qty) - (ActCostPriceEx * qty)) as money),1)  + '</B>' as [Profit],
	'<B>' +convert(varchar,cast(sum(ActBilled)  as money),1)  + '</B>' as [Billed],
	'<B>' +convert(varchar,cast(sum(ActPriceEx * qty  - ActBilled)  as money),1)  + '</B>' as [Billed Variance],
	null,
	9999999999999999,9999999999999999
	FROM Cost_Estimate_Detail  CED
	WHERE DocID = @DocID
	AND isnull(ComponentOfLineID,0)  = 0
	GROUP BY CED.GroupName
	) A
ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"39735","cv_Timesheet_Summary","","select 
 t.timesheetid,t.timesheetdate as [Timesheet Date],DATEPART(WEEK, Timesheetdate) as [Week],e.company as ""Company"",SE.Company as [Supplier],P.ProjectID as [Project No.],
 p.projectname as ""Project Name"", modules.modulename as ""Module Name"", users.username as [Developer Username],ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'')  as [Staff Name],isnull(S.StaffNum,'') as [Staff No.], isnull(LS.Value,'') as [Staff Division],
 isnull(S.CosttoCompany,'') as [Hourly Rate],
 case when hoursdone < 1 then 1 else Round(hoursdone,0)end as ""Hours Done"",
 projectstatus as ""Notes"",l.Value As 'Task Type',isnull(t.InvoiceNo,'None') as [Invoice No],
 t.CapturedDate AS [Initial Date Captured]
from timesheet t
left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Devappointment dappt on dappt.DevApptID = t.DevApptID
left join lookup l on l.lookupid = dappt.TASKTYPEID 
LEFT JOIN Staff S on S.StaffID = users.StaffID
Left Join Entity SE on S.SupplierID = SE.EntityID
Left Join Lookup LS on S.departmentid =LS.LookupID
--Left Join userdivisions UD on UD.UserID=users.UserID

{where}
order by timesheetdate","0","","1","LRA-FUSION","0","0","fusion"
"39736","cv_Acc_Manufacture_Details","","DECLARE @DocID as bigint
DECLARE @IsWasted as int
DECLARE @TotalQty as float
SET @DocID = {docid}
SET @IsWasted = {iswasted}

SELECT LineID, STK.StockDescription as [Used In Output], MD.StockCode as [Material Code], MD.StockDescription as [Material Description], MD.Comments, Unit, 
/*Convert(varchar,cast(round(MD.Qty,4) as money),1)*/MD.Qty  as [Total Qty To Use],isnull(ll.Value,'') as [Container],STKIN.isTangible as [Tangible]
FROM AccManufacture_Detail MD
LEFT JOIN LinkLookup LL ON MD.ContainerID = LL.LinkLookupID
LEFT JOIN (SELECT * FROM accManufacture_Output) MO ON MD.OutPutID = MO.OutputID
LEFT JOIN (SELECT StockID, StockCode, StockDescription,istangible FROM AccStock) STK On MO.StockID = STK.StockID
LEFT JOIN (SELECT StockID, StockCode, StockDescription,istangible FROM AccStock) STKIN On MD.StockID = STKIN.StockID
where isWasted = @IsWasted
AND MD.DocID = @DocID
/*<%And%>*/
ORDER BY Rank","0","","1","LRA-FUSION","0","0","fusion"
"39737","cv_Acc_Manufacture_MachAreaMan","","SELECT MachineAreaID, Descr as [Description],
convert(varchar,AvailableFrom,108) as [Available From],
convert(varchar,AvailableTo,108) as [Available Until],
ShutdownTime as [Shut Down Time]
FROM AccManufacture_MachArea
{where}
ORDER BY Descr","0","","1","LRA-FUSION","0","0","fusion"
"39738","cv_Acc_Manufacture_Schedule","","SELECT StockManufTypeID,L.Value as [Type],
Convert(Varchar, StartTime, 111) + ' ' + Convert(Varchar, StartTime, 108)  as [Start],
Convert(Varchar, EndTime, 111) + ' ' + Convert(Varchar, EndTime, 108)  as [End],
MA.Descr as [Machine/Area]
FROM AccManufacture_Process MP
LEFT JOIN Lookup L ON MP.ManufType = L.LookupID
LEFT JOIN AccMANUFACTURE_MachArea MA ON MP.MachineAreaID = MA.MachineAreaID
{where}
ORDER BY StockManufTypeID","0","","1","LRA-FUSION","0","0","fusion"
"39739","DELETE_rpt_activity","","SELECT  A.UserID,Consultant, sum(totalCalls) As [Calls], Sum(TotalApps) as [Appointments], Sum([TotalApps Held]) as [Appointments Held], Sum([TotalApps Not Held]) as [Appointments Not Held] , sum(totalLeads) as [Leads], sum(totalNewSales) as [New Sales]
FROM	(
--userid, date, calls, apps, apps held, apps not held
   --total calls
    SELECT Userid,Calldate as [Date],count(userID) as [TotalCalls], 0 as [TotalApps], 0 as [TotalApps Held], 0 as [TotalApps Not Held], 0 as [TotalLeads], 0 as [TotalNewSales]
    from calllog cl
    {wherecl}
    group by UserID, Calldate
    UNION ALL
    --total appointments
    SELECT foruserid,[Date], 0,count(foruserID),0,0 ,0,0
    FROM Appointment ap
    {whereap}
    group by ForUserID,[Date]
    --total appoinmnets held
    UNION ALL
    SELECT foruserid,[Date],0, 0,count(foruserID) ,0,0,0
    FROM Appointment aph
    where aph.held = 1 {whereaph}
    group by aph.ForUserID,aph.[Date]
    --total appoinmnets not held
    UNION ALL
    SELECT foruserid,[Date],0,0, 0,count(foruserID),0,0
    FROM Appointment aphn
    where aphn.NOTheld = 1 {whereaphn}
    group by aphn.ForUserID,aphn.[Date]   
    --total leads    
    UNION ALL
    SELECT userid, lastdate as [Date], 0,0,0,0,Count(userid ) ,0
    from lead ld
    {whereld}
    group by userid, lastdate
    --total new sales
    UNION ALL
    SELECT foruserid,[Date],0,0,0, 0,0,count(foruserID)
    FROM Appointment apns
    where apns.newsale = 1 and  (convert(varchar,apns.[date],103)  between '03/07/2009' and '03/07/2009')
    group by apns.ForUserID,apns.[Date]
    ) A
LEFT JOIN (SELECT userid, firstname + ' ' + surname as [Consultant] FROM Users) U
ON A.Userid = U.UserID
where  a.userid is not null
GROUP By A.UserID, Consultant","0","","1","LRA-FUSION","0","0","fusion"
"39740","cv_NetCash_Edit","","SELECT convert(varchar,NCB.Entityid) + '#' + convert(varchar, isnull(useEc,0) ) ,
Case when  isnull(useec,0) = 0  THEN E.AccountNum ELSE EC.AccountNum END as [Account],
Case when  isnull(useec,0) = 0  THEN Company ELSE Client END as [Client],
Convert(varchar,cast(Balance as money),1) as [Balance]
FROM NetCash_Batch NCB
LEFT JOIN (SELECT EntityID, Company, AccountNum FROM Entity) E
ON NCB.Entityid = E.Entityid and isnull(useec,0) = 0
LEFT JOIN (SELECT EntityContactID,AccountNum, isnull(firstname, '') + ' ' + isnull(surname,'') as [Client] FROM EntityContact) EC
ON NCB.Entityid = EC.EntitycontactID and isnull(useec,0) = 1 

ORDER BY Client 

","0","","1","LRA-FUSION","0","0","fusion"
"39741","cv_Acc_Print_PurchaseOrder","","{select} 
(
	SELECT CD.GroupName as [Group], StockCode as [Code], SP.SupplierStockCode as [Supplier's Code], StockDescription as [Description] ,Comments,
	E.Company as [For Client],
	CASE WHEN P.ProjectID is not null then convert(varchar, CD.ProjectID) + ' - ' + P.ProjectName ELSE ' ' END as [Project],
	LC.Value as [Container],
	LRC.Value as [Report Catrgory], [Qty],L.Value as [UOM],
	dbo.fnFormatNumber(PriceEx) as [Price Ex. VAT], 
	dbo.fnFormatNumber(PriceEx * (Tax / 100)) as [Unit VAT],
	dbo.fnFormatNumber(PriceEx  * (1  + Tax / 100)) as [Price Incl. VAT],
	dbo.fnFormatNumber(PriceEx * Qty) as [Total Ex. VAT],
	dbo.fnFormatNumber(Tax) as [VAT Percent],
	dbo.fnFormatNumber(PriceEx * Qty * (Tax / 100)) as [Total VAT],
	dbo.fnFormatNumber(PriceEx * Qty * (1  + Tax / 100)) as [Total Incl.],
	dbo.fnFormatNumber((PriceEx * Qty * (isnull(discperc,0))/100)) as [Discount],
	isnull(BarCode,'') as [Barcode],
	convert(varchar,CD.ETADate,103) as [ETA]
	FROM CREDITOR_DETAIL  CD
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CD.ProjectID = P.ProjectID
	LEFT JOIN (SELECT DocID, DateCompleted,DivisionID, EntityID FROM CREDITOR_MASTER) CM
	ON CD.DocID = CM.DocID
	LEFT JOIN (SELECT * FROM AccStockPrice) SP
	ON CD.StockID = SP.StockID AND isnull(CD.DivisionID, CM.DivisionID) = SP.DivisionID AND CM.EntityID = SP.SupplierID AND CD.PriceCategoryID = SP.PriceCategoryID AND CM.DateCompleted BETWEEN SP.ValidFrom AND SP.ValidTo
	LEFT JOIN (SELECT StockID, PurchasedBy,BarCode,DefaultBinName From AccStock) STK
	ON CD.StockID = Stk.StockID
	LEFT JOIN Lookup L
	ON Stk.PurchasedBy = L.Lookupid
	LEFT JOIN (SELECT EntityID, AccountNum, Company from Entity  ) E
	ON CD.ClientID = E.Entityid
	LEFT JOIN Lookup LRC
	ON CD.ReportCategoryID = LRC.LookupID
	LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LC
	ON CD.ContainerID = LC.LinkLookupID
	WHERE CD.DocID = {docid} 
) A
","0","","1","LRA-FUSION","0","0","fusion"
"39742","cv_Acc_Print_DebtorDoc_Headerbackup","","
SELECT Top 1
isnull(EH.LegalName,E.Legalname) as [<legalname>],
Case When isnull(DM.UseEC,0) = 0 then isnull(EH.Company,E.Company) ELSE EC.Contact END as [<client>],
EA.Address1 as [<address1>],
EA.Address2 as [<address2>],
EA.Address3 as [<address3>],
EA.Code as [<address4>],
EA.city as [<address5>],
CASE WHEN isnull(EA.Address1,'') <> '' THEN isnull(EA.Address1,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Address2,'') <> '' THEN isnull(EA.Address2,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Address3,'') <> '' THEN isnull(EA.Address3,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.City,'') <> '' THEN isnull(EA.City,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Country,'') <> '' THEN isnull(EA.Country,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Code,'') <> '' THEN isnull(EA.Code,'') ELSE '' END as [<address>],
u.[Consultant] as [<consultant>],
DM.ClientPo as [<refno>],
Case when isnull(DM.UseEC,0) = 0 then isnull(isnull(EH.Accountnum, EH.entityid),isnull(E.AccountNum, E.EntityID)) ELSE isnull(EC.Accountnum, EC.EntitycontactID) END as [<account>],
isnull(EH.VatNum,E.VatNum) as [<clientvat>],
isnull(EH.CompRegNum,E.CompRegNum) as [<clientreg>],
Case when Att.Entitycontactid is not null then Att.[Attention] ELSE
	Case when ECP.Entitycontactid is not null then ECP.[ProjContact] ELSE 
		Case when isnull(DM.UseEC,0) = 0 then AEC.[AccountContact] ELSE EC.Contact END
	END
END as [<contact>],
P.ProjectID as [<projectno>],
P.ProjectName as [<projectname>],
convert(varchar,isnull(DM.DateCompleted, getdate()),103) as [<docdate>],
Case when Doctype = 'Invoice' and DocStatus = 'Open' then 'Proforma Invoice' WHEN Doctype = 'Invoice' and DocStatus <> 'Open' THEN 'Tax Invoice' ELSe DocType END as [<doctype>],
Case when Doctype = 'Invoice' and DocStatus = 'Open' then 'Proforma Invoice' WHEN Doctype = 'Invoice' and DocStatus <> 'Open' THEN 'Tax Invoice' ELSe DocType END as [<doctype>],
isnull(DS.Prefix,'') + ' ' + convert(varchar,DM.DocNo) as [<docno>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalEx) as [<totalex>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.Discount ) as [<discount>],
DM.Currency + ' ' + dbo.fnFormatNumber(Cast(DD.TotalIncl / case isnull(DD.TotalEx,0) when 0 then 1 else DD.TotalEx end as float) * (DD.TotalEx - round(DD.Discount,2)) ) as [<totalincl>],
DM.Currency + ' ' + dbo.fnFormatNumber(Cast(DD.TotalIncl / case isnull(DD.TotalEx,0) when 0 then 1 else DD.TotalEx end as float) * (DD.TotalEx - round(DD.Discount,2)) ) as [<totalincl>],
DM.Currency + ' ' + dbo.fnFormatNumber((Cast(DD.TotalIncl / case isnull(DD.TotalEx,0) when 0 then 1 else DD.TotalEx end as float) * (DD.TotalEx - round(DD.Discount,2))) - (DD.TotalEx - DD.Discount)) as [<totalvat>], 
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
DM.memo as [<notes>],
DS.Terms as [<terms>],
DS.Banking as [<banking>],
DS.Footer as [<footer>],
Case when isnull(DM.UseEC,0) = 0 then 
	(SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = (SELECT Top 1 agnetID FROM EntityContact where entitycontactID = E.InvoiceTo))
ELSE
	(SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = Ec.agnetID)
END as [<agent>],
isnull(DR.RuleName, 'Standard') as [<documentrule>],
DV.Division as [<division>],
DV.Division as [<division>],
--EC.Phone1 as [<phone>]
Att.Phone1 as [<phone>],
LPT.value as [<paymentterms>],
CO.CareOf as [<careof>]
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] , sum(TotalIncl) as [TotalIncl], DocID FROM DEBTOR_DETAIL Group By DocID) DD
ON DM.DocID = DD.DocID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention],Accountnum,AgnetID,phone1 FROM EntityContact) Att
ON DM.AttentionOf = Att.EntityContactID 
LEFT JOIN (SELECT EntityID, Company,LegalName ,VATNum,AccountNum,InvoiceTo,CompRegNum,AlternateCompanyID,PaymentTerms From Entity) E
ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN Lookup LPT ON E.PaymentTerms = LPT.LookupID
LEFT JOIN (SELECT EntityID, Company,LegalName ,VATNum,AccountNum,InvoiceTo,CompRegNum,AlternateCompanyID From Entity) EH
ON E.AlternateCompanyID = EH.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact],Accountnum,AgnetID,Phone1 FROM EntityContact) EC
ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact],Accountnum,phone1 FROM EntityContact) AEC
ON isnull(EH.InvoiceTo,E.InvoiceTo) = AEc.EntityContactID 
LEFT JOIN (SELECT ProjectID, EntityContactID, ProjectName FROM Projects) P
ON DM.ProjectID = P.ProjectID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [ProjContact] FROM EntityContact) ECP
ON P.EntityContactID  = ECP.EntityContactID 
LEFT JOIN (SELECT userid, isnull(firstname,'')+ ' ' + isnull(surname,'') as [Consultant] From users) u
ON DM.SalesRepID = u.userid
LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
ON DM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%postal%') EA
ON isnull(EH.Entityid, E.EntityID) = EA.Entityid
LEFT JOIN (SELECT * FROM AccDocRules) DR
ON DM.RuleID = DR.DocRulesID
LEFT JOIN (SELECT lookupID,Value as Division FROM Lookup) DV ON DV.LookupID = DM.DivisionID
LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Careof] FROM Staff) CO
ON DM.CareOfId = CO.StaffID
WHERE DM.DocID = {docid}

","0","","1","LRA-FUSION","0","0","fusion"
"39743","cv_Acc_Print_CreditorDoc_Header","","SELECT Top 1
    ISNULL(EH.LegalName,E.Legalname) as [<legalname>],
    Case When ISNULL(DM.UseEC,0) = 0 then ISNULL(EH.Company,E.Company) ELSE EC.Contact END as [<client>],
    Case When ISNULL(DM.UseEC,0) = 0 then ISNULL(EH.Company,E.Company) ELSE EC.Contact END as [<client1>],
    ISNULL(ENC.Cell,'') AS [<scell>],
	isnull(EH.Accountnum,'') as [<holdingaccnum>],
	isnull(E.Accountnum,'') as [<companyaccnum>],
	ISNULL(E.VendorNumber,'') as [<vendornumber>],
    ISNULL(EA.Address1,'') as [<address11>],
    ISNULL(EA.Address2,'') as [<address12>],
    ISNULL(EA.Code,'') as [<address13>],
    CASE WHEN ISNULL(EA.Address1,'') = '' THEN (COALESCE(EAPoNo.Address1 + ', ','') + COALESCE(EAPoNo.Address2 + ', ','') + COALESCE(EAPoNo.Address3 + ', ','') + COALESCE(EAPoNo.City + ', ','') + COALESCE(EAPoNo.Code + ', ','') + COALESCE(EAPoNo.Region + '','')) ELSE (COALESCE(EA.Address1 + ', ','') + COALESCE(EA.Address2 + ', ','') + COALESCE(EA.Address3 + ', ','') + COALESCE(EA.City + ', ','') + COALESCE(EA.Code + ', ','') + COALESCE(EA.Region + '','')) END as [<postaladdress>],
	CASE WHEN ISNULL(EAPhy.Address1,'') = '' THEN (COALESCE(EAPhyNo.Address1 + ', ','') + COALESCE(EAPhyNo.Address2 + ', ','') + COALESCE(EAPhyNo.Address3 + ', ','') + COALESCE(EAPhyNo.City + ', ','') + COALESCE(EAPhyNo.Code + ', ','') + COALESCE(EAPhyNo.Region + '','')) ELSE (COALESCE(EAPhy.Address1 + ', ','') + COALESCE(EAPhy.Address2 + ', ','') + COALESCE(EAPhy.Address3 + ', ','') + COALESCE(EAPhy.City + ', ','') + COALESCE(EAPhy.Code + ', ','') + COALESCE(EAPhy.Region + '','')) END as [<physicaladdress>],
    --COALESCE(ISNULL(EA.Address1,EAPoNo.Address1) + ', ','') + COALESCE(ISNULL(EA.Address2,EAPoNo.Address2) + ', ','') + COALESCE(ISNULL(EA.Address3,EAPoNo.Address3) + ', ','') + COALESCE(ISNULL(EA.City,EAPoNo.City) + ', ','') + COALESCE(ISNULL(EA.Code,EAPoNo.Code) + ', ','') + COALESCE(ISNULL(EA.Region,EAPoNo.Region) + '','') as [<postaladdress>],
    ISNULL(ISNULL(ISNULL(ISNULL(EAPhy.Address1,EA.Address1),EAPhyNo.Address1),EAPoNo.Address1),'') as [<address1>],
    ISNULL(ISNULL(ISNULL(ISNULL(EAPhy.Address2,EA.Address2),EAPhyNo.Address2),EAPoNo.Address2),'') as [<address2>],
    ISNULL(ISNULL(ISNULL(ISNULL(EAPhy.City,EA.City),EAPhyNo.City),EAPoNo.City),'') as [<address3>],
    ISNULL(ISNULL(ISNULL(ISNULL(EAPhy.Code,EA.Code),EAPhyNo.Code),EAPoNo.Code),'') as [<address4>],
    ISNULL(ISNULL(ISNULL(ISNULL(EAPhy.Country,EA.Country),EAPhyNo.Country),EAPoNo.Country),'') as [<address5>],    
    ISNULL(EAPoNo.Address1,'') as [<poaddress1>],
    ISNULL(EAPoNo.Address2,'') as [<poaddress2>],
    ISNULL(EAPoNo.City,'') as [<poaddress3>],
    ISNULL(EAPoNo.Code,'') as [<poaddress4>],
    ISNULL(EAPoNo.Country,'') as [<poaddress5>],    
    ISNULL(E.VatNum,'') as [<cvat>],
    ISNULL(E.website,'') as [<web>],
    ISNULL(E.website,'') as [<cURL>],
    ISNULL(u.staffext,'') as [<ext>],
    ISNULL(u.staffext,'') as [<sext>],
    ISNULL(u.staffmail,'') as [<Semail>],
    ISNULL(u.staffmail,'') as [<semail>],
    CASE WHEN ISNULL(EA.Address1,'') <> '' THEN ISNULL(EA.Address1,'') + Char(13) ELSE '' END +
    CASE WHEN ISNULL(EA.Address2,'') <> '' THEN ISNULL(EA.Address2,'') + Char(13) ELSE '' END +
    CASE WHEN ISNULL(EA.Address3,'') <> '' THEN ISNULL(EA.Address3,'') + Char(13) ELSE '' END +
    CASE WHEN ISNULL(EA.City,'') <> '' THEN ISNULL(EA.City,'') + Char(13) ELSE '' END +
    CASE WHEN ISNULL(EA.Country,'') <> '' THEN ISNULL(EA.Country,'') + Char(13) ELSE '' END +
    CASE WHEN ISNULL(EA.Code,'') <> '' THEN ISNULL(EA.Code,'') ELSE '' END as [<address>],
    ISNULL(u.[Consultant],'') as [<consultant>],
        ISNULL(u.[Consultant],'') as [<consultant>],
    ISNULL(u.staffmail,'') as[<Semail>],
    ISNULL(u.staffTel,'') as [<Stel>],
    ISNULL(u.staffFax,'') as [<Sfax>],
    ISNULL(u.staffcell,'') as [<salesrepcell>],
    ISNULL(u.staffext,'') as [<ext>],
    ISNULL(DM.ClientPo,'') as [<refno>],
    Case when ISNULL(DM.UseEC,0) = 0 then ISNULL(ISNULL(EH.Accountnum, EH.entityid),ISNULL(E.Accountnum, E.entityid)) ELSE ISNULL(EC.Accountnum, EC.EntitycontactID) END as [<account>],
    ISNULL(EH.VatNum,E.VatNum) as [<clientvat>],
    ISNULL(ISNULL(AttOf.AttentionOF, AEc.[AccountContact]),'') as [<contact>],
    ISNULL(ISNULL(AttOf.Email, AEc.Email),'') as [<email>],
    ISNULL(ISNULL(AttOf.Phone1, AEc.Phone1),'') as [<phone>],
    ISNULL(ISNULL(AttOf.Phone1, AEc.Phone1),'') as [<Telephone>],
    ISNULL(ISNULL(AttOf.Fax, AEc.Fax),'') as [<fax>],
    ISNULL(ISNULL(AttOf.Cell, AEc.Cell),'') as [<attCell>],
    ISNULL(ACT.TaxTypeName,'') as [<taxtype>],
    ISNULL(P.ProjectID,'') as [<projectno>],
    ISNULL(P.ProjectName,'') as [<projectname>],
    ISNULL(PCD.ProjectNum,'') as [<projectcode>],
    CONVERT(varchar,ISNULL(DM.DateCompleted, GETDATE()),103) as [<docdate>],
    CONVERT(varchar,ISNULL(DM.DateCompleted, GETDATE()),103) as [<docdate>],
    CONVERT(varchar,ISNULL(DM.DeliveryDate, GETDATE()),103) as [<duedate>],
    Case when DM.Doctype = 'Supplier Invoice' and DM.DocStatus = 'Open' then 'Tax Invoice' WHEN DM.Doctype = 'Supplier Invoice' and DocStatus <> 'Open' THEN 'Tax Invoice' ELSe DM.DocType END as [<doctype>],
    Case when DM.Doctype = 'Supplier Invoice' and DM.DocStatus = 'Open' then 'Tax Invoice' WHEN DM.Doctype = 'Supplier Invoice' and DocStatus <> 'Open' THEN 'Tax Invoice' ELSe DM.DocType END as [<doctype>],
    ISNULL(DS.Prefix,'') + ' ' + CONVERT(varchar,DM.DocNo) as [<docno>],
    ISNULL(DS.Prefix,'') + ' ' + CONVERT(varchar,DM.DocNo) as [<docno>],
                  isnull(DS.ContactDetails,'')as [<companycontact>],
                isnull(DS.Emails,'')as [<companymail>],
                isnull(DS.Telephone       ,'')as [<companytel>],
                isnull(DS.Faxno,'')as [<companyfax>],
                ISNULL(DS.URL,'') AS [<URL>],

    DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalEx) as [<totalex>],
    DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalEx / ISNULL(DM.ROE,1))-(DD.Discount / ISNULL(DM.ROE,1))) as [<totalexcl>],
    DM.Currency + ' ' + dbo.fnFormatNumber(DD.Discount) as [<discount>],
    DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl) as [<totalincl>],
    DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl) as [<totalincl>],
    DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl  - (DD.TotalEx - DD.Discount)) as [<totalvat>], 
    ISNULL(DM.Currency,'') + ' ' + dbo.fnFormatNumber((DD.TotalEx / DM.ROE) - (DD.Discount / DM.ROE)) as [<totalexdisc>],
    DS.CoRegNo as [<compreg>],
    DS.VatRegNo as [<vatno>],
    ISNULL(CONVERT(VARCHAR, DM.DeliveryDate, 103),'') as [<deliverydate>],
    case ISNULL(DM.Delivery,0) when 0 then 'For collection' ELSE ISNULL(DM.Address,'') END as [<Daddress1>],
    ISNULL(DM.City,'') as [<Daddress2>],
    ISNULL(DM.Code,'') as [<Daddress3>],
    ISNULL(DM.region,'') as [<Daddress4>],
    ISNULL(DM.Country,'') as [<Daddress5>],
    ISNULL(LPT.Value, 'C.O.D.') as [<paymentterms>],
    ISNULL(DM.memo,'') as [<notes>],
    '' as [<terms>],
    '' as [<banking>],
    DS.Footer as [<footer>],
    '' as [<agent>],
    DV.Division as [<division>],
    ISNULL(CONVERT(VARCHAR, DeliveryDate, 103),'') as [<deliverydate>],
    CASE WHEN isnull(DM.Delivery,0) = 1 THEN 'Deliver' ELSE 'Collect' END as [<shippingmethod>],
    E.compregnum as [<clientreg>],
    DM.Currency as [<currency>],
    ISNULL(CMP.DocType + ' ' + ISNULL(DS.Prefix,'') + ' ' + CONVERT(varchar,CMP.DocNo),'') as [<prevdocno>],
    ISNULL([ReqBy],'') as [<requestedby>],
    ISNULL([AuthBy],'') as [<authorisedby>],
    CO1.Value as [<other1>],
    CO2.Value as [<other2>],
    CO3.Value as [<other3>],    
    DM.CreditorOther4 as [<other4>],
    DM.CreditorOther5 as [<other5>],
    DM.CreditorOther6 as [<other6>],
    convert(varchar,DM.CreditorOther7,103) as [<other7>],
    convert(varchar,DM.CreditorOther8,103) as [<other8>],
    convert(varchar,DM.CreditorOther9,103) as [<other9>],
    ISNULL(ACT.TaxTypeName,'') AS [<exempt>]
    --DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl  - (DD.TotalEx - DD.Discount)) as [<exempt>]
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] , sum(PriceEx * Qty * (1 - (isnull(Discperc,0) / 100)) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl], DocID    FROM CREDITOR_DETAIL    Group By DocID) DD
    ON DM.DocID = DD.DocID
LEFT JOIN (SELECT DocID, ProjectID FROM CREDITOR_DETAIL) CD on CD.DocID = DM.DocID
LEFT JOIN (SELECT ProjectID, ProjectNum FROM Projects) PCD on PCD.ProjectID = CD.ProjectID
LEFT JOIN (SELECT EntityID, Company, LegalName, VATNum, AccountNum, InvoiceTo, PaymentTerms, AlternateCompanyID, website, compregnum, VendorNumber From Entity) E
    ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntityID, Company, LegalName, VATNum, AccountNum, InvoiceTo, PaymentTerms From Entity) EH
    ON E.AlternateCompanyID = EH.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN Lookup LPT 
    ON E.PaymentTerms = LPT.LookupID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact], Cell, Accountnum FROM EntityContact) EC
    ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AttentionOf], Accountnum, Phone1, Fax, email, Cell FROM EntityContact) AttOf
    ON DM.AttentionOf  = AttOf.EntityContactID 
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact], Accountnum, Phone1, Fax, email, Cell FROM EntityContact) AEC
    ON isnull(EH.InvoiceTo,E.InvoiceTo) = AEc.EntityContactID 
LEFT JOIN (SELECT ProjectID, EntityContactID, ProjectName, ProjectNum FROM Projects) P
    ON DM.ProjectID = P.ProjectID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [ProjContact] FROM EntityContact) ECP
    ON P.EntityContactID  = ECP.EntityContactID 
LEFT JOIN ( SELECT  users.userid, isnull(users.firstname,'')+ ' ' + isnull(users.surname,'') as [Consultant] ,users.StaffID ,
            isnull(staff.Tel,'') as [StaffTel],Isnull(Staff.Fax,'') as stafffax,Isnull(staff.Email,'') as staffmail,
            isnull(staff.Cell,'') as staffcell,isnull(staff.Ext,'') as staffext 
            From users 
            Left Join Staff 
                on users.StaffID=Staff.StaffID
            ) u
    ON DM.SalesRepID = u.userid
LEFT JOIN ( SELECT * FROM AccDocumentSetup) DS
    ON DM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT lookupID, Value as Division FROM Lookup) DV 
    ON DV.LookupID = DM.DivisionID
LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%postal%' AND IsDefault = 1) EA
    ON isnull(EH.EntityID,E.Entityid) = EA.Entityid
LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%physical%' AND IsDefault = 1) EAPhy
    ON isnull(EH.EntityID,E.Entityid) = EAPhy.Entityid
LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%physical%') EAPhyNo
    ON isnull(EH.EntityID,E.Entityid) = EAPhyNo.Entityid
    LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%postal%') EAPoNo
    ON isnull(EH.EntityID,E.Entityid) = EAPoNo.Entityid
LEFT JOIN (SELECT DocID, DocNo, DocType FROM DEBTOR_MASTER) CMP
    ON DM.PreviousDocID = CMP.DocID
LEFT JOIN (SELECT max(docid) as [DocID], PODocID  FROM EXPENDITURE_MASTER Group By PODocID) EM
    ON DM.DocID = EM.DocID 
LEFT JOIN (SELECT DocID,ProcessedBy, CreatedBy FROM EXPENDITURE_MASTER) iEM
    ON EM.DocID = iEM.DocID
LEFT JOIN (SELECT isnull(firstname,'') + ' ' + isnull(SurName,'') as [ReqBy], userID FROM Users) uReq
    ON iEM.CreatedBy = uReq. UserID
LEFT JOIN (SELECT isnull(firstname,'') + ' ' + isnull(SurName,'') as [AuthBy], userID FROM Users) uAuth
    ON iEM.ProcessedBy = uAuth. UserID
LEFT JOIN AccTaxType ACT 
	ON ACT.TaxTypeID = DM.TaxTypeID
LEFT JOIN Lookup CO1 
	ON DM.CreditorOther1 = CO1.LookupID
LEFT JOIN Lookup CO2 
	ON DM.CreditorOther2 = CO2.LookupID
LEFT JOIN Lookup CO3 
	ON DM.CreditorOther3 = CO3.LookupID
LEFT JOIN (Select EntityContactid, EntityID, Cell FROM EntityContact) ENC
    ON DM.Entityid = ENC.EntityID
WHERE DM.DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"39744","cv_Acc_Print_CashbookDoc_Header","","SELECT Top 1
DM.Company as [<client>],
u.[Consultant] as [<consultant>],
DM.PaymentRef as [<refno>],
E.VatNum as [<clientvat>],
P.ProjectID as [<projectno>],
P.ProjectName as [<projectname>],
convert(varchar,isnull(DM.DatePaid, getdate()),103) as [<docdate>],
DM.AccType as [<doctype>],
DM.AccOverheadID as [<docno>],
convert(varchar, cast(DM.TotalEx as money),1) as [<totalex>],
convert(varchar, cast(DM.TotalInc as money),1) as [<totalincl>],
convert(varchar, cast(DM.TotalVAT as money),1) as [<totalvat>],
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
DS.Terms as [<terms>],
DS.Banking as [<banking>],
DS.Footer as [<footer>]
FROM AccOverhead DM
LEFT JOIN (SELECT EntityID, Company ,VATNum,AccountNum,InvoiceTo From Entity) E
ON DM.Entityid = E.EntityID 
LEFT JOIN (SELECT ProjectID, EntityContactID, ProjectName FROM Projects) P
ON DM.ProjectID = P.ProjectID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [ProjContact] FROM EntityContact) ECP
ON P.EntityContactID  = ECP.EntityContactID 
LEFT JOIN (SELECT userid, isnull(firstname,'')+ ' ' + isnull(surname,'') as [Consultant] From users) u
ON DM.PaidBy = u.userid
LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
ON DM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%postal%') EA
ON DM.Entityid = EA.Entityid
WHERE DM.AccOverHeadID = {docid}



","0","","1","LRA-FUSION","0","0","fusion"
"39745","cv_Acc_Print_Statement_Header","","DECLARE @Entityid as integer
DECLARE @UseEC as integer
DECLARE @DivID as integer
SET @Entityid ={entityid}
SET @UseEC = 0
SET @DivID = {divisionid}

SELECT DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
'Statement' as [<doctype>],
'{date}' as [<docdate>],
Case WHEN @UseEC= 0 then E.Company ELSE EC.Client END as [<client>],
Case WHEN @UseEC= 0 then ECT.ATT ELSE EC.Client END as [<contact>],
Case WHEN @UseEC= 0 THEN EA.Address1 ELSE ECA.Address1 END as [<address1>],
Case WHEN @UseEC= 0 THEN EA.Address2 ELSE ECA.Address2 END as [<address2>],
Case WHEN @UseEC= 0 THEN EA.Code ELSE ECA.Code END as [<address3>],
Case WHEN @UseEC= 0 THEN EA.city ELSE ECA.city END as [<address4>],
Case WHEN @UseEC= 0 THEN E.AccountNo ELSE EC.AccountNo END as [<account>],
Case WHEN @UseEC= 0 THEN E.VatNum ELSE '' END as [<clientvat>],
CASE WHEN @UseEC= 0 THEN E.Switchboard ELSE EC.Phone1 END as [<phone>],
CASE WHEN @UseEC= 0 THEN E.Switchboard ELSE EC.Phone1 END as [<phone>],
CASE WHEN @UseEC= 0 THEN ISNULL(E.Email,'')  ELSE ISNULL(EC.Email,'')  END as [<email>],
E.Fax as [<fax>],
ECT.Cell as [<cell>],
ISNULL(E.compregnum,'') AS [<clientreg>],
ltrim(rtrim(Replace(Replace(isnull(replace(EA.Address1,char(13),'') + char(13),'')
+ isnull(replace(EA.Address2,char(13),'') +  char(13),'')
+ isnull(replace(EA.Address3,char(13),'') + char(13),'')
+ isnull(replace(EA.Code,char(13),'') + char(13),'')
+ isnull(replace(EA.city,char(13),'') + char(13),'')
+ isnull(replace(EA.country,char(13),''),''), char(13) + char(13), Char(13)), char(13) + char(13), Char(13)))) as [<address>],
DS.Terms as [<terms>],
DS.Banking as [<banking>],
DS.Footer as [<footer>],
'{totalincl}' as [<totalincl>],
'{120days}' as [<120days>],
'{90days}' as [<90days>],
'{60days}' as [<60days>],
'{30days}' as [<30days>],
'{current}' as [<current>],
ld.value as [<division>],
ld.value as [<division>]
FROM AccDocumentSetup DS
LEFT JOIN (SELECT Company, InvoiceTo, Entityid, VatNum,Isnull(Accountnum,Entityid) as [AccountNo], Switchboard, fax, compregnum,Email from Entity ) E
ON E.Entityid = @Entityid AND @UseEC = 0
LEFT JOIN (SELECT EntityContactID, isnull(firstname, '') + ' ' + isnull(surname,'') as [ATT],Cell FROM EntityContact) ECT
ON  @UseEC = 0 AND ECT.EntityContactID = E.InvoiceTo
LEFT JOIN (SELECT EntityContactID, isnull(firstname, '') + ' ' + isnull(surname,'') as [client], Phone1 ,PostalAddrID, isnull(Accountnum, Entitycontactid) as [AccountNo],Email FROM EntityContact) EC
ON @Entityid = EC.Entitycontactid AND @UseEC = 1
LEFT JOIN (SELECT  top 1 * FROM EntityAddress where Addresstype like '%postal%' and Entityid = @Entityid) EA
ON EA.Entityid = @Entityid 
LEFT JOIN (SELECT * FROM EntityAddress) ECA
ON EC.PostalAddrID = ECA.Entityaddressid
LEFT JOIN Lookup ld on ld.LookupID = DS.DivisionID
WHERE
(DS.divisionID = @DivID )
OR
(@DivID = 0 AND DS.DivisionID = (SELECT MIN(LookupID) FROM Lookup WHERE Class like 'Divisions'))

","0","","1","LRA-FUSION","0","0","fusion"
"39746","cv_Acc_Print_ExpenseDoc_Header","","SELECT S.IncurredBy as [<submittedby>],
convert(varchar, EC.datecreated,103) as [<datecreated>],
convert(varchar, datepaid,103) as [<datepaid>],
convert(varchar, datepaid,103) as [<docdate>],
DocStatus as [<status>],
PaymentRef as [<refno>],
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
DS.Footer as [<footer>],
'Expense Claim' as [<doctype>],
AccExpenseClaimID as [<docno>],
convert(varchar,cast(TotalEx as money),1) as [<totalex>],
convert(varchar,cast(TotalVat as money),1) as [<totalvat>],
convert(varchar,cast(TotalIncl as money),1) as [<totalincl>]
FROM ACCExpenseClaim EC
LEFT JOIN (SELECT staffID, isnull(firstname,'') + '  '+ isnull(surname,'') as [IncurredBy] FROM staff)S
ON EC.IncurredBy = S.Staffid
LEFT JOIN (SELECT ExpenseClaimID,sum(TotalEx) as [TotalEx], sum(TotalVat) as [TotalVat],sum(totalinc) as [TotalIncl],Max(DivisionID) as [DivisionID] FROM ACCExpenses Group by ExpenseClaimID) E
ON Ec.AccExpenseClaimID = E.ExpenseClaimID
LEFT JOIN AccDocumentSetup DS ON E.DivisionID = DS.DivisionID
WHERE Ec.AccExpenseClaimID = {docno}","0","","1","LRA-FUSION","0","0","fusion"
"39747","cv_Acc_Print_CEDoc_Headerbackup","","Declare @Currency as varchar(20)
Declare @ROE as float
SET @Currency = {currency}
SET @ROE = {roe}

SELECT Top 1
'{doctype}' as [<doctype>],
Case When isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END as [<client>],
--Case When isnull(DM.UseEC,0) = 0 then [AccountContact] ELSE [Contact] END as [<contact>],
--Case When isnull(DM.UseEC,0) = 0 then E.Fax ELSE EC.Fax END as [<fax>],
--Case When isnull(DM.UseEC,0) = 0 then E.Switchboard ELSE EC.Phone1 END as [<phone>],
--Case When isnull(DM.UseEC,0) = 0 then Aec.Email ELSE EC.email END as [<email>],
isnull(Att.Attention,'') as [<contact>],
isnull(Att.FullTitle,'') as [<fulltitle>],
isnull(Att.Fax,'') as [<fax>],
isnull(Att.Phone1,'') as [<phone>],
isnull(EA.Address1,'') as [<address1>],
isnull(EA.Address2,'') as [<address2>],
isnull(EA.Address3,'') as [<address3>],
isnull(EA.City,'') as [<address4>],
Att.Email as [<email>],
convert(varchar,DM.DateCreated,103) as [<docdate>],
convert(varchar,DM.Startdate,103) + ' - ' + convert(varchar,DM.Enddate,103) as [<rundates>] ,
case WHEN isnull(DM.PreviousDocID,0) > 0 then PreviousDocID Else DM.DocID END  as [<docno>],
'.' + convert(varchar,DM.Revision) AS [<revision>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD.TotalEx / @ROE)  as [<totalex>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD.Discount /@ROE) as [<discount>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber((Cast(DD.TotalIncl / case isnull(DD.TotalEx,0) when 0 then 1 else DD.TotalEx end as float) * (DD.TotalEx - round(DD.Discount,2))) / @ROE ) as [<totalincl>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(((Cast(DD.TotalIncl / case isnull(DD.TotalEx,0) when 0 then 1 else DD.TotalEx end as float) * (DD.TotalEx - round(DD.Discount,4))) - (DD.TotalEx - DD.Discount)) / @ROE) as [<totalvat>], 
CASE WHEN isnull(DD.Discount,0) <> 0 then char(13) + 'Discount' END as [<disclabel>],
CASE WHEN isnull(DD.Discount,0) <>  0 then char(13) + isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(cast(DD.Discount as money) / @ROE)  END as [<invisiblediscount>],
U.SalesCon as [<salescons>],
S.SalesRepCell as [<salesrepcell>],
LC.Value as [<extsalescons>],
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
DM.Descr as [<gendescr>],
DM.Descr as [<gendescr>],
DM.memo as [<notes>],
DS.Terms as [<terms>],
DS.Banking as [<banking>],
DS.Footer as [<footer>],
'R.O.E.' as [<roe>]
FROM COST_ESTIMATE_MASTER DM
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] , sum(TotalIncl) as [TotalIncl], DocID FROM COST_ESTIMATE_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group By DocID) DD
ON DM.DocID = DD.DocID
LEFT JOIN (SELECT EntityID, Company ,VATNum,AccountNum,InvoiceTo,Fax,Switchboard, SalesConsID From Entity) E
ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact],Accountnum,Email,Fax,Phone1,SalesConsID FROM EntityContact) EC
ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention], ltrim(rtrim(isnull(Title,'') + ' ' + isnull(firstname,'') +  ' '+ isnull(surname,''))) as [FullTitle],Accountnum,Email,Fax,Phone1,SalesConsID FROM EntityContact) ATT
ON DM.AttentionOf = Att.EntityContactID 
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact],Accountnum,Email,SalesConsID FROM EntityContact) AEC
ON E.InvoiceTo = AEc.EntityContactID 
LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
ON DM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') +  ' '  + isnull(surname,'') as [SalesCon],StaffID  FROM Users) U 
ON DM.SalesRepID = U.UserID
LEFT JOIN (SELECT Staffid, Cell as [SalesRepCell] FROM Staff ) S 
ON U.Staffid = S.Staffid
LEFT JOIN Lookup LC 
ON LC.Lookupid =  CASE WHEN  isnull(DM.UseEC,0) =0 THEN E.SalesConsID ELSE EC.SalesConsID END
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%Postal%') EA
ON E.EntityID = EA.Entityid
WHERE DM.DocID = {docid}


","0","","1","LRA-FUSION","0","0","fusion"
"39748","cv_Acc_Print_Manufacture_Header","","DECLARE @DocID as bigint
Set @DocID = {docid}

SELECT M.DocID as [<jobno>],
M.ExtJobNo as [<extjobno>],
STK.StockDescription as [<stockdescription>],
STK.StockCode as [<stockcode>],
convert(varchar,cast(M.Qty as money),1) + ' ' + L.Value as [<totalqty>],
'{instructions}' as [<instructions>],
convert(varchar, StartT, 103) + ' ' + convert(varchar, StartT, 108)  as [<start>],
convert(varchar, EndT, 103) + ' ' + convert(varchar, EndT, 108)  as [<end>],
LL.Value as [<container>],
Case isnull(useEc,0) when 1 then EC.Contact ELSE E.Company End as [<client>],
P.ProjectName as [<project>]
FROM ACCManufacture M
LEFT JOIN AccStock STK ON M.StockID = STK.StockID
LEFT JOIN Lookup L on STK.SoldBy = L.lookupid
LEFT JOIN LinkLookup LL ON M.ContainerID = LL.LinkLookupID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON M.Entityid = E.EntityID  and isnull(M.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, isnull(firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
ON M.Entityid = EC.EntityContactid AND isnull(M.useEC,0) = 1
LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P 
ON M.ProjectID = P.ProjectID
LEFT JOIN (SELECT min(StartTime) as [StartT],DocID FROM AccManufacture_Process where DocID = @DocID Group By DocID ) ST
ON M.docID = ST.DocID
LEFT JOIN (SELECT Max(EndTime) as [EndT],DocID FROM AccManufacture_Process where DocID = @DocID Group By DocID ) EN
ON M.docID = EN.DocID
WHERE M.DocID = @DocID
","0","","1","LRA-FUSION","0","0","fusion"
"39749","cv_Acc_Manufacture_Rpt_Pri","","SELECT M.StockId, STK.StockDescription, Sum(Qty) as [Total], L.Value as [Unit], Count(M.StockID) as [TotJobs] FROM 
(
Select MO.*,m.DateCompleted,m.Completed
from 
Accmanufacture M
left join AccManufacture_Output MO
on MO.DocID = M.DociD
)M
LEFT JOIN (SELECT StockID, StockDescription, soldBy FROM AccStock)STK
ON M.StockID = Stk.StockID
LEFT JOIN (SELECT * FROM Lookup) L ON STK.SoldBy = L.LookupID
{where}
Group by M.StockID, STK.StockDescription, L.Value
ORDER BY StockDescription Desc","0","","1","LRA-FUSION","0","0","fusion"
"39750","cv_Acc_Manufacture_Rpt_Col","","SELECT Distinct MD.StockDescription, MD.Unit FROM AccManufacture_Detail MD
LEFT JOIN AccManufacture M ON MD.DocID = M.DocID
{where}
ORDER BY MD.StockDescription","0","","1","LRA-FUSION","0","0","fusion"
"39751","cv_Acc_Manufacture_Rpt_Details","","SELECT Distinct MD.StockDescription,  Sum(CASE when MD.DocID = M.DocID then MD.Qty Else 0 END * M.Qty) as [Qty], M.StockID, STK.StockDescription as [PriStock] FROM AccManufacture_Detail MD
cross JOIN AccManufacture M
LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK
ON M.StockID = Stk.StockID
{where}
Group By MD.StockDescription,M.StockID,STK.StockDescription
ORDER BY STK.StockDescription ","0","","1","LRA-FUSION","0","0","fusion"
"39752","cv_Leave_Get_DaysWorked","","DECLARE @TempDate DATETIME
DECLARE @CycStart as datetime
DECLARE @CycEnd as datetime
DECLARE @StaffID as INT
SET @CycStart = '{cycstart}'
SET @CycEnd = '{cycend}'
SET @StaffID = {staffid}
SET @TempDate = @CycStart

SET NOCOUNT ON

--Get Data Into temp table

declare @WorkDays table(
  DayInCycle datetime ,
  isWorkDay int,
  isHoliday int
)

DELETE FROM @WorkDays
--Gets a list of all the days in this cycle
WHILE  @TempDate < @CycEnd
Begin
	INSERT INTO @WorkDays
	SELECT @TempDate, Case when datepart(dw,@TempDate) in ({workingdaysofweek}) then 1 else 0 END as [WorkDay],0 as [Holiday]
	SET @TempDate = dateadd(d, 1, @TempDate)
End

------marks off holidays
----update @WorkDays
----Set isWorkDay = 0, isHoliday = 1 
----FROM @WorkDays WD 
----Inner JOIN  PublicHoliday PH on month(WD.DayinCycle) = month(PH.[Date]) AND  day(WD.DayinCycle) = day(PH.[Date])
------Added By Chad 2010-03-26
----AND  Year(WD.DayinCycle) = Year(case when isnull(ph.thisYear,0)=1 then PH.[Date] else WD.DayinCycle end)

update @WorkDays
	Set isWorkDay = 0, isHoliday = 1 
FROM (
	SELECT 
		PH.[Date]
	FROM PublicHoliday PH
	LEFT JOIN Lookup L ON L.LookupID = PH.CountryID
	LEFT JOIN Staff S ON S.CountryID = L.Value	
	WHERE PH.[Date] Between @CycStart AND @CycEnd
	AND S.StaffID = @StaffID
) Z 
WHERE DayInCycle = Z.[Date]

SELECT sum(isWorkDay) as [WorkDays] FROM @WorkDays

SET NOCOUNT OFF","0","","1","LRA-FUSION","0","0","fusion"
"39753","cv_Leave_Get_DaysOnLeave","","DECLARE @CycStart as datetime
DECLARE @CycEnd as datetime
DECLARE @DateCounter as datetime 
DECLARE @StaffID as int
SET @CycStart = '{cycstart}'
SET @CycEnd = '{cycend}'
SET @DateCounter = @CycStart
SET @StaffID = {staffid}

SET NOCOUNT ON

--Get Data Into temp table

declare @WorkDays table(
  DayInCycle datetime ,
  isWorkDay int,
  isHoliday int,
  OnLeave float,
  LeavePeriod int,
  LeaveType int
  
)

DELETE FROM @WorkDays
--Gets a list of all the days in this cycle
WHILE  @DateCounter < @CycEnd
Begin
	INSERT INTO @WorkDays 
	SELECT @DateCounter, Case when datepart(dw,@DateCounter) in ({workingdaysofweek}) then 1 else 0 END as [WorkDay],0 as [Holiday], 0 ,0,0
	SET @DateCounter = dateadd(d, 1, @DateCounter)
End

--marks off holidays
--update @WorkDays
--Set isWorkDay = 0, isHoliday = 1 
--FROM @WorkDays WD 
--INNER JOIN  PublicHoliday PH on month(WD.DayinCycle) = month(PH.[Date]) AND  day(WD.DayinCycle) = day(PH.[Date])
--	AND PH.CountryID = (SELECT lookupID FROM lookup WHERE Class = 'Country' And Value = (Select CountryID FROM Staff WHERE StaffID = @StaffID))
update @WorkDays
	Set isWorkDay = 0, isHoliday = 1 
FROM (
	SELECT 
		PH.[Date]
	FROM PublicHoliday PH
	LEFT JOIN Lookup L ON L.LookupID = PH.CountryID
	LEFT JOIN Staff S ON S.CountryID = L.Value	
	WHERE PH.[Date] Between @CycStart AND @CycEnd
	AND S.StaffID = @StaffID
) Z 
WHERE DayInCycle = Z.[Date]



--marks off days on leave
SET @DateCounter = @CycStart
While @DateCounter < @CycEnd
BEGIN
	UPDATE @WorkDays
	Set OnLeave = CASE WHEN LP.LeavePeriod like '%half%' then 0.5 else 1 end ,LeavePeriod = B.PeriodTypeID, LeaveType =B.LeaveTypeID
	FROM @WorkDays WD 
	Inner JOIN
	(SELECT @DateCounter as [LeaveDate],LeaveTypeID,PeriodTypeID FROM (
		SELECT 
		CASE WHEN L.StartDate < @CycStart then @CycStart ELSE L.Startdate end as [Startdate],
		CASE WHEN L.EndDate > @CycEnd then @CycEnd ELSE L.EndDate end as [Enddate],
		LeaveTypeID,PeriodTypeID
		FROM Leave L
		where ((L.startdate between @CycStart AND @CycEnd) OR (L.Enddate between @CycStart AND @CycEnd) OR (L.startdate <= @CycStart AND L.Enddate >= @CycEnd))
		AND isnull(IsGranted,0) = 1
		AND UserID = @StaffID
	) A
	WHERE @DateCounter >= A.Startdate AND @DateCounter <= A.EndDate ) B
	ON WD.DayInCycle = LeaveDate 
	LEFT JOIN LeavePeriod LP ON B.PeriodTypeID = LeavePeriodID
    WHERE WD.isHoliday = 0 and isWorkDay=1
	SET @DateCounter = dateadd(d, 1, @DateCounter)
END

SELECT sum(OnLeave) as [DaysOnLeave], LT.LeaveType FROM @WorkDays WD
LEFT JOIN LeaveType LT ON LT.LeaveTypeID = WD.LeaveType 
WHERE isnull(WD.LeaveType,0) <> 0 GROUP BY LT.LeaveType

SET NOCOUNT OFF","0","","1","LRA-FUSION","0","0","fusion"
"39754","cv_SalesByProduct","","SELECT 
	DocID, 
	[Doc. Type], 
	[Doc. No.], 
	LD.Value as [Division], 
	CASE WHEN isnull(A.UseEC,0) = 1 then EC.AccountNum ELSE E.AccountNum END as [Account],
	CASE WHEN isnull(A.UseEC,0) = 1 then EC.Contact ELSE E.Company END as [Client],
	isnull(EH.Company,'') as [Holding Company],
	A.ClientPo as [Customer Order Number], Project,Notes, 
	Convert(varchar,Created,111) as [Created],Convert(varchar,[Doc. Date],111) as [Doc. Date],
	[Status], U.Consultant,ExtSal.Value as [Ext. Consultant], 
	A.StockCode as [Code], 
	A.StockDescription as [Description],
	ST.Value as [Stock Type],
	LL.Value as [Sub Type],
	Currency, [R.O.E.], 
	[QTY],
	dbo.fnFormatNumber([Total Ex. VAT]) as [Total Ex. VAT], 
	dbo.fnFormatNumber([Total VAT]) as [Total VAT],
	dbo.fnFormatNumber([Total Incl. VAT]) as [Total Incl. VAT],
	dbo.fnFormatNumber([Est. Cost]) as [Est. Cost],
	dbo.fnFormatNumber([Profit]) as [Profit],
	dbo.fnFormatNumber(CASE [Est. Cost] WHEN 0 THEN 0 ELSE [Profit] / [Est. Cost] END * 100) as [Margin %],
	dbo.fnFormatNumber(
		CASE [Total Ex. VAT] WHEN 0 THEN 0 ELSE 
		(CASE [Est. Cost] WHEN 0 THEN 0 ELSE ([Total Ex. VAT] - [Est. Cost]) / [Total Ex. VAT] END * 100) 
		END) as [GP]
FROM 
(
    SELECT Convert(Varchar,DD.LineID) + '#' + DocType as [DocID], DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
    DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
    [ClientPO], P.ProjectName  as [Project],    isnull(DM.Memo,'') as Notes, 
    DateCreated as [Created],
    DateCompleted as [Doc. Date],
    DocStatus as [Status], 
    DM.SalesRepID as [SalesRepID],
    DM.CreatedBy,
    DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
    DD.StockCode, 
    DD.StockDescription,
    DD.QTY,
    CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1)) as [Total Ex. VAT], 
    CASE doctype when 'Credit Note' then -1 ELSE 1 END * (([Total Incl. VAT] - [Total Ex. VAT])  / isnull(DM.ROE,1)) as [Total VAT], 
    CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT]  / isnull(DM.ROE,1))  as [Total Incl. VAT],
    CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))  as [Est. Cost],
     (
        CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1))
        -
        CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))
    ) as [Profit],
    DM.Period, DM.BatchID, DD.StockID
    FROM DEBTOR_MASTER DM
    LEFT JOIN (SELECT LineID, DocID, StockID, StockCode,StockDescription,
				Qty,
                (PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
                 (PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
                 Cast((isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
                 (PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
                 FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 ) DD
    ON DM.DocID = DD.Docid
    LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
    ON DM.DocID = SD.DocID
    LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
    ON DM.ProjectID = P.ProjectID
        

) A
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
    On A.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
    ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
    ON A.EntityID = E.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
    ON E.AlternateCompanyID = EH.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
    ON A.Entityid = EC.EntityContactID AND isnull(A.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
    ON E.SalesConsID = ExtSal.lookupid
LEFT JOIN AccStock STK ON STK.StockID = A.StockID
LEFT JOIN Lookup ST ON ST.LookupID = STK.StockType
LEFT JOIN LinkLookup LL ON LL.LinkedTo = STK.SubTypeID AND LL.LinkedTo = ST.LookupID
{where}

ORDER BY A.DocID desc","0","","1","LRA-FUSION","0","0","fusion"
"39755","cv_Acc_Sales_Group_Report","","SELECT {select} FROM (
	SELECT DM.DocID,DM.DocType,DM.UseEc,DM.Entityid,Agnt.AgentID,U.UserID as [ConsultantID],E.SalesConsID as [ExternalConsultantID], Ldiv.Value as [Division], case when isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END as [Client], EA.City, EA.Region,Agnt.Agent,U.[Sales Consultant],[External Consultant], 
	DateCompleted,
	0 as [Qty Quoted],isnull(DD.Qty,0) as[Qty Sold],LSB.Value as [Unit],DD.StockID, DD.StockCode as [Stock Code], DD.StockDescription as [Description], LT.Value as [Stock Type],'N/A' as [Freight Type], LP.Value as [Packaging],
	DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
	0 as [Total Quoted Ex. VAT],
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * isnull([Total Ex. VAT],0) as [Total Sales Ex. VAT], 
	0 as [Quoted Est. Cost],
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * cast(isnull([Est. Cost],0) as money) as [Sales Est. Cost]
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT EntityID, ltrim(isnull(Accountnum,'') + ' ' + Company) as [Company],InvoiceTo,SalesConsID FROM Entity) E
	ON DM.EntityID = E.EntityID AND isnull(DM.useEC,0) = 0
	LEFT JOIN (SELECT EntityContactID, rtrim(ltrim(isnull(Accountnum,'') + ' '+ isnull(Firstname,'') + ' ' + isnull(surname,''))) as [Contact], AgnetID,PostalAddrID  FROM EntityContact) EC
	ON DM.Entityid = EC.EntityContactID AND isnull(DM.useEC,0) = 1
	LEFT JOIN (SELECT EntityContactID as agentID, rtrim(ltrim(isnull(Accountnum,'') + ' '+ isnull(Firstname,'') + ' ' + isnull(surname,''))) as [Agent] FROM EntityContact) Agnt
	ON Case WHEN isnull(DM.useEC,0) = 1 then EC.AgnetID ELSE (SELECT Top 1 AgnetID FROM EntityContact where EntitycontactID = E.InvoiceTo) END = Agnt.AgentID
	LEFT JOIN (SELECT * FROM EntityAddress ) EA
	ON Case WHEN isnull(DM.useEC,0) = 1 then EC.PostalAddrID ELSE (SELECT Top 1 EntityAddressID FROM EntityAddress where Addresstype like '%postal%' and Entityid = E.Entityid) END  = EA.Entityaddressid
	LEFT JOIN (SELECT UserID, Firstname + ' ' + Surname as [Sales Consultant] FROM Users) U
	On DM.SalesRepID = U.UserID
	LEFT JOIN (SELECT LookupID,Value as [External Consultant] FROM Lookup) EU
	On E.SalesConsID = EU.LookupID
	LEFT JOIN (SELECT DocID, StockID, StockCode, StockDescription,Qty,
				 Cast(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) as money) as [Total Ex. VAT],
	             Cast(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1)  as money) as [Total Incl. VAT], 
	             Cast((isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             Cast(PriceEx * Qty * (( isnull(Discperc,0) )/100) as money) as [Total Discount]
	             FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 ) DD
	ON DM.DocID = DD.Docid
	LEFT JOIN (SELECT StockID,SoldBy,StockType,PackagingID  FROM AccStock) STK
	ON DD.StockID = STK.StockID
	LEFT JOIN Lookup LT ON STK.StockType = LT.LookupID   	--Stock Type
	LEFT JOIN Lookup LP ON STK.PackagingID = LP.LookupID   	--Packaging Type
	LEFT JOIN Lookup LSB ON STK.SoldBy = LSB.LookupID   	--Selling units
	LEFT JOIN (SELECT LookupID, Value FROM Lookup) LDiv
	ON DM.DivisionID = LDiv.LookupID
	WHERE docStatus in ('Accepted', 'Completed','Reconciled')
	AND DocType in ('Sales Order', 'Credit Note')
	{where}

	UNION ALL
	
	SELECT DM.DocID,'Quote' as [DocType],DM.UseEc,DM.Entityid,Agnt.AgentID,U.UserID as [ConsultantID],E.SalesConsID as [ExternalConsultantID], Ldiv.Value as [Division], case when isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END as [Client], EA.City, EA.Region,Agnt.Agent,U.[Sales Consultant], [External Consultant],
	isnull(DateCompleted,datecreated),
	isnull(DD.Qty,0) as [Qty Quoted], 0 as [Qty Sold] ,LSB.Value as [Unit],DD.StockID, DD.StockCode as [Stock Code], DD.StockDescription as [Description], LT.Value as [Stock Type],DD.[Freight Type], LP.Value as [Packaging],
	DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
	isnull([Total Ex. VAT],0) as [Total Quoted Ex. VAT], 
	0 as [Total Sales Ex. VAT],
	cast(isnull([Est. Cost],0) as money) as [Quotes Est. Cost],
	0 as [Sales Est. Cost]
	FROM COST_ESTIMATE_MASTER DM
	LEFT JOIN (SELECT EntityID, ltrim(isnull(Accountnum,'') + ' ' + Company) as [Company],InvoiceTo,SalesConsID FROM Entity) E
	ON DM.EntityID = E.EntityID AND isnull(DM.useEC,0) = 0
	LEFT JOIN (SELECT EntityContactID, rtrim(ltrim(isnull(Accountnum,'') + ' '+ isnull(Firstname,'') + ' ' + isnull(surname,''))) as [Contact], AgnetID,PostalAddrID  FROM EntityContact) EC
	ON DM.Entityid = EC.EntityContactID AND isnull(DM.useEC,0) = 1
	LEFT JOIN (SELECT EntityContactID as agentID, rtrim(ltrim(isnull(Accountnum,'') + ' '+ isnull(Firstname,'') + ' ' + isnull(surname,''))) as [Agent] FROM EntityContact) Agnt
	ON Case WHEN isnull(DM.useEC,0) = 1 then EC.AgnetID ELSE (SELECT Top 1 AgnetID FROM EntityContact where EntitycontactID = E.InvoiceTo) END = Agnt.AgentID
	LEFT JOIN (SELECT * FROM EntityAddress ) EA
	ON Case WHEN isnull(DM.useEC,0) = 1 then EC.PostalAddrID ELSE (SELECT Top 1 EntityAddressID FROM EntityAddress where Addresstype like '%postal%' and Entityid = E.Entityid) END  = EA.Entityaddressid
	LEFT JOIN (SELECT UserID, Firstname + ' ' + Surname as [Sales Consultant] FROM Users) U
	On DM.SalesRepID = U.UserID
	LEFT JOIN (SELECT LookupID,Value as [External Consultant] FROM Lookup) EU
	On E.SalesConsID = EU.LookupID
	LEFT JOIN (SELECT CD.DocID, CD.StockID, StockCode, StockDescription,
				 Cast(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) as money) as [Total Ex. VAT],
	             Cast(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) as money) as [Total Incl. VAT], 
	             Cast((isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             Cast(PriceEx * Qty * (( isnull(Discperc,0) )/100)as money) as [Total Discount],
				 QTY
				 ,l.Value as [Freight Type]--Added for Freight Type
				 FROM COST_ESTIMATE_DETAIL CD
				 --Added for Freight Type
				 left join Shipping_Master SM on SM.ShippingDocID = CD.ShippingDocID
				 left join lookup l on l.LookupID = SM.ShippingTypeID
				 ) DD
	ON DM.DocID = DD.Docid
	LEFT JOIN (SELECT StockID,SoldBy,StockType,PackagingID  FROM AccStock) STK
	ON DD.StockID = STK.StockID
	LEFT JOIN Lookup LT ON STK.StockType = LT.LookupID   	--Stock Type
	LEFT JOIN Lookup LP ON STK.PackagingID = LP.LookupID   	--Packaging Type
	LEFT JOIN Lookup LSB ON STK.SoldBy = LSB.LookupID   	--Selling units
	LEFT JOIN (SELECT LookupID, Value FROM Lookup) LDiv
	ON DM.DivisionID = LDiv.LookupID
	where DocStatus in ('Completed', 'Accepted','Reconciled')
	AND isnull(DM.RevisedToDoc,0) = 0
	{where}
	) A
{group}
{order}

","0","","1","LRA-FUSION","0","0","fusion"
"39756","cv_Client_SLA_Times","","Select SLATimeID,SLADate,SLAHours as [Hours] from SLAClientTimeDetails SCT
Left join (Select EntityID,Company from Entity) E on E.EntityID = SCT.EntityID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39757","qf_Companies_SLA","","select top 50 entityid, Company, t.Value as Type, c.Value as Category
from entity e
left join lookup t on t.lookupid = e.entitytypeid
left join lookup c on c.lookupid = e.entitycategoryid
where (company like '<%replace%>%') and (isnull(IsSupplier,0) = {issupplier}) {where}
order by company","0","","1","LRA-FUSION","0","0","fusion"
"39758","qf_ProductGroups","","select lookupid, isnull(value,'') + ' ' + isnull(info,'')
from lookup l
where class like 'ProdGroup'
and isnull(value,'') + ' ' + isnull(info,'') like '%<%replace%>%'
order by value,info","0","","1","LRA-FUSION","0","0","fusion"
"39759","qf_sales_staff","","select staffid, isnull(firstname,'') + ' ' + isnull(surname,'') as [Staff Member]
from staff
where isnull(firstname,'') + ' ' + isnull(surname,'') like '%<%replace%>%'","0","","1","LRA-FUSION","0","0","fusion"
"39760","cv_staff_sales_people","","select staffID, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Sales Person],Tel,Cell 
from staff
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39761","cv_search_campaign_conts","","select distinct ec.entitycontactid, isnull(firstname,'') + ' ' + isnull(surname,'') as [Client], e.[Company]
from entitycontact ec
left join (select entityid, Company as [Company] from entity) e 
	on e.entityid = ec.entityid
left join clientbatch cb 
	on cb.entitycontactid = ec.entitycontactid
--where 
<%where1%>
and ec.entitycontactid not in 
(
select ec.entitycontactid
from entitycontact ec
left join (select entityid, Company as [Company] from entity) e 
	on e.entityid = ec.entityid
left join clientbatch cb 
	on cb.entitycontactid = ec.entitycontactid
<%where%>

) 
","0","","1","LRA-FUSION","0","0","fusion"
"39762","cv_all_activities","","--cv_all_activities
SELECT top 100 Percent
	[id]
	,u.username as [Added By]
	,e.Company
	,	case isnull(ec.firstname, ' ') + ' ' + isnull(ec.surname, ' ') 
		when '' then 'No Client Selected' 
		else isnull(ec.firstname, ' ') + ' ' + isnull(ec.surname, ' ') 
		end as [Client]
	,Type as [Activity Type]
	,[Reference Number]
	,isnull(assignedTo,'') as [Assigned To]
	,isnull([desc],' ') as [Description]
	,Convert(Varchar,[date],111) as [Activity Date]
	,Convert(Varchar,[date],108) as [Activity Time]
	,Priority
	,[Visit Report]
	,[Percentage Complete]
FROM (
	--Actions
	select 
		'ac' + cast(activityid as varchar) as 'ID'
		,entitycontactid as 'ContactID'
		,AddedByID as 'UserID'
		,'Action' AS 'Type'
		,u.username as 'AssignedTo'
		,Comments as 'Desc'
		,dateadded as 'Date'
		,activity.DivID
		,'' as ""Priority""
		,case (lu.value) when 'Complete' then '100 %' else '0 %' end as [Percentage Complete]
		,'' as [Visit Report]
		,Entityid as [Entityid] 
		,cast(activityid as varchar) as 'Reference Number'
	from activity
	LEFT JOIN Lookup lu on activityoutcomeid = lu.lookupid
	LEFT JOIN users u on u.userid = activity.userid

	union all

	--Appointments
	select 
		'ap' + cast(appointmentid as varchar) as [ID]
		,AC.EntityContactID as [ContactID]
		,createUserID as 'UserID'
		,'Appointment' AS [Type],
		Case when foruserid = 0 then 'Unassigned' else u.username end as 'AssignedTo'
		,subject as [Desc]
		,[date] as [Date]
		,0 as DivID
		,'' as ""Priority""
		,Case WHEN isnull(Held,0) = 1 OR isnull(NotHeld,0) =1 
		then '100 %' 
		ELSE '0 %' 
		END  as [Percentage Complete]
		,Actions as [Visit Report]
		,A.Entityid as [Entityid]
		,cast(appointmentid as varchar) as 'Reference Number'
	from appointment A
	LEFT JOIN users u on u.userid = A.foruserid
	LEFT JOIN (
		SELECT 
			Max(EntityContactID) as [EntityContactID]
			, ApptID 
		FROM AppointmentContacts 
		Group by ApptID
	) AC ON A.AppointmentID = AC.Apptid
	WHERE  isnull(NotHeld,0) = 0

	union all

	--Reminders
	select 
		'tr' + cast(taskreminder.taskreminderid as varchar) as 'ID'
		,entitycontactid as 'ContactID'
		,ownerID as 'UserID'
		,'Task Reminder' AS 'Type'
		,dbo.GetTaskAssignedUsers('tr' + cast(taskreminder.taskreminderid as varchar)) as 'AssignedTo'
		,isnull(TaskName,' ') + '  -  ' + isnull(additionalinfo, ' ') as 'Desc'
		,taskdate as 'Date'
		,taskreminder.DivID
		,isnull(lu.[value],'') as ""Priority""
		,case (select count(*) from actions a where a.taskreminderid = taskreminder.taskreminderid) when 0 
		then convert(varchar, percentageid) + ' %' 
		else convert(varchar, (Select AVG(PercentageID) from actions a where a.taskreminderid = taskreminder.taskreminderid)) + ' %' 
		end as [Percentage Complete]
		,'' as [Visit Report] 
		,null as [Entityid]
		,cast(taskreminder.taskreminderid as varchar) as 'Reference Number'
	from taskreminder
	LEFT JOIN lookup lu on lu.lookupid = taskreminder.priorityid

	union all

	--Calls
	select 
		'cl' + cast(calllogid as varchar) as 'ID'
		,entitycontactid as 'ContactID'
		, callcreatorid as 'UserID'
		,case isnull(advCall, 0) when 0 then 'Call' else 'Advanced Call' end  as 'Type'
		,u.username as 'AssignedTo'
		,CallDescription as 'Description'
		,calldate as 'Date'
		,DivID
		,'' as ""Priority""
		,case when isnull(iscomplete,0) = 0  then '0 %' else '100 %' END as [Percentage Complete]
		,'' as [Visit Report]
		,null as [Entityid] 
		,(SELECT TOP 1 CustValue FROM CRMSetup WHERE [Description] LIKE 'Function' AND Variable LIKE 'CallIdPrefix') + '' + cast(calllogid as varchar) as 'Reference Number'
	from calllog
	LEFT JOIN users u on u.userid = calllog.userid

	union all

	--Sub Tasks
	select 
		'at' + cast(actionid as varchar) as 'ID'
		,entitycontactid as 'ContactID'
		,ownerID as 'UserID'
		,'Sub Task' AS 'Type'
		,dbo.GetTaskAssignedUsers('at' + cast(actionid as varchar)) as 'AssignedTo'
		,comments as 'Desc'
		,taskdate as 'Date'
		,t.DivID
		,isnull(lu.[value],'') as ""Priority""
		,convert(varchar, a.percentageid) + ' %' as [Percentage Complete]
		,'' as [Visit Report]
		,null as [Entityid] 
		,(SELECT )cast(actionid as varchar) as 'Reference Number'
	from actions a
	INNER JOIN taskreminder t ON t.taskreminderid = a.taskreminderid
	LEFT JOIN lookup lu on lu.lookupid = a.priorityid

	union all

	--tasks 
	select Distinct 
		'pk' + cast(CALI.ClientActivityListItemID as varchar) as 'ID'
		,null as 'ContactID'
		,IssuedByID as 'UserID'
		,'Project Task'  as 'Type'
		,[Owner] as 'AssignedTo'
		,CALI.Description 	as 'Description'
		,DateIssued as 'Date'
		,P.DivID
		,PR.PriorityType as ""Priority""
		,convert(varchar,(isnull(cast(compActCount as float),0) / isnull(cast(ActCount as float),1) ) * 100)+ ' %' as [Percentage Complete]
		,'' as [Visit Report]
		,P.EntityID as [Entityid] 
		,cast(CALI.ClientActivityListItemID as varchar) as 'Reference Number'
	FROM ClientActivityList CAL
	LEFT JOIN (SELECT ProjectID, EntityID, ProjectName,DivID FROM Projects) P
	ON CAL.ProjectID = P.ProjectID
	LEFT JOIN (SELECT EntityID, Company FROM Entity) E
	ON P.EntityID = E.EntityID
	LEFT JOIN (SELECT * FROM Priority) PR
	ON CAL.PriorityID = PR.PriorityID
	LEFT JOIN (SELECT * FROM Lookup) LS
	ON CAL.StatusID = LS.LookupID
	LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(Surname,'') As [Owner] FROM Users) O
	ON CAL.OwnerID= O.UserID
	LEFT JOIN (SELECT * FROM ClientActivityListItem ) CALI
	ON CAL.ClientActivityListID = CALI.ClientActivityListID
	LEFT JOIN (SELECT count(ClientActivityListItemID) as [ActCount],ClientActivityListID 
	FROM ClientActivityListItem Group by ClientActivityListID) CAC
	ON CAL.ClientActivityListID = CAC.ClientActivityListID
	LEFT JOIN (SELECT count(ClientActivityListItemID) as [CompActCount],
	ClientActivityListID FROM ClientActivityListItem WHERE isnull(IsComplete,0) = 1 
	Group by ClientActivityListID) CACC
	ON CAL.ClientActivityListID = CACC.ClientActivityListID
	--Last person assigned
	LEFT JOIN (
		SELECT 
			ClientActivityListID
			,max(AssignedTo) as [AssignedTo]
			,max(ClientActivityListID) as [Most] 
		FROM ClientActivityListItem 
		Group By ClientActivityListID 
	) CALIAss
	ON CALI.ClientActivityListID = CALIAss.ClientActivityListID
	LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(Surname,'') As [Assigned To] FROM Users) AO
	ON CALIAss.AssignedTo= AO.UserID
	where CALI.ClientActivityListItemID is not null

	union all

	--tickets
	select 
		'tk' + cast(ticketID as varchar) as 'ID'
		,'' as 'ContactID'
		,T.logbyID as 'UserID'
		,'Ticket' as 'Type'
		,u.username as 'AssignedTo'
		,tMessage as 'Description'
		,DateCaptured as 'Date'
		,DivID
		,Severity as ""Priority""
		,case when isnull(iscomplete,0) = 0  then '0 %' else '100 %' END as [Percentage Complete]
		,'' as [Visit Report]
		,EntityID as [Entityid] 
		,cast(ticketID as varchar) as 'Reference Number'
	from tickets T
	LEFT JOIN users u on u.userid = T.userid

) A
LEFT JOIN (Select UserID,Username From  users) u 
on u.userid = a.userid
LEFT JOIN (Select EntityContactId,EntityId,firstname,surname FROM entitycontact) ec 
on ec.entitycontactid = a.contactid
LEFT JOIN (SELECT Entityid, Company FROM entity) e 
on isnull(ec.entityid,A.EntityID) = e.entityid
LEFT JOIN lookup Div ON a.divid = div.lookupid
<%where%>
order by a.[Date] Desc


","0","","1","LRA-FUSION","0","0","fusion"
"39763","cv_accStockRep","","Declare @Date as datetime
Declare @Division as int
set @Date = '{date}'
Set @Division = {divid}

SELECT newid(),Stk.StockID,LL.Value as [Type],Stk.StockCode as [Code], Stk.StockDescription as [Description],L.Value as [Unit],
LC.Value as [Container], stk.DefaultBinName as [Default Bin Name],
convert(varchar,cast(round(isnull(SC.QtyStores,0) ,4) as money),1) as [Total In Stores] ,
convert(varchar,cast(round(isnull(qtyForManuf,0),4) as money),1) as [Required For Manufacture],
convert(varchar,cast(round(isnull(qtyUnderManuf,0),4) as money),1) as [Under Manufacture]
--,isnull(Stk.LeadTime,0) as [Lead Time (Hrs)]
FROM AccStock STK
--In Stores
LEFT JOIN (SELECT StockID, sum(qty * Ratio) as [QtyStores],containerid FROM AccStockControl where Adjustdate <= @Date and Divisionid = @Division group by StockID,containerid) SC
ON STK.StockID = SC.StockID
--Container
LEFT JOIN LinkLookup LC ON SC.ContainerID = LC.LinklookupID
--Required For Manufacture
LEFT JOIN (SELECT MD.StockID, Sum(MD.Qty * M.Qty) as [QtyForManuf] FROM AccManufacture_Detail MD 
	LEFT JOIN AccManufacture M ON MD.DocID = M.DocID
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date and Divisionid = @division
	Group by  MD.StockID )Manuf
ON Stk.StockID = Manuf.StockID
--Under Manufacture
LEFT JOIN (SELECT M.StockID, Sum(M.Qty) as [QtyUnderManuf] FROM AccManufacture M
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date and Divisionid = @division
	GROUP By M.StockID) UManuf
ON Stk.StockID = UManuf.StockID
LEFT JOIN Lookup L on  STK.SoldBy = L.LookupID 
LEFT JOIN Lookup LL on STK.StockType = LL.LookupID 
left join linklookup llc on llc.linklookupid = sc.containerid
{where}

ORDER BY LL.Value, Stk.StockDescription","0","","1","LRA-FUSION","0","0","fusion"
"39764","cv_Client_Hours_OLD","","Select Company,[SLA Hours],[Hours Done] from (
Select distinct SLAClientID,E.Company,SLAHours as [SLA Hours],isnull([Hours Done],0) as [Hours Done],SLADate as [Date] from SLAClientTime ACT
LEFT JOIN (Select EntityID,SLAHours,SLADate from SLAClientTimeDetails) SCTD 
on ACT.EntityID = SCTD.EntityID
Left JOIN (Select EntityID,Company from Entity) E 
on ACT.EntityID = E.EntityID


Left join (Select EntityID,
case when isnull(Sum(hoursdone),0) < 1 then 1 else 

case when isnull(isnull(Sum(isnull(hoursdone,0)),0) - round(isnull(Sum(isnull(hoursdone,0)),0),0),0 ) < 1 then 1 + round(isnull(Sum(isnull(hoursdone,0)),0),0)
else round(isnull(Sum(isnull(hoursdone,0)),0),0) end end as [Hours Done]

from timesheet
{where2}
group by EntityID) t 
on ACT.EntityID = t.EntityID
{where}
) Z","0","","1","LRA-FUSION","0","0","fusion"
"39765","cv_Acc_Debtors_man","","
SELECT DocID, [Doc. Type], [Doc. No.], LD.Value as [Division], 
CASE WHEN isnull(A.UseEC,0) = 1 then EC.AccountNum ELSE E.AccountNum END as [Account],
CASE WHEN isnull(A.UseEC,0) = 1 then EC.Contact ELSE E.Company END as [Client],
isnull(EH.Company,'') as [Holding Company],
A.ClientPo as [Customer Order Number], Project,Notes, 
Convert(varchar,Created,111) as [Created],Convert(varchar,[Doc. Date],111) as [Doc. Date],
[Status], U.Consultant,ExtSal.Value as [Ext. Consultant], Currency, [R.O.E.], 
dbo.fnFormatNumber([Total Ex. VAT]) as [Total Ex. VAT], 
dbo.fnFormatNumber([Total VAT]) as [Total VAT],
dbo.fnFormatNumber([Total Incl. VAT]) as [Total Incl. VAT],
dbo.fnFormatNumber([Est. Cost]) as [Est. Cost],[Description]
FROM 
(
	SELECT Convert(Varchar,DM.DocID) + '#' + DocType as [DocID], DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
	DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
	[ClientPO],P.ProjectID, P.ProjectName  as [Project],	isnull(DM.Memo,'') as Notes, 
	DateCreated as [Created],DateCompleted as [Doc. Date],DocStatus as [Status], DM.SalesRepID as [SalesRepID],DM.CreatedBy,
	DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1)) as [Total Ex. VAT], 
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * (([Total Incl. VAT] - [Total Ex. VAT])  / isnull(DM.ROE,1)) as [Total VAT], 
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT]  / isnull(DM.ROE,1))  as [Total Incl. VAT],
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))  as [Est. Cost],
	DM.Period, DM.BatchID,
	DM.Descr as [Description]
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
	             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
	             FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
	ON DM.DocID = DD.Docid
	LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
	ON DM.DocID = SD.DocID
	LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
	ON DM.ProjectID = P.ProjectID
		
	UNION ALL

	SELECT convert(varchar,DM.DocID) + '#Transfer##' + Convert(varchar,DD.LineID) as [DocID], 
	CASE WHEN isnull(DM.IsInterAccountTransfer,0) = 1 THEN 'Inter-Account Transfer' WHEN isnull(DM.IsInterLedgerTransfer,0) = 1 THEN 'Inter-Ledger Transfer' END as [Doc. Type],
	left('00000000', 8- len(DM.Docid)) + convert(varchar,DM.Docid) as [Doc. No.],
	DD.DivisionID as [DivisionID],	DD.EntityID, 0 as [UseEC], 
	DD.Notes as [ClientPO], null as [ProjectID],null as [Project], DM.TransNotes , DM.DateCreated as [Created],DD.AdjustDate as [Doc. Date],
	CASE WHEN isnull(DM.IsComplete,0) = 1 then 'Completed' else 'Open' END as [Status],
	DM.CreatedBy,DM.CreatedBy,
	isnull(DM.Currency,'') as [Currency],
	DM.ROE as [R.O.E.],
	(isnull(DD.Debit,0) - isnull(DD.Credit,0)) / isnull(DM.ROE,1) as [Total Ex. VAT],
	0 as [Total VAT],
	(isnull(DD.Debit,0) - isnull(DD.Credit,0)) / isnull(DM.ROE,1) as [Total Incl. VAT],
	0 as [Est. Cost],
	(SELECT top 1 AccPeriodID FROM ACCAccountingPeriod where DD.AdjustDate between StartDate and EndDate), null as [BatchId],
	'' as [Description]
	FROM LEDGER_ADJUST_MASTER DM
	LEFT JOIN LEDGER_ADJUST_DETAIL DD 
	ON DM.DocID = DD.DocID
	LEFT JOIN (SELECT EntityID, Company, Issupplier FROM Entity) E 
	ON DD.Entityid = E.Entityid
	WHERE (isnull(DM.IsInterAccountTransfer,0) = 1 OR isnull(DM.IsInterLedgerTransfer,0) = 1 )
	AND isnull(E.Issupplier,0) = 0
	AND isnull(DD.EntityID,0) <> 0
) A
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
	On A.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
	ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
	ON A.EntityID = E.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
	ON E.AlternateCompanyID = EH.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
	ON A.Entityid = EC.EntityContactID AND isnull(A.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
	ON E.SalesConsID = ExtSal.lookupid
{where}
ORDER BY A.DocID desc



","0","","1","LRA-FUSION","0","0","fusion"
"39766","cv_Acc_EmailLog","","SELECT * FROM (
	SELECT AccEmailLogID,LD.Value As [Division], convert(varchar, LogDate,111) + ' ' + convert(varchar,logdate,108) as [Date],
	DocType  as [Emailed Document], DocNo as [Doc. No.],
	case when isnull(DM.useec,0) = 0 then e.Company Else ec.Client end as [Sent To], isnull(Email,'') as [Address],
	 [Sent By],
	AttachmentCount as [Attachments],
	convert(varchar,round(EmailSize /1000,0)) + ' KB' as [Email Size]
	FROM AccEmailLog EL
	LEFT JOIN (SELECT DocID, DocType, DocNo, Entityid, UseEC, DivisionID  FROM DEBTOR_MASTER ) DM
	ON EL.DocID = DM.DocID
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E
	ON DM.Entityid = E.Entityid and isnull(DM.useec,0) = 0
	LEFT JOIN (SELECT Entitycontactid, isnull(firstname,'') + ' ' + isnull(surname,'') as [Client] FROM EntityContact) EC
	ON DM.Entityid = Ec.Entitycontactid  and isnull(DM.useec,0) = 1
	LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(surname,'') as [Sent By] from Users) U
	ON El.UserID = U.UserID
	LEFT JOIN Lookup LD 
	ON DM.DivisionID = LD.LookupID  
	Where DebtorOrCreditor = 'D'
	
	UNION ALL
	
	SELECT AccEmailLogID, LD.Value as [Division], CONVERT(varchar, LogDate,111) + ' ' + convert(varchar,logdate,108) as [Date],
	DocType  as [Emailed Document], DocNo as [Doc. No.],
	case when isnull(DM.useec,0) = 0 then e.Company Else ec.Client end as [Sent To], isnull(Email,'') as [Address],
	 [Sent By],
	AttachmentCount as [Attachments],
	convert(varchar,round(EmailSize /1000,0)) + ' KB' as [Email Size]
	FROM AccEmailLog EL
	LEFT JOIN (SELECT DocID, DocType, DocNo, Entityid, UseEC, DivisionID FROM CREDITOR_MASTER ) DM
	ON EL.DocID = DM.DocID
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E
	ON DM.Entityid = E.Entityid and isnull(DM.useec,0) = 0
	LEFT JOIN (SELECT Entitycontactid, isnull(firstname,'') + ' ' + isnull(surname,'') as [Client] FROM EntityContact) EC
	ON DM.Entityid = Ec.Entitycontactid  and isnull(DM.useec,0) = 1
	LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(surname,'') as [Sent By] from Users) U
	ON El.UserID = U.UserID
	LEFT JOIN Lookup LD 
	ON DM.DivisionID = LD.LookupID  
	Where DebtorOrCreditor = 'C'
	
	UNION ALL
	
	SELECT AccEmailLogID, '' as [Division], convert(varchar, LogDate,111) + ' ' + convert(varchar,logdate,108) as [Date],
	'Debtor Statement'  as [Emailed Document], null as [Doc. No.],
	ec.Client [Sent To], isnull(Email,'') as [Address],
	 [Sent By],
	AttachmentCount as [Attachments],
	convert(varchar,round(EmailSize /1000,0)) + ' KB' as [Email Size]
	FROM AccEmailLog EL
	LEFT JOIN (SELECT Entitycontactid, isnull(firstname,'') + ' ' + isnull(surname,'') as [Client] FROM EntityContact) EC
	ON EL.Docid = Ec.Entitycontactid  
	LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(surname,'') as [Sent By] from Users) U
	ON El.UserID = U.UserID
	Where DebtorOrCreditor = 'S'
)A

{where}
Order by [Date] desc","0","","1","LRA-FUSION","0","0","fusion"
"39767","CV_Acc_Report_GPVariance","","SELECT 
NewID(),Period, E.Company as [Client],e.AccountNum as [Acc No],
convert(varchar , cast(SUM(isnull(DocTotal,0)) - SUM(isnull(DocCost,0)) as  money) , 1) as [Act. GP],
convert(varchar , cast(Sum(isnull(ForeCasted,0)) as money) , 1) as [Forecasted GP],  
convert(varchar , cast( (SUM(isnull(DocTotal,0)) - SUM(isnull(DocCost,0))) -(Sum(isnull(ForeCasted,0)))   as money) , 1) as [Variance]
FROM 
(
	SELECT 
		DM.EntityID,
		isnull(DM.UseEc,0) as [UseEC], 
		ACP.Period, 
		case doctype when 'Credit Note' then (-1) * [DocTotal] else [DocTotal] end as [DocTotal],
		case doctype when 'Credit Note' then (-1) * [DocCost] else [DocCost] end as [DocCost],
		0 as [Forecasted] ,
		P.ProjectName
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT DocID, SUM(PriceEx * qty * ((100 - isnull(discperc,0))/100) ) as [DocTotal],Sum(isnull(costPriceEx,0) * Qty) as [DocCost] FROM DEBTOR_DETAIL GROUP By DocID) DD
	ON DM.DocID = DD.DocID
	LEFT JOIN (SELECT AccPeriodID, convert(varchar,datepart(yyyy,StartDate)) + '/' + convert(varchar,datepart(m,StartDate)) as [Period],Pnumber FROM AccAccountingPeriod )ACP
	ON DM.Period = ACP.AccPeriodID
	LEFT JOIN Projects P ON P.ProjectID = DM.ProjectID
	WHERE docStatus = 'Completed' AND DocType in ('Invoice', 'Credit Note')
	
	UNION ALL
	
	SELECT 
		AB.Entityid, 
		0 as [UseEc],  
		convert(varchar,datepart(yyyy,[BudDate])) + '/' + convert(varchar,datepart(m,[BudDate])) as [Period],
		0 as [docTotal], 
		sum(Qty * isnull(CostPriceEx,0)) as [DocCost],
		sum(UnitSellingPriceEx * qty) as [Forecasted],
		P.ProjectName
	FROM AccBudget AB
	LEFT JOIN Projects P ON P.ProjectID = AB.ProjectID 
	Group by AB.Entityid,convert(varchar,datepart(yyyy,[BudDate])) + '/' + convert(varchar,datepart(m,[BudDate])), P.ProjectName
) A
LEFT JOIN (SELECT EntityID, Company,AccountNum FROM Entity )E
ON A.EntityID = E.Entityid
{where}
Group By Period, E.Company,e.AccountNum
Order BY Period, Client","0","","1","LRA-FUSION","0","0","fusion"
"39768","CV_Acc_Report_SalesVariance","","SELECT 
NewID(),Period, E.Company as [Client],e.AccountNum as [Acc No],
convert(varchar , cast(SUM(isnull(DocTotal,0)) as  money) , 1) as [Sales Amount],
convert(varchar , cast(Sum(isnull(ForeCasted,0)) as money) , 1) as [Forecasted Sales],  
convert(varchar , cast( SUM(isnull(DocTotal,0)) - Sum(isnull(ForeCasted,0))  as money) , 1) as [Variance]
FROM 
(
	SELECT 
		DM.EntityID,
		isnull(DM.UseEc,0) as [UseEC], 
		ACP.Period, 
		case doctype when 'Credit Note' then (-1) * [DocTotal] else [DocTotal] end as [DocTotal],
		0 as [Forecasted] ,
		P.ProjectName
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT DocID, SUM(PriceEx * qty * ((100 - isnull(discperc,0))/100) ) as [DocTotal] FROM DEBTOR_DETAIL GROUP By DocID) DD
	ON DM.DocID = DD.DocID
	LEFT JOIN (SELECT AccPeriodID, convert(varchar,datepart(yyyy,StartDate)) + '/' + convert(varchar,datepart(m,StartDate)) as [Period],Pnumber FROM AccAccountingPeriod )ACP
	ON DM.Period = ACP.AccPeriodID
	LEFT JOIN Projects P ON P.ProjectID = DM.ProjectID
	WHERE docStatus = 'Completed' AND DocType in ('Invoice', 'Credit Note')

	UNION ALL

	SELECT 
		AB.Entityid, 
		0 as [UseEc],  
		convert(varchar,datepart(yyyy,[BudDate])) + '/' + convert(varchar,datepart(m,[BudDate])) as [Period],
		0 as [docTotal], 
		sum(UnitSellingPriceEx * qty) as [Forecasted],
		P.ProjectName
	FROM AccBudget AB
	LEFT JOIN Projects P ON P.ProjectID = AB.ProjectID
	Group by AB.Entityid,convert(varchar,datepart(yyyy,[BudDate])) + '/' + convert(varchar,datepart(m,[BudDate])), P.ProjectName
) A
LEFT JOIN (SELECT EntityID, Company,AccountNum FROM Entity )E
ON A.EntityID = E.Entityid
{where}
Group By Period, E.Company,e.AccountNum
Order BY Period, Client","0","","1","LRA-FUSION","0","0","fusion"
"39769","cv_Acc_Debtor_Statement_Trans","","SET NOCOUNT ON
SET ANSI_WARNINGS OFF

Declare @StartDate as datetime
Declare @EndDate as datetime
Declare @Entityid as bigint 
Declare @UseEC as bit
Declare @Divisionid as integer
Declare @Currency as varchar(10)


Set @StartDate =  '{startdate}'
Set @EndDate =  '{date}'
Set @Entityid = {entityid}
Set @UseEc = 0
Set @Divisionid = {divisionid} 
Set @Currency = '{currency}'



IF OBJECT_ID(N'tempdb..#StatTran', N'U') IS NOT NULL 
BEGIN
    DROP TABLE #StatTran;
END

CREATE TABLE #StatTran
(
[ID] int Identity(1,1),
[Doc. No.] varchar(50),
[Document] varchar(50),
[Doc. Date] datetime,
[Currency] Varchar(20),
[Total Incl. VAT]  float,
[Outstanding] float
)

INSERT INTO #StatTran([Doc. No.],[Document],[Doc. Date],[Currency],[Total Incl. VAT])
SELECT [Doc. No.],[Document],[Doc. Date],[Currency],sum([Total Incl. VAT])  FROM (
    --Debtor Docs
    SELECT 
    Case when DM.DateCompleted < @StartDate then '' ELSE  ltrim(isnull(DS.Prefix,'') + ' ' + convert(varchar,DM.DocNo)) END as [Doc. No.] ,
    Case when DM.DateCompleted < @StartDate then 'Opening Balance' ELSE Dm.DocType END as [Document],
    Case when DM.DateCompleted < @StartDate then @StartDate ELSE DM.DateCompleted END as [Doc. Date] ,
    DM.Currency,
    CASE When Doctype in ('Credit Note', 'Supplier Credit Note', 'Payment Receipt', 'Supplier Payment') Then -1 Else 1 End * (DD.TotalIncl / isnull(DM.ROE,1)) as [Total Incl. VAT]
    FROM DEBTOR_MASTER DM
    LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) E
    ON DM.entityID = E.EntityID
    LEFT JOIN (SELECT DivisionID, Prefix FROM AccDocumentSetup) DS
    ON DM.DivisionID = DS.DivisionID
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON DM.Projectid = P.ProjectID
    LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) )  as [TotalIncl] FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by DocID) DD
    ON DM.DocID = DD.DocID
    WHERE 
    DM.DocType in ('Invoice', 'Credit Note', 'Supplier Invoice', 'Supplier Credit Note', 'Payment Receipt', 'Supplier Payment')
    AND DM.DocStatus = 'Completed'
    AND (Dm.Entityid = @Entityid OR E.AlternateCompanyID = @EntityID)
    AND isnull(Dm.useEc,0) = @useEC
    AND isnull(DM.Currency,'') = @Currency
    AND (DM.DivisionID = @DivisionID OR @Divisionid = 0)
    AND DM.DateCompleted <= @EndDate

	UNION ALL
	
	--Settlement Discounts
    SELECT 
    Case when DM.DateCompleted < @StartDate then '' ELSE  ltrim(isnull(DS.Prefix,'') + ' ' + convert(varchar,DM.DocNo)) END as [Doc. No.] ,
    Case when DM.DateCompleted < @StartDate then 'Opening Balance' ELSE 'Settlement Discount' END as [Document],
    Case when DM.DateCompleted < @StartDate then @StartDate ELSE DM.DateCompleted END as [Doc. Date] ,
    DM.Currency,
    CASE When Doctype in ('Payment Receipt', 'Supplier Payment') Then -1 Else 1 End * (DP.Discount/ isnull(DM.ROE,1)) as [Total Incl. VAT]
    FROM DEBTOR_MASTER DM
    LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) E
    ON DM.entityID = E.EntityID
    LEFT JOIN (SELECT DivisionID, Prefix FROM AccDocumentSetup) DS
    ON DM.DivisionID = DS.DivisionID
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON DM.Projectid = P.ProjectID
    LEFT JOIN (SELECT sum(isnull(SettlementDiscount,0)) as [Discount], PaymentDocID FROM DEBTOR_PAYMENT Group By PaymentDocID HAVING sum(isnull(SettlementDiscount,0)) <> 0 ) DP
    ON DM.DocID = DP.PaymentDocID
    WHERE 
    DM.DocType in ('Payment Receipt', 'Supplier Payment')
    AND DM.DocStatus = 'Completed'
    AND (Dm.Entityid = @Entityid OR E.AlternateCompanyID = @EntityID)
    AND isnull(Dm.useEc,0) = @useEC
    AND isnull(DM.Currency,'') = @Currency
    AND (DM.DivisionID = @DivisionID OR @Divisionid = 0)
    AND DM.DateCompleted <= @EndDate
    AND isnull(DP.Discount,0) <> 0

    UNION ALL

    --Inter-Account Transfers
    SELECT 
    Case when LAD.AdjustDate < @StartDate then '' ELSE   convert(varchar,LAM.DocID) END as [Doc. No.] ,
    Case when LAD.AdjustDate < @StartDate then 'Opening Balance' ELSE 'Inter-Account Transfer' END as [Document],
    Case when LAD.AdjustDate < @StartDate then @StartDate ELSE LAD.AdjustDate END as [Doc. Date] ,      
    isnull(LAM.Currency,'') as [Currency],
    (isnull(Debit,0) - isnull(Credit,0)) / isnull(LAM.ROE,1) as [Total Incl]
    FROM LEDGER_ADJUST_MASTER LAM
    LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD 
    ON LAM.DocID= LAD.DocID
    LEFT JOIN (SELECT EntityID, Company, IsSupplier, EntityCategoryID, SalesConsID, AlternateCompanyID FROM Entity) E
    ON LAD.EntityID = E.EntityID
    WHERE 
    isnull(LAM.IsComplete,0) = 1
    AND (LAD.Entityid = @Entityid OR E.AlternateCompanyID = @EntityID)
    AND isnull(LAM.Currency,'')  = @Currency
    AND (LAD.DivisionID = @DivisionID OR @Divisionid = 0)
    AND LAD.AdjustDate <= @EndDate

    
    UNION ALL
    
    SELECT '', 'Opening Balance', DateCreated,DM.Currency,
    CASE WHEN isnull(useEc,0) = 0 and isnull(E.Issupplier,0) = 0 then -1 
         WHEN isnull(useEc,0) = 1 and isnull(EC.Issupplier,0) = 0 then -1 
         WHEN isnull(useEc,0) = 0 and isnull(E.Issupplier,0) = 1 then 1 
    END *
    cast(isnull(AmtCurrent,0) + isnull(amt30,0) + isnull(amt60,0) + isnull(amt90,0) + isnull(amt120,0) as money) as [Total Incl] 
    FROM AccOpeningBalance DM
    LEFT JOIN (SELECT EntityID, IsSupplier, AlternateCompanyID FROM Entity) E
    ON DM.Entityid = E.Entityid AND isnull(DM.useEC,0) = 0 
    LEFT JOIN (SELECT EntityContactID, IsSupplier FROM EntityContact) EC
    ON DM.Entityid = EC.EntityContactid AND isnull(DM.useEC,0) = 1
    WHERE
    (DM.Entityid = @Entityid OR E.AlternateCompanyID= @EntityID)
    AND isnull(Dm.useEc,0) = @useEC
    AND isnull(DM.Currency,'R') = @Currency
    AND (DM.DivisionID = @DivisionID OR @Divisionid = 0)
    AND DM.DateCreated <= @EndDate
) A
Group by [Doc. No.], [Document], [Doc. Date], [Currency]
ORder by  [Doc. Date]



Update #StatTran
SET Outstanding = isnull(ST3.Outstanding,0)
FROM #StatTran ST4
LEFT JOIN (SELECT ST1.ID, sum(isnull(ST2.[Total Incl. VAT],0)) as [Outstanding]
		FROM #StatTran ST1
		LEFT JOIN #StatTran ST2 ON ST2.[ID] <= ST1.[ID] --ON ST2.[Doc. Date] <= ST1.[Doc. Date]
		Group By ST1.ID
		) ST3
ON ST4.ID = ST3.ID

Update #StatTran SET Outstanding = [Total Incl. VAT] where Document = 'Opening Balance'


--Final report:
SELECT 
[Doc. No.], 
[Document], 
convert(varchar,[Doc. Date],103) as [Doc. Date], 
[Currency]+ ' ' + dbo.fnFormatNumber((isnull([Total Incl. VAT],0)))  as [Total Incl. VAT],
[Currency]+ ' ' + dbo.fnFormatNumber((isnull([Outstanding],0)))  as [Outstanding]
FROM #StatTran
ORDER BY convert(datetime,[Doc. Date])

SET ANSI_WARNINGS ON
SET NOCOUNT OFF","0","","1","LRA-FUSION","0","0","fusion"
"39770","cv_Acc_Creditor_Statement_Trans","","Declare @StartDate as datetime
Declare @EndDate as datetime
Declare @Entityid as bigint 
Declare @UseEC as bit
Declare @Divisionid as integer
Declare @Currency as varchar(10)
Declare @Period as integer

Set @StartDate = '{startdate}'
Set @EndDate = '{date}'
Set @Entityid = {entityid}
Set @UseEc = {useec}
Set @Divisionid ={divisionid}
Set @Currency = '{currency}'
Set @Period = {period}

SELECT 
[Doc. No.], [Document], convert(varchar,[Doc. Date],103) as [Doc. Date], [Currency]+ ' ' + dbo.fnFormatNumber(sum(isnull([Total Incl. VAT],0)))  as [Total Incl. VAT]
FROM (	
	--Debtor Docs
	SELECT 
	Case when DM.DateCompleted < @StartDate then '' ELSE  ltrim(isnull(DS.Prefix,'') + ' ' + convert(varchar,DM.DocNo)) END as [Doc. No.] ,
	Case when DM.DateCompleted < @StartDate then 'Opening Balance' ELSE Dm.DocType END as [Document],
	Case when DM.DateCompleted < @StartDate then @StartDate ELSE DM.DateCompleted END as [Doc. Date] ,
	DM.Currency,
	CASE When Doctype in ('Credit Note', 'Supplier Credit Note', 'Payment Receipt', 'Supplier Payment') Then -1 Else 1 End * ((DD.TotalIncl ) / CASE WHEN DocType = 'Supplier Payment' THEN isnull(DM.ROE,1) ELSE 1 END) as [Total Incl. VAT]
	FROM CREDITOR_MASTER DM
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) E
	ON DM.entityID = E.EntityID
	LEFT JOIN (SELECT DivisionID, Prefix FROM AccDocumentSetup) DS
	ON DM.DivisionID = DS.DivisionID
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON DM.Projectid = P.ProjectID
	LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) )  as [TotalIncl] FROM CREDITOR_DETAIL  Group by DocID) DD
	ON DM.DocID = DD.DocID
	WHERE 
	DM.DocType in ('Invoice', 'Credit Note', 'Supplier Invoice', 'Supplier Credit Note', 'Payment Receipt', 'Supplier Payment')
	AND DM.DocStatus = 'Completed'
	AND (Dm.Entityid = @Entityid OR E.AlternateCompanyID = @EntityID)
	AND isnull(Dm.useEc,0) = @useEC
	AND isnull(DM.Currency,'') = @Currency
	AND (DM.DivisionID = @DivisionID OR @Divisionid = 0)
	AND DM.DateCompleted <= @EndDate
	AND DM.Period <= @Period

	UNION ALL

	--Inter-Account Transfers
	SELECT 
	Case when LAD.AdjustDate < @StartDate then '' ELSE   convert(varchar,LAM.DocID) END as [Doc. No.] ,
	Case when LAD.AdjustDate < @StartDate then 'Opening Balance' ELSE 'Inter-Account Transfer' END as [Document],
	Case when LAD.AdjustDate < @StartDate then @StartDate ELSE LAD.AdjustDate END as [Doc. Date] ,		
	isnull(LAM.Currency,'') as [Currency],
	(isnull(Credit,0) - isnull(Debit,0)) / isnull(LAM.ROE,1) as [Total Incl]
	FROM LEDGER_ADJUST_MASTER LAM
	LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD 
	ON LAM.DocID= LAD.DocID
	LEFT JOIN (SELECT EntityID, Company, IsSupplier, EntityCategoryID, SalesConsID, AlternateCompanyID FROM Entity) E
	ON LAD.EntityID = E.EntityID
	WHERE 
	isnull(LAM.IsComplete,0) = 1
	AND (LAD.Entityid = @Entityid OR E.AlternateCompanyID = @EntityID)
	AND isnull(LAM.Currency,'')  = @Currency
	AND (LAD.DivisionID = @DivisionID OR @Divisionid = 0)
	AND LAD.AdjustDate <= @EndDate
	AND isnull((SELECT top 1 AccPeriodID FROM ACCAccountingPeriod where LAD.AdjustDate between StartDate and EndDate),0) <= @Period

	
	UNION ALL
	
	SELECT '', 'Opening Balance', DateCreated,DM.Currency,
	cast(isnull(AmtCurrent,0) + isnull(amt30,0) + isnull(amt60,0) + isnull(amt90,0) + isnull(amt120,0) as money) as [Total Incl] 
	FROM AccOpeningBalance DM
	LEFT JOIN (SELECT EntityID, IsSupplier, AlternateCompanyID FROM Entity) E
	ON DM.Entityid = E.Entityid AND isnull(DM.useEC,0) = 0 
	LEFT JOIN (SELECT EntityContactID, IsSupplier FROM EntityContact) EC
	ON DM.Entityid = EC.EntityContactid AND isnull(DM.useEC,0) = 1
	WHERE
	(DM.Entityid = @Entityid OR E.AlternateCompanyID= @EntityID)
	AND isnull(Dm.useEc,0) = @useEC
	AND isnull(DM.Currency,'') = @Currency
	AND (DM.DivisionID = @DivisionID OR @Divisionid = 0)
	AND DM.DateCreated <= @EndDate

	) A	

Group by [Doc. No.], [Document], [Doc. Date], [Currency]

ORDER BY convert(datetime,[Doc. Date],103)
","0","","1","LRA-FUSION","0","0","fusion"
"39771","CR_Frequency","","Select count([MonthPurchased]) from
(
Select distinct month(DateCompleted) as [MonthPurchased] from debtor_Master 
where (datecompleted between dateadd(mm,-12,getdate()) and getdate()) and DocType like 'Invoice' and DocStatus like 'Completed' and entityid = <%eid%>
) a","0","","1","LRA-FUSION","0","0","fusion"
"39772","CR_Monetory","","SELECT 
	Sum(round(round(TotalEx,3),2)) as [TotalEx]/*, 
	Sum(round(round(TotalIncl,3),2)) as [TotalIncl] */
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT DocID , sum(qty * priceEx * ((100 - isnull(discPerc,0))/100)) as [Totalex] /*, sum(totalIncl * ((100 - isnull(discPerc,0))/100)) as [TotalIncl]*/ FROM DEBTOR_DETAIL Group by DocID) DD
ON DM.DocID = DD.DocID
WHERE Doctype = 'Invoice' and Docstatus = 'Completed' and Entityid = <%eid%>
and (datecompleted between dateadd(mm,-12,getdate()) and getdate())","0","","1","LRA-FUSION","0","0","fusion"
"39773","CR_Recency","","Select (12 - datediff(mm,[LastPurchase],getdate())) as  [LastRating]
from
(
Select max(Datecompleted) as [LastPurchase] from debtor_Master 
where (datecompleted between dateadd(mm,-12,getdate()) and getdate()) and DocType like 'Invoice' and DocStatus like 'Completed' 
and entityid = <%eid%>
) a","0","","1","LRA-FUSION","0","0","fusion"
"39774","cv_Acc_Freight_CalcFrom","","SELECT * FROM (
SELECT Distinct LineGroup + ' Total' as [Type] FROM SHIPPING_DETAIL 
WHERE ShippingDocID = {shippingdocid}
UNION ALL
SELECT 'Total Price Ex. VAT'
UNION ALL
SELECT 'No. Of Packages'
UNION ALL
SELECT 'Total Weight'
UNION ALL
SELECT 'Volumetric'
)A Order by Type","0","","1","LRA-FUSION","0","0","fusion"
"39775","cv_Acc_Freight_Lines_Old","","
SET NOCOUNT ON

DECLARE @ShippingDocID as BigInt
DECLARE @CurrentLineID as BigInt
DECLARE @LastLineID as BigInt
Set @ShippingDocID = {shippingdocid}
Set @CurrentLineID = 0
Set @LastLineID = (SELECT max(ShippingLineID) FROM SHIPPING_DETAIL where ShippingDocID = @ShippingDocID)

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[TempShipping]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
CREATE TABLE [dbo].[TempShipping] (
    ShippingDocID bigint,
    ShippingLineID bigint,
    LineGroup   varchar(255),
        LineDescription varchar(255),
        MinValue money,
        Units float,
    UnitMultiplier float,
        Currency varchar(50),
        Rate money,
    RateMultiplier float,
        ROE money,
        VATRate float,
        Total money
) ON [PRIMARY]


DELETE FROM TempShipping WHERE ShippingDocID = @ShippingDocID
INSERT INTO TempShipping

--Insert document header totals
SELECT @ShippingDocID,0,'HeaderInfo',  'Total Price Ex.',0,1 as [Units],1,'R',(BaseCostPriceEx * StockQty) as [Rate],1,1,0,(BaseCostPriceEx * StockQty) as [Total]
FROM SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID
UNION ALL
SELECT @ShippingDocID,0,'HeaderInfo',  'No. Of Packages',0, NoOfPackages as [Units],1,'R',1 as [Rate],1,1,0, NoOfPackages as [Total]
FROM SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID
UNION ALL
SELECT @ShippingDocID,0,'HeaderInfo', 'Total Weight',0, (Weight * StockQty)  as [Units],1,'R',1 as [Rate],1,1,0, (Weight * StockQty) as [Total]
FROM SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID
UNION ALL
SELECT @ShippingDocID,0,'HeaderInfo', 'Volumetric',0, (Length*Width*Height*NoOfPackages) / 0.006  as [Units],1,'R',1 as [Rate],1,1,0, (Length*Width*Height*NoOfPackages)/ 0.006 as [Total]
FROM SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID



WHILE @CurrentLineID < @LastLineID BEGIN
    Set @CurrentLineID = (SELECT min(ShippingLineID) FROM SHIPPING_DETAIL where ShippingDocID = @ShippingDocID AND ShippingLineID > @CurrentLineID )
    
   INSERT INTO TempShipping
    
    SELECT @ShippingDocID,SD.ShippingLineID, SD.LineGroup, SD.LineDescription, SD.MinValue,isnull(TSU.Units, SD.Units) as [Unit],
    Case when Isnull(usePercUnit,0) = 0 Then 1 ELSE isnull(SD.Units,0) / 100 END as [UnitMultplier],
    SD.Currency,
        isnull((Select Rate From SHIPPING_DETAIL_RATE where ShippingLineID = SD.ShippingLineID AND crossovervalue = (SELECT Max(CrossoverValue) FROM SHIPPING_DETAIL_RATE where ShippingLineID = SD.ShippingLineID and isnull(TSU.Units, SD.Units) >= CrossoverValue  )),
        isnull(TSR.Rate, SD.Rate)) as [Rate],
    Case when Isnull(usePercRate,0) = 0 Then 1 ELSE isnull(SD.Rate,0) / 100 END as [RateMultplier],
    isnull(SC.ROE,1), SD.VATRate,
        (isnull(TSU.Units, SD.Units)) * 
        (Case when Isnull(usePercUnit,0) = 0 Then 1 ELSE isnull(TSU.Units, SD.Units) / 100 END) *
        isnull((Select Rate From SHIPPING_DETAIL_RATE where ShippingLineID = SD.ShippingLineID AND crossovervalue = (SELECT Max(CrossoverValue) FROM SHIPPING_DETAIL_RATE where ShippingLineID = SD.ShippingLineID and isnull(TSU.Units, SD.Units) >= CrossoverValue  )),isnull(TSR.Rate, SD.Rate)) *
        (Case when Isnull(usePercRate,0) = 0 Then 1 ELSE isnull(SD.Rate,0) / 100 END) *
        isnull(SC.ROE,1) as [Total]
    FROM SHIPPING_DETAIL SD
    LEFT JOIN (SELECT TSi.ShippingDocID,SDLi.LineDescription,Sum(Total) as [Units] FROM TempShipping TSi
        LEFT JOIN (SELECT * FROM SHIPPING_DETAIL_LINK where SumOf = 'Unit' AND ShippingDocID = @ShippingdocID) SDLi
        ON TSi.LineDescription = SDLi.LinkedTo 
        GROUP BY SDLi.LineDescription,TSi.ShippingDocID) TSU
    ON SD.LineDescription = TSU.LineDescription and SD.ShippingDocID = TSU.ShippingDocID
    LEFT JOIN (SELECT TSi.ShippingDocID, SDLi.LineDescription,Sum(Total) as [Rate] FROM TempShipping TSi
        LEFT JOIN (SELECT * FROM SHIPPING_DETAIL_LINK where SumOf = 'Rate' AND ShippingDocID = @ShippingdocID) SDLi
        ON TSi.LineDescription = SDLi.LinkedTo 
        GROUP BY TSi.ShippingDocID,SDLi.LineDescription) TSR
    ON SD.LineDescription = TSR.LineDescription and SD.ShippingDocID = TSR.ShippingDocID
    LEFT JOIN Shipping_Currency SC
    ON SD.ShippingDocID = SC.ShippingDocID AND SD.Currency = SC.Currency
    WHERE SD.ShippingLineID = @CurrentLineID
END

SET NOCOUNT OFF




","0","","1","LRA-FUSION","0","0","fusion"
"39776","cv_Acc_Print_Detailed_LappKabel_Quote","","Select DM.docID,E.company as [<%company%>],att as [<%att%>],e.fax as [<%fax%>],e.tel as [<%tel%>],e.email as [<%email%>],
docno as [<%quotenum%>],Datecompleted as [<%date%>],memo as [<%quotenote%>],
null as [<%intcemail%>],null as [<%intcontact%>],null as [<%extcontact%>],
null as [<%copper%>],isnull(ER.Currency,'') + ' ' + Convert(Varchar,Cast(isnull(Rate,0) as SmallMoney),1) as [<%ROE1%>],null as [<%ROE2%>],null as [<%quotevalid%>],
DM.Currency + ' ' + convert(varchar, cast(DD.TotalEx as money),1) as [<totalex>],
 DM.Currency + ' ' + convert(varchar, cast(Cast(DD.TotalIncl / case isnull(DD.TotalEx,0) when 0 then 1 else DD.TotalEx end as float) * (DD.TotalEx - round(DD.Discount,2)) as money),1) as [<totalincl>]
from Debtor_Master DM
LEFT JOIN
(Select EntityID,Currency, company, (Select top 1 isnull(Firstname,'') + ' ' + isnull(Surname,'') from EntityContact Ec Where EC.EntityID = EntityID)  as [att], fax, switchboard as tel, email from Entity) E
on E.EntityID = DM.EntityID
Left join EntityContact EC on E.EntityID = EC.EntityID
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] , sum(TotalIncl) as [TotalIncl], DocID FROM DEBTOR_DETAIL Group By DocID) DD
ON DM.DocID = DD.DocID
LEFT JOIN (select exchangerateid, currency,Rate from exchangerates ) ER on ER.exchangerateid = E.Currency
{docid}","0","","1","LRA-FUSION","0","0","fusion"
"39777","cv_Appt_Contacts","","select ec.entitycontactid, isnull(firstname,'') + ' ' + isnull(surname,'') as [contact], isnull(ac.EntityContactID,0) as [Assigned]
from entitycontact ec
left join appointmentcontacts ac
on ac.entitycontactid = ec.entitycontactid and ac.ApptID = <%apptid%>
where ec.entityID = <%eid%> 

ORDER BY firstname,Surname
","0","","1","LRA-FUSION","0","0","fusion"
"39778","cv_Acc_Freight_Lines_Populate","","--Retrieve data from TempShipping table and order appropriately
DECLARE @ShippingDocID as bigint
SET @ShippingdocID = {shippingdocid}

SELECT
Convert(varchar,Line) + '##' + convert(varchar(50),newID()),
[Description], [Min Value], [Units], [Rate], [R.O.E.], [Total]
 FROM (
    SELECT  Upper(LineGroup) as [Description],'' as [Min Value], '' as [Units], ''as [Rate], '' as [R.O.E.], '' as [Total],
    min(ShippingLineID) as [GroupID],0 as [Rank], -10 as [Line]
    FROM TempShipping
    where ShippingdocID = @ShippingdocID
    Group by LineGroup
    
    UNION ALL
    
    SELECT 'DESCRIPTION' as  [Description],'MIN VALUE' as [Min Value], 'UNITS' as [Units], 'RATE' as [Rate], 'R.O.E' as [R.O.E.], 'TOTAL' as [Total],
    min(ShippingLineID) as [GroupID],1 as [Rank], -9 as [Line]
    FROM TempShipping
    where ShippingdocID = @ShippingdocID
    Group by LineGroup
    
    UNION ALL
    
    SELECT LineDescription,convert(varchar,isnull(minvalue,0),1),convert(varchar,Units),Currency + ' '+ convert(varchar,Rate,1),convert(varchar,cast(ROE as money)),convert(varchar,Total,1),
    TT.GroupID,2 as [Rank], ShippingLineID
    FROM TempShipping T
    LEFT JOIN (SELECT Min(ShippingLineID) as GroupID, LineGroup FROM TempShipping group by LineGroup) TT
    ON T.LineGroup = TT.LineGroup
    where T.ShippingdocID = @ShippingdocID
    
    UNION ALL
    
    SELECT  'VAT','','','','',convert(varchar,round(round(cast(sum(isnull(Total,0) * (isnull(VatRate,0)/100)) as money),3),2),1),
    min(ShippingLineID),3 as [Rank], 999999999999
    FROM TempShipping
    WHERE isnull(VATRate,0) <> 0
    Group by LineGroup  

    UNION ALL

    SELECT  '','','','','SUB-TOTAL:',convert(varchar,sum(isnull(Total,0)),1),
    min(ShippingLineID),4 as [Rank], 999999999999
    FROM TempShipping
    where ShippingdocID = @ShippingdocID
    Group by LineGroup
    )A
WHERE A.GroupID <> 0
ORDER BY GroupID,Rank,Line

","0","","1","LRA-FUSION","0","0","fusion"
"39779","qf_accstockfind_CostEstimates","","select top 500 
convert(varchar,STK.Stockid) + '##' + convert(varchar,C.LinkLookupID),
[Stock Type],ll.Value as [Sub Stock Type], STK.StockCode as [Code], STK.StockDescription as [Description],
/*stk.sellingpriceex as [Selling Price Excl],*/isnull(qty,0) as [In Container],C.Value as [Container],
LJ.Value as [GL Category], STK.Barcode

from AccStock STK
left join (select lookupid, value as [Stock Type] from lookup) l on l.lookupid = STK.stocktype
left join (select linklookupid,linkedto, value from linklookup) ll on ll.linklookupid = STK.subtypeid
Cross JOIN (SELECT LinkLookupID, Value FROM LinkLookup where Class like 'StockContainer') C
LEFT JOIN (SELECT StockID, round(Sum(qty * Ratio),4) as [Qty],ContainerID FROM ACCStockControl Group by StockID,Containerid) SC
ON STK.StockID = Sc.StockID and C.LinkLookupID = SC.ContainerID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class like 'JournalType') LJ
ON STK.JournalID = LJ.lookupid
where 
(isnull(stk.isHidden,0) =0) AND
((STK.Barcode like '%<%barcode%>%') OR (STK.StockCode like '%<%stockcode%>%') OR (STK.StockDescription Like '%<%stockdescription%>%')) <%and%> /*<%sType%>*/

","0","","1","LRA-FUSION","0","0","fusion"
"39780","cv_EntityDisc_Exp","","select distinct entityID,Company,{colsel} from
(
Select Distinct entityID, Company, {cols}
From (
Select e.entityID,e.Company,l.value as [sType],isnull(ed.discount,0) as [disc]
from lookup l 
left join entityDiscount ed on ed.StockTypeID = l.lookupid
left join entity e on e.entityid = ed.entityid
where l.class like 'StockType'
) X group by company, entityID
) z
where entityID is not null

","0","","1","LRA-FUSION","0","0","fusion"
"39781","cv_Acc_Manufacture_ProdAs","","SELECT DISTINCT * FROM (
SELECT L.LookupID, L.Value FROM AccStock STK
LEFT JOIN Lookup L On STK.SoldBy = L.LookupID
Where StockID = {stockid}

UNION ALL

SELECT L.LookupID, L.Value FROM AccStock_ManufProdType MPD
LEFT JOIN Lookup L On MPD.Sellingunit = L.LookupID
Where StockID = {stockid}
)A
ORDER BY A.Value","0","","1","LRA-FUSION","0","0","fusion"
"39782","SharedEmailPath","","C:\Documents and Settings\arnos.FUSIONSOFTWARE.000\Desktop","0","","1","LRA-FUSION","0","0","fusion"
"39783","cv_JobMan","","select distinct 
    projects.projectid
    ,isnull(ProjectNum,projects.projectid) as [Job No.]
    ,left('00000000', 8- len(CASE WHEN projects.FromDoc = 'Quote' then FromDocID else [Sales Order Number] end)) + convert(varchar,CASE WHEN projects.FromDoc = 'Quote' then FromDocID else [Sales Order Number] end) as [Sales Order Number]
    ,e.company as ""Holding Company""
    ,ea.company as ""Company""
    ,projects.projectname as ""Job Name""
    ,/*p.projectstate*/ ls.value as [State]
    ,l.value as [Job Type]
    --,convert(varchar,PDS.[Start Date], 111) as [Start Date]
    --,convert(varchar,PDE.[End Date],111) as [End Date]
    ,convert(varchar,projects.dateadded,111) as ""Date Created""
    ,CONVERT(VARCHAR,projects.ReleaseDate, 111) as [Date Released]
    ,CONVERT(VARCHAR,projects.DateManufactured, 111) as [Date Manufactured]
    ,CONVERT(VARCHAR,projects.CustomerDueDate, 111) as [Due Date]
    ,isnull( [NoAppts], 0 ) as [No. of Appointments]
    ,ClientPO as [Client Order Number]
    ,CASE ISNULL(isComplete,0) WHEN 0 Then 'Open' ELSE 
'Complete' END as [Status],
        dbo.jobentitylist(projects.projectID) AS [Contact],
        dbo.jobtechlist(projects.projectID) AS [Technician],
CONVERT(VARCHAR,JP.[Date Modified],111) as [Date Modified],
JP.[Modifeieb by] as [Modified by]


from projects
left join entitycontact on entitycontact.entitycontactid = projects.entitycontactid
left join projectstate p on p.projectstateid = projects.projectstateid
left join entity e on e.entityid = projects.entityid
LEFT JOIN Entity EA ON EA.EntityID = Projects.AddEntityID
left join modules m on m.projectid = projects.projectid
left join timesheet t on t.moduleid = m.moduleid
Left join lookup l on l.lookupid = projects.ProjectTypeID
left join (SELECT ProjectID, Min(ProjDate) as [Start Date] FROM ProjectDates group by ProjectID) PDS
ON Projects.ProjectID  = PDS.ProjectID
left join (SELECT ProjectID, Max(ProjDate) as [End Date] FROM ProjectDates group by ProjectID) PDE
ON Projects.ProjectID  = PDE.ProjectID
Left Join lookup ls on ls.lookupid = projects.ProjectStateID
LEFT JOIN (SELECT Count(AppointmentID) as [NoAppts],ProjectID FROM Appointment where ProjectID is not null Group by ProjectID) A 
ON Projects.ProjectID = A.ProjectID
left join job_stock js on js.ProjectID = Projects.ProjectID
left join jobtechnician jt on jt.ProjectID = Projects.ProjectID
LEFT JOIN (SELECT DocID, DocNo as [Sales Order Number] FROM Debtor_Master WHERE DocType LIKE 'Sales Order') DM ON DM.DocID = projects.FromDocID
Left Join (Select Top 1 PM.[DateModified] as [Date Modified],isnull(US.FirstName,'') + ' ' + isnull(Surname,'') as [Modifeieb by],PM.[ProjectID] as PID From ProjectModified PM Left Join USers US on US.UserID =PM.ModifiedBy Order by PM.[DateModified] desc ) JP on JP.PID= Projects.ProjectID

{where}
order by projects.projectname","0","","1","LRA-FUSION","0","0","fusion"
"39784","cv_job_stock_lines","","declare @ProjectID as int
declare @isAdd	as int
set @ProjectID = {pid}
Set @isAdd = {isadd}

SELECT LineID, [Group],Project, [Stock Code], [Description], [Comments], [Supplier], Qty, Discount, [Cost Ex.], [Price Ex.], [Price Incl.],[Total Incl.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.],
	dbo.fnFormatNumber(cast(PriceEx as money) * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1))) as [Total Incl.],
	Rank, -1000 as [Rank2]
	FROM Job_Stock  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND ced.ProjectID =  @ProjectID
	AND isnull(ced.IsAdditional,0) = @isAdd

	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.],
	dbo.fnFormatNumber(cast(PriceEx as money) * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1))) as [Total Incl.],
	--convert(varchar,cast(TotalIncl as money),1) as [Total Incl.], 
	ISNULL((SELECT Top 1 Rank From Job_Stock Where LineID = CED.ComponentOfLineID),1) ,Rank as [Rank2]
	FROM job_stock CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND ced.ProjectID =  @ProjectID
	AND isnull(ced.IsAdditional,0) = @isAdd

	) A
{where}
ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"39785","cv_Job_Contacts","","/*select ec.entitycontactid, isnull(firstname,'') + ' ' + isnull(surname,'') as [contact], isnull(pc.EntityContactID,0) as [Assigned]
from entitycontact ec
left join projContacts pc
on pc.entitycontactid = ec.entitycontactid and pc.ProjectID = <%pid%>
where ec.entityID = <%eid%> 
*/

--cv_job_Contacts

SELECT
	EC.EntityContactID,
	ISNULL(EC.FirstName, '') + ' ' + ISNULL(EC.Surname, '') as [contact],
	ISNULL((SELECT Top 1 EntityContactID FROM projContacts WHERE EntityContactID = EC.EntityContactID
		AND ProjectID = <%pid%>
		/*{and}*/),0) as Assigned
FROM EntityContact EC 
WHERE EC.EntityID = <%eid%>","0","","1","LRA-FUSION","0","0","fusion"
"39786","cv_Acc_Print_Manufacture","","DECLARE @DocID as bigint
DECLARE @OutputID as bigint
Set @DocID = {docid}
SET @OutputID = {outputid}

SELECT StockDescription as [Material], StockCode as [Code], convert(varchar,cast(Qty as money),1) as [Qty], Unit, '' as [Material Batch No.], [Meter / Drum], '' as [Qty Used]
FROM 
(
	SELECT StockDescription, StockCode, Qty, Unit, '' as [Meter / Drum], Rank
	FROM AccManufacture_Detail MD
	WHERE MD.DocID = @DocID
	and MD.IsWasted = 0
	and MD.OutPutID = @OutputID
	
	UNION ALL
	
	SELECT distinct '', 'TOTAL', sum(Qty),null, 'TOTAL', 999999999
	FROM AccManufacture_Detail MD
	WHERE MD.DocID = @DocID
	and MD.IsWasted = 0
	--and MD.Unit = (SELECT Top 1 Unit FROM AccManufacture_Detail WHERE DocID = @DocID) --Assumes users only want to see totals in one UOM, and for the item specified first
	and MD.OutPutID = @OutputID
	--group by md.unit
)A
ORDER BY Rank



","0","","1","LRA-FUSION","0","0","fusion"
"39787","cv_Acc_Print_Manufacture_Consolidated","","DECLARE @DocID as bigint
Set @DocID = {docid}

SELECT StockDescription as [Material], StockCode as [Code], convert(varchar,cast(Qty as money),1) as [Qty], Unit, '' as [Material Batch No.], [Meter / Drum], '' as [Qty Used]
FROM 
(
	SELECT StockDescription, StockCode, MD.Qty * M.Qty as [Qty], Unit, '' as [Meter / Drum], Rank
	FROM AccManufacture_Detail MD
	LEFT JOIN (SELECT DocID, Qty FROM AccManuFacture) M
	ON MD.DocID = M.DocID	
	WHERE MD.DocID = @DocID
	and MD.IsWasted = 0
	
	UNION ALL
	
	SELECT '', 'TOTAL', sum(MD.Qty * M.Qty),Md.UNIT, 'TOTAL', 999999999
	FROM AccManufacture_Detail MD
	LEFT JOIN (SELECT DocID, Qty FROM AccManuFacture) M
	ON MD.DocID = M.DocID
	WHERE MD.DocID = @DocID
	and MD.IsWasted = 0
	AND md.Unit = (SELECT Top 1 Unit FROM AccManufacture_Detail where DocID = @DocID)
	Group by MD.Unit
)A
ORDER BY Rank

","0","","1","LRA-FUSION","0","0","fusion"
"39788","cv_Pastel_DbName","","FSTest","0","","1","LRA-FUSION","0","0","fusion"
"39789","cv_Pastel_Server","","FILESERVER","0","","1","LRA-FUSION","0","0","fusion"
"39790","cv_Pastel_Stock","","
select StoreCode,ItemCode,

(QtyBuyLast + QtyAdjustLast - QtySellLast)
+

(qtyBuyThis01+qtyBuyThis02+qtyBuyThis03+qtyBuyThis04+
qtyBuyThis05+qtyBuyThis06+qtyBuyThis07+qtyBuyThis08+
qtyBuyThis09+qtyBuyThis10+qtyBuyThis11+qtyBuyThis12+
qtyBuyThis13)
+

(QtyAdjustThis01+QtyAdjustThis02+QtyAdjustThis03+QtyAdjustThis04+
QtyAdjustThis05+QtyAdjustThis06+QtyAdjustThis07+QtyAdjustThis08+
QtyAdjustThis09+QtyAdjustThis10+QtyAdjustThis11+QtyAdjustThis12+
QtyAdjustThis13)
-

(qtySellThis01+qtySellThis02+qtySellThis03+qtySellThis04+
qtySellThis05+qtySellThis06+qtySellThis07+qtySellThis08+
qtySellThis09+qtySellThis10+qtySellThis11+qtySellThis12+
qtySellThis13) as ""OnHand""

from ""MultiStoreTrn""
where StoreCode <> ''



","0","","1","LRA-FUSION","0","0","fusion"
"39791","cv_Acc_Cost_Estimate_Details_Lifo","","
declare @DocID as int
set @DocID = {docid}

SELECT LineID, [Group],Project, [Stock Code], [Description], [Comments],[Freight], [Supplier], Qty, Discount, ' ' as [Cost Ex.], [Price Ex.], [Price Incl.],[Total Incl.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments, LS.Value as [Freight], Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (Tax /100 +1) ) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * (Tax /100 +1) * Qty ) as [Total Incl.],
	Rank, -1000 as [Rank2]
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	Left join (SELECT ShippingDocID, ShippingTypeID FROM Shipping_Master) SM
	ON CED.ShippingDocID = SM.ShippingDocID
	LEFT JOIN Lookup LS on SM.ShippingTypeID = LS.LookupID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	
	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,LS.Value as [Freight],Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (Tax /100 +1) ) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * Qty * (Tax/100 + 1) ) as [Total Incl.], 
	(SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2]
	FROM Cost_Estimate_Detail CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	Left join (SELECT ShippingDocID, ShippingTypeID FROM Shipping_Master) SM
	ON CED.ShippingDocID = SM.ShippingDocID
	LEFT JOIN Lookup LS on SM.ShippingTypeID = LS.LookupID
	where isnull(ComponentOfLineID,0)  > 0
	AND DocID =  @DocID
	) A
ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"39792","cv_Activity_List_Setup","","select top 0
  ActivityID, Users.Username as 'Added By',/*div.value as Division,*/ E.Company,
 case when isnull(dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Surname,EntityContact.FirstName), '') = '' then 'No Contact Selected' else  
 dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Surname,EntityContact.FirstName)end
 as 'Contact',atype.value as 'Action Type', us.Username as 'Assigned To',
 Convert(Varchar,Activity.DateAdded,111) as 'Date Added',Convert(Varchar,Activity.DateAdded,108) as 'Time Added', 
 Convert(Varchar,Activity.DateNextAction,111) as 'Next Action Date',Convert(Varchar,Activity.DateNextAction,108) as 'Next Action Time',
 Activity.CommentsNextAction as 'Comments (Next Action)' ,ao.Value as 'Activity Outcome', OutcomeDetails as 'Outcome Details'
from Activity
left join Users on Users.UserID = Activity.AddedByID
left join EntityContact on EntityContact.EntityContactID = Activity.EntityContactId
left join Lookup atype on atype.lookupid = Activity.ActivityTypeID
Left join Entity E on E.EntityID = Activity.EntityID
left join Lookup ao on ao.lookupid = Activity.ActivityOutcomeID
LEFT JOIN lookup div on div.lookupid = activity.divid
LEFT JOIN Users us on us.userid = activity.userid","0","","1","LRA-FUSION","0","0","fusion"
"39793","cv_All_Activity_Set_Listview","","SELECT top 0
 [id],[id],u.username as [Added By],/*Div.value as Division,*/  e.Company,
 case isnull(ec.firstname, ' ') + ' ' + isnull(ec.surname, ' ') when '' then 'No Client Selected' 
 else isnull(ec.firstname, ' ') + ' ' + isnull(ec.surname, ' ') end  
 as [Client],Type as [Activity Type], isnull(assignedTo,'') as [Assigned To], isnull([desc],' ') as [Description], Convert(Varchar,[date],111) as [Activity Date],Convert(Varchar,[date],108) as [Activity Time], Priority, [Percentage Complete]
FROM (
  select 'ac' + cast(activityid as varchar) as 'ID',entitycontactid as 'ContactID',AddedByID as 'UserID','Action' AS 'Type', 
  u.username as 'AssignedTo'
  , Comments as 'Desc',dateadded as 'Date',activity.DivID, '' as ""Priority"", 
  case (lu.value) when 'Complete' then '100 %' else '0 %' end as [Percentage Complete] from activity
  LEFT JOIN Lookup lu on activityoutcomeid = lu.lookupid
  LEFT JOIN users u on u.userid = activity.userid
    union all
  select 'ap' + cast(appointmentid as varchar) as 'ID',entitycontactid as 'ContactID',createUserID as 'UserID','Appointment' AS 'Type', 
  Case when foruserid = 0 then 'Unassigned' else u.username end as 'AssignedTo', subject as 'Desc',[date] as 'Date',0 as DivID, '' as ""Priority"", '' as [Percentage Complete] from appointment
  LEFT JOIN users u on u.userid = foruserid
      union all
  select 'tr' + cast(taskreminder.taskreminderid as varchar) as 'ID',entitycontactid as 'ContactID',ownerID as 'UserID','Task Reminder' AS 'Type', dbo.GetTaskAssignedUsers('tr' + cast(taskreminder.taskreminderid as varchar)) as 'AssignedTo', 
	isnull(TaskName,' ') + '  -  ' + isnull(additionalinfo, ' ') as 'Desc',taskdate as 'Date',taskreminder.DivID, isnull(lu.[value],'') as ""Priority"", 
  case (select count(*) from actions a where a.taskreminderid = taskreminder.taskreminderid) 
  when 0 then convert(varchar, percentageid) + ' %' 
  else convert(varchar, (Select AVG(PercentageID) from actions a where a.taskreminderid = taskreminder.taskreminderid)) + ' %' end as [Percentage Complete] 
  from taskreminder
   LEFT JOIN lookup lu on lu.lookupid = taskreminder.priorityid
    union all
  select 'cl' + cast(calllogid as varchar) as 'ID', entitycontactid as 'ContactID', callcreatorid as 'UserID',case isnull(advCall, 0) when 0 then 'Call' else 'Advanced Call' end  as 'Type', u.username as 'AssignedTo', CallDescription as 'Description', calldate as 'Date',DivID, '' as ""Priority"", '' as [Percentage Complete] from calllog
  LEFT JOIN users u on u.userid = calllog.userid
    union all
  select 'at' + cast(actionid as varchar) as 'ID',entitycontactid as 'ContactID',ownerID as 'UserID','Sub Task' AS 'Type', dbo.GetTaskAssignedUsers('at' + cast(actionid as varchar)) as 'AssignedTo', comments as 'Desc',taskdate as 'Date',t.DivID, isnull(lu.[value],'') as ""Priority"", convert(varchar, a.percentageid) + ' %' as [Percentage Complete] from actions a
  INNER JOIN taskreminder t ON t.taskreminderid = a.taskreminderid
  LEFT JOIN lookup lu on lu.lookupid = a.priorityid
     ) A
LEFT JOIN users u on u.userid = a.userid
LEFT JOIN entitycontact ec on ec.entitycontactid = a.contactid
LEFT JOIN entity e on ec.entityid = e.entityid
LEFT JOIN lookup Div ON a.divid = div.lookupid

order by [date]","0","","1","LRA-FUSION","0","0","fusion"
"39794","cv_CallLog_ListView_Setup","","select top 0
 CallLogID,CallLogID, Users.Username as 'Call Created By',Entity.Company, 
 dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Firstname, EntityContact.Surname) as Contact,
 convert(varchar(20),calldate) as [Date], CallDirection as 'Direction', CallSubject as 'Subject', CallDescription as [Description],
CASE AdvCall WHEN 1 THEN 'Yes' ELSE 'No' END AS [Advanced Call] 
--'Advanced Call' = case AdvCall when 1 then 'Yes' else 'No' end
from CallLog
left join Entitycontact on entitycontact.entitycontactid = calllog.entitycontactid
left join entity on entitycontact.entityid = entity.entityid
left join users on users.userid = CallLog.CallCreatorID
","0","","1","LRA-FUSION","0","0","fusion"
"39795","cv_EmailLog_Audit_Listview_Setup","","select top 0
 EmailLogID,EmailLogID,isnull(Users.Firstname + ' ','') + isnull(Users.Surname,'') as 'Sent By', Entity.Company,
 case isnull(dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Firstname, EntityContact.Surname), '') when '' then 'No Contact Selected' else  
 dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Firstname, EntityContact.Surname) end
 as Contact,
 EmailLog.EmailAddr as 'Email Address', isnull(Phone1,isnull(phone2,isnull(phone3,isnull(Cell,'None Found')))) as 'Telephone',
 convert(varchar(11),Emailtime) as [Date],EmailSubject as [Subject], EmailStatus as 'Status',
 'Response' = Case EmailLog.Response when 1 then 'Yes' else 'No' end
from EmailLog
left join Entitycontact on entitycontact.entitycontactid = Emaillog.EmailRcptID
left join entity on entitycontact.entityid = entity.entityid
left join Users on EmailLog.SendById = Users.UserID
","0","","1","LRA-FUSION","0","0","fusion"
"39796","cv_smslog_audit_SetListview","","select top 0
 SMSLogID,SMSLogID, Entity.Company, 
 dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Firstname, EntityContact.Surname) as Contact,
 SMSLog.SMSNumber as 'Cell Number', convert(varchar(11),SMStime) as [Date], SMSMsg as [Message]
from SMSLog
left join Entitycontact on entitycontact.entitycontactid = smslog.SMSUserID
left join entity on entitycontact.entityid = entity.entityid
","0","","1","LRA-FUSION","0","0","fusion"
"39797","cv_AuditNotes_SetListview","","SELECT top 0
 noteid,noteid, e.Company, isnull(ec.firstname,'') + ' ' + isnull(ec.surname,'')  as Contact,
 nt.value as [Note Type],  n.[description] As [Note Description], n.notes As Notes, 
 d.value as Division,convert(varchar,[date],103) as [Date],
 Subject,u.username as [Created By],m.username as [Modified By]
FROM notes n
LEFT JOIN entitycontact ec on ec.entitycontactid = n.entitycontactid
LEFT JOIN lookup nt ON nt.lookupid = n.notetypeid
LEFT JOIN lookup d ON d.lookupid = n.divid
LEFT JOIN users u ON u.userid = n.createbyid
LEFT JOIN users m ON m.userid = n.modifiedbyid
Left JOIN entity e ON e.entityid = ec.entityid
ORDER BY [date]","0","","1","LRA-FUSION","0","0","fusion"
"39798","cv_SPSummary_Probability","","select distinct 1,'Probability',{colsel} from
(
Select Distinct {cols}
From (
Select l.value as [sType],sum(isnull(spq.[Total],0)) as [Total]
from lookup l 
left join SalesPipeline sp on isnull(sp.Probability,'Not Assigned') = l.value
left join (select pipelineID, sum(isnull(amount,0)) as [Total] from salespipelinedetailquoted group by pipelineid) spq
	on spq.pipelineid = sp.pipelineid
where l.class like 'PipelineProbability' and sp.outcome not in ('Accepted','Rejected')
group by l.value
) X --group by [sType],[Total]
) z
","0","","1","LRA-FUSION","0","0","fusion"
"39799","cv_SPSummary_Stat","","
select distinct 1,'Status',{colsel} from
(
Select Distinct {cols}
From (
Select l.value as [sType],sum(isnull(spq.[Total],0)) as [Total]
from lookup l 
left join SalesPipeline sp on isnull(sp.status,'Not Assigned') = l.value
left join (select pipelineID, sum(isnull(amount,0)) as [Total] from salespipelinedetailquoted group by pipelineid) spq
	on spq.pipelineid = sp.pipelineid
where l.class like 'PipelineStatus' and sp.outcome not in ('Accepted','Rejected')
group by l.value
) X --group by [sType],[Total]
) z","0","","1","LRA-FUSION","0","0","fusion"
"39800","cv_Ticket_Contacts","","select ec.entitycontactid, isnull(firstname,'') + ' ' + isnull(surname,'') as [contact], isnull(ac.EntityContactID,0) as [Assigned]
from entitycontact ec
left join Ticketcontacts ac
on ac.entitycontactid = ec.entitycontactid and ac.TicketID = <%apptid%>
where ec.entityID = <%eid%> 
AND ISNULL(AC.IsHolding,0) = {holding}
","0","","1","LRA-FUSION","0","0","fusion"
"39801","cv_Ticket_Man","","SELECT 
	[TicketID],
	[Ticket No],
	[Date Captured],
	[Time Captured],
	[Logged By],
	[Assigned To],
	[Assigned Date and Time],
	[Holding Company], 
	[Company],[Reference],
	[Call Type],
	[Ticket Type],
	[Severity], 
	[Severity Escalation],
	[Current Status],
	[Problem Type],
	[Job],
	[Client Order Number],
	Reference,
	Switchboard,
	[Fax],
	[Send Email],
	[Send SMS],
	[Machine type],
	[Model],
	[Division],
	[Ticket Duration],
	[Dispatch Date/Time],
	[Arrival Time],
	[Stock Code],
	[Serial Number],
	[Support Document Added],
	[Account Number],
	EstimatedCost As [Estimated Service Cost],
	Province,
	[Date Captured] + ' ' +	[Time Captured] As [Start Time],
	DateCompleted As [End Time]

FROM (
	Select 
    E.AccountNum as [Account Number],
    T.EstimatedCost,
    Province,
        l.Value as Severity,
	TicketID,
	TicketID AS [Ticket No],
	Convert(Varchar,DateCaptured,111) as [Date Captured],
	Convert(Varchar,DateCaptured,108) as [Time Captured],
	isnull(lb.Firstname,'') + ' ' + isnull(lb.Surname,'') as [Logged By],
	isnull(u.Firstname,'') + ' ' + isnull(u.Surname,'') as [Assigned To],
	ReminderDateTime As [Assigned Date and Time],
	E.Company as [Holding Company],
	EA.Company as [Company],
	CallType as [Call Type],
	TT.Value as [Ticket Type],
	dbo.fn_GetTicketEscalation(Severity) as [Severity Escalation],
	L2.Value as [Current Status],
	ProbType as [Problem Type],
	convert(varchar,P.JobNo) + ' : ' + 'ProjectName' as [Job],
	T.DivID,
	T.UserID,
	T.LogByID,
	T.DateCaptured,
	T.DateCompleted,
	T.DispatchDate,
	T.ClientPO as [Client Order Number],
	Reference,
	ISNULL(EA.Switchboard,E.Switchboard) as Switchboard,
	ISNULL(EA.Fax,E.Fax) as [Fax],
	ISNULL(EA.AccountNum, E.AccountNum) as [Branch Code],
	tMessage as [Problem Details],
	Case when isnull(SendEmail,0) = 0 then 'No' else 'Yes' end as [Send Email],
	Case when isnull(SendSMS,0) = 0 then 'No' else 'Yes' end as [Send SMS],
	LM.Value as [Machine type],
	LLM.Value as [Model],
	LD.Value as [Division],
	ISNULL(DATEDIFF(HOUR,T.DateCaptured,T.DateCompleted),'') as [Ticket Duration],
	DispatchDate as [Dispatch Date/Time],
	ArrivalDate as [Arrival Time],
	S.StockCode as [Stock Code],
	T.SerialNum as [Serial Number],
	Case when SuppDocAdded = 1 then 'Yes' else 'No' end as [Support Document Added],
	iSNULL(isComplete,0) as isComplete,T.JobID
from Tickets T
Left join (SELECT EntityID, Company,Switchboard,Fax,AccountNum FROM Entity) E on E.EntityID = T.EntityID
Left join (SELECT EntityID, Company,Switchboard,Fax,AccountNum FROM Entity) EA on EA.EntityID = T.AddEntityID
Left Join (Select Region as Province,Entityaddressid,EntityID,AddressType  from EntityAddress) EAD on E.EntityID = EAD.EntityID and ead.EntityAddressID = (select max(entityaddressid) from entityaddress where addresstype like '%physical%' and entityid = e.entityid) and  ead.AddressType like '%Physical%'
Left join (SELECT UserID, FirstName ,Surname  FROM Users) lb on lb.UserID = T.LogByID
Left join (SELECT UserID, FirstName, Surname FROM Users) u on u.UserID = T.UserID
Left join (SELECT lookupid, value from lookup where class like 'StockType') LM on T.StockTypeID = LM.LookupID
Left Join (SELECT LinkLookupID, Value from LinkLookup where class like 'StockSubType') LLM on SubStockTypeID = LLM.LinkLookupID
Left join (SELECT lookupid, value from lookup) LD on T.DivID = LD.LookupID
Left join (SELECT StockID, StockCode, StockDescription  FROM AccStock) s on s.StockID = T.StockID
LEFT JOIN (SELECT max(ProjectID) as [JobNo], TicketID as [TickID] FROM Projects GROUP BY TicketID ) P ON T.TicketID = P.TickID
LEFT JOIN (SELECT ProjectName, ProjectID FROM Projects) PN ON P.JobNo = PN.ProjectID
LEFT JOIN Lookup L on L.LookupID = t.SeverityID and L.Class = 'TicketSeverity'
LEFT JOIN Lookup TT on TT.LookupID =T.TicketType
LEFT JOIN Lookup L2 on l2.LookupID = t.tStatus
) A 
{where}

","0","","1","LRA-FUSION","0","0","fusion"
"39802","cv_Acc_Manufacture_Results","","SELECT ResultID,BatchNo as [Batch No.],  L.Value as [Type],Descr as [Description of materials / Short description],isnull(Results,'') as [Results]
FROM AccManufacture_Results MR 
LEFT JOIN Lookup L on MR.ResultTypeID = L.Lookupid
Where DocID = {docid}
Order By BatchNo, ResultID","0","","1","LRA-FUSION","0","0","fusion"
"39803","cv_Acc_Debtors_Man_Finance","","--Acc_Debtors_Man
SELECT convert(varchar,DM.DocID) + '#DM' as [DocID], DocType as [Doc. Type], 
Convert(Varchar,left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo)) as [Doc. No.], 
Ldiv.Value as [Division], 
case when isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END as [Client],
P.ProjectName  as [Project],
isnull(DM.Memo,'') as Notes, 
convert(varchar,DateCreated ,103)as [Created],
convert(varchar, DateCompleted, 103) as [Doc. Date],
DocStatus as [Status], 
[Sales Consultant] as [Consultant],
DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
convert(varchar,CASE doctype when 'Credit Note' then -1 ELSE 1 END * [Total Ex. VAT],1) as [Total Ex. VAT], 
convert(varchar,CASE doctype when 'Credit Note' then -1 ELSE 1 END * [Total Incl. VAT] - [Total Ex. VAT],1) as [Total VAT], 
convert(varchar,CASE doctype when 'Credit Note' then -1 ELSE 1 END * cast([Total Incl. VAT]   as money),1)  as [Total Incl. VAT],
convert(varchar,CASE doctype when 'Credit Note' then -1 ELSE 1 END * cast([Est. Cost] as money),1) as [Est. Cost]
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT EntityID, 
    case when ltrim(isnull(Accountnum,'')) not like '' then ltrim(isnull(Accountnum,'') + ' - ' + Company) else company end as [Company], 
        isnull(accountnum,'') as [AccountNum] FROM Entity) E
ON DM.EntityID = E.EntityID AND isnull(DM.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, rtrim(ltrim(isnull(Accountnum,'') + ' '+ isnull(Firstname,'') + ' ' + isnull(surname,''))) as [Contact] FROM EntityContact) EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.useEC,0) = 1
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Sales Consultant] FROM Users) U
On DM.SalesRepID = U.UserID
LEFT JOIN (SELECT DocID, convert(money,Sum(round(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100),2))) as [Total Ex. VAT],
             round(round(cast(sum(round(PriceIncl / case PriceEx when 0 then 1 else priceex end,2) * round(PriceEx * qty * ((100 - isnull(discperc,0))/100),2)) as money),3),2) as [Total Incl. VAT], 
             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
             convert(money,(Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)))) as [Total Discount]
             FROM DEBTOR_DETAIL Group by Docid) DD
ON DM.DocID = DD.Docid
LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
ON DM.DocID = SD.DocID
LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
ON DM.ProjectID = P.ProjectID
LEFT JOIN (SELECT ModuleID, ModuleName FROM Modules) M
ON DM.ModuleID = M.ModuleID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LDiv
ON DM.DivisionID = LDiv.LookupID
{where}

Union All

--Cost estimate

SELECT Distinct convert(varchar,CEM.DocID) +'#CE' as [DocID],'Cost Estimate Quote' as [Doc. Type],
Convert(Varchar,left('00000000', 8- len(CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END)) + convert(varchar,CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END)) as [Doc. No.]
,D.Value as [Division],
case isnull(CEM.UseEC, 0) When 1 then EC.Client ELSE E.Company END as [Client],null as [1],null as [2],
Convert(Varchar, CEM.DateCreated,111) as [Created],
Convert(Varchar, CEM.DateCompleted,103) as [Doc. Date],
CEM.DocStatus as [Status],
isnull(ls.Firstname,'') + ' ' + isnull(ls.surname,'') As [Sales Consultant],
 U.[Created By], CEM.Currency,convert(varchar,cast(CEM.ROE as money),1)  as [R.O.E],
convert(varchar,cast([Total Ex. VAT] as money),1) as [Total Ex. VAT],
'' as [Total VAT],
convert(varchar,cast([Total Incl. VAT] as money),1) as [Total Incl. VAT]
FROM Cost_Estimate_Master CEM
LEFT JOIN Lookup D 
ON CEM.DivisionID = D.LookupID
LEFT JOIN (SELECT Company, EntityID, AccountNum FROM Entity) E
ON CEM.Entityid = E.Entityid AND isnull(CEM.UseEC,0) = 0
LEFT JOIN (SELECT isnull(Firstname,'') + ' ' + isnull(surname,'') as [Client], EntityContactID,SalesConsID, AccountNum FROM EntityContact) EC
ON CEM.Entityid = EC.EntityContactid AND isnull(CEM.UseEC,0) = 1
LEFT JOIN (SELECT isnull(firstname,'') + ' ' + isnull(surname,'') as [Created By], UserID From Users) U
ON CEM.CreatedBy = U.UserID
LEFT JOIN (SELECT DocID, Sum(CostPriceEx * Qty ) as [Est. Cost], sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) as [Total Ex. VAT], Sum(totalIncl * ((100 - isnull(discperc,0)) /100)) as [Total Incl. VAT] FROM Cost_Estimate_Detail WHERE isnull(componentOfLineID,0) = 0  and (isnull(groupname,'') IN ('','Accessories','Alternate Offer','Cables','Glands','group one','Main','Main Items','Main offer','Standard Offer'))  Group By DocID) CED
ON CEM.DocID = CED.DocID
left join EntityContact ls on ls.EntityContactid = CEM.AttentionOf
Left join EntityGroup g on g.EntityID = E.EntityID

{where2}","0","","1","LRA-FUSION","0","0","fusion"
"39804","cv_ContactEmailDocs","","
select EmailDocumentID, Company, Contact, [Name], path as Location
from EntityContactEmailDocs d
left join lookup l on l.lookupid = d.doctypeid
LEFT JOIN (SELECT EntityID,Company FROM Entity) E
ON D.EntityID = E.Entityid
LEFT JOIN (SELECT EntityContactID, Firstname + ' ' + Surname as [Contact] FROM EntityContact ) EC
ON D.EntityContactID = EC.EntityContactID
<%where%>
order by [Name]
","0","","1","LRA-FUSION","0","0","fusion"
"39805","qf_SalesConsultant","","select lookupid, value
from lookup
where Class like 'salescons' and value like '<%replace%>%'
order by value","0","","1","LRA-FUSION","0","0","fusion"
"39806","cv_Acc_Print_GRV","","SELECT StockCode as [Stock Code], StockDescription as [Description] ,--Comments,
--CASE WHEN P.ProjectID is not null then convert(varchar, CD.ProjectID) + ' - ' + P.ProjectName ELSE ' ' END as [Project],
'<U>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</U>' as [Qty],
SBL.Value as [Unit],
convert(varchar,cast(PriceEx as money),1) as [Price Ex. VAT], convert(varchar,cast(PriceEx * Qty as money),1) as [Total Ex. VAT]
FROM CREDITOR_DETAIL  CD
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
ON CD.ProjectID = P.ProjectID
LEFT JOIN (SELECT StockID, SoldBy FROM AccStock ) STK 
ON CD.StockID = STK.StockID
LEFT JOIN Lookup SBL ON STK.SoldBy = SBL.Lookupid
WHERE DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"39807","cv_TasksManSearch3","","SELECT distinct  top 100 percent 
 convert(varchar,taskreminder.taskreminderid) as [TaskReminderID],
convert(varchar,taskreminder.taskreminderid) AS [TaskReminderID],
isnull(u1.firstname,'') + ' ' + isnull(u1.surname,'') as [Created By],/*div.value as Division, */ entity.Company,
 case when isnull(dbo.EntityContactName(entitycontact.Title,entitycontact.Initials, entitycontact.FirstName, entitycontact.Surname), '') = '' then 'No Contact Selected' else
 dbo.EntityContactName(entitycontact.Title,entitycontact.Initials, entitycontact.FirstName, entitycontact.Surname) end as [Assigned contact],
isnull(u2.firstname,'') + ' ' + isnull(u2.surname,'') as [Task Organiser],
isnull(u3.firstname,'') + ' ' + isnull(u3.surname,'') as [Task Owner], 
 taskname as [Task Name],Convert(Varchar,taskdate,111) as [Task Date],Convert(Varchar,taskdate,108) as [Task Time], 
    case (select count(*) from actions a where a.taskreminderid = taskreminder.taskreminderid) 
    when 0 then convert(varchar, percentageid) + ' %' 
    else convert(varchar, (Select AVG(PercentageID) from actions a where a.taskreminderid = taskreminder.taskreminderid)) + ' %' end as [Percentage Complete],
    '' as [Task Number],
    AdditionalInfo as [Additional Info], 
case WHEN isnull(dtc.[TotalUsers],0) > 1 then convert(varchar,dtc.[TotalUsers]) + ' Users' ELSE  isnull(u4.firstname,'') + ' ' + isnull(u4.surname,'') END    AS [For User],
P.Value AS [Priority]
,'' as [Result]
FROM taskreminder
LEFT JOIN entitycontact ON taskreminder.entitycontactid = entitycontact.entitycontactid
LEFT JOIN lookup div on div.lookupid = taskreminder.divid
LEFT join (SELECT DeveloperID, TaskReminderID FROM developertasks) dt on dt.taskreminderid = taskreminder.taskreminderid 
LEFT join (SELECT count(DeveloperID)  as [TotalUsers], TaskReminderID FROM developertasks group by TaskReminderID) dtc on dtc.taskreminderid = taskreminder.taskreminderid 
LEFT join users U1 on U1.userid = taskreminder.userid		--Created by
LEFT JOIN users U2 ON U2.userid = taskreminder.organizerid	--Organizer
LEFT JOIN users U3 ON U3.userid = taskreminder.ownerid		--Owner
LEFT JOIN users U4 ON U4.userid = dt.DeveloperID  and isnull(dtc.[TotalUsers],0) =1	--For User
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE CLASS LIKE 'Priority') P ON P.LookupID = TaskReminder.PriorityID
Left JOIN entity On entity.EntityID = entitycontact.entityid 
{where}


union all

SELECT Distinct 
convert(varchar,actions.taskreminderid) + 'sub ' + convert(varchar,actionid) as [taskreminderid],
'  ' AS [  ],
isnull(u1.firstname,'') + ' ' + isnull(u1.surname,'') as [Created By],
Null as [Company],
null as [Assigned Contact], 
isnull(u2.firstname,'') + ' ' + isnull(u2.surname,'') as [Task Organiser], 
isnull(u3.firstname,'') + ' ' + isnull(u3.surname,'') as [Task Owner], 
taskreminder.taskname + ' - Sub Task' as [Task Name],
Convert(Varchar,nextactiondate,111) as [Task Date],Convert(Varchar,nextactiondate,108) as [Task Time], convert(varchar,actions.percentageid) + ' %' as [Percentage Complete],
Number as [Task Number],
comments as [Additional Info], DT.ForUser AS [For User], P.Value AS [Priority]
,Result as [Result]
FROM  Actions
LEFT JOIN taskreminder on actions.taskreminderid = taskreminder.taskreminderid
LEFT JOIN entitycontact ON taskreminder.entitycontactid = entitycontact.entitycontactid
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE CLASS LIKE 'Priority') P ON P.LookupID = Actions.PriorityID
LEFT JOIN (SELECT UserID as [DeveloperID], Firstname + ' ' + Surname as [ForUser] FROM Users) DT ON actions.AssignedTo = DT.DeveloperID
LEFT join users U1 on U1.userid = Actions.userid		--Created by
LEFT JOIN users U2 ON U2.userid = taskreminder.organizerid	--Organizer
LEFT JOIN users U3 ON U3.userid = taskreminder.ownerid		--Owner
{where}


ORDER BY TaskReminderID  , [Task Date]
","0","","1","LRA-FUSION","0","0","fusion"
"39808","cv_Tasks_Set_ListView_2","","SELECT top 0 convert(varchar,taskreminder.taskreminderid) as [TaskReminderID],
 convert(varchar,taskreminder.taskreminderid) as [TaskReminderID],users.username as [Created By],/*div.value as Division, */ entity.Company,
 case when isnull(dbo.EntityContactName(entitycontact.Title,entitycontact.Initials, entitycontact.FirstName, entitycontact.Surname), '') = '' then 'No Contact Selected' else
 dbo.EntityContactName(entitycontact.Title,entitycontact.Initials, entitycontact.FirstName, entitycontact.Surname) end as [Assigned contact],
 org.username as [Task Organiser],own.username as [Task Owner],
 taskname as [Task Name],Convert(Varchar,taskdate,111) as [Task Date],Convert(Varchar,taskdate,108) as [Task Time], 
    case (select count(*) from actions a where a.taskreminderid = taskreminder.taskreminderid) 
    when 0 then convert(varchar, percentageid) + ' %' 
    else convert(varchar, (Select AVG(PercentageID) from actions a where a.taskreminderid = taskreminder.taskreminderid)) + ' %' end as [Percentage Complete],
    AdditionalInfo as [Additional Info], Users.Username AS [For User], P.Value AS [Priority]
FROM taskreminder
LEFT join users on users.userid = taskreminder.foruserid
LEFT JOIN entitycontact ON taskreminder.entitycontactid = entitycontact.entitycontactid
LEFT JOIN lookup div on div.lookupid = taskreminder.divid
LEFT JOIN users ORG ON org.userid = taskreminder.organizerid
LEFT JOIN users OWN ON own.userid = taskreminder.ownerid
LEFT join developertasks dt on dt.taskreminderid = taskreminder.taskreminderid 
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE CLASS LIKE 'Priority') P ON P.LookupID = TaskReminder.PriorityID
Left JOIN entity On entity.EntityID = entitycontact.entityid 


union all

SELECT top 0 convert(varchar,actions.taskreminderid) + 'sub' + convert(varchar,actionid) as [taskreminderid],convert(varchar,actions.taskreminderid) + 'sub' + convert(varchar,actionid) as [taskreminderid],u2.[Created By], Null as [Company],
null as [Assigned Contact], null as [Task Organiser], null as [Task Owner], taskreminder.taskname + ' - Sub Task' as [Task Name],
Convert(Varchar,nextactiondate,111) as [Task Date],Convert(Varchar,nextactiondate,108) as [Task Time], convert(varchar,actions.percentageid) + ' %' as [Percentage Complete],
comments as [Additional Info], U3.UserName AS [For User], P.Value AS [Priority]
FROM  Actions
LEFT JOIN (SELECT UserID, Firstname + ' ' + Surname as [Assigned To] FROM Users) U1
ON actions.assignedto = u1.userid
LEFT JOIN (SELECT UserID, Firstname + ' ' + Surname as [Created By] FROM Users) U2
ON actions.userid = u2.userid
LEFT JOIN taskreminder on actions.taskreminderid = taskreminder.taskreminderid
LEFT JOIN entitycontact ON taskreminder.entitycontactid = entitycontact.entitycontactid
LEFT join developertasks dt on dt.taskreminderid = taskreminder.taskreminderid 
LEFT JOIN (SELECT UserID, Username FROM Users) U3 ON U3.UserID = TaskReminder.ForUserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE CLASS LIKE 'Priority') P ON P.LookupID = Actions.PriorityID

ORDER BY TaskReminderID, [Task Date]","0","","1","LRA-FUSION","0","0","fusion"
"39809","cv_ChangeControl","","select
	changeid,
      changeid As [Change ID],
	cc.fname as [Form name],
	isnull(u1.firstname,'') +  ' ' + isnull(u1.surname,'') as [Added By],
	convert(varchar, dateadded,111) + ' ' + convert(varchar, dateadded,108) as [Date Added],
	isnull(u2.firstname,'') +  ' ' + isnull(u2.surname,'') as [Modified By],
	convert(varchar, datemodified,111) + ' ' + convert(varchar, datemodified,108) as [Date Modified],
	changetype as [Change Type],
	cc.Status as [Status],
	Case when ScreenShot is null THEN 'No' ELSE 'Yes' END as [Screenshot],
	cc.[description] as [Change Description]
from changecontrol cc
left join users u1 on u1.userid = cc.userid
left join users u2 on u2.userid = cc.modifieduserid
{where}
ORDER BY DateModified desc","0","","1","LRA-FUSION","0","0","fusion"
"39810","cv_export_timesheet_excel","","select 
 t.timesheetid,t.timesheetdate, e.company ,P.ProjectID,
 p.projectname, modules.modulename, users.username,
 case when hoursdone < 1 then 1 else Round(hoursdone,0)end as [HoursDone],
 projectstatus
from timesheet t
left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
{where}
order by timesheetdate","0","","1","LRA-FUSION","0","0","fusion"
"39811","cv_OvertimeMan","","Select OvertimeID,AppID as [AppointmentID],Isnull(U.Firstname,'')+' '+isnull(U.Firstname,'') as [User],[Date],EndDate as [Date End],Convert(Float,DateDiff(n,[Date],[EndDate]))/60 as [Duration(Hours)],E.Company,isnull(EC.Firstname,'')+' '+isnull(EC.Firstname,'') as [Contact] from OvertimeLeave OL
left join Appointment A on A.AppointmentID = OL.AppID
left join Entity E on E.EntityId = A.EntityId
left join EntityContact EC on EC.EntityContactId = A.EntityContactId
left join Users U on U.UserID = A.UserID
<%Where%>","0","","1","LRA-FUSION","0","0","fusion"
"39812","cv_licence_2","","SELECT
	L.LicenceManID, E.Company AS [Company], EC.FirstName + ' ' + EC.Surname AS [Contact], P.ProjectName AS [Project],
	AM.FirstName + ' ' + AM.Surname AS [FS Account Manager], L.[Status], L.BillingFrequency,
	'R ' + CONVERT(VARCHAR, MonthlyAmount) AS [Monthly Amount], 'R ' + CONVERT(VARCHAR, Amount) AS [Total Amount],
	CONVERT(VARCHAR, L.BillingDate, 103) AS [Billing Date]
FROM
	LicenceMan L
	LEFT JOIN (SELECT EntityID, Company FROM Entity) E ON L.EntityID = E.EntityID
	LEFT JOIN (SELECT EntityContactID, EntityID, FirstName, Surname FROM EntityContact) EC ON L.EntityContactID = EC.EntityContactID
	LEFT JOIN (SELECT UserID, FirstName, Surname FROM Users) AM ON L.AccountManagerID = AM.UserID
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P ON L.ProjectID = P.ProjectID
	LEFT JOIN (SELECT LookupID, Value FROM Lookup) L1 ON L.PaymentTypeID = L1.LookupID
{where}
ORDER BY E.Company","0","","1","LRA-FUSION","0","0","fusion"
"39813","cv_License_Invoice","","SELECT
    DM.DocID, DM.DocID AS [Inv no.], E.Company, DM.DocType, DM.DocStatus, DM.DateCompleted, DM.LastUpdated
FROM 
    DEBTOR_MASTER DM
    LEFT JOIN (SELECT EntityID, Company FROM Entity) E ON DM.EntityID = E.EntityID
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P ON DM.ProjectID = P.ProjectID
WHERE DM.DocType LIKE 'Invoice' AND DM.EntityID = {entityid}","0","","1","LRA-FUSION","0","0","fusion"
"39814","cv_Activities_All","","SELECT distinct [Key],LD.Value as [Division] , Type, SubType, [Description], Subject,
Case when A.AssignedTo < 0 then convert(varchar,abs(A.AssignedTo)) + ' Assignees' ELSE U.Assignee END as [Assignee],
convert(varchar,[Date],111) + ' ' + convert(varchar,[Date],108) as [Next Date],
Status, [Created By]
FROM 
(
--Actions
SELECT 
	convert(varchar, ActivityID) + '##Action' as [key] , 
	AddedByID as [CreatedBy], 
	Entityid, 
	Entitycontactid, 
	'Action' as [Type],
	L.Value as [SubType],
	U.UserID as [AssignedTo],
	Comments as [Description],
	'' as [Subject], 
	DateAdded as [DateCreated], 
	DateAction as [Date],
	LO.Value as [Status],DivID, U.Firstname + ' ' + U.Surname as [Created By], AssessmentID
FROM Activity A
LEFT JOIN Lookup L ON A.ActivityTypeID = L.LookupID
LEFT JOIN Lookup LO ON A.ActivityOutcomeID = LO.LookupID
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = A.addedbyid

UNION ALL

--Calls
SELECT 
	convert(varchar, CallLogID) + '##' + case isnull(AdvCall,0) when 0 then 'Call' ELSE 'AdvancedCall' END as [key],
	CallCreatorID, 
	EntityID, 
	CL.EntityContactID,
	case isnull(AdvCall,0) when 0 then 'Call' ELSE 'Advanced Call' END, 
	L.Value,
	U.Userid, 
	CallDescription, 
	callsubject as [Subject],
	null, 
	CallDate, 
	LO.Value,
	DivID, U.firstname + ' ' + u.surname as [Created BY], AssessmentID
FROM CallLog CL
LEFT JOIN (SELECT EntityContactID, EntityID FROM EntityContact) EC ON  CL.EntityContactID = EC.entityContactID
LEFT JOIN Lookup L ON CL.CallTypeID = L.LookupID
LEFT JOIN Lookup LO ON CL.BusResID = LO.LookupID
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = CL.callcreatorid

UNION ALL

--Appointments
SELECT 
    convert(varchar, AppointmentID) + '##Appointment' as [key], 
    CreateUserID, 
    Entityid, 
    apc.EntityContactID, 
    'Appointment',
    L.Value,
    ForUserID,
    notes, 
    Subject , 
    null, 
    [Date], 
    case when [Date] < getdate() then 'Passed' ELSE convert(varchar,datediff(d,  GetDate(),[Date])) + ' day(s) to go'  end,
    U.DefaultDivisionID, UN.firstname + ' ' + un.surname as [Created By], AssessmentID
FROM Appointment A
LEFT JOIN Lookup L ON A.ClientRelID = L.LookupID
LEFT JOIN (SELECT UserID, DefaultDivisionID FROM Users) U ON A.ForuserID = U.UserID
LEFT JOIN (Select Entitycontactid,apptid from appointmentcontacts) apc on apc.apptid = a.appointmentid
LEFT JOIN (Select userid, firstname, surname from users) UN on UN.userid = A.createuserid

UNION ALL

--Tasks
SELECT 
	convert(varchar, T.TaskReminderID) + '##Task' as [key], 
	CreateByID, 
	Entityid, 
	T.Entitycontactid, 
	'Task', 
	'',
	isnull(DeveloperID, -1 * NoOfAssignees), --Uses negatives to denote multiple assignees
	TaskName, 
	'' ,
	null, 
	TaskDate, 
	convert(varchar,isnull(percentageid,0)) + '% completed' ,
	DivID, u.firstname + ' ' + u.surname as [Created By], AssessmentID
FROM TaskReminder T
LEFT JOIN (SELECT EntityContactID, EntityID FROM EntityContact) EC ON  T.EntityContactID = EC.entityContactID
LEFT JOIN (SELECT TaskReminderID, count(DeveloperID) as [NoOfAssignees] FROM DeveloperTasks Group By TaskReminderID having  count(DeveloperID) > 1) DT1
ON T.Taskreminderid= DT1.TaskReminderID
LEFT JOIN (SELECT TaskReminderID, DeveloperID  FROM DeveloperTasks ) DT2
ON T.Taskreminderid= DT2.TaskReminderID and DT1.TaskReminderID is null
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = T.createbyid


UNION ALL

--Sub Tasks
SELECT 
	convert(varchar, ActionID) + '##SubTask'  as [key], 
	CreateByID, 
	Entityid, 
	T.Entitycontactid, 
	'Sub Task', 
	l.value,
	A.AssignedTo,
	comments, 
	null, 
	null,
	NextActionDate, 
	convert(varchar,isnull(A.percentageid,0)) + '% completed' ,
	DivID,'' as [Created By], AssessmentID
FROM Actions A
LEFT JOIN TaskReminder T ON A.TaskReminderID = T.TaskReminderID
LEFT JOIN (SELECT EntityContactID, EntityID FROM EntityContact) EC ON  T.EntityContactID = EC.entityContactID
LEFT JOIN Lookup L ON A.bittypeID = l.Lookupid
--LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = CL.callcreatorid


UNION ALL 

--Tickets
SELECT 
	convert(varchar, T.TicketID) + '##Ticket'  as [key],  
	LogByID, 
	Entityid, 
	EntitycontactID, 
	'Ticket',
	TicketType,
	U.UserID, 
	tMessage,
	'',
	DateCaptured,
	DateCaptured,
	TicketStatus,
	DivID, u.firstname + ' ' + u.surname as [Created By], AssessmentID
FROM Tickets T
LEFT JOIN (SELECT  max(entitycontactid) as [EntitycontactID], TicketID FROM TicketContacts Group by Ticketid) TC
ON T.TicketID = TC.TicketID
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = T.logbyid
left join (SELECT LookupID, Value as TicketStatus FROM Lookup) L ON L.LookupID = T.tStatus

UNION ALL

--Jobs
SELECT 
	convert(varchar, P.ProjectID) + '##Job'  as [key] , 
	ProjectManagerID, 
	Entityid, 
	EntitycontactID, 
	'Job',
	l.value, 
	U.UserID,
	ProjectName, 
	projectnotes,
	dateAdded, 
	DateAdded, 
	LS.Value, 
	P.DivID, '' as [Created By], AssessmentID
FROM Projects P
Left JOIN lookup L ON P.ProjectTypeID = L.LookupID
LEFT JOIN (SELECT UserID, StaffID FROM Users) U ON P.TechnicianID = U.StaffID
LEFT JOIN Lookup LS ON P.projectstateid = LS.LookupID
LEFT JOIN (SELECT UserID, DefaultDivisionID FROM Users) UD ON P.ProjectManagerID = UD.UserID
--LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = CL.callcreatorid

Where isnull(IsJob,0) = 1


)A
LEFT JOIN Lookup LD ON A.DivID = LD.LookupID
LEFT JOIN (SELECT UseriD, isnull(Firstname, '') + ' ' + isnull(surname,'') as [Assignee] From Users ) U ON A.AssignedTo = U.UserID
{where}
ORDER BY  [Next Date]DESC","0","","1","LRA-FUSION","0","0","fusion"
"39815","cv_Options_Button","","SELECT 
Case [Variable]
WHEN 'OptBtnNew' THEN  'New'
WHEN 'OptBtnLogCall' THEN  'Log Call'
WHEN 'OptBtnLogCallAdv' THEN  'Log Call [Advanced]'
WHEN 'OptBtnAct' THEN  'Create Action'
WHEN 'OptBtnTask' THEN  'Create Task'
WHEN 'OptBtnAppt' THEN  'Create Appointment'
WHEN 'OptBtnEmail' THEN  'Send Email'
WHEN 'OptBtnSSMS' THEN 'Send SMS'
WHEN 'OptBtnUpdCompany' THEN  'Quick-update Company'
WHEN 'OptBtnUpdContact' THEN  'Quick-update Contact'
WHEN 'OptBtnQuote' THEN  'Create Quote'
WHEN 'OptBtnSalesOrder' THEN  'Create Sales Order'
WHEN 'OptBtnInvoice' THEN  'Create Invoice'
WHEN 'OptBtnLeads' THEN  'Add to Leads'
WHEN 'OptBtnSP' THEN  'Add to Sales Pipeline'
WHEN 'OptBtnTicket' THEN  'Create Ticket'
WHEN 'OptBtnJob' THEN  'Create Job'
WHEN 'OptBtnNotes' THEN  'Export Notes'
WHEN 'OptBtnMerge' THEN  'Merge'
WHEN 'OptBtnDWork' THEN  'Dial Work'
WHEN 'OptBtnDHome' THEN  'Dial Home'
WHEN 'OptBtnDCell' THEN  'Dial Cell'
WHEN 'OptBtnConvert' THEN  'Convert'
WHEN 'OptBtnCreateRequisition' THEN  'Create Requisition'
WHEN 'OptBtnPrintSpecialClient' THEN  'Print Special'
WHEN 'OptBtnEmailClientDoc' THEN  'Email Special'

End as [ListName]
FROM crmSetup where [Description] = 'OptBtn' and isnull([Selected],0) = 1
{where}
ORDER BY crmSetupID ","0","","1","LRA-FUSION","0","0","fusion"
"39816","cv_Acc_Projects_All","","SELECT ProjectID, convert(varchar,ProjectID) + ' - ' + ProjectName FROM Projects
WHERE EntityID = {entityid}
and (isnull(isComplete,0) = 0  OR Projectid = {projectid})
Order By ProjectID Desc
","0","","1","LRA-FUSION","0","0","fusion"
"39817","cv_Acc_Document_Tracking","","
SET NoCount on

Create Table #Table  
 (
        DocID integer,
        DocType varchar(75),
        PreviousDocID integer,
        DocNo integer,
        CreateDate datetime,
        Source varchar(2),
        CEDocID integer,
        DocStatus varchar(100),
        ClientPO  varchar(100) )

DECLARE @Counter as integer
DECLARE @LastCount as integer
DECLARE @DocID as integer
DECLARE @Source as varchar(2)

SET @DOCID = {docid}
SET @Source = '{source}'

--Populate temp table with original document of interest
Insert into #Table
SELECT DocID, DocType,PreviousDocID,DocNo,DateCreated,@Source,CEDocID,DocStatus,ClientPO FROM DEBTOR_MASTER
WHERE DocID = @DocID AND @Source ='DM'
UNION ALL
SELECT DocID, DocType,PreviousDocID,DocNo,DateCreated,@Source,CEDocID,DocStatus,ClientPO FROM CREDITOR_MASTER 
WHERE DocID = @DocID AND @Source ='CM'
UNION ALL
SELECT DocID, 'Quote',PreviousDocID,Case when isnull(Revision,0) > 1 then PreviousDocID ELSE  DocID END,DateCreated,@Source,DocID,DocStatus,ClientPO FROM COST_ESTIMATE_MASTER
WHERE DocID = @DocID AND @Source ='CE'
UNION ALL
SELECT ProjectID, 'Job',TicketID,ProjectID,DateAdded,@Source,CEDocID,L.Value,ClientPO FROM Projects P
LEFT JOIN Lookup L ON P.ProjectStateID = L.LookupID
WHERE ProjectID = @DocID AND @Source ='JB'
UNION ALL
SELECT TicketID, 'Ticket',CEDocID,TicketID,DateCaptured,@Source,CEDocID,tStatus,ClientPO FROM Tickets
WHERE TicketID = @DocID AND @Source ='TK'
UNION ALL
SELECT DocID, 'Manufacturing',RaisedByDocID,DocID,DateCreated,@Source,-1,case when isnull(IsComplete,0) = 1 then 'Completed' else 'Open' END, '' as ClientPO   FROM AccManufacture
WHERE DocID = @DocID AND @Source ='MF'

SET @LastCount = -1
SET @Counter = 0

WHILE @Counter > @LastCount
--Repeat this loop until no new documents are being added
BEGIN
    Insert into #Table
    --Get Debtor docs
    SELECT distinct A.DocID, A.DocType,A.PreviousDocID,A.DocNo, A.DateCreated,'DM',A.CEDocID,A.DocStatus,A.ClientPO FROM DEBTOR_MASTER A
    LEFT JOIN #Table B ON A.DocID = B.DocID AND A.DocType= B.DocType collate database_default AND isnull(A.PreviousDocID,0) = isnull(B.PreviousDocID,0)
    WHERE ((A.DOCID IN (SELECT DocID FROM #Table WHERE Source = 'DM') OR A.PreviousDocID in (SELECT DocID FROM #Table WHERE Source = 'DM') OR A.PreviousDocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'DM') OR A.DocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'DM') OR A.CEDocID in (SELECT CEDocID FROM #Table)) 
    OR (A.ProjectID = @DocID AND @Source =  'JB'))
    AND B.DocID is null

    UNION ALL
    --Get Creditor docs
    SELECT distinct A.DocID, A.DocType,A.PreviousDocID,A.DocNo, A.DateCreated,'CM',A.CEDocID,A.DocStatus,A.ClientPO FROM CREDITOR_MASTER A
    LEFT JOIN (SELECT DocID, ProjectID FROM CREDITOR_DETAIL) CD ON A.DocID = CD.DocID 
    LEFT JOIN #Table B ON A.DocID = B.DocID AND A.DocType= B.DocType collate database_default  AND isnull(A.PreviousDocID,0) = isnull(B.PreviousDocID,0)
    WHERE ((A.DOCID IN (SELECT DocID FROM #Table WHERE Source = 'CM') OR A.PreviousDocID in (SELECT DocID FROM #Table WHERE Source = 'CM') OR A.PreviousDocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'CM') OR A.DocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'CM') OR A.CEDocID in (SELECT CEDocID FROM #Table) ) 
    OR (CD.ProjectID = @DocID AND @Source =  'JB'))    
    AND B.DocID is null 

    UNION ALL
    --Get Cost Estimate docs
    SELECT Distinct A.DocID, Case isnull((SELECT SELECTED FROM CRMSetup where variable = 'UseSO'),0) when 1 then 'Quote' ELSE 'Cost Estimate' END,A.PreviousDocID,   Case when isnull(A.Revision,0) > 1 then A.PreviousDocID ELSE  A.DocID END,DateCreated,'CE',A.DocID , A.DocStatus,A.ClientPO
    FROM COST_ESTIMATE_MASTER A
    LEFT JOIN #Table B ON A.DocID = B.DocID AND Case isnull((SELECT SELECTED FROM CRMSetup where variable = 'UseSO'),0) when 1 then 'Quote' ELSE 'Cost Estimate' END = B.DocType collate database_default  AND isnull(A.PreviousDocID,0) = isnull(B.PreviousDocID,0)
    WHERE ((A.DocID in (SELECT CEDocID FROM #Table))
    OR (A.ProjectID = @DocID AND @Source =  'JB'))   
    AND B.DocID is null

    UNION ALL
    --Get Jobs
    SELECT A.ProjectID, 'Job',A.TicketID,A.ProjectID, A.DateAdded,'JB',A.CEDocID,L.Value,A.ClientPO FROM Projects A
    LEFT JOIN #Table B ON A.ProjectID = B.DocID AND 'Job' = B.DocType collate database_default AND isnull(A.TicketID,0) = isnull(B.PreviousDocID,0)
    LEFT JOIN Lookup L ON A.ProjectStateID = L.LookupID
    WHERE (A.ProjectID IN (SELECT DocID FROM #Table WHERE Source = 'JB') OR A.TicketID in (SELECT DocID FROM #Table WHERE Source = 'TK') OR A.TicketID in (SELECT PreviousDocID FROM #Table WHERE Source = 'TK') OR A.ProjectID in (SELECT PreviousDocID FROM #Table WHERE Source = 'JB') OR A.CEDocID in (SELECT CEDocID FROM #Table) ) 
    AND B.DocID is null

    UNION ALL
    --Get Tickets
    SELECT A.TicketID, 'Ticket',A.CEDocID,  A.TicketID,DateCaptured,'TK',A.CEDocID , A.tStatus,A.ClientPO
    FROM Tickets A
    LEFT JOIN #Table B ON A.TicketID = B.DocID AND 'Ticket' = B.DocType collate database_default  AND isnull(A.CEDocID,0) = isnull(B.PreviousDocID,0)
    WHERE (A.TicketID IN (SELECT DocID FROM #Table WHERE Source = 'TK') OR A.CEDocID in (SELECT DocID FROM #Table WHERE Source = 'TK') OR A.CeDocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'CE') OR A.TicketID in (SELECT PreviousDocID FROM #Table WHERE Source = 'TK') OR A.CEDocID in (SELECT CEDocID FROM #Table) ) 
    AND B.DocID is null
    
    UNION ALL
    --Get Manufacturing Jobs
    SELECT A.DocID, 'Manufacturing', A.RaisedByDocID, A.DocID, A.DateCreated,'MF',-1, case when isnull(IsComplete,0) = 1 then 'Completed' else 'Open' END, '' as ClientPO
    FROM AccManufacture A
    LEFT JOIN #Table B ON A.DocID = B.DocID AND 'Manufacturing' = B.DocType collate database_default AND isnull(A.RaisedByDocID,0) = isnull(B.PreviousDocID,0)
    --WHERE (A.DocID IN (SELECT DocID FROM #Table WHERE Source = 'MF') OR A.RaisedByDocID in (SELECT DocID FROM #Table WHERE Source = 'DM') OR A.RaisedByDocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'DM') OR A.DocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'MF')  ) 
    WHERE (A.DocID IN (SELECT DocID FROM #Table WHERE Source = 'MF') OR A.RaisedByDocID in (SELECT DocID FROM #Table WHERE Source = 'DM') OR A.RaisedByDocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'DM') OR A.DocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'MF') OR A.DocID in (SELECT CEDocID FROM #Table) ) 
    AND B.DocID is null

    
    
    SET @LastCount = @Counter
    SET @Counter = (SELECT Count(DocID) FROM #Table)
END

SELECT convert(varchar,DocID) + '##' + DocType,DocType as [Doc. Type], left('00000000', 8- len(DocNo)) + convert(varchar,DocNo) as [Doc. No.],  convert(varchar,CreateDate,103) as [Date Created],DocStatus as [Status],ClientPO as [Reference]  FROM #Table 
where Source = @Source
ORDER BY CreateDate Desc, DocID


DROP Table #Table

Set NoCount Off","0","","1","LRA-FUSION","0","0","fusion"
"39818","cv_Acc_Manufacture_Output_Detail","","DECLARE @DocID as integer
DECLARE @StockID as integer
DECLARE @SellQty as float
SET @DocID = {docid}
SET @StockID = {stockid}
Set @SellQty = {sellqty}


SELECT Distinct convert(varchar,SD.DepStockID)+':'+convert(varchar,SD.AccSTOCK_DepID), STK.StockCode as [Material Code], STK.StockDescription as [Material Description], L.Value as [Unit],
/*convert(varchar,cast(round((SD.DepSellingQty / pstk.SoldByToPurchasedByRatio) * @SellQty ,6) as money),2)*/
round((Convert(float,SD.DepSellingQty) / Convert(float,pstk.SoldByToPurchasedByRatio)) 
/ (case when isnull(SD.Strength,100) / 100 = 0 then 100 ELSE isnull(SD.Strength,100) /100 END )
* (Case when isnull(SD.Wastage,0) = 0 then 1 ELSE  isnull(SD.Wastage,0) END)
* @SellQty,8) as [Qty To Use],
convert(varchar,cast(isnull([AlreadyUsed], 0) as money),1) as [Qty Already Used]
FROM AccStock_Dep SD
LEFT JOIN (SELECT StockID, StockCode,StockDescription,SoldBy FROM AccStock) STK
ON SD.DepStockID = STK.StockID
LEFT JOIN (SELECT StockID,SoldByToPurchasedByRatio FROM AccStock) PSTK
ON SD.PriStockID = PSTK.StockID
LEFT JOIN Lookup L ON STK.SoldBy = L.LookupID
LEFT JOIN (SELECT DocID,StockID, Sum(qty) as [AlreadyUsed] FROM accManufacture_Detail Group By StockID,DocID) MD ON
MD.DocID = @DocID AND MD.Stockid = SD.DepStockID
Where SD.PriStockID = @StockID","0","","1","LRA-FUSION","0","0","fusion"
"39819","cv_Acc_Manufacture_Outputs","","DECLARE @DocID as integer
SET @DocID = {docid}

SELECT MO.OutputID, STK.StockCode as [Output Code], STK.StockDescription as [Output Description],L.Value as [Unit],
Convert(varchar,cast(SellingQty as money),1) as [Expected Qty], Convert(varchar,cast(isnull(ActualQty,0) as money),1) as [Actual Qty],Step,isnull(status,'New') as [Status]
FROM AccManufacture_Output MO
LEFT JOIN (SELECT StockID, StockCode,StockDescription,SoldBy from AccStock) STK ON MO.StockID = STK.Stockid
LEFT JOIN Lookup L ON Stk.SoldBy  = L.Lookupid
WHERE MO.DocID = @docid
ORDER BY STEP desc,OutputID","0","","1","LRA-FUSION","0","0","fusion"
"39820","cv_Acc_Manufacture_QC","","
SELECT ManufQCID,StockDescription as [Output], TestName as [Test], MinVal as [Min], TypVal as [Typ], MaxVal as [Max],UOM as [Units], Results  
FROM AccManufacture_QC QC
LEFT JOIN (SELECT OutPutID, StockID FROM AccManufacture_Output) MO
ON QC.OutputID = MO.OutPutID
LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK
ON MO.StockID = STK.StockID
{where}
ORDER BY ManufQCID","0","","1","LRA-FUSION","0","0","fusion"
"39821","cv_Acc_Print_Manufacture_QC","","DECLARE @DocID as bigint
DECLARE @OutputID as bigint
SET @DocID = {docid}
SET @OutputID = {outputid}

SELECT TestName as [Test], Minval as [Min], TypVal as [Typ], MaxVal as [Max], UOM as [Units], Results
FROM AccManufacture_QC
WHERE DocID = @DocID
AND OutputID = @OutputID
ORDER BY ManufQCID","0","","1","LRA-FUSION","0","0","fusion"
"39822","cv_Acc_Print_PurchaseOrder_Shipping","","","0","","1","LRA-FUSION","0","0","fusion"
"39823","cv_Acc_Print_CreditorDoc_Header_Shipping","","
SELECT Top 1
Case When isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END as [<client>],
Case When isnull(DM.UseEC,0) = 0 then E.LegalName ELSE EC.Contact END as [<legalname>],
ISNULL(ENC.Cell,'') AS [<scell>],
CONVERT(VARCHAR, DM.DeliveryDate, 103) as [<deliverydate>],
DM.Currency as [<currency>],
ISNULL(DM.Address,'') as [<address1>],
u.staffext as [<ext>],
u.staffext as [<sext>],
u.staffmail as [<Semail>],
u.staffmail as [<semail>],
ISNULL(DM.City,'') as [<address2>],
ISNULL(DM.Region,'') as [<address4>],
ISNULL(DM.Code,'') as [<address3>],
ISNULL(DM.Country,'') as [<address5>],
ISNULL(EA.Address1,'') as [<poaddress1>],
ISNULL(EA.Address2,'') as [<poaddress2>],
ISNULL(EA.City,'') as [<poaddress3>],
ISNULL(EA.Code,'') as [<poaddress4>],
ISNULL(EA.Country,'') as [<poaddress5>],
ISNULL(ACT.TaxTypeName,'') as [<exempt>],
isnull(EH.Accountnum,'') as [<holdingaccnum>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalEx) as [<totalex>],
isnull(E.Accountnum,'') as [<companyaccount>],
ISNULL(E.website,'') as [<cURL>],
ISNULL(E.VatNum,'') as [<cvat>],

isnull(DS.ContactDetails,'')as [<companycontact>],
isnull(DS.Emails,'')as [<companymail>],
isnull(DS.Telephone       ,'')as [<companytel>],
isnull(DS.Faxno,'')as [<companyfax>],
ISNULL(DS.URL,'') AS [<URL>],
CASE WHEN isnull(EA.Address1,'') <> '' THEN isnull(EA.Address1,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Address2,'') <> '' THEN isnull(EA.Address2,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Address3,'') <> '' THEN isnull(EA.Address3,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.City,'') <> '' THEN isnull(EA.City,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Country,'') <> '' THEN isnull(EA.Country,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Code,'') <> '' THEN isnull(EA.Code,'') ELSE '' END as [<address>],
u.[Consultant] as [<consultant>],
DM.ClientPo as [<refno>],
Case when isnull(DM.UseEC,0) = 0 then isnull(E.Accountnum, E.entityid) ELSE isnull(EC.Accountnum, EC.EntitycontactID) END as [<account>],
E.VatNum as [<clientvat>],
ISNULL(AttOf.AttentionOF, AEc.[AccountContact]) as [<contact>],
ISNULL(AttOf.Email, AEc.Email) as [<email>],
ISNULL(AttOf.Phone1, AEc.Phone1) as [<phone>],
ISNULL(AttOf.Phone1, AEc.Phone1) as [<Telephone>],
ISNULL(AttOf.Fax, AEc.Fax) as [<fax>],
P.ProjectID as [<projectno>],
P.ProjectName as [<projectname>],
convert(varchar,isnull(DM.DateCompleted, getdate()),103) as [<docdate>],
Case when DM.Doctype = 'Supplier Invoice' and DM.DocStatus = 'Open' then 'Tax Invoice' WHEN DM.Doctype = 'Supplier Invoice' and DocStatus <> 'Open' THEN 'Tax Invoice' ELSe DM.DocType END as [<doctype>],
isnull(DS.Prefix,'') + ' ' + convert(varchar,DM.DocNo) as [<docno>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalEx) as [<totalex>],
DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalEx / ISNULL(DM.ROE,1))-(DD.Discount / ISNULL(DM.ROE,1))) as [<totalexcl>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.Discount) as [<discount>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl) as [<totalincl>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl) as [<totalincl>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl  - (DD.TotalEx - DD.Discount)) as [<totalvat>], 
ISNULL(DM.Currency,'') + ' ' + dbo.fnFormatNumber((DD.TotalEx / DM.ROE) - (DD.Discount / DM.ROE)) as [<totalexdisc>],
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
case ISNULL(DM.Delivery,0) when 0 then 'For collection' ELSE ISNULL(DM.Address,'') END as [<Daddress1>],
	ISNULL(DM.City,'') as [<Daddress2>],
	ISNULL(DM.Code,'') as [<Daddress3>],
	ISNULL(DM.region,'') as [<Daddress4>],
	ISNULL(DM.Country,'') as [<Daddress5>],
case isnull(DM.Delivery,0) when 0 then 'For collection' ELSE isnull(DM.Address,'') END as [<deladdress1>],
isnull(DM.City,'') + isnull(', ' + DM.Code,'') as [<deladdress2>],
isnull(DM.region,'') as [<deladdress3>],
isnull(DM.Country,'') as [<deladdress4>],
isnull(LPT.Value, 'C.O.D.') as [<paymentterms>],
DM.memo as [<notes>],
'' as [<terms>],
'' as [<banking>],
DS.Footer as [<footer>],
'' as [<agent>],
E.compregnum as [<clientreg>],
CMP.DocType + ' ' + isnull(DS.Prefix,'') + ' ' + convert(varchar,CMP.DocNo) as [<prevdocno>]
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] ,  sum(PriceEx * Qty * (1 - (isnull(Discperc,0) / 100)) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl], DocID FROM CREDITOR_DETAIL Group By DocID) DD
ON DM.DocID = DD.DocID
LEFT JOIN (SELECT EntityID, Company,LegalName ,VATNum,AccountNum,InvoiceTo,PaymentTerms,website,compregnum,AlternateCompanyID From Entity) E
ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN Lookup LPT ON E.PaymentTerms = LPT.LookupID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact], Cell, Accountnum FROM EntityContact) EC
ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AttentionOf],Accountnum, Phone1, Fax,email FROM EntityContact) AttOf
ON DM.AttentionOF = AttOf.EntityContactID 
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact],Accountnum, Phone1, Fax,email  FROM EntityContact) AEC
ON E.InvoiceTo = AEc.EntityContactID 
LEFT JOIN (SELECT ProjectID, EntityContactID, ProjectName FROM Projects) P
ON DM.ProjectID = P.ProjectID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [ProjContact] FROM EntityContact) ECP
ON P.EntityContactID  = ECP.EntityContactID 

LEFT JOIN (SELECT userid, isnull(users.firstname,'')+ ' ' + isnull(users.surname,'') as [Consultant]

,users.StaffID
		,isnull(staff.Tel,'') as [StaffTel]
		,Isnull(Staff.Fax,'') as stafffax
		,Isnull(staff.Email,'') as staffmail
		,isnull(staff.Cell,'') as staffcell 
		,isnull(staff.Ext,'') as staffext 

 From users
Left Join Staff 
	on users.StaffID=Staff.StaffID
) u
ON DM.SalesRepID = u.userid

LEFT JOIN (SELECT EntityID, Company, LegalName, VATNum, AccountNum, InvoiceTo, PaymentTerms From Entity) EH
	ON E.AlternateCompanyID = EH.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
ON DM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%postal%') EA
ON DM.Entityid = EA.Entityid
LEFT JOIN (SELECT DocID, DocNo, DocType FROM DEBTOR_MASTER) CMP
	ON DM.PreviousDocID = CMP.DocID
Left Join AccTaxType ACT on ACT.TaxTypeID=DM.TaxTypeID
LEFT JOIN (Select EntityContactid, EntityID, Cell FROM EntityContact) ENC
    ON DM.Entityid = ENC.EntityID
WHERE DM.DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"39824","cv_Acc_Print_DebtorDoc_Header_Shipping","","Declare @IsShipping Bit
Set @IsShipping = (select selected from crmsetup where variable = 'UseShippingAddress')
 

SELECT Top 1
Case When isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END as [<client>],
 
IsNull(Convert(varchar,dm.eta,103),'N/A') as [<deliverydate>],

ead.Address1 as [<docdeliveryaddress1>] ,
ead.Address2 as [<docdeliveryaddress2>] ,
ead.Address3 as [<docdeliveryaddress3>] ,
isnull(DS.Telephone	,'')as [<companytel>],
isnull(EH.LegalName,E.Legalname) as [<legalname>],
	isnull(E.Switchboard,'') as [<Telephone>],
	isnull(E.Switchboard,'') as [<phone>],
	isnull(E.Fax,'') as [<fax>],
Case When isnull(@IsShipping,0) = 1 then isnull(DM.Address,'') Else isnull(EAP.Address1,'') End as [<Daddress1>],
Case When isnull(@IsShipping,0) = 1 then isnull(DM.City,'') Else isnull(EAP.City,'') End as [<Daddress2>],
Case When isnull(@IsShipping,0) = 1 then isnull(DM.Code,'') Else isnull(EAP.Code,'') End as [<Daddress3>],
Case When isnull(@IsShipping,0) = 1 then isnull(DM.Region,'') Else isnull(EAP.Address2,'') End as [<Daddress4>],
Case When isnull(@IsShipping,0) = 1 then isnull(DM.Country,'') Else isnull(EAP.Address3,'') End as [<Daddress5>],


/*
isnull(EAP.Address1,'') as [<Daddress1>],
	isnull(EAP.Address2,'') as [<Daddress2>],
	isnull(EAP.Address3,'') as [<Daddress3>],
	isnull(EAP.Code,'') as [<Daddress4>],
	isnull(EAP.city,'') as [<Daddress5>],
*/
isnull(LPT.Value, '') as [<paymentterms>],
IsNull(EA.Address1,'') as [<poaddress1>],
IsNull(EA.Address2,'') as  [<poaddress2>],
IsNull(EA.Address3,'') as  [<poaddress3>],
IsNull(EA.City,'') as  [<pocity>],
IsNull(EA.Region,'') as [<poprovince>],
IsNull(EA.Code,'') as [<pocode>],
isnull(EH.Accountnum,'') as [<holdingaccnum>],

CASE WHEN isnull(EA.Address1,'') <> '' THEN isnull(EA.Address1,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.Address2,'') <> '' THEN isnull(EA.Address2,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.Address3,'') <> '' THEN isnull(EA.Address3,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.City,'') <> '' THEN isnull(EA.City,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.Country,'') <> '' THEN isnull(EA.Country,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.Code,'') <> '' THEN isnull(EA.Code,'') ELSE '' END as [<address>],

isnull(EH.CompRegNum,E.CompRegNum) as [<clientreg>],
DM.Currency as [<currency>],
isnull(EA.Address1,'') as [<address1>],
isnull(EA.Address2,'') as [<address2>],
isnull(EA.Address3,'') as [<address3>],
isnull(EA.Code,'') as [<address4>],
isnull(EA.city,'') as [<address5>],
u.[Consultant] as [<consultant>],
DM.ClientPo as [<refno>],
Case when isnull(DM.UseEC,0) = 0 then isnull(E.Accountnum, E.entityid) ELSE isnull(EC.Accountnum, EC.EntitycontactID) END as [<account>],
E.VatNum as [<clientvat>],
Case when Att.Entitycontactid is not null then Att.[Attention] ELSE
	Case when ECP.Entitycontactid is not null then ECP.[ProjContact] ELSE 
		Case when isnull(DM.UseEC,0) = 0 then AEC.[AccountContact] ELSE EC.Contact END
	END
END as [<contact>],
P.ProjectID as [<projectno>],
isnull(E.VATnum,'') as [<cvat>],
isnull(DS.URL,'') as [<URL>],
    isnull(DS.ContactDetails,'')as [<companycontact>],
	isnull(DS.Emails,'')as [<companymail>],
	isnull(DS.Telephone	,'')as [<companytel>],
	isnull(DS.Faxno,'')as [<companyfax>],
P.ProjectName as [<projectname>],
convert(varchar,isnull(DM.DateCompleted, getdate()),103) as [<docdate>],
Case when Doctype = 'Invoice' and DocStatus = 'Open' then 'Proforma Invoice' WHEN Doctype = 'Invoice' and DocStatus <> 'Open' THEN 'Tax Invoice' ELSe DocType END as [<doctype>],
Case when Doctype = 'Invoice' and DocStatus = 'Open' then 'Proforma Invoice' WHEN Doctype = 'Invoice' and DocStatus <> 'Open' THEN 'Tax Invoice' ELSe DocType END as [<doctype>],
isnull(DS.Prefix,'') + ' ' + convert(varchar,DM.DocNo) as [<docno>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalEx / isnull(DM.ROE,1)) as [<totalex>],
DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalEx / isnull(DM.ROE,1))-(DD.Discount / isnull(DM.ROE,1))) as [<totalexcl>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.Discount / isnull(DM.ROE,1)) as [<discount>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl / isnull(DM.ROE,1)) as [<totalincl>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl / isnull(DM.ROE,1)) as [<totalincl>],
DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1)) as [<totalvat>], 
ISNULL(DM.Currency,'') + ' ' + dbo.fnFormatNumber((DD.TotalEx / DM.ROE) - (DD.Discount / DM.ROE)) as [<totalexdisc>],
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
Isnull(ACT.TaxTypeName,'') as [<exempt>],
DM.memo as [<notes>],
DS.Terms as [<terms>],
DS.Banking as [<banking>],
DS.Footer as [<footer>],
Case when isnull(DM.UseEC,0) = 0 then 
	(SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = (SELECT Top 1 agnetID FROM EntityContact where entitycontactID = E.InvoiceTo))
ELSE
	(SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = Ec.agnetID)
END as [<agent>],
isnull(DR.RuleName, 'Standard') as [<documentrule>]
,att.email as [<email>]
,u.staffext as [<sext>]
,u.staffext as [<ext>]
,u.staffmail as [<semail>]
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] ,  sum(PriceEx * Qty * (1 - (isnull(Discperc,0) / 100)) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl], DocID FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group By DocID) DD
ON DM.DocID = DD.DocID
LEFT JOIN (Select Entitycontactid,Email, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention],Accountnum,AgnetID FROM EntityContact) Att
ON DM.AttentionOf = Att.EntityContactID 
LEFT JOIN (SELECT EntityID, Company,LegalName ,VATNum,AccountNum,InvoiceTo,CompRegNum,AlternateCompanyID,PaymentTerms,Switchboard,Fax From Entity) E
ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (SELECT EntityID, Company,LegalName ,VATNum,AccountNum,InvoiceTo,CompRegNum,AlternateCompanyID From Entity) EH
ON E.AlternateCompanyID = EH.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact],Accountnum,AgnetID FROM EntityContact) EC
ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact],Accountnum FROM EntityContact) AEC
ON E.InvoiceTo = AEc.EntityContactID 
LEFT JOIN (SELECT ProjectID, EntityContactID, ProjectName FROM Projects) P
ON DM.ProjectID = P.ProjectID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [ProjContact] FROM EntityContact) ECP
ON P.EntityContactID  = ECP.EntityContactID 

LEFT JOIN Lookup LPT ON E.PaymentTerms = LPT.LookupID

LEFT JOIN 
(SELECT userid,
 isnull(Users.firstname,'')+ ' ' + isnull(Users.surname,'') as [Consultant]
 ,users.StaffID
		,isnull(staff.Tel,'') as [StaffTel]
		,Isnull(Staff.Fax,'') as stafffax
		,Isnull(staff.Email,'') as staffmail
		,isnull(staff.Cell,'') as staffcell 
		,isnull(staff.Ext,'') as staffext 
 
 From users
 Left Join Staff 
	on users.StaffID=Staff.StaffID
 ) u
ON DM.SalesRepID = u.userid

 

LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
ON DM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%Physical%') EA
ON DM.Entityid = EA.Entityid
Left Join (select * from Entityaddress where Addresstype like '%Delivery Address%')EAP 
ON isnull(EH.Entityid, E.EntityID) = EAP.Entityid

Left Join EntityAddress EAD
on ead.EntityAddressID = DM.DeliveryaddressID
Left Join AccTaxType ACT on ACT.TaxTypeID=DM.TaxTypeID
LEFT JOIN (SELECT * FROM AccDocRules) DR
ON DM.RuleID = DR.DocRulesID
WHERE DM.DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"39825","cv_Acc_Client_Limits","","SELECT 
	Z.CreditLimit,
	SUM(Z.Balance) as [Balance],
	Z.PaymentTerms
FROM (
	SELECT
	CASE Isnull(DM.UseEC,0) when 0 then isnull(E.CreditLimit,0) ELSE 0 END as [CreditLimit],
	sum(isnull(OBTotal,0)) + sum(CASE doctype when 'Credit Note' then -1 when 'Payment Receipt' then -1 ELSE 1 END * cast(DM.ROE as money) * cast([Total Incl. VAT]   as money)) as [Balance],
	CASE Isnull(DM.UseEC,0) when 0 then isnull(L.Value,'') ELSE '' END as [PaymentTerms]
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT EntityID, 
		case when ltrim(isnull(Accountnum,'')) not like '' then ltrim(isnull(Accountnum,'') + ' - ' + Company) else company end as [Company], 
			isnull(accountnum,'') as [AccountNum],CreditLimit, PaymentTerms FROM Entity) E
	ON DM.EntityID = E.EntityID AND isnull(DM.useEC,0) = 0
	LEFT JOIN (SELECT EntityContactID, rtrim(ltrim(isnull(Accountnum,'') + ' '+ isnull(Firstname,'') + ' ' + isnull(surname,''))) as [Contact] FROM EntityContact) EC
	ON DM.Entityid = EC.EntityContactID AND isnull(DM.useEC,0) = 1
	LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100)) as [Total Ex. VAT],
				 Sum(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100) * (isnull(Tax,0) /100 + 1)) as [Total Incl. VAT], 
				 Sum(isnull(CostPriceEx,0) * qty) as [Est. Cost], 
				 Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
				 FROM DEBTOR_DETAIL where isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
	ON DM.DocID = DD.Docid
	LEFT JOIN (SELECT -1 * (isnull(AmtCurrent,0) + isnull(Amt30,0) + isnull(amt60,0) + isnull(Amt90,0) + isnull(Amt120,0)) * isnull(Roe,1) as [OBTotal], UseEc, Entityid  FROM AccOPENINGBALANCE) AO
	ON DM.Entityid = AO.Entityid and isnull(DM.UseEc,0) = isnull(AO.UseEC,0)
	LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
	ON DM.DocID = SD.DocID
	LEFT JOIN (SELECT LookupID, Value FROM Lookup) L
	ON E.PaymentTerms = L.LookupID
	WHERE DM.DocType in ('Invoice', 'Credit Note', 'Payment Receipt')
	AND DM.DocStatus = 'Completed'
	AND DM.entityid = {entityid}
	AND isnull(DM.UseEC,0) = {useec}
	Group By E.CreditLimit, DM.UseEC,L.Value
) Z
GROUP BY Z.CreditLimit, Z.PaymentTerms","0","","1","LRA-FUSION","0","0","fusion"
"39826","cv_Acc_Debtor_History","","
SELECT 
DM.DocID, 
DocType as [Doc. Type], 
left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
Ldiv.Value as [Division], 
convert(varchar, DateCompleted, 103) as [Doc. Date],DocStatus as [Status],
ClientPO as [Client Order No.],
DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
dbo.fnFormatNumber(CASE doctype when 'Credit Note' then -1 ELSE 1 END * [Total Ex. VAT]) as [Total Ex. VAT], 
dbo.fnFormatNumber(CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT] - [Total Ex. VAT])) as [Total VAT], 
dbo.fnFormatNumber(CASE doctype when 'Credit Note' then -1 ELSE 1 END * [Total Incl. VAT])  as [Total Incl. VAT]
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT DocID, 
			sum(PriceEx * Qty * ((100 - isnull(Discperc,0)) /100)) as [Total Ex. VAT],
            sum(PriceEx * Qty * ((100 - isnull(Discperc,0)) /100) * (isnull(Tax,0) /100 + 1)) as [Total Incl. VAT], 
            sum(isnull(CostPriceEx,0) * qty) as [Est. Cost], 
            Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
            FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
ON DM.DocID = DD.Docid
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LDiv
ON DM.DivisionID = LDiv.LookupID
{where}
ORDER BY DM.DocID desc","0","","1","LRA-FUSION","0","0","fusion"
"39827","cv_Acc_Supplier_Limits","","
SELECT


CASE Isnull(DM.UseEC,0) when 0 then isnull(E.CreditLimit,0) ELSE 0 END as [CreditLimit],
sum(isnull(OBTotal,0)) + sum(CASE doctype when 'Supplier Credit Note' then -1 when 'Supplier Payment' then -1 ELSE 1 END * cast(DM.ROE as money) * cast([Total Incl. VAT]   as money)) as [Balance],
CASE Isnull(DM.UseEC,0) when 0 then isnull(L.Value,'') ELSE '' END as [PaymentTerms]
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT EntityID, 
    case when ltrim(isnull(Accountnum,'')) not like '' then ltrim(isnull(Accountnum,'') + ' - ' + Company) else company end as [Company], 
        isnull(accountnum,'') as [AccountNum],CreditLimit, PaymentTerms FROM Entity) E
ON DM.EntityID = E.EntityID AND isnull(DM.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, rtrim(ltrim(isnull(Accountnum,'') + ' '+ isnull(Firstname,'') + ' ' + isnull(surname,''))) as [Contact] FROM EntityContact) EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.useEC,0) = 1
LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100)) as [Total Ex. VAT],
             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100) * (isnull(Tax,0) /100 + 1)) as [Total Incl. VAT], 
             Sum(isnull(CostPriceEx,0) * qty) as [Est. Cost], 
             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
             FROM CREDITOR_DETAIL  Group by Docid) DD
ON DM.DocID = DD.Docid
LEFT JOIN (SELECT -1 * (isnull(AmtCurrent,0) + isnull(Amt30,0) + isnull(amt60,0) + isnull(Amt90,0) + isnull(Amt120,0)) * isnull(Roe,1) as [OBTotal], UseEc, Entityid  FROM AccOPENINGBALANCE) AO
ON DM.Entityid = AO.Entityid and isnull(DM.UseEc,0) = isnull(AO.UseEC,0)
LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM CREDITOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
ON DM.DocID = SD.DocID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) L
ON E.PaymentTerms = L.LookupID
WHERE DM.DocType in ('Supplier Invoice', 'Supplier Credit Note', 'Supplier Payment')
AND DM.DocStatus = 'Completed'
AND DM.entityid = {entityid}
Group By E.CreditLimit, DM.UseEC,L.Value

","0","","1","LRA-FUSION","0","0","fusion"
"39828","cv_Acc_Creditor_History","","
SELECT DM.DocID, DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], Ldiv.Value as [Division], 
convert(varchar, DateCompleted, 103) as [Doc. Date],DocStatus as [Status],
DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
dbo.fnFormatNumber(CASE doctype when 'Credit Note' then -1 ELSE 1 END * [Total Ex. VAT]) as [Total Ex. VAT], 
dbo.fnFormatNumber(CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT] - [Total Ex. VAT])) as [Total VAT], 
dbo.fnFormatNumber(CASE doctype when 'Credit Note' then -1 ELSE 1 END * [Total Incl. VAT])  as [Total Incl. VAT]
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT DocID, 
			sum(PriceEx * Qty * ((100 - isnull(Discperc,0)) /100)) as [Total Ex. VAT],
            sum(PriceEx * Qty * ((100 - isnull(Discperc,0)) /100) * (isnull(Tax,0) /100 + 1)) as [Total Incl. VAT], 
            sum(isnull(CostPriceEx,0) * qty) as [Est. Cost], 
            Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
            FROM CREDITOR_DETAIL Group by Docid) DD
ON DM.DocID = DD.Docid
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LDiv
ON DM.DivisionID = LDiv.LookupID
{where}
ORDER BY DM.DocID desc



","0","","1","LRA-FUSION","0","0","fusion"
"39829","cv_Project_Calendar2","","Declare @Start as datetime
Declare @End as datetime
Set @start = '{start}'
Set @end =   '{end}'


SELECT Distinct M.ModuleID,P.ProjectID, Modulename,null as [ProjectName], M.Startdate, M.Enddate,Progress,E.Company
From modules M
LEFT JOIN moduleAssignees MA ON M.ModuleID = MA.ModuleID
LEFT JOIN Projects P ON M.ProjectID = P.ProjectID
LEFT JOIN (SELECT Entityid, Company From Entity) E
ON P.Entityid = E.Entityid
--LEFT JOIN (SELECT * from ModuleDates) MD on M.ModuleID = MD.ModuleID
WHERE ((M.startdate between  @start and @end) OR (m.enddate between @start AND  @end) OR ((M.startdate < @start) and (M.enddate > @end))) 
{where}

UNION ALL 

SELECT Distinct null, P.ProjectID,null, ProjectName , P.StartDate ,PD2.enddate,Null,E.Company
From Projects P 
LEFT JOIN (SELECT Min(ProjDate) as [StartDate], ProjectID FROM ProjectDates group by ProjectID) PD 
ON P.ProjectID = PD.ProjectID
LEFT JOIN (SELECT Max(ProjDate) as [endDate], ProjectID FROM ProjectDates group by ProjectID) PD2 
ON P.ProjectID = PD2.ProjectID
LEFT JOIN (SELECT Entityid, Company From Entity) E
ON P.Entityid = E.Entityid
LEFT JOIN (SELECT ModuleID, ModuleName,ProjectID,startdate,enddate From Modules) M
ON P.ProjectID = M.ProjectID
LEFT JOIN moduleAssignees MA 
ON M.ModuleID = MA.ModuleID
--LEFT JOIN (SELECT * from ModuleDates) MD on M.ModuleID = MD.ModuleID
WHERE ((M.startdate between  @start and @end) OR (M.enddate between @start AND  @end) OR ((M.startdate < @start) and (M.enddate > @end))) 

/*((P.startdate between  @start and @end) OR (enddate between @start AND  @end) OR ((P.startdate <= @start) and (enddate >= @end))) */
{where}
<%where%>

ORDER BY e.company,P.ProjectID , ProjectName Desc","0","","1","LRA-FUSION","0","0","fusion"
"39830","cv_Project_calendar_export_2","","Declare @Start as datetime
Declare @End as datetime
Set @start = '{start}'
Set @end =   '{end}'
--Set @start = '2010/01/06 00:00:00'
--Set @end =   '2010/01/11 23:59:59'

SELECT DISTINCT ModuleID, Company AS [Client],isnull(ModuleName,'') as [Module Name], Convert(Varchar,StartDate,111) AS [Date],isnull(ModuleNotes,'') AS [MComments], isnull(Note,'') as [LComment] 
FROM 
(
SELECT Distinct 
	M.ModuleID,
	P.ProjectID, 
	Modulename,
	null as [ProjectName], 
	M.Startdate, 
	Enddate,
	Progress,
	E.Company, 
	S.StaffName, 
	M.ModuleNotes,
	n.note AS [Note]
From modules M
LEFT JOIN moduleAssignees MA ON M.ModuleID = MA.ModuleID
LEFT JOIN Projects P ON M.ProjectID = P.ProjectID
LEFT JOIN (SELECT Entityid, Company From Entity) E
ON P.Entityid = E.Entityid
LEFT JOIN (SELECT (Firstname + ' ' + Surname) as [StaffName], StaffID FROM Staff) S
ON MA.StaffID = S.StaffID
left join (select top 1 moduleid,notes as [note] from notes order by [date] desc ) n 
	on n.moduleid = m.moduleid
WHERE ((M.startdate between  @start and @end) OR (enddate between @start AND  @end) OR ((M.startdate < @start) and (enddate > @end))) 
{where}

UNION ALL 

SELECT Distinct null, P.ProjectID,null, ProjectName , P.StartDate ,PD2.enddate,Null,E.Company, S.StaffName, M.ModuleNotes,n.note
From Projects P 
LEFT JOIN (SELECT Min(ProjDate) as [StartDate], ProjectID FROM ProjectDates group by ProjectID) PD 
ON P.ProjectID = PD.ProjectID
LEFT JOIN (SELECT Max(ProjDate) as [endDate], ProjectID FROM ProjectDates group by ProjectID) PD2 
ON P.ProjectID = PD2.ProjectID
LEFT JOIN (SELECT Entityid, Company From Entity) E
ON P.Entityid = E.Entityid
LEFT JOIN (SELECT ModuleID, ModuleName,ProjectID,startdate,enddate, ModuleNotes From Modules) M
ON P.ProjectID = M.ProjectID
LEFT JOIN moduleAssignees MA 
ON M.ModuleID = MA.ModuleID
LEFT JOIN (SELECT (Firstname + ' ' + Surname) as [StaffName], StaffID FROM Staff) S
ON MA.StaffID = S.StaffID
left join (select top 1 moduleid,[notes] as [note] from notes order by [date] desc ) n 
	on n.moduleid = m.moduleid
WHERE ((M.startdate between  @start and @end) OR (m.enddate between @start AND  @end) OR ((M.startdate < @start) and (m.enddate > @end))) 

/*((P.startdate between  @start and @end) OR (enddate between @start AND  @end) OR ((P.startdate <= @start) and (enddate >= @end))) */
{where}
<%where%>


) a
Where ModuleID is not null

ORDER BY Company, [Date] DESC


","0","","1","LRA-FUSION","0","0","fusion"
"39831","cv_FO16","","Select Distinct 'Code',{SQLSelect} from (
SELECT LineID, MD.StockCode as [Value], MD.StockDescription
FROM AccManufacture_Detail MD where isWasted = 0 AND MD.DocID = {docid} AND MD.StockID in {stockID} AND MD.OutputID is null
) X
Union All
Select Distinct 'Size',{SQLSelect} from (
SELECT LineID, MD.Unit as [Value], MD.StockDescription
FROM AccManufacture_Detail MD where isWasted = 0 AND MD.DocID = {docid} AND MD.StockID in {stockID} AND MD.OutputID is null
) X
Union All
Select Distinct 'Filled',{SQLSelect} from (
SELECT LineID, MD.QTY as [Value], MD.StockDescription
FROM AccManufacture_Detail MD where isWasted = 0 AND MD.DocID = {docid} AND MD.StockID in {stockID} AND MD.OutputID is null
) X
Union All
Select Distinct 'Scrap',{SQLSelect} from (
SELECT LineID, MD.QTY as [Value], MD.StockDescription
FROM AccManufacture_Detail MD where isnull(isWasted,0) <> 0 AND MD.DocID = {docid} AND MD.StockID in {stockID} AND MD.OutputID is null
) X
Union All
Select Distinct 'Total',{SQLSelect} from (

	Select IDs,DocID,isnull(Sum(QTY) - SUM(Loss),QTY) as [Value], StockDescription from (
	SELECT null as IDs,DocID, Sum(MD.QTY) as QTY, null as [Loss], MD.StockDescription FROM AccManufacture_Detail MD 
	where isnull(isWasted,0) = 0 AND MD.DocID = {docid} AND MD.StockID in {stockID} AND MD.OutputID is null group by DocID,StockDescription
	Union All
	SELECT null,DocID, null, Sum(MD.QTY) as [Loss],StockDescription FROM AccManufacture_Detail MD 
	where isnull(isWasted,0) <> 0 AND MD.DocID = {docid} AND MD.StockID in {stockID} AND MD.OutputID is null group by DocID,StockDescription
	) P Where (Loss is not null or QTY is not null) group by IDs,DocID,StockDescription,QTY

) X
Union All
Select Distinct '% Loss',{SQLSelect} from (

	Select IDs,DocID, Convert(Varchar,isnull(SUM(Loss) / Sum(QTY),'0')) + '%' as [Value], StockDescription from (
	SELECT null as IDs,DocID, Sum(MD.QTY) as QTY, null as [Loss], MD.StockDescription FROM AccManufacture_Detail MD 
	where isnull(isWasted,0) = 0 AND MD.DocID = {docid} AND MD.StockID in {stockID} AND MD.OutputID is null group by DocID,StockDescription
	Union All
	SELECT null,DocID, null, Sum(MD.QTY) as [Loss],StockDescription FROM AccManufacture_Detail MD 
	where isnull(isWasted,0) <> 0 AND MD.DocID = {docid} AND MD.StockID in {stockID} AND MD.OutputID is null group by DocID,StockDescription
	) P Where (Loss is not null or QTY is not null) group by IDs,DocID,StockDescription,QTY
) X","0","","1","LRA-FUSION","0","0","fusion"
"39832","cv_FO16_Top","","
Select Distinct StockCode,Sum([Min]) AS [Min],Sum([Typ]) as [Typ],Sum([Max]) as [Max],Sum([QTY Red]) as [QTY Red],Sum([QTY Filled]) as [QTY Filled],AO.ActualQty as [L/kg Pack],AO.ActualQty * Sum([QTY Filled]) as [L/kg] from (
Select A.StockCode,MD.OutputID,Cast(Minval as Float) as [Min], Cast(TypVal as Float) as [Typ], Cast(MaxVal as Float) as [Max], Sum(MD.Qty) as [QTY Red], null AS [QTY Filled],
'' as [L/kg Pack], '' as [L/kg] from AccMANUFACTURE_DETAIL MD
LEFT JOIN (Select * from Accstock) A on A.StockID = MD.StockID
LEFT JOIN (Select * from AccManufacture_QC) AMQ on AMQ.DocID = MD.DocID  
Where MD.DocID = {docid} AND MD.StockID in {stockid} and isnull(Iswasted,0) = 0 AND MD.OutputID is null
group by A.StockCode, AMQ.MinVal,AMQ.TypVal,AMQ.MaxVal,MD.OutputID

Union All

Select A.StockCode,null,null, null, null, null, Sum(MD.Qty) as [QTY Red],
'' as [L/kg Pack], '' as [L/kg] from AccMANUFACTURE_DETAIL MD
LEFT JOIN (Select * from Accstock) A on A.StockID = MD.StockID
LEFT JOIN (Select * from AccManufacture_QC) AMQ on AMQ.DocID = MD.DocID  
Where MD.DocID = {docid} AND MD.StockID in {stockid} and isnull(Iswasted,0) = 1 AND MD.OutputID is null
group by A.StockCode
) X
LEFT JOIN AccMANUFACTURE_OUTPUT AO on AO.DocID = {docid} 
group by StockCode,AO.ActualQty


/*
Select A.StockCode,Minval as [Min], TypVal as [Typ], MaxVal as [Max], SellingQTY as [QTY Red], ActualQty as [QTY Filled], '' as [L/kg Pack], '' as [L/kg] from AccMANUFACTURE_OUTPUT AMO
LEFT JOIN (Select * from Accstock) A on A.StockID = AMO.StockID
LEFT JOIN (Select * from AccManufacture_QC) AMQ on AMQ.DocID = AMO.DocID {where}
*/","0","","1","LRA-FUSION","0","0","fusion"
"39833","cv_FO16_ContainerQTY","","Select LL.Value,Convert(varchar,cast(round(MD.Qty,4) as money),1)  as [Qty]  from AccManufacture_Detail MD
LEFT JOIN (Select * from LinkLookup) LL on LL.LinkLookupID = MD.ContainerID
LEFT JOIN (SELECT * FROM accManufacture_Output) MO ON MD.OutPutID = MO.OutputID
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK On MO.StockID = STK.StockID
Where MD.DocID = {DocID} AND MD.StockID in {stockID} AND MD.OutputID is null

UNION ALL

Select 'B / Total',Convert(varchar,cast(round(Sum(MD.Qty),4) as money),1)  as [Qty]  from AccManufacture_Detail MD
LEFT JOIN (Select * from LinkLookup) LL on LL.LinkLookupID = MD.ContainerID
LEFT JOIN (SELECT * FROM accManufacture_Output) MO ON MD.OutPutID = MO.OutputID
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK On MO.StockID = STK.StockID
Where MD.DocID = {DocID} AND MD.StockID in {stockID} AND MD.OutputID is null","0","","1","LRA-FUSION","0","0","fusion"
"39834","cv_FO16_Chart","","Select Distinct StockDescription, Value from (

    Select IDs,DocID, isnull(SUM(Loss) / Sum(QTY),0) as [Value], StockDescription from (
    SELECT null as IDs,DocID, Sum(MD.QTY) as QTY, null as [Loss], MD.StockDescription FROM AccManufacture_Detail MD 
    where isnull(isWasted,0) = 0 AND MD.DocID = {docid} AND MD.OutputID is null group by DocID,StockDescription
    Union All
    SELECT null,DocID, null, Sum(MD.QTY) as [Loss],StockDescription FROM AccManufacture_Detail MD 
    where isnull(isWasted,0) <> 0 AND MD.DocID = {docid} AND MD.OutputID is null group by DocID,StockDescription
    ) P Where (Loss is not null or QTY is not null) group by IDs,DocID,StockDescription,QTY
) X","0","","1","LRA-FUSION","0","0","fusion"
"39835","cv_FO16_Output","","Select Sum([L/kg]) from (
Select AO.ActualQty * Sum([QTY Filled]) as [L/kg] from (
Select A.StockCode,MD.OutputID,Cast(Minval as Float) as [Min], Cast(TypVal as Float) as [Typ], Cast(MaxVal as Float) as [Max], Sum(MD.Qty) as [QTY Red], null AS [QTY Filled],
'' as [L/kg Pack], '' as [L/kg] from AccMANUFACTURE_DETAIL MD
LEFT JOIN (Select * from Accstock) A on A.StockID = MD.StockID
LEFT JOIN (Select * from AccManufacture_QC) AMQ on AMQ.DocID = MD.DocID  
Where MD.DocID = {docid} AND MD.StockID in {stockID} and isnull(Iswasted,0) = 0 AND MD.OutputID is null
group by A.StockCode, AMQ.MinVal,AMQ.TypVal,AMQ.MaxVal,MD.OutputID

Union All

Select A.StockCode,null,null, null, null, null, Sum(MD.Qty) as [QTY Red],
'' as [L/kg Pack], '' as [L/kg] from AccMANUFACTURE_DETAIL MD
LEFT JOIN (Select * from Accstock) A on A.StockID = MD.StockID
LEFT JOIN (Select * from AccManufacture_QC) AMQ on AMQ.DocID = MD.DocID  
Where MD.DocID = {docid} AND MD.StockID in {stockID} and isnull(Iswasted,0) = 1 AND MD.OutputID is null
group by A.StockCode
) X
LEFT JOIN AccMANUFACTURE_OUTPUT AO on AO.DocID = 39 
group by AO.ActualQty
) V","0","","1","LRA-FUSION","0","0","fusion"
"39836","cv_Job_Stock_Transfer_Check","","SELECT * FROM Job_Stock JS
LEFT JOIN (SELECT * FROM AccStockTransferDetail) STD
ON JS.stockTransferDetailID = STD.TransferDetailID
 where isnull(stockTransferDetailID,0) > 0
AND (STD.FromDiv is null or ToDiv is null OR FromCont is null OR ToCont is null)
and JS.ProjectID = {projectid}","0","","1","LRA-FUSION","0","0","fusion"
"39837","cv_Job_Stock_Received_Check","","SELECT * FROM Projects P 
LEFT JOIN (SELECT * FROM AccStockTransfer) ST
ON P.JobStockTransferID = ST.StockTransferID OR P.AdditionalJobStockTransferID = ST.StockTransferID
where isnull(ST.StockTransferID,0) > 0
AND ST.DocStatus <> 'Received'
AND P.ProjectID = {projectid}","0","","1","LRA-FUSION","0","0","fusion"
"39838","cv_Print_JobCard_Stock","","DECLARE @ProjectID as integer
Declare @CommentsBelow as bit

SET @ProjectID = {projectid}
Set @CommentsBelow  =  (SELECT Top 1 isnull(Selected,0) from crmSetup where variable = 'CommentsBelow')

{select}
(
SELECT 
    Supplier,
    Code, 
    [Description], 
    Qty, 
    [Price],
    [Tax],
    [Disc],
    [Units],
        [Unit Price],
    Rank,
    [rank2]
     , [Comments]
     , [Group Name]
     ,[Project Name]
FROM 
(
    SELECT 
        e.Company As Supplier,
        Js.StockCode as [Code], 
        Js.StockDescription as [Description],
        convert(varchar, Qty) as [Qty], 
        CONVERT(VARCHAR, CAST(PriceEx * Qty as MONEY),1) as [Price] ,
                CONVERT(VARCHAR, CAST(PriceEx as MONEY),1) as [Unit Price] ,
        Js.Tax as [Tax],
        DiscPerc as [Disc],
        isnull(L.Value,'') as [Units],
        0 as [Rank2],
        LineID as [rank]
        ,JS.comments as [Comments]
        ,GroupName as [Group Name]
        ,isnull(ps.ProjectName,'') as [Project Name]
    FROM Job_Stock js
    LEFT JOIN Entity e ON 
    js.SupplierID = e.EntityID
    Left Join Accstock A on A.StockID=JS.StockID
    Left Join Lookup L on L.LookupID = A.Soldby
    Left Join Projects Ps on js.ProjectID=Ps.ProjectID
    WHERE Js.ProjectID = @ProjectID
    UNION ALL
    
  
    SELECT 
        NULL As Supplier,
        NULL as [Code], 
        isnull(JS.Comments,'') as [Description],
        NULL as [Qty], 
        NULL as [Price],
Null as [Unit Price],
        Null as [Tax],
        Null as [Disc],
        Null as [Units],
        1 as [Rank2],
        LineID as [rank]
        ,null as [Comments]
         ,null as [Group Name]
        ,null  as [Project Name]
        FROM Job_Stock js
    LEFT JOIN Entity e ON 
    js.SupplierID = e.EntityID
    WHERE ProjectID = @ProjectID
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(JS.Comments,''))) <> ''

UNION ALL
    
    SELECT null as [Supplier],null as [Code], null as [Description], null as [Qty], null as [Price] ,Null as [Unit Price],Null as [Tax],Null as [DIsc],Null as [Units],3 as [Rank2],99999999 as [rank], null as [Comments],null as [Group Name],null as [Project Name]
    
    UNION ALL
    
    SELECT 
        LL.Value AS [Model Type],
        MD.Framalink,
        MD.SerialNo,
        MD.LicenceNo,
        MD.CDNo, 
'',
          ''
        ,''
        ,'',
        2,
        ProjectMachineID as [rank]
        , '' as [Comments]
        ,'' as [Group Name]
        ,'' as [Project Name]
    FROM ProjectMachine PM
    LEFT JOIN MachineDetails MD ON MD.MachineConfigID = PM.MachineID
    LEFT JOIN LinkLookup LL ON LL.LinkLookupID = MD.ModelTypeID 
    LEFT JOIN Lookup L ON L.LookupID = LL.LinkedTo 
    WHERE PM.ProjectID = @ProjectID
) A
) X Order by Rank,Rank2


","0","","1","LRA-FUSION","0","0","fusion"
"39839","cv_Print_JobCard_Header","","DECLARE @ProjectID as integer
SET @ProjectID = {projectid}

SELECT P.ProjectID, E.Company as [Customer], isnull(EC.Firstname,'') + ' ' + isnull(EC.Surname,'') as [Contact],
ClientPO, isnull([Date],getdate()) as [Date],Switchboard, Fax,isnull(ST.Firstname,'') + ' ' + isnull(ST.Surname,'') as [Technician]
FROM Projects P 
LEFT JOIN (SELECT Entityid, Company, Switchboard FROM Entity) E
ON P.Entityid = E.Entityid
LEFT JOIN (SELECT top 1 * FROM Projcontacts where ProjectID = @ProjectID) PC
ON P.ProjectID = PC.ProjectID
LEFT JOIN (SELECT * FROM EntityContact) EC
ON PC.Entitycontactid = EC.Entitycontactid
LEFT JOIN (SELECT ProjectID, Min(ProjDate) as [Date] FROM ProjectDates WHERE ProjectID = @ProjectID Group by ProjectID) PD
ON P.ProjectID = PD.ProjectID
LEFT JOIN (SELECT StaffID, Firstname,Surname FROM Staff) ST 
ON P.TechnicianID = ST.StaffID
where P.ProjectID = @ProjectID","0","","1","LRA-FUSION","0","0","fusion"
"39840","cv_ProjectActivities_daily","","SELECT DISTINCT 
	c.ClientActivityListID, 
	e.company As 'Company', 
	pj.projectname As 'Project', 
	m.modulename As 'Module', 
	pr.prioritytype As 'Priority', 
	l.value As 'Status', 
	convert(varchar,c.DateIssued,103) As 'Date Issued', 
	convert(varchar,c.DateDue,103) As 'Due Date', 
	convert(varchar,c.DateFollowUp,103) As 'Follow Up Date', 
	c.escalation As 'Escalation', 
	c.perccompleted As 'Percentage Completed'
	,isnull(us.firstname,'') +  ' ' + isnull(us.surname,'') as [User]
	
FROM ClientActivityList c
LEFT JOIN ClientActivities ca ON c.clientactivityid = ca.clientactivityid
LEFT JOIN Priority pr ON c.priorityid = pr.priorityid
LEFT JOIN Projects pj ON c.projectid = pj.projectid
LEFT JOIN Entity e ON ca.entityid = e.entityid
LEFT JOIN Modules m ON m.moduleid = c.moduleid
LEFT JOIN (SELECT Lookupid, Value FROM Lookup) l ON c.statusid = l.lookupid
LEFT JOIN userActivityList u ON u.clientactivitylistid = c.clientactivitylistid
left join users us on u.userid = us.userid
WHERE  c.perccompleted < 100 and convert(varchar,c.DateDue,103) = convert(varchar, dateAdd(d,1,Getdate()),103)and isnull(DailySent,0) <> 1
ORDER by c.escalation desc,c.ClientActivityListID,e.company","0","","1","LRA-FUSION","0","0","fusion"
"39841","qf_MultiBilling","","Select * from
(
SELECT DM.DocID, DocType as [Doc. Type], left('00000000', 8- len(DM.DocID)) + convert(varchar,DM.DocID) as [Doc. ID.], Ldiv.Value as [Division], 
case when isnull(DM.UseEC,0) = 0 then E.AccountNum ELSE EC.AccountNum END as [Acc. No.],
case when isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END as [Client],
P.ProjectName  as [Project],
--M.ModuleName as [Module], 
isnull(DM.Memo,'') as [Notes],
convert(varchar,DateCreated ,103)as [Created],convert(varchar, StartDate, 103) as [Start],convert(varchar, EndDate, 103) as [End],
datepart(d,DateCompleted) as [Billing Day],
OCInterval as [Frequency],DocStatus as [Status], [Sales Consultant] as [Consultant],
DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
convert(varchar,CASE doctype when 'Credit Note' then -1 ELSE 1 END * [Total Ex. VAT],1) as [Total Ex. VAT], 
convert(varchar,CASE doctype when 'Credit Note' then -1 ELSE 1 END * [Total VAT],1) as [Total VAT], 
convert(varchar,CASE doctype when 'Credit Note' then -1 ELSE 1 END * cast((cast([Total Incl. VAT] / (case [Total Ex. VAT] when 0 then 1 else [Total Ex. VAT] End + [Total Discount]) as float)) * ([Total Ex. VAT]) as money),1)  as [Total Incl. VAT]
--convert(varchar,CASE doctype when 'Credit Note' then -1 ELSE 1 END * cast([Est. Cost] as money),1) as [Est. Cost]
FROM BILLING_MASTER DM
LEFT JOIN (SELECT EntityID, Accountnum, Company FROM Entity) E
ON DM.EntityID = E.EntityID AND isnull(DM.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, Accountnum, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.useEC,0) = 1
LEFT JOIN (SELECT UserID, Firstname + ' ' + Surname as [Sales Consultant] FROM Users) U
On DM.SalesRepID = U.UserID
LEFT JOIN (SELECT DocID, convert(money,(Sum(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100)))) as [Total Ex. VAT],
			 convert(money,sum((Totalincl * ((100 - isnull(Discperc,0) )/100))-(PriceEx * Qty *((100 - isnull(Discperc,0) )/100)))) as [Total VAT],
			 cast(sum(TotalIncl) as money) as [Total Incl. VAT], 
			 Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
			 convert(money,(Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)))) as [Total Discount]
			 FROM BILLING_DETAIL Group by Docid) DD
ON DM.DocID = DD.Docid
LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM BILLING_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
ON DM.DocID = SD.DocID
LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
ON DM.ProjectID = P.ProjectID
LEFT JOIN (SELECT ModuleID, ModuleName FROM Modules) M
ON DM.ModuleID = M.ModuleID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LDiv
ON DM.DivisionID = LDiv.LookupID
)a
where [Project] like '%<%replace%>%' or [Client] like '%<%replace%>%' or [Doc. ID.] like '%<%replace%>%'
ORDER BY DocID Desc","0","","1","LRA-FUSION","0","0","fusion"
"39842","cv_Job_Appointments","","SELECT AppointmentID, [Assigned To], Company, EC.Contact,
Convert(Varchar,[Date], 111) + ' ' + convert(Varchar,[Date], 108) as [Start],
Convert(Varchar,[EndDate], 111) + ' ' + convert(Varchar,[EndDate], 108) as [End],
Subject, Notes
 FROM Appointment A
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON A.Entityid = E.Entityid
LEFT JOIN (SELECT EntityContactID, isnull(firstname,'') + ' ' + isnull(Surname,'')  as [Contact] FROM Entitycontact) EC
ON A.EntityContactID = EC.Entitycontactid
LEFT JOIN (SELECT userID,isnull(firstname,'') + ' ' + isnull(Surname,'')  as [Assigned To] From Users ) U
ON A.ForUserID = U.UserID
{where}
ORDER By [Date]","0","","1","LRA-FUSION","0","0","fusion"
"39843","cv_Acc_Customise_GL","","SELECT LookupID, Value as [GL Category] 
FROM Lookup 
where class like 'JournalType' 
 
UNION ALL

SELECT -1, 'ACCOUNTS RECEIVABLE'

UNION ALL

SELECT -2, 'OUTPUT VAT CONTROL' 

UNION ALL

SELECT -3, 'COST OF SALES' 

UNION ALL

SELECT -4, 'INVENTORY' 

UNION ALL

SELECT -5, 'INPUT VAT CONTROL' 

UNION ALL

SELECT -6, 'BANK' 

UNION ALL

SELECT -8, 'FOREIGN EXCHANGE' 

UNION ALL

SELECT -9, 'ACCOUNTS PAYABLE' 

UNION ALL

SELECT -10, 'UN-RECEIVED INVENTORY' 

UNION ALL

SELECT -11, 'PREPAID EXPENSE' 

UNION ALL

SELECT -12, 'CAPITAL' 

UNION ALL

SELECT -13, 'INVENTORY ADJUSTMENT' 

UNION ALL

SELECT -14, 'CAPITAL INPUT VAT CONTROL' 

UNION ALL

SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 

UNION ALL

SELECT -16, 'DISCOUNT ALLOWED' 

UNION ALL

SELECT -17, 'DISCOUNT RECEIVED' 

UNION ALL

SELECT -18, 'OPENING BALANCE' 

","0","","1","LRA-FUSION","0","0","fusion"
"39844","cv_Job_Allocate_Stock","","--cv_Job_Allocate_Stock

DECLARE @StockTransferID as integer
SET @StockTransferID = {stocktransferid}

insert into AccStockControl (
	StockID
	, DocID
	, DocType
	, AdjustDate
	, Qty
	, PurchasedBy
	, SoldBy
	, Ratio
	, UnitSellingPriceEx
	, UnitPurchasePriceEx
	, DivisionID
	, ContainerID
)


SELECT 
	STD.StockID
	, STD.StockTransferID
	, 'Stock Transfer'
	, DateReceived as [AdjustDate]
	, - STD.Qty /Stk.SoldByToPurchasedByRatio
	, STK.PurchasedBy
	, Stk.SoldBy
	, Stk.SoldByToPurchasedByRatio
	, 0
	, 0
	, FromDiv
	, FromCont
FROM AccStockTransferDetail STD
LEFT JOIN (SELECT * FROM AccStockTransfer) ST ON STD.StockTransferID = ST.StockTransferID
LEFT JOIN (
	SELECT 
		A.StockID
		, PurchasedBy
		, SoldBy
		, SoldByToPurchasedByRatio
		, SellingPriceEx
		, CostPriceEx 
	FROM AccStock A
	LEFT JOIN AccStockPrice AP ON AP.StockID = A.StockID
) STK ON STD.StockID = Stk.StockID
where STD.StockTransferID =@StockTransferID


UNION ALL

SELECT 
	STD.StockID
	, STD.StockTransferID
	, 'Stock Transfer'
	, DateReceived as [AdjustDate]
	, STD.Qty /Stk.SoldByToPurchasedByRatio
	, STK.PurchasedBy
	, Stk.SoldBy
	, Stk.SoldByToPurchasedByRatio
	, SellingPriceEx
	, CostPriceEx
	, toDiv
	, toCont
FROM AccStockTransferDetail STD
LEFT JOIN (SELECT * FROM AccStockTransfer) ST ON STD.StockTransferID = ST.StockTransferID
LEFT JOIN (
	SELECT 
		A.StockID
		, PurchasedBy
		, SoldBy
		, SoldByToPurchasedByRatio
		, SellingPriceEx
		, CostPriceEx 
	FROM AccStock A
	LEFT JOIN AccStockPrice AP ON AP.StockID = A.StockID
) STK ON STD.StockID = Stk.StockID
where STD.StockTransferID =@StockTransferID

","0","","1","LRA-FUSION","0","0","fusion"
"39845","cv_Acc_GL_Budget","","SET NoCount ON

DECLARE @StartDate 			as datetime
DECLARE @DisplayStartDate		as datetime
DECLARE @EndDate  			as datetime
DECLARE @MonthRange 			as integer
DECLARE @ShowConsolidated		as bit	
DECLARE @i				as integer
DECLARE @ssql				as varchar(8000)
DECLARE @ssql2				as varchar(8000)
DECLARE @squery1			as varchar(8000)
DECLARE @squery2			as varchar(8000)
DECLARE @squery3			as varchar(8000)
DECLARE @squery4			as varchar(8000)
DECLARE @squery5			as varchar(8000)
DECLARE @squery6			as varchar(8000)
DECLARE @DivID				as integer

SET @DivID = {divid}
SET @StartDate = '{startdate}'
SET @DisplayStartDate = '{displaystartdate}'
SET @EndDate ='{enddate}'
SET @ShowConsolidated ={showconsolidated}
SET @MonthRange = datediff(m, @StartDate, @EndDate)

/********************************************************************************************************************************
Dynamically build up a temporary table with all info required to build a budget report
********************************************************************************************************************************/

--Dynamically build a temporary table to manipulate data in
SET @ssql = ''
Set @i =0 
WHILE @i < @MonthRange
BEGIN
	SET @ssql = @ssql + 	', [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' Budgeted] money ' +
				', [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' Actual] money ' +
				', [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' Variance] money ' 		
	SET @i = @i + 1 
END	

SET @squery1 = 
'CREATE TABLE ##TempBud 
(GLCodeID INT,
JournalID INT,
GLType varchar(50),
GLCode varchar(50),
GL varchar (255),
DivisionID INT,
Division varchar(100),
ReportCategoryID INT  {ssql} )'
SET @squery1 = replace(@squery1, '{ssql}', @ssql)
IF OBJECT_ID(N'tempdb..##TempBud', N'U') IS NOT NULL 
BEGIN
	DROP TABLE ##TempBud;
END
Exec (@squery1)



--Dynamically build select statement dependant on number of months
SET @ssql = ''
Set @i =0 
WHILE @i < @MonthRange
BEGIN
	SET @ssql = @ssql + ', 0 as  [' + convert(varchar, dateadd(m, @i,@StartDate),111) +'B]' + ', 0 as  [' + convert(varchar, dateadd(m, @i,@StartDate),111) +'A]' + ', 0 as  [' + convert(varchar, dateadd(m, @i,@StartDate),111) +'V]'
	SET @i = @i + 1 
END	
SET @squery1 = 
'INSERT INTO ##TempBud ' +
'SELECT GLCodeID, GLCategoryID as [JournalID], CASE WHEN GLType = ''OTHER INCOME'' THEN ''INCOME'' ELSE GLType END, GLCode, LGL.Value + isnull('' - '' + LGLRC.value,'''') as [GL],GLC.DivisionID, isnull(LD.Value,''All'') as [Division],isnull(LGLRC.LookupID,0) as [ReportCategory] {ssql}
FROM accGLCode GLC
LEFT JOIN Lookup LD ON GLC.DivisionID = LD.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like ''JournalType'' 
UNION ALL
SELECT -1, ''ACCOUNTS RECEIVABLE''
UNION ALL
SELECT -2, ''OUTPUT VAT CONTROL'' 
UNION ALL
SELECT -3, ''COST OF SALES'' 
UNION ALL
SELECT -4, ''INVENTORY'' 
UNION ALL
SELECT -5, ''INPUT VAT CONTROL'' 
UNION ALL
SELECT -6, ''BANK'' 
UNION ALL
SELECT -8, ''FOREIGN EXCHANGE'' 
UNION ALL
SELECT -9, ''ACCOUNTS PAYABLE'' 
UNION ALL
SELECT -10, ''UN-RECEIVED INVENTORY'' 
UNION ALL
SELECT -11, ''PREPAID EXPENSE'' 
UNION ALL
SELECT -12, ''CAPITAL'' 
UNION ALL
SELECT -13, ''INVENTORY EXPENSE'' 
UNION ALL
SELECT -14, ''CAPITAL INPUT VAT CONTROL'' 
UNION ALL
SELECT -15, ''CAPITAL OUTPUT VAT CONTROL''
UNION ALL
SELECT -16, ''DISCOUNT ALLOWED'' 
UNION ALL
SELECT -17, ''DISCOUNT RECEIVED'' 
UNION ALL
SELECT -18, ''OPENING BALANCE''
) LGL 
ON GLC.GLCategoryID = LGL.LookupID
LEFT JOIN (SELECT Lookupid, Value FROM Lookup where class like ''GLReportCategory'' UNION ALL SELECT 0 ,null) LGLRC
ON GLType = ''INCOME''
WHERE GLType in (''INCOME'', ''OTHER INCOME'', ''EXPENSE'', ''COST OF SALES'')'
SET @squery1 = replace(@squery1, '{ssql}', @ssql)
EXEC (@squery1)


--Dynamically build select statement dependant on number of months for budgeted items
SET @ssql = ''
Set @i =0 
WHILE @i < @MonthRange
BEGIN
	SET @ssql = @ssql + ', CASE WHEN Year(BudDate) = ' + convert(varchar,year(dateadd(m,@i,@StartDate))) + ' AND Month(BudDate) = ' + convert(varchar,month(dateadd(m,@i,@StartDate))) + ' THEN isnull(TotalSellingPriceEx,0)  ELSE 0 END as [Budgeted], 0 as [Actual],0 as [Variance] ' + char(13)
	SET @i = @i + 1 
END	
SET @squery1 = 
'INSERT INTO ##TempBud ' +
'SELECT GLC.GLCodeID, B.JournalID,upper(DocType) as [GLType],GLC.GLCode,Upper(LGL.Value) + isnull('' - '' + LRC.Value,'''') as [GL],B.DivisionID, isnull(LD.Value,''All'') as [Division], isnull(B.GLReportCategoryID,0) as [ReportCategoryID] {ssql}
FROM AccBudget B
LEFT JOIN Lookup LD ON B.DivisionID = LD.LookupID
LEFT JOIN Lookup LRC ON B.GLReportCategoryID = LRC.LookupID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like ''JournalType'' 
UNION ALL
SELECT -1, ''ACCOUNTS RECEIVABLE''
UNION ALL
SELECT -2, ''OUTPUT VAT CONTROL'' 
UNION ALL
SELECT -3, ''COST OF SALES'' 
UNION ALL
SELECT -4, ''INVENTORY'' 
UNION ALL
SELECT -5, ''INPUT VAT CONTROL'' 
UNION ALL
SELECT -6, ''BANK'' 
UNION ALL
SELECT -8, ''FOREIGN EXCHANGE'' 
UNION ALL
SELECT -9, ''ACCOUNTS PAYABLE'' 
UNION ALL
SELECT -10, ''UN-RECEIVED INVENTORY'' 
UNION ALL
SELECT -11, ''PREPAID EXPENSE'' 
UNION ALL
SELECT -12, ''CAPITAL'' 
UNION ALL
SELECT -13, ''INVENTORY EXPENSE'' 
UNION ALL
SELECT -14, ''CAPITAL INPUT VAT CONTROL'' 
UNION ALL
SELECT -15, ''CAPITAL OUTPUT VAT CONTROL''
UNION ALL
SELECT -16, ''DISCOUNT ALLOWED'' 
UNION ALL
SELECT -17, ''DISCOUNT RECEIVED'' 
UNION ALL
SELECT -18, ''OPENING BALANCE''
) LGL 
ON B.JournalID = LGL.LookupID
LEFT JOIN AccGLCode GLC ON B.JournalID = GLC.GLCategoryID AND upper(B.DocType) = upper(GLC.GLType) and (B.DivisionID = GLC.Divisionid OR GLC.Divisionid = 0) and isnull(B.GLCode,0) = isnull(GLC.GLCode,0)
WHERE isnull(B.IsGLBudget,0) = 1 AND B.BudDate BETWEEN ''' + convert(Varchar,@StartDate,111) + ''' AND ''' +   convert(Varchar,@EndDate,111) + ''''
SET @squery1 = replace(@squery1, '{ssql}', @ssql)
EXEC (@squery1)

--Dynamically build select statement dependant on number of months for actual GL transactions 
SET @ssql = ''
SET @i =0 
WHILE @i < @MonthRange
BEGIN
	SET @ssql = @ssql + ',0 as [Budgeted], CASE WHEN Year(DateCompleted) = ' + convert(varchar,year(dateadd(m,@i,@StartDate))) + ' AND Month(DateCompleted) = ' + convert(varchar,month(dateadd(m,@i,@StartDate))) + ' THEN CASE WHEN GL.Type like ''%INCOME%'' THEN (isnull(Cr,0) - isnull(Dr,0)) ELSE (isnull(Dr,0) - isnull(Cr,0))END ELSE 0 END as [Actual], 0 as [Variance] ' + char(13)
	SET @i = @i + 1 
END	
SET @squery1 = 
'INSERT INTO ##TempBud ' +
'SELECT GLC.GLCodeID, JournalId , CASE WHEN GL.TYPE = ''OTHER INCOME'' THEN ''INCOME'' ELSE GL.Type END, GLC.GLCode, GL.GL, GL.DivisionID, LD.Value, isnull(GL.ReportCategoryID,0) {ssql}
FROM AccGL GL
LEFT JOIN AccGLCode GLC ON GL.JournalID = GLC.GLCategoryID AND upper(GL.Type) = upper(GLC.GLType) and (GL.DivisionID = GLC.Divisionid OR isnull(GLC.Divisionid,0) = 0 )
LEFT JOIN Lookup LD ON GL.DivisionID = LD.LookupID
WHERE GL.Type in (''EXPENSE'', ''INCOME'', ''OTHER INCOME'', ''COST OF SALES'') 
AND GL.GL is not null AND GL.DateCompleted BETWEEN ''' + convert(Varchar,@StartDate,111) + ''' AND ''' +   convert(Varchar,@EndDate,111) + ''''
SET @squery1 = replace(@squery1, '{ssql}', @ssql)
exec ( @squery1)

--Append columns to temptable for Year-To-Date values
ALTER TABLE ##TempBud ADD [YTD Budgeted] money
ALTER TABLE ##TempBud ADD [YTD Actual] money
ALTER TABLE ##TempBud ADD [YTD Variance] money


/********************************************************************************************************************************
Start manipulating data created in ##TempBud table
********************************************************************************************************************************/
--Dynamically build update statement dependant on number of months to set variance amounts
SET @ssql = ''
SET @i =0 
WHILE @i < @MonthRange
BEGIN
	SET @ssql = @ssql + 	' [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' Variance] = ' +
				' [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' Budgeted] - ' +
				' [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' Actual] ,' 	
	SET @i = @i + 1 
END	
SET @squery1 = 
'UPDATE ##TempBud SET ' + left(@ssql, len(@ssql) -1)
exec ( @squery1)

--Dynamically build update statement dependant on number of months to set expense amounts to negative values (for ease in totaling Net Income)
SET @ssql = ''
SET @i =0 
WHILE @i < @MonthRange
BEGIN
	SET @ssql = @ssql + 	' [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' Variance] = -1 * [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' Variance]  ,' +
				' [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' Budgeted] = -1 * [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' Budgeted]  ,' +
				' [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' Actual] = -1 *   [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' Actual] ,' 	
	SET @i = @i + 1 
END	
SET @squery1 = 
'UPDATE ##TempBud SET ' + left(@ssql, len(@ssql) -1) + ' WHERE GLType in (''EXPENSE'',''COST OF SALES'') '
exec ( @squery1)


--Dynamically build update statement dependant on number of months to set Year To Date amounts
SET @ssql = ''
SET @i =0 
WHILE @i < @MonthRange
BEGIN
	SET @ssql = @ssql + ' ' + 
				' [' + convert(varchar, Year(dateadd(m, @i,@StartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@StartDate)),111) + ' ColumnType] + ' 	
	SET @i = @i + 1 
END	
SET @squery1 = 'UPDATE ##TempBud SET  [YTD Actual] = ' + replace(left(@ssql, len(@ssql) -1),'ColumnType', 'Actual')
exec ( @squery1)
SET @squery1 = 'UPDATE ##TempBud SET  [YTD Budgeted] = ' + replace(left(@ssql, len(@ssql) -1),'ColumnType', 'Budgeted')
exec ( @squery1)
SET @squery1 = 'UPDATE ##TempBud SET  [YTD Variance] = ' + replace(left(@ssql, len(@ssql) -1),'ColumnType', 'Variance')
exec ( @squery1)


/********************************************************************************************************************************
Implement Division search
********************************************************************************************************************************/
IF @DivID > 0 
BEGIN
	DELETE FROM ##TempBud WHERE isnull(DivisionID,0) <> @DivID
END
/********************************************************************************************************************************
Return data created and manupulated in ##TempBud table
********************************************************************************************************************************/

SET @MonthRange = datediff(m, @DisplayStartDate, @EndDate)
SET @ssql = ''
SET @ssql2 = ''
SET @i =0 
WHILE @i < @MonthRange
BEGIN
	SET @ssql = @ssql + 	', Convert(varchar,SUM([' + convert(varchar, Year(dateadd(m, @i,@DisplayStartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@DisplayStartDate)),111) + ' Actual]),1) ' + ' AS [' + convert(varchar, Year(dateadd(m, @i,@DisplayStartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@DisplayStartDate)),111) + ' Actual]' +
				', Convert(varchar,SUM([' + convert(varchar, Year(dateadd(m, @i,@DisplayStartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@DisplayStartDate)),111) + ' Budgeted]),1) ' +' AS [' + convert(varchar, Year(dateadd(m, @i,@DisplayStartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@DisplayStartDate)),111) + ' Budgeted]' +
				', Convert(varchar,SUM([' + convert(varchar, Year(dateadd(m, @i,@DisplayStartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@DisplayStartDate)),111) + ' Variance]),1) ' + ' AS [' + convert(varchar, Year(dateadd(m, @i,@DisplayStartDate)),111) + '/' +  convert(varchar, Month(dateadd(m, @i,@DisplayStartDate)),111) + ' Variance]' 
	SET @ssql2 = @ssql2 + ', null, null, null '
	SET @i = @i + 1 
END	

IF @ShowConsolidated = 0 
BEGIN
	--Full Report
	SET @squery1 = 
	--'SELECT convert(varchar,isnull(JournalID,0)) + ''#'' + GLType + ''##'' + isnull(convert(varchar,DivisionID),'''') + ''###'' + isnull(convert(varchar,GLCode),'''') + ''####'' + convert(varchar,isnull(ReportCategoryID,0)) , CASE GLType WHEN ''INCOME'' THEN 10 WHEN ''OTHER INCOME'' THEN 10 WHEN ''COST OF SALES'' THEN 20 ELSE 30 END as [Rank], '''' , GLCode, GL  {ssql} ,
	'SELECT convert(varchar,isnull(JournalID,0)) + ''#'' + GLType + ''#'' + isnull(convert(varchar,DivisionID),'''') + ''#'' + isnull(convert(varchar,GLCode),'''') + ''#'' + convert(varchar,isnull(ReportCategoryID,0)) , CASE GLType WHEN ''INCOME'' THEN 10 WHEN ''OTHER INCOME'' THEN 10 WHEN ''COST OF SALES'' THEN 20 ELSE 30 END as [Rank], '''' , GLCode, GL  {ssql} ,
	 convert(varchar,cast(sum([YTD Actual]) as money),1) as [YTD Actual],convert(varchar,cast(sum([YTD Budgeted]) as money),1) as [YTD Budgeted], convert(varchar,cast(sum([YTD Variance]) as money),1) as [YTD Variance]
	FROM ##TempBud 
	GROUP BY GLType, GLCode, GL, JournalID, DivisionID , ReportCategoryID'
	SET @squery2 = 
	'  UNION ALL
	SELECT ''_TOTAL'' + CASE GLType WHEN ''INCOME'' THEN ''11'' WHEN ''OTHER INCOME'' THEN ''11'' WHEN ''COST OF SALES'' THEN ''21'' ELSE ''31'' END, CASE GLType WHEN ''INCOME'' THEN 11 WHEN ''OTHER INCOME'' THEN 11 WHEN ''COST OF SALES'' THEN 21 ELSE 31 END as [Rank] ,GLType + '' TOTAL: '', null, null  {ssql} ,
	convert(varchar,cast(sum([YTD Actual]) as money),1) as [YTD Actual], convert(varchar,cast(sum([YTD Budgeted]) as money),1) as [YTD Budgeted],  convert(varchar,cast(sum([YTD Variance]) as money),1) as [YTD Variance]
	FROM ##TempBud 
	GROUP BY GLType'
	SET @squery3 = 
	'  UNION ALL
	SELECT  ''_TOTAL30'', 39 as [Rank],''NET INCOME TOTAL: '', null, null  {ssql},
	convert(varchar,cast(sum([YTD Actual]) as money),1) as [YTD Actual], convert(varchar,cast(sum([YTD Budgeted]) as money),1) as [YTD Budgeted], convert(varchar,cast(sum([YTD Variance]) as money),1) as [YTD Variance]
	FROM ##TempBud '
	SET @squery4 = 
	'  UNION ALL
	SELECT  ''_INCOME'', 9 as [Rank]  ,''INCOME'', null, null {ssql2} , null, null, null '
	SET @squery5 = 
	'  UNION ALL
	SELECT  ''_COS'', 19 as [Rank] ,''COST OF SALES'', null, null {ssql2} , null, null, null '
	SET @squery6 = 
	'  UNION ALL
	SELECT  ''_EXPENSES'', 29 as [Rank] ,''EXPENSES'', null, null {ssql2} , null, null, null
	ORDER BY Rank, GLCode, GL'
	SET @squery1 = replace(@squery1, '{ssql}', @ssql)
	SET @squery1 = replace(@squery1, '{ssql2}', @ssql2)
	SET @squery2 = replace(@squery2, '{ssql}', @ssql)
	SET @squery2 = replace(@squery2, '{ssql2}', @ssql2)
	SET @squery3 = replace(@squery3, '{ssql}', @ssql)
	SET @squery3 = replace(@squery3, '{ssql2}', @ssql2)
	SET @squery4 = replace(@squery4, '{ssql}', @ssql)
	SET @squery4 = replace(@squery4, '{ssql2}', @ssql2)
	SET @squery5 = replace(@squery5, '{ssql}', @ssql)
	SET @squery5 = replace(@squery5, '{ssql2}', @ssql2)
	SET @squery6 = replace(@squery6, '{ssql}', @ssql)
	SET @squery6 = replace(@squery6, '{ssql2}', @ssql2)

END

IF @ShowConsolidated = 1 
BEGIN
	--Consolidated Report
	SET @squery1 = 
	--'SELECT convert(varchar,isnull(JournalID,0)) + ''#'' + GLType + ''##''  + ''###'' + ''####'' + convert(varchar,isnull(ReportCategoryID,0)), CASE GLType WHEN ''INCOME'' THEN 10 WHEN ''OTHER INCOME'' THEN 10 WHEN ''COST OF SALES'' THEN 20 ELSE 30 END as [Rank], '''' , GL  {ssql} ,
	'SELECT convert(varchar,isnull(JournalID,0)) + ''#'' + GLType + ''#''  + ''#'' + ''#'' + convert(varchar,isnull(ReportCategoryID,0)), CASE GLType WHEN ''INCOME'' THEN 10 WHEN ''OTHER INCOME'' THEN 10 WHEN ''COST OF SALES'' THEN 20 ELSE 30 END as [Rank], '''' , GL  {ssql} ,
	convert(varchar,cast(sum([YTD Actual]) as money),1) as [YTD Actual], convert(varchar,cast(sum([YTD Budgeted]) as money),1) as [YTD Budgeted], convert(varchar,cast(sum([YTD Variance]) as money),1) as [YTD Variance]
	FROM ##TempBud 
	GROUP BY GLType, GL,JournalID,ReportCategoryID
	HAVING SUM([YTD Actual]) + SUM([YTD Budgeted]) + Sum([YTD Budgeted]) <> 0'
	SET @squery2 = 	
	'  UNION ALL
	SELECT ''_TOTAL'' + CASE GLType WHEN ''INCOME'' THEN ''11'' WHEN ''OTHER INCOME'' THEN ''11'' WHEN ''COST OF SALES'' THEN ''21'' ELSE ''31'' END, CASE GLType WHEN ''INCOME'' THEN 11 WHEN ''OTHER INCOME'' THEN 11 WHEN ''COST OF SALES'' THEN 21 ELSE 31 END as [Rank] ,GLType + '' TOTAL: '', null  {ssql} ,
	convert(varchar,cast(sum([YTD Actual]) as money),1) as [YTD Actual], convert(varchar,cast(sum([YTD Budgeted]) as money),1) as [YTD Budgeted], convert(varchar,cast(sum([YTD Variance]) as money),1) as [YTD Variance]
	FROM ##TempBud 
	GROUP BY GLType' 
	SET @squery3 = 
	'  UNION ALL
	SELECT  ''_TOTAL30'', 39 as [Rank],''NET INCOME TOTAL: '', null {ssql},
	convert(varchar,cast(sum([YTD Actual]) as money),1) as [YTD Actual], convert(varchar,cast(sum([YTD Budgeted]) as money),1) as [YTD Budgeted], convert(varchar,cast(sum([YTD Variance]) as money),1) as [YTD Variance]
	FROM ##TempBud '
	SET @squery4 = 
	'  UNION ALL
	SELECT  ''_INCOME'', 9 as [Rank]  ,''INCOME'', null {ssql2} , null, null, null'
	SET @squery5 = 
	' UNION ALL 
	SELECT  ''_COS'', 19 as [Rank] ,''COST OF SALES'', null {ssql2} , null, null, null '
	SET @squery6 = 
	' UNION ALL
	SELECT  ''_EXPENSES'', 29 as [Rank] ,''EXPENSES'', null {ssql2} , null, null, null 
	ORDER BY Rank,  GL'
	SET @squery1 = replace(@squery1, '{ssql}', @ssql)
	SET @squery1 = replace(@squery1, '{ssql2}', @ssql2)
	SET @squery2 = replace(@squery2, '{ssql}', @ssql)
	SET @squery2 = replace(@squery2, '{ssql2}', @ssql2)
	SET @squery3 = replace(@squery3, '{ssql}', @ssql)
	SET @squery3 = replace(@squery3, '{ssql2}', @ssql2)
	SET @squery4 = replace(@squery4, '{ssql}', @ssql)
	SET @squery4 = replace(@squery4, '{ssql2}', @ssql2)
	SET @squery5 = replace(@squery5, '{ssql}', @ssql)
	SET @squery5 = replace(@squery5, '{ssql2}', @ssql2)
	SET @squery6 = replace(@squery6, '{ssql}', @ssql)
	SET @squery6 = replace(@squery6, '{ssql2}', @ssql2)
END

EXEC (@squery1 + @squery2+ @squery3+ @squery4+ @squery5+ @squery6)


SET NoCount OFF","0","","1","LRA-FUSION","0","0","fusion"
"39846","cv_Acc_GL_ASSETS","","--*******************************************************************************************************************************************
--Asset Registry*****************************************************************************************************************************
--*******************************************************************************************************************************************

--Asset : Dr. Long term asset
SELECT DateAquired, AssetID, DivisionID, 'Asset Registry' as [Doc], Upper(L.Value) as [GL], 'ASSET' as [Type],
'Asset aquired: ' + isnull(A.SerialNo + ' - ','')  + Stk.StockDescription as [Description], Cost as [Dr], null as [Cr],
Cost as [Dr], A.AssetID as [Cr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [ROE],
A.StockID as [StockID], A.SerialNo as [Ref], STK.JournalID as [JournalID],null as [ReportCategoryID], A.RefNo,
Null as [ProjectID], null as [AssetID]
FROM AccAsset A
LEFT JOIN (SELECT StockID, JournalID,StockDescription FROM AccStock) STK
ON A.Stockid = STK.StockID
LEFT JOIN Lookup L ON STK.JournalID = L.LookupID
where isnull(DocID,0) < 1
AND A.DateAquired between  @StartDate and @EndDate

UNION ALL

--Asset : Cr. Capital
SELECT DateAquired, AssetID, DivisionID, 'Asset Registry' as [Doc], 'CAPITAL' as [GL], 'CAPITAL' as [Type],
'Asset aquired: ' + isnull(A.SerialNo + ' - ','')   + Stk.StockDescription, 
null as [Dr],  round(round((Cost * ((isnull(VATPerc,0) /100) + 1)) ,3),2) as [Cr],
null as [Dr],  round(round((Cost * ((isnull(VATPerc,0) /100) + 1)) ,3),2) as [Cr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [ROE],
A.StockID as [StockID], A.SerialNo as [Ref], STK.JournalID as [JournalID],null,A.RefNo,
Null as [ProjectID], null as [AssetID]
FROM AccAsset A
LEFT JOIN (SELECT StockID, JournalID,StockDescription FROM AccStock) STK
ON A.Stockid = STK.StockID
LEFT JOIN Lookup L ON STK.JournalID = L.LookupID
where isnull(DocID,0) < 1
AND A.DateAquired between  @StartDate and @EndDate


UNION ALL

--Asset : Cr. Input Vat Control
SELECT DateAquired, AssetID, CM.DivisionID,  'Asset Tax' as [Doc], 'INPUT VAT CONTROL' as [GL], 'ASSET' as [Type] ,
'Asset Registered: ' + isnull(SerialNo,''), 
null as [Dr],round(round((Cost * ((isnull(VATPerc,0) /100) + 1)) - Cost,3),2) as [Cr],
null as [Dr],round(round((Cost * ((isnull(VATPerc,0) /100) + 1)) - Cost,3),2) as [Cr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [ROE],
A.StockID,A.SerialNo, -5 as [JournalId],null, CM.Memo,
null as [ProjectID], null as [AssetID]
FROM AccAsset A
LEFT JOIN (SELECT DocID, DivisionID, Memo FROM CREDITOR_MASTER) CM 
ON A.DocID = CM.DocID
WHERE  A.DateAquired between  @StartDate and @EndDate

UNION ALL

--Asset : Dr. Capital Input Vat Control
SELECT DateAquired, AssetID, CM.DivisionID,  'Asset Tax' as [Doc], 'CAPITAL INPUT VAT CONTROL' as [GL], 'ASSET' as [Type] ,
'Asset Registered: ' + isnull(SerialNo,''), 
round(round((Cost * ((isnull(VATPerc,0) /100) + 1)) - Cost,3),2) as [Dr],null as [Cr],
round(round((Cost * ((isnull(VATPerc,0) /100) + 1)) - Cost,3),2) as [Dr],null as [Cr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [ROE],
A.StockID,A.SerialNo, -14 as [JournalId],null, A.RefNo,
Null as [ProjectID], null as [AssetID]
FROM AccAsset A
LEFT JOIN (SELECT DocID, DivisionID FROM CREDITOR_MASTER) CM 
ON A.DocID = CM.DocID
WHERE  A.DateAquired between  @StartDate and @EndDate

UNION ALL

--Asset : Dr. Input Vat Control (Only when Not Linked To a Supplier Invoice)
SELECT DateAquired, AssetID, CM.DivisionID,  'Asset Tax' as [Doc], 'INPUT VAT CONTROL' as [GL], 'ASSET' as [Type] ,
'Asset Registered: ' + isnull(SerialNo,''), 
round(round((Cost * ((isnull(VATPerc,0) /100) + 1)) - Cost,3),2) as [Dr],null as [Cr],
round(round((Cost * ((isnull(VATPerc,0) /100) + 1)) - Cost,3),2) as [Dr],null as [Cr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [ROE],
A.StockID,A.SerialNo, -5 as [JournalId],null, CM.Memo,
Null as [ProjectID], null as [AssetID]
FROM AccAsset A
LEFT JOIN (SELECT DocID, DivisionID, Memo FROM CREDITOR_MASTER) CM 
ON A.DocID = CM.DocID
WHERE CM.DocID is null
AND A.DateAquired between  @StartDate and @EndDate

UNION ALL

--Asset : Dr. Depreciation Expense 
SELECT AD.SchedDate,  AssetDetailID, A.DivisionID, 'Asset Depreciation' as [Doc],upper( L.value) as [GL], 'EXPENSE' as [Type], 
'Asset Depreciation: ' + isnull(A.SerialNo + ' - ','')   + Stk.StockDescription, 
DepExpense as [Dr],
null as [Cr],
DepExpense as [Dr], 
null as [Cr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [ROE],
A.StockID as [StockID], null as [Ref], GLC.GLCategoryID as [JournalID],null, A.RefNo,
null as [ProjectID], A.AssetID
FROM AccAssetDetail AD
LEFT JOIN (SELECT Stockid,AssetID, DivisionID, RefNo, GLCodeID, SerialNo FROM AccAsset) A
ON AD.AssetID = A.AssetID
LEFT JOIN (SELECT StockID, JournalID,StockDescription FROM AccStock) STK
ON A.Stockid = STK.StockID
LEFT JOIN (SELECT * FROM AccGLCode ) GLC
ON A.GLCodeID = GLC.GLCodeID
LEFT JOIN Lookup L ON GLC.GLCategoryID = L.LookupID
where  AD.SchedDate between  @StartDate and @EndDate

UNION ALL

--Asset : Dr. Depreciation Expense (where project assigned)
SELECT AD.SchedDate,  AssetDetailID, A.DivisionID, 'Asset Depreciation' as [Doc],upper( L.value) as [GL], 'EXPENSE' as [Type], 
'Asset Depreciation: ' + isnull(A.SerialNo + ' - ','')   + Stk.StockDescription, 
(isnull(DepExpense,0) /  datediff(d, dateadd(m,-1,AD.SchedDate), AD.SchedDate))
*
(DATEDIFF(d, CASE WHEN PA.StartDate <  dateadd(m,-1,AD.SchedDate) THEN  dateadd(m,-1,AD.SchedDate) ELSE PA.StartDate END, CASE WHEN PA.EndDate > AD.SchedDate THEN AD.SchedDate ELSE PA.EndDate END))
as [Dr],
null as [Cr],
(isnull(DepExpense,0) /  datediff(d, dateadd(m,-1,AD.SchedDate), AD.SchedDate))
*
(DATEDIFF(d, CASE WHEN PA.StartDate <  dateadd(m,-1,AD.SchedDate) THEN  dateadd(m,-1,AD.SchedDate) ELSE PA.StartDate END, CASE WHEN PA.EndDate > AD.SchedDate THEN AD.SchedDate ELSE PA.EndDate END))
as [Dr], 
null as [Cr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [ROE],
A.StockID as [StockID], null as [Ref], GLC.GLCategoryID as [JournalID],null, A.RefNo,
PA.ProjectID, A.AssetID
FROM AccAssetDetail AD
LEFT JOIN (SELECT Stockid,AssetID, DivisionID, RefNo, GLCodeID, SerialNo FROM AccAsset) A
ON AD.AssetID = A.AssetID
LEFT JOIN (SELECT StockID, JournalID,StockDescription FROM AccStock) STK
ON A.Stockid = STK.StockID
LEFT JOIN (SELECT * FROM AccGLCode ) GLC
ON A.GLCodeID = GLC.GLCodeID
LEFT JOIN Lookup L ON GLC.GLCategoryID = L.LookupID
LEFT JOIN (SELECT * FROM ProjectAsset) PA
ON AD.AssetID = PA.AssetID 
AND (PA.StartDate between dateadd(m,-1,AD.SchedDate) AND AD.SchedDate
	OR PA.EndDate between dateadd(m,-1,AD.SchedDate) AND AD.SchedDate
	OR (PA.StartDate <= dateadd(m,-1,AD.SchedDate) AND  PA.EndDate >= AD.SchedDate))
where  
PA.ProjectID is not null
AND AD.SchedDate between  @StartDate and @EndDate

UNION ALL

--Asset : Cr. Depreciation Expense (where project assigned)
SELECT AD.SchedDate,  AssetDetailID, A.DivisionID, 'Asset Depreciation' as [Doc],upper( L.value) as [GL], 'EXPENSE' as [Type], 
'Asset Depreciation: ' + isnull(A.SerialNo + ' - ','')   + Stk.StockDescription, 
-(isnull(DepExpense,0) /  datediff(d, dateadd(m,-1,AD.SchedDate), AD.SchedDate))
*
(DATEDIFF(d, CASE WHEN PA.StartDate <  dateadd(m,-1,AD.SchedDate) THEN  dateadd(m,-1,AD.SchedDate) ELSE PA.StartDate END, CASE WHEN PA.EndDate > AD.SchedDate THEN AD.SchedDate ELSE PA.EndDate END))
as [Dr],
null as [Cr],
-(isnull(DepExpense,0) /  datediff(d, dateadd(m,-1,AD.SchedDate), AD.SchedDate))
*
(DATEDIFF(d, CASE WHEN PA.StartDate <  dateadd(m,-1,AD.SchedDate) THEN  dateadd(m,-1,AD.SchedDate) ELSE PA.StartDate END, CASE WHEN PA.EndDate > AD.SchedDate THEN AD.SchedDate ELSE PA.EndDate END))
as [Dr], 
null as [Cr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [ROE],
A.StockID as [StockID], null as [Ref], GLC.GLCategoryID as [JournalID],null, A.RefNo,
null as [ProjectID], A.AssetID
FROM AccAssetDetail AD
LEFT JOIN (SELECT Stockid,AssetID, DivisionID, RefNo, GLCodeID, SerialNo FROM AccAsset) A
ON AD.AssetID = A.AssetID
LEFT JOIN (SELECT StockID, JournalID,StockDescription FROM AccStock) STK
ON A.Stockid = STK.StockID
LEFT JOIN (SELECT * FROM AccGLCode ) GLC
ON A.GLCodeID = GLC.GLCodeID
LEFT JOIN Lookup L ON GLC.GLCategoryID = L.LookupID
LEFT JOIN (SELECT * FROM ProjectAsset) PA
ON AD.AssetID = PA.AssetID 
AND (PA.StartDate between dateadd(m,-1,AD.SchedDate) AND AD.SchedDate
	OR PA.EndDate between dateadd(m,-1,AD.SchedDate) AND AD.SchedDate
	OR (PA.StartDate <= dateadd(m,-1,AD.SchedDate) AND  PA.EndDate >= AD.SchedDate))
where  
PA.ProjectID is not null
AND AD.SchedDate between  @StartDate and @EndDate



UNION ALL

--Asset : Cr. Accumulated Depreciated Liability
SELECT AD.SchedDate,  AssetDetailID, A.DivisionID, 'Asset Depreciation' as [Doc],upper( L.value) as [GL], 'LIABILITY' as [Type], 
'Asset Depreciation: ' + isnull(A.SerialNo + ' - ','')  + Stk.StockDescription, null as [Dr], DepExpense  as [Cr],
null as [Dr], DepExpense  as [Cr],
(SELECT top 1 Currency from ExchangeRates where isdefault =1),1 as [ROE],
A.StockID as [StockID], null as [Ref], GLC.GLCategoryID as [JournalID],null, A.RefNo,
null as [ProjectID], null as [AssetID]
FROM AccAssetDetail AD
LEFT JOIN (SELECT Stockid,AssetID, DivisionID, RefNo, GLCodeID, AccumulationGLCodeID, Serialno FROM AccAsset) A
ON AD.AssetID = A.AssetID
LEFT JOIN (SELECT StockID, JournalID,StockDescription FROM AccStock) STK
ON A.Stockid = STK.StockID
LEFT JOIN (SELECT * FROM AccGLCode ) GLC
ON A.AccumulationGLCodeID = GLC.GLCodeID
LEFT JOIN Lookup L ON GLC.GLCategoryID = L.LookupID
where  AD.SchedDate between  @StartDate and @EndDate
","0","","1","LRA-FUSION","0","0","fusion"
"39847","cv_Sync_Modules","","SELECT 
    M.ModuleID, 
    E.Company,
    P.ProjectName, 
    M.ModuleName, 
    M.ModuleNotes ,
    M.StartDate,
    S.Staffid, 
    S.Assignee, 
    S.Email,
    MS.EntryID, 
    MS.LastSyncDate,
    M.EndDate
FROM Modules M
LEFT JOIN (SELECT ProjectID, ProjectName,Entityid FROM Projects) P ON M.ProjectID = P.ProjectID
--LEFT JOIN (SELECT ModuleID, StartDate FROM ModuleDates) MD ON M.ModuleID = MD.ModuleID
LEFT JOIN (SELECT * FROM ModuleAssignees) MA ON M.ModuleID = MA.ModuleID
LEFT JOIN (SELECT Isnull(firstname,'') + ' ' + isnull(surname,'') AS [Assignee], StaffID, Email FROM Staff) S ON MA.StaffID = S.Staffid
LEFT JOIN (SELECT * FROM ModuleSync) MS ON M.ModuleID = MS.ModuleID AND MA.Staffid = MS.StaffID AND convert(varchar,M.StartDate,111) = convert(varchar,MS.StartDate,111)
LEFT JOIN (SELECT Entityid, Company FROM Entity) E ON P.Entityid = E.Entityid
where M.StartDate  >= dateadd(d, -1 ,getdate())
AND S.StaffID is not null
AND M.StartDate is not null
AND MS.Entryid is null
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"39848","cv_Acc_GLCashTransaction","","SELECT AccOverheadID,AccOverheadID, Convert(varchar,DatePaid,103) as [Date Paid], GL, E.Company as [Debtor/Creditor], 
Case When isnull(FromAccount,0) = 0 and Isnull(ToAccount,0) > 0 Then isnull(PriceEx,0) ELSE 0 END as [Dr],
Case When isnull(FromAccount,0) > 0 and Isnull(ToAccount,0) = 0 Then isnull(PriceEx,0) ELSE 0 END as [Cr],
PaymentRef as  [Ref.]
FROM AccOverhead O 
LEFT JOIN (SELECT Entityid, Company FROM Entity) E ON O.Entityid = E.Entityid
LEFT JOIN (SELECT convert(varchar,isnull(GLCode,'')) + ' - ' + isnull(Value,'') as [GL], GLCodeID FROM AccGLCode GLC
		LEFT JOIN (SELECT LookupID, VAlue FROM Lookup) L
		ON GLC.GLCategoryID = L.LookupID) GL
ON O.GLCodeID = GL.GLCodeID
{where}
ORDER BY DatePaid","0","","1","LRA-FUSION","0","0","fusion"
"39849","cv_Job_Repair_Stock","","SELECT LineId, StockCode as [Code], StockDescription as [Description], SerialNumber as [S/N], Qty, LC.Value as [Container], JRS.Comments,
Case isnull(IsUnderWarranty,0) when 1 then 'Yes' ELSE 'No' END as [Under Warranty]
FROM Job_Repair_Stock JRS
LEFT JOIN LinkLookup LC ON JRS.ContainerID = LC.LinkLookupId 
{where}
ORDER BY StockCode","0","","1","LRA-FUSION","0","0","fusion"
"39850","cv_Job_Repair_Stock_Adjust","","SELECT JRS.LineID, JRS.StockID, JRS.SerialNumber, JRS.Qty, JRS.ContainerID, STK.StockCode, STK.StockDescription, STK.PurchasedBy, 
STK.SoldBy, STK.SoldByToPurchasedByRatio, LL.LinkedTo as [DivisionID]
FROM Job_Repair_stock JRS
LEFT JOIN AccStock STK on Jrs.StockID = STK.StockID
LEFT JOIN (SELECT * FROM LinkLookup) LL ON JRS.ContainerID = LL.LinkLookupid
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"39851","cv_Print_JobCard_Repair","","SELECT StockCode as [Code], StockDescription as [Description], SerialNumber as [S/N], Qty, JRS.Comments,
Case isnull(IsUnderWarranty,0) when 1 then 'Yes' ELSE 'No' END as [Under Warranty]
FROM Job_Repair_Stock JRS
{where}
ORDER BY StockCode","0","","1","LRA-FUSION","0","0","fusion"
"39852","cv_Acc_Cash_Transaction_Man","","
SELECT CTM.DocID,BA.Descr as [Bank Account],Convert(varchar,DateCreated,111) as [Date Created],
U.[Created By], 
CASE isnull(CTM.IsComplete,0) WHEN 1 then 'Completed' ELse 'Open' END as [Status],
CTM.Currency, CTM.ROE as [R.O.E], dbo.fnformatnumber(Sum(isnull(TotalIncl,0))) as [Total Incl],TransNotes As [Notes]
FROM CASH_TRANSACTION_MASTER CTM
LEFT JOIN Lookup LD ON CTM.DivisionID = LD.LookupID
LEFT JOIN (SELECT BankAccountId ,Descr FROM AccBankAccount) BA  ON CTM.BankAccountID = BA.BankAccountID
LEFT JOIN (SELECT UserID, Isnull(firstname,'') + ' '  + isnull(Surname,'') as [Created By] FROM Users) U ON CTM.CreatedBy = U.UserID
LEFT JOIN (SELECT DocID, RefNo,  DatePaid, Totalincl,GLCodeID FROM CASH_TRANSACTION_DETAIL) CTD ON CTM.DocID = CTD.DocID
LEFT JOIN (SELECT BankAccountID, GLCodeID FROM AccBankAccount) BAL ON CTD.GLCodeID = BAL.GLCodeID
{where}
Group by CTM.DocID, LD.Value, BA.Descr, CTM.DateCreated,U.[Created By],CTM.TransNotes, CTM.Currency, CTM.ROE, CTM.IsComplete
ORDER BY DateCreated desc


","0","","1","LRA-FUSION","0","0","fusion"
"39853","cv_Acc_Cash_Transaction","","SELECT LineID,'',LDiv.Value as [Division], isnull(convert(varchar,GLC.GLCode),'') + ' - ' + isnull([GL Category],'') as [GL], 
LRC.Value as [Report Category], Convert(varchar, DatePaid, 111) as [Date Paid], 
RefNo as [Ref.], convert(varchar,cast(isnull(TotalIncl,0) as money),1) as [Total Incl.],isnull(VatPerc,0) as [VAT %], isnull(Notes,'') as [Notes],
convert(varchar,P.ProjectNum) + ' - ' + E.Company + ' - ' + P.ProjectName as [Project] ,
A.SerialNo + ' - ' + STK.StockDescription as [Asset]
FROM CASH_TRANSACTION_DETAIL CTD
LEFT JOIN Cash_Transaction_Master CTM ON CTD.DocID = CTM.DocID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LDiv ON CTD.DivisionID = LDiv.LookupID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LRC ON CTD.ReportCategoryID = LRC.LookupID
LEFT JOIN (SELECT * FROM AccGLCode) GLC ON CTD.GlCodeID = GLC.GLCodeID
LEFT JOIN (SELECT ProjectID, ProjectName, ProjectNum, EntityID FROM Projects) P ON CTD.ProjectID = P.ProjectID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E ON P.Entityid = E.Entityid
LEFT JOIN (SELECT AssetID, StockID, SerialNo FROM AccAsset) A ON CTD.AssetID = A.AssetID
LEFT JOIN (SELECT StockID, StockDescription FROM AccSTock) STK ON A.StockID = STK.Stockid
LEFT JOIN ({gllookup}) LD ON GLC.GLCategoryId = LD.lookupid
--LEFT JOIN (SELECT LookupID, Value as [GL Category] FROM Lookup) LD ON GLC.GLCategoryId = LD.lookupid
{where}
Order by DatePaid
","0","","1","LRA-FUSION","0","0","fusion"
"39854","cv_Acc_Print_Cost_Estimate_Hidden","","declare @DocID as int
Declare @CommentsBelow as bit
set @DocID = {docid}
Set @CommentsBelow  = isnull((SELECT Top 1 Selected from crmSetup where variable = 'CommentsBelow'),0)

--Normal selection
--SELECT  [Stock Code] as [CODE],[DESCRIPTION], [COMMENTS] ,QTY,  [PRICE EX.],  [TOTAL EX.] 
--Normal selection with comments below
SELECT  [Stock Code] as [CODE],[DESCRIPTION], QTY,  [PRICE EX.],  [TOTAL EX.] 
--Lapp Kabel selection
--SELECT [Stock Code] as [PART NUMBER], [CUSTOMER ITEM NUMBER], [DESCRIPTION+SPEC] as [QUOTATION LINE ITEM DESCRIPTION AND DETAILS],[DeliveryTerms] as [DELIVERY TERMS], [COPPER WEIGHT],[TOTAL WEIGHT], QTY, [PRICE EX.] as [GROSS PRICE EX.],[DISCOUNT] as [DISC],[Nett] as [NETT PRICE],  [TOTAL EX. DISC] as [TOTAL EX.]

FROM    (

    --Select Main items
    SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],CED.StockCode as [Stock Code],
    CASE WHEN isnull(CED.Comments,'') <> '' AND  @CommentsBelow = 1 THEN CED.StockDescription + ':' + char(13) + CED.Comments ELSE CED.StockDescription END as [Description],
    CED.StockDescription + isnull(char(10) + STK.Specifications,'') as [Description+Spec], 
    Comments,Company as [Supplier],
    convert(varchar,cast((isnull(STK.Weight,0) /1000) * CED.Qty  as money),1) as [Total Weight],
    convert(varchar,Qty) as [Qty],convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],CEM.Currency + ' ' + convert(varchar,cast(CED.CostPriceEx as money),1) as [Cost Ex.],
    '' as [Price Ex.], '' as [Total Ex.],
    CEM.Currency + ' ' + convert(varchar,cast(PriceEx * qty  * ((100 - isnull(discperc,0)) /100) as money),1) as [Total Ex. Disc],
    CEM.Currency + ' ' + convert(varchar,cast(PriceEx * ((100 - isnull(discperc,0)) /100) as money),1) as [Nett],
    SM.DeliveryTerms, 
    Rank, -1000 as [Rank2],
    '' as [customer item number]
    FROM Cost_Estimate_Detail  CED
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON CED.ProjectID = P.projectID
    LEFT JOIN AccStock STK ON CED.StockID = STK.StockID
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT ShippingDocID, DeliveryTerms FROM Shipping_Master ) SM ON CED.ShippingDocID = SM.Shippingdocid
    where isnull(ComponentOfLineID,0)  = 0
    AND CED.DocID = @DocID
 
/*    UNION ALL

    --Display comments in seperate line
    SELECT distinct convert(varchar,lineid) + 'M'  as [LineID],
    GroupNAme, '' as [Project],'' as [Stock Code], isnull(Comments,'') as [Description],null,
    NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
    Rank , -999 as [Rank2],
    '' as [customer item number]
    FROM Cost_Estimate_Detail DD
    LEFT JOIN (SELECT DocID , ROE FROM Cost_Estimate_Master ) DM
    ON DD.DocID = DM.DocID 
    WHERE DD.DocID = @docid
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
    and  isnull(ComponentOfLineID,0)  = 0
*/
    UNION ALL
    
    --Select component items
    SELECT convert(varchar,lineid) + 'C'  as [LineID], (SELECT Top 1 GroupName From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) as [Group],null as [Project], '-    ' + CED.StockCode as [Stock Code], '-    ' + CED.StockDescription as [Description],  '-    ' + CED.StockDescription as [Description+Spec], Comments,Company as [Supplier],
    convert(varchar,cast((isnull(STK.Weight,0) /1000) * CED.Qty as money),1) as [Total Weight],
    convert(varchar,Qty),convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
    CEM.Currency + ' ' + convert(varchar,cast(CED.CostPriceEx as money),1) as [Cost Ex.],
    '' as [Price Ex.],'' as [Total Ex.], '' as [Total Ex. Disc], '' as [Nett], 
    null as [DeliveryTerms],
	(SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2],
	'' as [customer item number]
    FROM Cost_Estimate_Detail CED
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN AccStock STK ON CED.StockID = STK.StockID
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    where isnull(ComponentOfLineID,0)  > 0
    AND CED.DocID = @DocID

    UNION ALL

    SELECT distinct convert(varchar,lineid) + 'C'  as [LineID],
    (SELECT Top 1 GroupName From Cost_Estimate_Detail Where LineID = DD.ComponentOfLineID), '' as [Project],'' as [Stock Code], '' as [Code],'-      ' + Comments as [Description],
    NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
    (SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = DD.ComponentOfLineID) ,Rank + 1 as [Rank2],
    '' as [customer item number]
    FROM Cost_Estimate_Detail DD
    LEFT JOIN (SELECT DocID , ROE FROM Cost_Estimate_Master ) DM
    ON DD.DocID = DM.DocID 
    WHERE DD.DocID = @docid
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
    and  isnull(ComponentOfLineID,0)  > 0

    UNION ALL

    --Select Groups
    SELECT Distinct null, isnull(GroupName, 'Not Specified'), '<col-grey>', '<col-grey>' + '<B>' + upper(isnull(GroupName, 'Not Specified')) + '</B>' ,  '<col-grey>','<col-grey>', '<col-grey>', '<col-grey>','<col-grey>',
    '<col-grey>',
    '<col-grey>', '<col-grey>', '<col-grey>', 
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * qty) as money),1)  + '</B>' as [Total Ex.],
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) as money),1)  + '</B>' as [Total Ex. Disc],
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) as money),1)  + '</B>' as [Nett],
    '<col-grey>' as [DeliveryTerms],
    isnull(min(Rank),0),-2000,
    '<col-grey>' as [customer item number]
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    WHERE CED.DocID = @DocID
    AND isnull(ComponentOfLineID,0)  = 0
    GROUP BY CED.GroupName,CEM.Currency 
    
   

    UNION ALL
    
    --Select Summary info
    SELECT null,'<col-grey>', '<col-grey>', '<col-grey><B>SUMMARY:</B>', '<col-grey>',  '<col-grey>', '<col-grey>','<col-grey>', '<col-grey>','<col-grey>', '<col-grey>', '<col-grey>','<col-grey>','<col-grey>',  
    '<col-grey>','<col-grey>','<col-grey>',
    9999999999999998,9999999999999998, '<col-grey>' as [customer item number]

    UNION ALL

    --Select Summary info
    SELECT Distinct null, '<col-grey>', '<col-grey>','<col-grey><B>' + upper(isnull(GroupName, 'Not Specified')) + '</B>', '<col-grey>',  '<col-grey>','<col-grey>', '<col-grey>','<col-grey>','<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>',
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * qty) as money),1)  + '</B>' as [Total Ex.],
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * qty  * ((100 - isnull(discperc,0)) /100)) as money),1)  + '</B>' as [Total Ex.],
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) as money),1)  + '</B>' as [Nett],
    '<col-grey>',
    9999999999999999,9999999999999999, '<col-grey>' as [customer item number]
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    WHERE CED.DocID = @DocID
    AND isnull(ComponentOfLineID,0)  = 0
    GROUP BY CED.GroupName,CEM.Currency 
    ) A 
--group by lineID,[Group],Rank,Rank2,[Stock Code],[DESCRIPTION+SPEC],DeliveryTerms,[COPPER WEIGHT],[TOTAL WEIGHT],QTY,[PRICE EX.],DISCOUNT,Nett,[TOTAL EX. DISC]

ORDER BY [Group] desc, Rank,Rank2 ","0","","1","LRA-FUSION","0","0","fusion"
"39855","cv_Acc_Update_Sum_Totals_CE","","DECLARE @DocID as integer
SET @DocID = {docid}

UPDATE Cost_Estimate_Detail
SET 
Qty = 1, 
MarkupPerc = 0,
WastePerc = 0,
PriceEx =
	CASE isnull(SP.CalcPriceUsing,1) 
		when 1 then ALLt.TotalEx
		when 2 then TANt.TotalEx
		when 3 then INTANt.TotalEx
		when 4 then MANUFt.TotalEx
	END * (( isnull(CalcPriceUsingPerc,0)) /100)
FROM Cost_Estimate_Detail CED
LEFT JOIN (SELECT DocID, DivisionID FROM COST_ESTIMATE_MASTER) CEM
ON CED.docID = CEM.DocID
LEFT JOIN (SELECT * FROM AccStockPrice) SP
ON CED.StockID = SP.StockID AND CED.PriceCategoryID = SP.PriceCategoryID  AND CEM.DivisionID = SP.DivisionID 
LEFT JOIN (
	--Sum of all items
	SELECT DocID,Sum(PriceEx * Qty) as [TotalEx]  FROM Cost_Estimate_Detail CED
	LEFT JOIN (SELECT * FROM AccStockPrice) SP
	ON CED.StockID = SP.StockID AND CED.PriceCategoryID = SP.PriceCategoryID 
	Where DocID = @DocID
	and isnull(ComponentOfLineID,0) = 0
	and isnull(SP.CalcPriceUsing,1) = 0 
	Group By DocID
) ALLt ON CED.DocID = ALLt.DocID 
LEFT JOIN (
	--Sum of tangible items
	SELECT DocID,Sum(PriceEx * Qty) as [TotalEx] FROM Cost_Estimate_Detail CED
	LEFT JOIN (SELECT StockID,IsTangible FROM AccStock ) STK
	ON CED.StockID = STK.StockID
	LEFT JOIN (SELECT * FROM AccStockPrice) SP
	ON CED.StockID = SP.StockID AND CED.PriceCategoryID = SP.PriceCategoryID 
	Where DocID = @DocID
	and isnull(IsTangible,0) = 1
	and isnull(ComponentOfLineID,0) = 0
	and isnull(SP.CalcPriceUsing,1) = 0 
	Group By DocID
) TANt ON CED.DocID = TANt.DocID
LEFT JOIN (
	--Sum of intangible items
	SELECT DocID,Sum(PriceEx * Qty) as [TotalEx]  FROM Cost_Estimate_Detail CED
	LEFT JOIN (SELECT StockID,IsTangible FROM AccStock ) STK
	ON CED.StockID = STK.StockID
	LEFT JOIN (SELECT * FROM AccStockPrice) SP
	ON CED.StockID = SP.StockID AND CED.PriceCategoryID = SP.PriceCategoryID 
	Where DocID = @DocID
	and isnull(IsTangible,0) = 0
	and isnull(ComponentOfLineID,0) = 0
	and isnull(SP.CalcPriceUsing,1) = 0 
	Group By DocID
) INTANt ON CED.DocID = INTANt.DocID
LEFT JOIN (
	--Sum of manufactured items
	SELECT DocID,Sum(PriceEx * Qty) as [TotalEx] FROM Cost_Estimate_Detail CED
	LEFT JOIN (SELECT StockID FROM AccStock ) STK
	ON CED.StockID = STK.StockID
	LEFT JOIN (SELECT * FROM AccStockPrice) SP
	ON CED.StockID = SP.StockID AND CED.PriceCategoryID = SP.PriceCategoryID 
	Where DocID = @DocID
	and lineid in  (SELECT Distinct ComponentOfLineID FROM COST_ESTIMATE_DETAIL WHERE DocID = @DocID)
	and isnull(ComponentOfLineID,0) = 0
	and isnull(SP.CalcPriceUsing,1) = 0 
	Group By DocID
) MANUFt ON CED.DocID = MANUFt.DocID
Where CED.DocID = @DocID
and isnull(SP.PriceFromDocTotals,0) = 1 ","0","","1","LRA-FUSION","0","0","fusion"
"39856","cv_Update_SP_From_linked_Docs","","DECLARE @PipelineID as integer
SET @PipelineID = {pipelineid}
DELETE FROM SalesPipelineDetailQuoted where pipelineid = @PipelineID
insert into SalesPipelineDetailQuoted (PipelineID,ProductID, Amount,Units,Groupname)
SELECT SP.PipelineID,CED.StockID, isnull(Qty,0) * isnull(PriceEx,0) * isnull(ROE,1) ,Qty,case GroupName when '' then null else groupname end 
FROM Cost_Estimate_Detail CED
LEFT JOIN Cost_Estimate_Master CEM ON CED.DocID = CEM.DocID
LEFT JOIN SalesPipeLine SP ON CED.DocID = SP.CEDocID
WHERE 
isnull(ComponentOfLineID,0) = 0 
AND SP.PipelineID is not null
and isnull(Revisedtodoc,0) =0
AND SP.PipelineID = @PipelineID

DELETE FROM SalesPipelineDetailAccepted where pipelineid = @PipelineID 
insert into SalesPipelineDetailAccepted (PipelineID,ProductID, Amount,Units,Groupname)
SELECT SP.PipelineID,DD.StockID, isnull(Qty,0) * isnull(PriceEx,0) * isnull(ROE,1) ,Qty,case CED.GroupName when '' then null else DD.groupname end 
FROM DEBTOR_Detail DD
LEFT JOIN DEBTOR_Master DM ON DD.DocID = DM.DocID
LEFT JOIN SalesPipeLine SP ON DD.DocID = SP.QuoteDocID
LEFT JOIN (SELECT Distinct DocID, max(stockID) as [StockID], max(GroupName) as [GroupName] FROM Cost_Estimate_Detail group by DocID) CED ON SP.CEDocID = CED.DocID AND DD.StockID = CED.StockID
WHERE 
DM.DocType in ('Quote', 'Sales Order')
And DocStatus in ('Accepted', 'Completed')
AND SP.PipelineID is not null
AND SP.PipelineID = @PipelineID
","0","","1","LRA-FUSION","0","0","fusion"
"39857","cv_Acc_Stock_Dispatch","","
declare @DocID as int
set @DocID = {docid}

SELECT LineID, [Group],Project,[Container], [Stock Code] as [Code], [Description], [Comments], Qty as [Dispatch Qty],
[Unit Weight], [Total Weight], [Unit Volume], [Total Volume],
[Total Ex.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],CED.StockCode as [Stock Code], CED.StockDescription as [Description], CED.Comments,
	Qty,LC.Value as [Container],
	dbo.fnFormatNumber(PriceEx * Qty * (1 - isnull(DiscPerc,0) /100) ) as [Total Ex.],
	Convert(varchar,cast(isnull(STk.Weight,0) /1000 as money),1) as [Unit Weight],  
	Convert(varchar,cast((isnull(STk.Weight,0) /1000 )* CED.Qty as money),1) as [Total Weight],
	Convert(varchar,cast((isnull(STk.Length,0)/1000) * (isnull(STk.Width,0)/1000) * (isnull(STk.Height,0)/1000) as money),1) as [Unit Volume],
	Convert(varchar,cast((isnull(STk.Length,0)/1000) * (isnull(STk.Width,0)/1000) * (isnull(STk.Height,0)/1000) * CED.Qty as money),1) as [Total Volume],
	Rank, -1000 as [Rank2]
	FROM DEBTOR_DETAIL  CED
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN (SELECT * FROM AccStock) STK ON CED.StockID = STK.Stockid
	LEFT JOIN LinkLookup LC on CED.ContainerID = LC.LinkLookupID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	
	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + CED.StockCode as [Stock Code], '-    ' + CED.StockDescription as [Description], CED.Comments,
	Qty,LC.Value as [Container],
	dbo.fnFormatNumber(PriceEx * Qty * (1 - isnull(DiscPerc,0) /100) ) as [Total Ex.],
	Convert(varchar,cast(isnull(STk.Weight,0) /1000 as money),1) as [Unit Weight],  
	Convert(varchar,cast((isnull(STk.Weight,0) /1000 )* CED.Qty as money),1) as [Total Weight],
	Convert(varchar,cast((isnull(STk.Length,0)/1000) * (isnull(STk.Width,0)/1000) * (isnull(STk.Height,0)/1000) as money),1) as [Unit Volume],
	Convert(varchar,cast((isnull(STk.Length,0)/1000) * (isnull(STk.Width,0)/1000) * (isnull(STk.Height,0)/1000) * CED.Qty as money),1) as [Total Volume],
	(SELECT Top 1 Rank From DEBTOR_DETAIL Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2]
	FROM DEBTOR_DETAIL CED
	LEFT JOIN (SELECT * FROM AccStock) STK ON CED.StockID = STK.Stockid
	LEFT JOIN LinkLookup LC on CED.ContainerID = LC.LinkLookupID
	where isnull(ComponentOfLineID,0)  > 0
	AND DocID =  @DocID
	) A
ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"39858","cv_Acc_Stock_Receipt","","
declare @DocID as int
set @DocID = {docid}

SELECT LineID, [Group],Project,[Container], [Stock Code] as [Code], [Description], [Comments], Qty as [Received Qty],
[Unit Weight], [Total Weight], [Unit Volume], [Total Volume],
[Total Ex.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],CED.StockCode as [Stock Code], CED.StockDescription as [Description], CED.Comments,
	Qty,LC.Value as [Container],
	dbo.fnFormatNumber(PriceEx * Qty * (1 - isnull(DiscPerc,0) /100) ) as [Total Ex.],
	Convert(varchar,cast(isnull(STk.Weight,0) /1000 as money),1) as [Unit Weight],  
	Convert(varchar,cast((isnull(STk.Weight,0) /1000 )* CED.Qty as money),1) as [Total Weight],
	Convert(varchar,cast((isnull(STk.Length,0)/1000) * (isnull(STk.Width,0)/1000) * (isnull(STk.Height,0)/1000) as money),1) as [Unit Volume],
	Convert(varchar,cast((isnull(STk.Length,0)/1000) * (isnull(STk.Width,0)/1000) * (isnull(STk.Height,0)/1000) * CED.Qty as money),1) as [Total Volume],
	Rank, -1000 as [Rank2]
	FROM CREDITOR_DETAIL  CED
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN (SELECT * FROM AccStock) STK ON CED.StockID = STK.Stockid
	LEFT JOIN LinkLookup LC on CED.ContainerID = LC.LinkLookupID
	where DocID =  @DocID
	

	) A
ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"39859","cv_Acc_Print_GRN","","Declare @docID  as integer
Set @DocID = {docid}

{select} 
(	
	 SELECT 
        LineId
        , StockCode as [Code]
        , StockDescription as [Description]
        , convert(varchar,round((Qty),4))  as [Qty]
        ,dbo.fnFormatNumber(PriceEx) as [Price Ex. VAT]
        ,dbo.fnFormatNumber(PriceEx * (1 - isnull(DiscPerc,0) /100)  * ((DD.TAX / 100) + 1)) as [Unit VAT]
        ,dbo.fnFormatNumber(PriceEx * (1 - isnull(DiscPerc,0) /100)  * ((DD.TAX / 100) + 1)) as [Price Incl. VAT]
        ,dbo.fnFormatNumber(Qty * PriceEx) as [Total Ex. VAT]
        ,dbo.fnFormatNumber(PriceEx * Qty * (1 - isnull(DiscPerc,0) /100)  * ((DD.TAX / 100) )) as [Total VAT]
        ,dbo.fnFormatNumber(PriceEx * Qty * (1 - isnull(DiscPerc,0) /100)  * ((DD.TAX / 100) + 1)) as [Total Incl.]
        ,Isnull(p.projectName,'') as [Project Name]
		,isnull(BarCode,'') as [Barcode]
		,isnull(SB.Value,'') as [Purchased In]
,CONVERT(VARCHAR, DD.ETADate, 111) AS [ETA]
        , 1 as [Rank] 
    FROM CREDITOR_DETAIL DD
    LEFT JOIN (SELECT DocID , ROE FROM CREDITOR_MASTER ) DM
    ON DD.DocID = DM.DocID
    LEFT JOIN (SELECT StockID , BarCode, PurchasedBy FROM AccStock ) ACC
	ON DD.StockID = ACC.StockID  
	LEFT JOIN Lookup SB ON SB.LookupID = ACC.PurchasedBy
    Left join Projects P on P.ProjectID = DD.ProjectID
    WHERE DD.DocID = @docid
    
    UNION ALL
    
    SELECT 
        LineId
        ,'' as [Code]
        ,'-  ' + Comments as [Description]
        ,''  as [Qty]
        ,'' as [Price Ex. VAT]
        ,'' as [Unit VAT]
        ,'' as [Price Incl. VAT]
        ,'' as [Total Ex. VAT]
        ,'' as [Total VAT]
        ,'' as [Total Ex. VAT]
        ,'' as [Project Name]
		,'' as [Barcode]
        ,'' as [Purchased In]
        ,'' AS [ETA]
        ,2 as [Rank] 
    FROM CREDITOR_DETAIL DD
    LEFT JOIN (SELECT DocID , ROE FROM CREDITOR_MASTER ) DM
    ON DD.DocID = DM.DocID 
    Left join Projects P on P.ProjectID = DD.ProjectID
    WHERE DD.DocID = @docid
    AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
    
    ) A
ORDER By Lineid,Rank
","0","","1","LRA-FUSION","0","0","fusion"
"39860","cv_RecurringActions","","SELECT
 
RA.RecurringActionID AS [ID], 
'  ' AS [ ],
E.Company, 
EC.FirstName + ' ' + EC.Surname [Contact], 
RA.ActionType, 
CONVERT(VARCHAR,RA.StartDate,111) as [Start Date],
CONVERT(VARCHAR,RA.EndDate,111) as [End Date],
U.FirstName + ' ' + U.Surname AS [Action For], 
L.Value,
RA.Subject,
RA.Descr, 
U.FirstName + ' ' + U.Surname AS [Added By]

FROM RecurringActions RA

LEFT JOIN(SELECT EntityID, Company FROM Entity) E ON E.EntityID = RA.EntityID
LEFT JOIN(SELECT EntityContactID, EntityID, FirstName,Surname FROM EntityContact) EC ON EC.EntityContactID = RA.EntityContactID
LEFT JOIN(SELECT UserID, Firstname, Surname FROM Users) U ON UserID = RA.ActionForID
LEFT JOIN(SELECT LookupID, Value FROM Lookup)L ON LookupID = RA.DivisionID

{where}","0","","1","LRA-FUSION","0","0","fusion"
"39861","qf_contacts_RecurringActions","","select c.entitycontactid, 
ltrim(isnull(c.firstname,'')+' '+isnull(c.surname,'')) as [Contact],
e.Company
from entitycontact c
left join entity e on e.entityid = c.entityid
where isnull(c.firstname,'')+' '+isnull(c.surname,'') like '%<%replace%>%' AND c.entityID = {entityid}
order by ltrim(isnull(c.firstname,'')+' '+isnull(c.surname,'')), e.company

","0","","1","LRA-FUSION","0","0","fusion"
"39862","cv_Acc_Freight_Calc","","SET NOCOUNT ON

DECLARE @ShippingDocID as Integer
DECLARE @FromLineID as integer
DECLARE @CurrentLineID as BigInt
DECLARE @LastLineID as BigInt
SET @ShippingDocID = 101 --{templatetouse}
SET @FromLineID = 407 --{fromlineid}
--********************************************************************************************************************************************
--********************************************************************************************************************************************
--Create temporary tables for population
CREATE TABLE #SHIPPING_MASTER (
	[ShippingDocID] [int],
	[ShippingTypeID] [int],
	[TransporterID] [int],
	[TransporterRefNo] [varchar] (50),
	[DocID] [bigint],
	[StockID] [bigint],
	[StockQty] [float],
	[BasePriceEx] [money],
	[DocDate] [datetime],
	[Origin] [varchar] (255),
	[Destination] [varchar] (255),
	[DateToShip] [datetime],
	[DateArriving] [datetime],
	[DeliveryTerms] [varchar] (50),
	[NoOfPackages] [int],
	[PackageTypeID] [int],
	[Length] [float],
	[Width] [float] ,
	[Height] [float],
	[Weight] [float],
	[PackageWeight] [float],
	[IsTemplate] [bit],
	[CalcTotalEx] [money],
	[CalcTotalVat] [money],
	[LineID] [bigint],
	[BaseCostPriceEx] [money],
	[BasePriceIncl] [money],
	[UsePercWeight] [bit] 
) 

CREATE TABLE #SHIPPING_DETAIL (
	[ShippingLineID] [bigint],
	[ShippingDocID] [bigint],
	[LineDescription] [varchar] (255),
	[LineGroup] [varchar] (255),
	[MinValue] [money],
	[Units] [float],
	[Rate] [money],
	[Currency] [varchar] (50),
	[VATRate] [float],
	[UsePercUnit] [bit],
	[UsePercRate] [bit]
) 

CREATE TABLE #SHIPPING_CURRENCY (
	[ShippingCurrencyID] [bigint],
	[ShippingDocID] [bigint],
	[Currency] [varchar] (50),
	[ROE] [float]
) 

CREATE TABLE #SHIPPING_DETAIL_LINK (
	[ShippingDetailLinkID] [bigint] ,
	[ShippingDocID] [bigint] ,
	[LineDescription] [varchar] (255) ,
	[LinkedTo] [varchar] (255) ,
	[SumOf] [varchar] (10) 
)

CREATE TABLE #SHIPPING_DETAIL_RATE (
	[DetailRateID] [bigint] ,
	[ShippingLineID] [bigint],
	[CrossoverValue] [float],
	[Rate] [money] 
)
--********************************************************************************************************************************************
--********************************************************************************************************************************************
--Populate temporary tables

DELETE FROM #SHIPPING_MASTER
INSERT INTO #SHIPPING_MASTER ([ShippingDocID],[ShippingTypeID],	[TransporterID],[TransporterRefNo],[DocID],[StockID],[StockQty],[BasePriceEx],[DocDate],[Origin],
	[Destination],[DateToShip],[DateArriving],[DeliveryTerms],[NoOfPackages],[PackageTypeID],[Length],[Width],[Height],[Weight],[PackageWeight],
	[IsTemplate],[CalcTotalEx],[CalcTotalVat],[LineID],[BaseCostPriceEx],[BasePriceIncl],[UsePercWeight]) 
SELECT [ShippingDocID],[ShippingTypeID],	[TransporterID],[TransporterRefNo],[DocID],[StockID],[StockQty],[BasePriceEx],[DocDate],[Origin],
	[Destination],[DateToShip],[DateArriving],[DeliveryTerms],[NoOfPackages],[PackageTypeID],[Length],[Width],[Height],[Weight],[PackageWeight],
	[IsTemplate],[CalcTotalEx],[CalcTotalVat],[LineID],[BaseCostPriceEx],[BasePriceIncl],[UsePercWeight]
FROM SHIPPING_MASTER WHERE ShippingDocID = @ShippingDocID

UPDATE #SHIPPING_MASTER
SET IsTemplate = 0,
LineID = @FromLineID,
DocID = CED.DocID,
StockID = CED.StockID,
StockQty = CED.Qty,
BaseCostPriceEx = CED.CostPriceEx,
BasePriceEx = CED.PriceEx,
BasePriceIncl = CED.PriceIncl,
Weight = (SELECT Top 1 isnull(Weight,0) /1000 FROM AccStock Where StockID =CED.StockID)
FROM #SHIPPING_MASTER SM
LEFT JOIN COST_ESTIMATE_DETAIL CED ON @FromLineID = CED.LineID

DELETE FROM #SHIPPING_DETAIL
INSERT INTO #SHIPPING_DETAIL
SELECT * FROM SHIPPING_DETAIL WHERE ShippingDocID = @ShippingDocID

DELETE FROM #SHIPPING_CURRENCY
INSERT INTO #SHIPPING_CURRENCY
SELECT * FROM SHIPPING_CURRENCY WHERE ShippingDocID = @ShippingDocID

DELETE FROM #SHIPPING_DETAIL_LINK
INSERT INTO #SHIPPING_DETAIL_LINK
SELECT * FROM SHIPPING_DETAIL_LINK WHERE ShippingDocID = @ShippingDocID

DELETE FROM #SHIPPING_DETAIL_RATE
INSERT INTO #SHIPPING_DETAIL_RATE
SELECT * FROM SHIPPING_DETAIL_RATE WHERE ShippingLineID in (SELECT ShippingLineID FROM SHIPPING_DETAIL WHERE ShippingDocID = @ShippingDocID)

--********************************************************************************************************************************************
--********************************************************************************************************************************************
--Get the freight price data
Set @CurrentLineID = 0
Set @LastLineID = (SELECT max(ShippingLineID) FROM #SHIPPING_DETAIL where ShippingDocID = @ShippingDocID)

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[TempShipping]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
CREATE TABLE [dbo].[TempShipping] (
    ShippingDocID bigint,
    ShippingLineID bigint,
    LineGroup   varchar(255),
        LineDescription varchar(255),
        MinValue money,
        Units float,
    UnitMultiplier float,
        Currency varchar(50),
        Rate money,
    RateMultiplier float,
        ROE money,
        VATRate float,
        Total money
) ON [PRIMARY]


DELETE FROM TempShipping WHERE ShippingDocID = @ShippingDocID
INSERT INTO TempShipping

--Insert document header totals
SELECT @ShippingDocID,0,'HeaderInfo',  'Total Price Ex.',0,1 as [Units],1,'R',(BaseCostPriceEx * StockQty) as [Rate],1,1,0,(BaseCostPriceEx * StockQty) as [Total]
FROM #SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID
UNION ALL
SELECT @ShippingDocID,0,'HeaderInfo',  'No. Of Packages',0, NoOfPackages as [Units],1,'R',1 as [Rate],1,1,0, NoOfPackages as [Total]
FROM #SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID
UNION ALL
SELECT @ShippingDocID,0,'HeaderInfo', 'Total Weight',0, (Weight * StockQty)  as [Units],1,'R',1 as [Rate],1,1,0, (Weight * StockQty) as [Total]
FROM #SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID
UNION ALL
SELECT @ShippingDocID,0,'HeaderInfo', 'Volumetric',0, (Length*Width*Height*NoOfPackages) / 0.006  as [Units],1,'R',1 as [Rate],1,1,0, (Length*Width*Height*NoOfPackages)/ 0.006 as [Total]
FROM #SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID

WHILE @CurrentLineID < @LastLineID BEGIN
    Set @CurrentLineID = (SELECT min(ShippingLineID) FROM #SHIPPING_DETAIL where ShippingDocID = @ShippingDocID AND ShippingLineID > @CurrentLineID )
    
   INSERT INTO TempShipping
    
    SELECT @ShippingDocID,SD.ShippingLineID, SD.LineGroup, SD.LineDescription, SD.MinValue,isnull(TSU.Units, SD.Units) as [Unit],
    Case when Isnull(usePercUnit,0) = 0 Then 1 ELSE isnull(SD.Units,0) / 100 END as [UnitMultplier],
    SD.Currency,
        isnull((Select Rate From SHIPPING_DETAIL_RATE where ShippingLineID = SD.ShippingLineID AND crossovervalue = (SELECT Max(CrossoverValue) FROM SHIPPING_DETAIL_RATE where ShippingLineID = SD.ShippingLineID and isnull(TSU.Units, SD.Units) >= CrossoverValue  )),
        isnull(TSR.Rate, SD.Rate)) as [Rate],
    Case when Isnull(usePercRate,0) = 0 Then 1 ELSE isnull(SD.Rate,0) / 100 END as [RateMultplier],
    isnull(SC.ROE,1), SD.VATRate,
        (isnull(TSU.Units, SD.Units)) * 
        (Case when Isnull(usePercUnit,0) = 0 Then 1 ELSE isnull(TSU.Units, SD.Units) / 100 END) *
        isnull((Select Rate From SHIPPING_DETAIL_RATE where ShippingLineID = SD.ShippingLineID AND crossovervalue = (SELECT Max(CrossoverValue) FROM SHIPPING_DETAIL_RATE where ShippingLineID = SD.ShippingLineID and isnull(TSU.Units, SD.Units) >= CrossoverValue  )),isnull(TSR.Rate, SD.Rate)) *
        (Case when Isnull(usePercRate,0) = 0 Then 1 ELSE isnull(SD.Rate,0) / 100 END) *
        isnull(SC.ROE,1) as [Total]
    FROM #SHIPPING_DETAIL SD
    LEFT JOIN (SELECT TSi.ShippingDocID,SDLi.LineDescription,Sum(Total) as [Units] FROM TempShipping TSi
        LEFT JOIN (SELECT * FROM #SHIPPING_DETAIL_LINK where SumOf = 'Unit' AND ShippingDocID = @ShippingdocID) SDLi
        ON TSi.LineDescription = SDLi.LinkedTo 
        GROUP BY SDLi.LineDescription,TSi.ShippingDocID) TSU
    ON SD.LineDescription = TSU.LineDescription and SD.ShippingDocID = TSU.ShippingDocID
    LEFT JOIN (SELECT TSi.ShippingDocID, SDLi.LineDescription,Sum(Total) as [Rate] FROM TempShipping TSi
        LEFT JOIN (SELECT * FROM #SHIPPING_DETAIL_LINK where SumOf = 'Rate' AND ShippingDocID = @ShippingdocID) SDLi
        ON TSi.LineDescription = SDLi.LinkedTo 
        GROUP BY TSi.ShippingDocID,SDLi.LineDescription) TSR
    ON SD.LineDescription = TSR.LineDescription and SD.ShippingDocID = TSR.ShippingDocID
    LEFT JOIN #Shipping_Currency SC
    ON SD.ShippingDocID = SC.ShippingDocID AND SD.Currency = SC.Currency
    WHERE SD.ShippingLineID = @CurrentLineID
END

--********************************************************************************************************************************************
--********************************************************************************************************************************************
--Return Data
SELECT * FROM TempShipping

--********************************************************************************************************************************************
--********************************************************************************************************************************************
--Clean out temp tables
DROP TABLE #SHIPPING_MASTER
DROP TABLE #SHIPPING_DETAIL
DROP TABLE #SHIPPING_CURRENCY
DROP TABLE #SHIPPING_DETAIL_LINK
DROP TABLE #SHIPPING_DETAIL_RATE

SET NOCOUNT OFF","0","","1","LRA-FUSION","0","0","fusion"
"39863","cv_Acc_Gl_Income_Statement","","DECLARE @MonthStart as datetime
SET @MonthStart = '{monthstart}'

SELECT  [ID],[Code], [Description], [MTD Amount], [Current Amount], [MTD Total], [Current Total]  FROM ( 

SELECT '0#INCOME' as [ID],'INCOME' as [Code],null as [Description],null as [MTD Amount], null as [Current Amount], 
convert(varchar, convert(varchar, cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN Cr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) as money) ,1)) as [MTD Total],
convert(varchar, convert(varchar,cast(sum(isnull(Cr,0)) - sum(isnull(dr,0)) as money),1)) as [Current Total],
1 as [Rank]
FROM AccGL G
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON G.ProjectID = P.ProjectID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'INCOME'
{where}

UNION ALL

SELECT '1#INCOME##' + isnull(GL,'') +'#'+ isnull(Convert(varchar,gc.glcode),''), '   ' + convert(varchar,GC.GLCode), GL  as [Description], 
convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN Cr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) as money),1)) as [MTD Amount], 
convert(varchar, convert(varchar,cast(sum(isnull(Cr,0)) - sum(isnull(dr,0)) as money),1)) as [Current Amount], 
null AS [MTD Tootal],
null as [Current Total], 
2 as [RANK]
FROM AccGL  G
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON G.ProjectID = P.ProjectID
LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid /*OR GC.Divisionid = 0*/) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'INCOME'
{where}
Group by  GL,GC.GLCode

UNION ALL

SELECT '2#COST OF SALES','COST OF SALES' as [GLCode], Null  as [Description],
null AS [MTD Amount],
null as [Amount], 
'(' + convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0)) as money),1)) + ')' as [MTD Total], 
'(' + convert(varchar, convert(varchar,cast(sum(isnull(dr,0)) - sum(isnull(cr,0)) as money),1)) + ')' as [Current Total], 
3 as [Rank]
FROM AccGL G
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON G.ProjectID = P.ProjectID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND TYPE like 'COST OF SALES'
{where}

UNION ALL

SELECT '3#COST OF SALES##'  + isnull(GL,'') +'#'+ isnull(Convert(varchar,gc.glcode),''),  '   ' + convert(varchar,GC.GLCode), GL  as [Description], 
convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0)) as money),1)) as [MTD Amount], 
convert(varchar, convert(varchar,cast(sum(isnull(Dr,0)) - sum(isnull(Cr,0)) as money),1)) as [Current Amount], 
null AS [MTD Total],
null as [Current Total], 
4 as [RANK]
FROM AccGL  G
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON G.ProjectID = P.ProjectID
LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid /*OR GC.Divisionid = 0*/) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'COST OF SALES'
{where}
Group by  GL,GC.GLCode

UNION ALL 

SELECT '4',null,null,null,null,null,null, 5 as [Rank]

UNION ALL

SELECT '5','GROSS PROFIT'  as [GLCode],null as [Description],null as [MTD Amount], null as [Amount], 
convert(varchar, convert(varchar,isnull(cast((sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN Cr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) - isnull((SELECT cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END ,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0)) as money) FROM AccGL  WHERE isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0) + isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END ,0) <> 0 AND TYPE like 'COST OF SALES' {where}),0)) as money),0),1)) as [MTD Total],
convert(varchar, convert(varchar,isnull(cast((sum(isnull(Cr,0)) - sum(isnull(dr,0)) - isnull((SELECT cast(sum(isnull(dr,0)) - sum(isnull(cr,0)) as money) FROM AccGL  WHERE isnull(cr,0) + isnull(dr,0) <> 0 AND TYPE like 'COST OF SALES' {where}),0)) as money),0),1)) as [Current Total],
5 as [Rank]
FROM AccGL G
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON G.ProjectID = P.ProjectID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'INCOME'
{where}

GROUP BY G.Divisionid

UNION ALL 

SELECT '6',null,null,null,null,null,null, 6 as [Rank]

UNION ALL

SELECT '7#OTHER INCOME','OTHER INCOME',null  as [Description],
null as [MTD Amount], null as [Current Amount], 
convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN Cr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END ,0)) as money),1)) as [MTD Total], 
convert(varchar, convert(varchar,cast(sum(isnull(Cr,0)) - sum(isnull(dr,0)) as money),1)) as [Current Total], 
6 as [Rank]
FROM AccGL G
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON G.ProjectID = P.ProjectID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'OTHER INCOME'
{where}


UNION ALL

SELECT '8#OTHER INCOME##' + isnull(GL,'') +'#'+ isnull(Convert(varchar,gc.glcode),''), '   ' + convert(varchar,GC.GLCode),  GL   as [Description], 
convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN  Cr END ,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN  dr END,0)) as money),1)) as [MTD Amount], 
convert(varchar, convert(varchar,cast(sum(isnull(Cr,0)) - sum(isnull(dr,0)) as money),1)) as [Current Amount], 
null as [MTD Total],null as [Current Total], 7 as [RANK]
FROM AccGL G
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON G.ProjectID = P.ProjectID
LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid /*OR GC.Divisionid = 0*/) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'OTHER INCOME'
{where}
Group by  GL, GC.GLCode

UNION ALL

SELECT '9#EXPENSE','EXPENSES' as [GLCode],null  as [Description],
null as [MTD Amount], null as [Current Amount],
'(' + convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN  dr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN  cr END,0)) as money),1)) + ')' as [MTD Total],
'(' + convert(varchar, convert(varchar,cast(sum(isnull(dr,0)) - sum(isnull(cr,0)) as money),1)) + ')' as [Current Total], 
8 as [Rank]
FROM AccGL G
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON G.ProjectID = P.ProjectID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'EXPENSE' and Type <> 'COST OF SALES'
{where}

UNION ALL

SELECT '10#EXPENSE##' + isnull(GL,'') +'#'+ isnull(Convert(varchar,gc.glcode),''),  '   ' + convert(varchar,GC.GLCode), GL  as [Description], 
convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0)) as money),1)) as [MTD Amount] , 
convert(varchar, convert(varchar,cast(sum(isnull(dr,0)) - sum(isnull(cr,0)) as money),1)) as [Current Amount], 
null AS [MTD Total],
null as [Current Total],
9 as [RANK]
FROM AccGL G
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON G.ProjectID = P.ProjectID
LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid /*OR GC.Divisionid = 0*/) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'EXPENSE' and Type <> 'COST OF SALES'
{where}
Group by  GL,GC.GLCode


UNION ALL 

SELECT '11',null,null,null,null,null,null, 10 as [Rank]

UNION ALL


SELECT '12','NET PROFIT',null  as [Description],null as [MTD Amount], null as [Current Amount], 
convert(varchar,isnull(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN Cr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)),0)
- isnull((SELECT cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0)) as money) FROM AccGL G WHERE isnull(CASE WHEN DateCompleted >= @MonthStart THEN  cr END ,0) + isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0) <> 0 AND Type like 'COST OF SALES' {where}),0)
+ isnull((SELECT cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN Cr END ,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END ,0)) as money) FROM AccGL G WHERE isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0) + isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0) <> 0 AND Type like 'OTHER INCOME' {where}),0)
- isnull((SELECT cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0)) as money) FROM AccGL G WHERE isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0) + isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0) <> 0 AND Type like 'EXPENSE' and Type <> 'COST OF SALES' {where}),0),1)
as [MTD Total],
convert(varchar,isnull(sum(isnull(Cr,0)) - sum(isnull(dr,0)),0)
- isnull((SELECT cast(sum(isnull(dr,0)) - sum(isnull(cr,0)) as money) FROM AccGL G WHERE isnull(cr,0) + isnull(dr,0) <> 0 AND Type like 'COST OF SALES' {where}),0)
+ isnull((SELECT cast(sum(isnull(Cr,0)) - sum(isnull(dr,0)) as money) FROM AccGL G WHERE isnull(cr,0) + isnull(dr,0) <> 0 AND Type like 'OTHER INCOME' {where}),0)
- isnull((SELECT cast(sum(isnull(dr,0)) - sum(isnull(cr,0)) as money) FROM AccGL G WHERE isnull(cr,0) + isnull(dr,0) <> 0 AND Type like 'EXPENSE' and Type <> 'COST OF SALES' {where}),0),1)
as [Current Total], 10 as [Rank]
FROM AccGL G
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON G.ProjectID = P.ProjectID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'INCOME'
{where}

GROUP BY G.Divisionid

) A

ORDER BY RANK,[Code],[Description]



","0","","1","LRA-FUSION","0","0","fusion"
"39864","cv_Acc_Print_Cost_Estimate2","","declare @DocID as int
Declare @CommentsBelow as bit
Declare @HideZeros as bit
set @DocID = {docid}
Set @CommentsBelow  =  (SELECT Top 1 isnull(Selected,0) from crmSetup where variable = 'CommentsBelow')
SET @HideZeros = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'HideZeroValues')

{select}   
(

    --Select Main items
    SELECT 
		convert(varchar,lineid) + 'M'  as [LineID]
		,/*CED.GroupName*/ null as [Group]
		,ProjectName as [Project]
		,isnull(ESC.EntityStockCode,CED.StockCode) as [Stock Code]
		,CASE WHEN isnull(CED.Comments,'') <> '' AND  @CommentsBelow = 1 THEN isnull(ESC.EntityStockDescription,CED.StockDescription) + ':' + char(13) + CED.Comments ELSE isnull(ESC.EntityStockDescription,CED.StockDescription) END as [Description]
		,isnull(ESC.EntityStockDescription,CED.StockDescription) + isnull(char(10) + STK.Specifications,'') as [Description+Spec]
		,Comments
		,Company as [Supplier]
		,convert(varchar,cast((isnull(STK.Weight,0) /1000) * CED.Qty  as money),1) as [Total Weight]
		,convert(varchar,Qty) as [Qty]
		,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount]
		,CASE WHEN @HideZeros = 1 AND isnull(CED.CostPriceEx ,0) = 0 THEN '' ELSE CEM.Currency + ' ' + dbo.fnFormatNumber(CED.CostPriceEx ) END as [Cost Ex.]
		,CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx / isnull(ROE,1) ) END as [Price Ex.]
		,CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx * qty / isnull(ROE,1) ) END as [Total Ex.]
		,CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx * qty  * ((100 - isnull(discperc,0)) /100) / isnull(ROE,1)) END as [Total Ex. Disc]
		,CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx * ((100 - isnull(discperc,0)) /100) / isnull(ROE,1) ) END as [Nett]
		,CASE WHEN @HideZeros = 1 AND ISNULL(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber((Qty * PriceEx) / isnull(CEM.ROE,1) * CEM.Tax/100 + (Qty * PriceEx) / isnull(CEM.ROE,1) ) END as [Total Incl]
		,CASE WHEN @HideZeros = 1 AND ISNULL(PriceEx,0) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(CEM.ROE,1) *CEM.Tax/100 ) END as [VAT]
		,SM.DeliveryTerms
		,Rank
		, -1000 as [Rank2]
		, rCED.[GroupRank]
		,'' as [customer item number]
		,CASE when STK.ProductImage is null then null else '<' + CONVERT(VARCHAR,CED.LineID) + '>' END as [Image]
		,SM.[Packing]
		,dbo.fnFormatNumber(STK.[Length] * STK.[Width] * STK.[Height]) as [Size]
		,STKT.[Stock Type]
		,dbo.fnFormatNumber(STK.[Weight]) as [KG/UNIT/CARTON]
		,dbo.fnFormatNumber(STK.[Weight] * CED.QTY) as [KG TOTAL]
		,STKST.[Stock Sub Type]
		,CEM.accCostOther4 as [Other4]
		,SPI.[Sold In]
    FROM Cost_Estimate_Detail  CED
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON CED.ProjectID = P.projectID
    LEFT JOIN AccStock STK ON CED.StockID = STK.StockID
    LEFT JOIN (
		SELECT 
			LookupID
			, Value as [Stock Type] 
		FROM lookup 
		WHERE Class LIKE 'StockType'
    ) STKT ON STKT.LookupID = STK.StockType
    LEFT JOIN (
		SELECT 
			LinkLookupID
			, Value as [Stock Sub Type]
			, Class 
		FROM Linklookup 
		WHERE Class LIKE 'StockSubType'
    ) STKST ON STKST.LinkLookupID = STK.SubTypeID
    LEFT JOIN (
		SELECT Lookupid, Value as [Sold In] From Lookup where class like 'BuySellUnits'
    ) SPI ON SPI.lookupID = STK.SoldBy
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (
		SELECT ShippingDocID, DeliveryTerms, [Packing] FROM Shipping_Master  SM
		LEFT JOIN (
			SELECT LookupID, Value as [Packing] from Lookup where class like 'Packagingtype'
		) LP ON LP.LookupID = SM.PackageTypeID
    ) SM ON CED.ShippingDocID = SM.Shippingdocid
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    LEFT JOIN (SELECT * from AccPrintoutGroup) APG
    ON APG.Doctype = 'Quote'  AND rtrim(lower(isnull(APG.GroupName,''))) = rtrim(lower(isnull(CED.GroupName,'')))
    LEFT JOIN (SELECT * FROM EntityStockCode) ESC
    ON CED.StockID = ESC.StockID AND CEM.EntityID = ESC.EntityID
    where isnull(ComponentOfLineID,0)  = 0
    AND ISNULL(APG.PrintoutGroupID,0) = 0
    AND CED.DocID = @DocID
 
    /*UNION ALL

    --Display comments in seperate line
    SELECT distinct convert(varchar,lineid) + 'M'  as [LineID],
    DD.GroupNAme, '' as [Project],'' as [Stock Code], null,isnull(Comments,'') as [Description],
    NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
    Rank , -999 as [Rank2] , rCED.[GroupRank], null
    FROM Cost_Estimate_Detail DD
    LEFT JOIN (SELECT DocID , ROE FROM Cost_Estimate_Master ) DM
    ON DD.DocID = DM.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON DD.GroupName = rCED.GroupName AND DD.DocID = rCED.DocID 
    WHERE DD.DocID = @docid
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
    and  isnull(ComponentOfLineID,0)  = 0*/

    UNION ALL



    --Select component items
    SELECT convert(varchar,CED.lineid) + 'C'  as [LineID], (SELECT Top 1 GroupName From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) as [Group],null as [Project], 
    '-    ' + isnull(ESC.EntityStockCode,CED.StockCode) as [Stock Code], 
    '-    ' + isnull(ESC.EntityStockDescription,CED.StockDescription) as [Description],
    '-    ' + isnull(ESC.EntityStockDescription,CED.StockDescription) as [Description+Spec], 
    Comments,Company as [Supplier],
    convert(varchar,cast((isnull(STK.Weight,0) /1000) * CED.Qty as money),1) as [Total Weight],
    convert(varchar,Qty),convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
    isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(CED.CostPriceEx / isnull(ROE,1)) as [Cost Ex.],
    '' as [Price Ex.],
    '' as [Total Ex.], 
    '' as [Total Ex. Disc], 
    '' as [Nett], 
    '' ,'',
    null as [DeliveryTerms],
     (SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) ,CED.Rank as [Rank2], 
     rCED.[GroupRank], '' as [customer item number],NULL
     ,NULL AS [Packing]
	,NULL AS [Size]
	,NULL AS [Class]
	,NULL AS [KG/UNIT/CARTON]
	,NULL AS [KG TOTAL]
	,NULL
	,NULL
	,null
    FROM Cost_Estimate_Detail CED
    LEFT JOIN (SELECT LineID, Rank,GroupName FROM COST_ESTIMATE_DETAIL WHERE DocID = @DocID) CEDM
    ON isnull(CED.ComponentOfLineID,0) = CEDM.LineID
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN AccStock STK ON CED.StockID = STK.StockID
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON CEDM.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    LEFT JOIN (SELECT * from AccPrintoutGroup) APG
    ON APG.Doctype = 'Quote'  AND rtrim(lower(isnull(APG.GroupName,''))) = rtrim(lower(isnull(CED.GroupName,'')))
    LEFT JOIN (SELECT * FROM EntityStockCode) ESC
    ON CED.StockID = ESC.StockID AND CEM.EntityID = ESC.EntityID
    where isnull(ComponentOfLineID,0)  > 0
    AND ISNULL(APG.PrintoutGroupID,0) = 0
    AND CED.DocID = @DocID
    AND isnull((select selected from crmSetup where Variable like 'PrintComponents'),0) = 1

    UNION ALL


    SELECT distinct convert(varchar,lineid) + 'C'  as [LineID],
    (SELECT Top 1 GroupName From Cost_Estimate_Detail Where LineID = DD.ComponentOfLineID), '' as [Project],'' as [Stock Code], '' as [Code],'-      ' + Comments as [Description],
    NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,null,null,
    (SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = DD.ComponentOfLineID) ,Rank + 1 as [Rank2], rCED.[GroupRank], '<col-grey>' as [customer item number],'<col-grey>' as [image]
    ,NULL AS [Packing]
	,NULL AS [Size]
	,NULL AS [Class]
	,NULL AS [KG/UNIT/CARTON]
	,NULL AS [KG TOTAL]
	,NULL
	,NULL
	,null
    FROM Cost_Estimate_Detail DD
    LEFT JOIN (SELECT DocID , ROE FROM Cost_Estimate_Master ) DM
    ON DD.DocID = DM.DocID 
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON DD.GroupName = rCED.GroupName AND DD.DocID = rCED.DocID
    LEFT JOIN (SELECT * from AccPrintoutGroup) APG
    ON APG.Doctype = 'Quote'  AND rtrim(lower(isnull(APG.GroupName,''))) = rtrim(lower(isnull(DD.GroupName,'')))
    WHERE DD.DocID = @docid
    AND ISNULL(APG.PrintoutGroupID,0) = 0
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
    and  isnull(ComponentOfLineID,0)  > 0

 -- comment out for Spoc
    UNION ALL
  
    --Select Groups
    SELECT Distinct '<col-grey>',  '<col-grey>' + '<B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>' , '<col-grey>', '<col-grey>' + '<B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>' ,  '<col-grey>','<col-grey>', '<col-grey>', '<col-grey>','<col-grey>',
    '<col-grey>',
    '<col-grey>', '<col-grey>', '<col-grey>', 
    '<col-grey><B>' + CASE WHEN @HideZeros = 1 AND sum(PriceEx * qty) / isnull(ROE,1) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty) / isnull(ROE,1)) END  + '</B>' as [Total Ex.],
    '<col-grey><B>' + CASE WHEN @HideZeros = 1 AND sum(PriceEx * qty) / isnull(ROE,1) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) / isnull(ROE,1) ) END  + '</B>' as [Total Ex. Disc],
    '<col-grey><B>' + CASE WHEN @HideZeros = 1 AND sum(PriceEx * qty) / isnull(ROE,1) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) / isnull(ROE,1) ) END + '</B>' as [Nett],
    '<col-grey><B>' + CASE WHEN @HideZeros = 1 AND ISNULL(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber((Qty * PriceEx) / isnull(CEM.ROE,1) * CEM.Tax/100 + (Qty * PriceEx) / isnull(CEM.ROE,1) ) END + '</B>' as [Total Incl],
    '<col-grey><B>' + CASE WHEN @HideZeros = 1 AND ISNULL(PriceEx,0) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(CEM.ROE,1) *CEM.Tax/100 ) END + '</B>' as [VAT],
    '<col-grey>' as [DeliveryTerms],
    isnull(min(Rank),0),-2000, rCED.[GroupRank], '<col-grey>' as [customer item number],'<col-grey>' as [image]
    ,'<col-grey>' AS [Packing]
	,'<col-grey>' AS [Size]
	,'<col-grey>' AS [Class]
	,'<col-grey>' AS [KG/UNIT/CARTON]
	,'<col-grey>' AS [KG TOTAL]
	,'<col-grey>'
	,'<col-grey>'
	,'<col-grey>'
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    LEFT JOIN (SELECT * from AccPrintoutGroup) APG
    ON APG.Doctype = 'Quote'  AND rtrim(lower(isnull(APG.GroupName,''))) = rtrim(lower(isnull(CED.GroupName,'')))
    WHERE CED.DocID = @DocID
    AND ISNULL(APG.PrintoutGroupID,0) = 0
    AND isnull(ComponentOfLineID,0)  = 0
    GROUP BY CED.GroupName,CEM.Currency , rCED.[GroupRank],CEM.ROE, PriceEx, Qty, CEM.Tax 
    
   

    -- comment out for Spoc
    UNION ALL
    

    --Select Summary info
    SELECT null, '<col-grey><B>SUMMARY:</B>', '<col-grey>', '<col-grey><B>SUMMARY:</B>','<col-grey>', '<col-grey>', '<col-grey>',  '<col-grey>', '<col-grey>','<col-grey>','<col-grey>', '<col-grey>','<col-grey>',  '<col-grey>','<col-grey>','<col-grey>',  
    '<col-grey>','<col-grey>','<col-grey>',
    9999999999999998,9999999999999998,9999999999998, '<col-grey>' as [customer item number],'<col-grey>' as [image] ,'<col-grey>' AS [Packing]
	,'<col-grey>' AS [Size]
	,'<col-grey>' AS [Class]
	,'<col-grey>' AS [KG/UNIT/CARTON]
	,'<col-grey>' AS [KG TOTAL]
	,'<col-grey>'
	,'<col-grey>'
	,'<col-grey>'
-- comment out for Spoc
    UNION ALL
  
    --Select Summary info
    SELECT Distinct null, '<col-grey><B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>', '<col-grey>','<col-grey><B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>', '<col-grey>',  '<col-grey>','<col-grey>','<col-grey>','<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>',
    '<col-grey><B>' + isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty) / isnull(ROE,1) )  + '</B>' as [Total Ex.],
    '<col-grey><B>' + isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty  * ((100 - isnull(discperc,0)) /100)) / isnull(ROE,1))  + '</B>' as [Total Ex.],
    '<col-grey><B>' + isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) / isnull(ROE,1) )  + '</B>' as [Nett],
    '<col-grey><B>' + isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber((Qty * PriceEx) / isnull(CEM.ROE,1) * CEM.Tax/100 + (Qty * PriceEx) / isnull(CEM.ROE,1) ) + '</B>' as [Total Incl],
    '<col-grey><B>' + ISNULL(CEM.Currency,'') + dbo.fnFormatNumber((Qty * PriceEx) / isnull(CEM.ROE,1) *CEM.Tax/100 ) + '</B>' as [VAT],
    '<col-grey>',
    9999999999999999,9999999999999999, isnull(rCED.GroupRank,0) + 9999999999999, '<col-grey>' as [customer item number],'<col-grey>' as [image] ,'<col-grey>' AS [Packing]
	,'<col-grey>' AS [Size]
	,'<col-grey>' AS [Class]
	,'<col-grey>' AS [KG/UNIT/CARTON]
	,'<col-grey>' AS [KG TOTAL]
	,'<col-grey>'
	,'<col-grey>'
	,'<col-grey>'
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    LEFT JOIN (SELECT * from AccPrintoutGroup) APG
    ON APG.Doctype = 'Quote'  AND rtrim(lower(isnull(APG.GroupName,''))) = rtrim(lower(isnull(CED.GroupName,'')))
    WHERE CED.DocID = @DocID
    AND isnull(ComponentOfLineID,0)  = 0
    AND ISNULL(APG.PrintoutGroupID,0) = 0
    GROUP BY CED.GroupName,CEM.Currency, rCED.[GroupRank] , CEM.ROE, CED.Qty, CED.PriceEx, CEM.Tax 
    HAVING sum(PriceEx * qty  * ((100 - isnull(discperc,0)) /100)) / isnull(ROE,1) <> 0
    ) A 
--group by lineID,[Group],Rank,Rank2,[Stock Code],[DESCRIPTION+SPEC],DeliveryTerms,[COPPER WEIGHT],[TOTAL WEIGHT],QTY,[PRICE EX.],DISCOUNT,Nett,[TOTAL EX. DISC],GroupRank

ORDER BY [GroupRank] , Rank,Rank2 ","0","","1","LRA-FUSION","0","0","fusion"
"39865","cv_leaveProvision_Report","","SET NOCOUNT ON
DECLARE @CycStart DATETIME
DECLARE @CycEnd DATETIME
SET @CycStart = '{cycstart}'
SET @CycEnd = '{cycend}'

DECLARE @Table TABLE
(
	ID INT IDENTITY(1,1),
	StaffID INT,
	Firstname VARCHAR(255),
	Surname VARCHAR(255),
	LeaveType VARCHAR(100),
	NoDaysTaken FLOAT,
	StartDate DATETIME,
	EndDate DATETIME,
	LeaveName VARCHAR(255),
	MaxAccumMonths INT,
	AnnLeavePerUOM VARCHAR(255),
	[OB/CF] FLOAT,
	TotalLeave FLOAT,
	CalcLeave FLOAT,
	FamilyLeave INT,
	SickLeave INT,
	StudyLeave INT,
	CurrentAnnCycleStart DATETIME,
	LeaveOBDate DATETIME
)

INSERT INTO @Table (StaffID, Firstname, Surname, LeaveType, NoDaysTaken, StartDate, EndDate, LeaveName, MaxAccumMonths, AnnLeavePerUOM, [OB/CF], TotalLeave,CalcLeave, FamilyLeave, SickLeave, StudyLeave, CurrentAnnCycleStart, LeaveOBDate)
SELECT 
	S.StaffID,
    S.Firstname,
    S.Surname,
    LT.LeaveType,
    CASE WHEN LP.LeavePeriod = 'Half Day' THEN CONVERT(FLOAT, 0.5)
    ELSE L.NoDaysTaken END as NoDaysTaken,
    L.StartDate,
    L.EndDate,
    LPD.LeaveName,
    LPD.MaxAccumMonths,     
    LPD.AnnLeavePerUOM,
    CASE WHEN YEAR(S.LeaveOBDate) = YEAR(L.StartDate) THEN 
          CASE LT.LeaveType
                WHEN 'Annual' THEN
                      S.LeaveOB 
                WHEN 'Overtime' THEN
                      S.LeaveOB
                WHEN 'Unpaid' THEN
                      S.LeaveOB 
                WHEN 'Special' THEN     
                      S.LeaveOB
                WHEN 'Sick' THEN
                      S.SickLeaveOB
                WHEN 'Sick Leave' THEN
                      S.SickLeaveOB
                ELSE
                      0
          END
    ELSE 
          0 
    END as [OB/CF],
    CASE LT.LeaveType 
          WHEN 'Annual' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(L.StartDate) THEN S.LeaveOB ELSE 0 END +
                CASE LPD.AnnLeavePerUOM
                      WHEN 'hour(s)' THEN 
                            (CalcLeave / CalcLeavePer) /HoursPerDay
                      WHEN 'day(s)' THEN
                            (CalcLeave / CalcLeavePer)
                END 
          WHEN 'Unpaid' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(L.StartDate) THEN S.LeaveOB ELSE 0 END +
                CASE LPD.AnnLeavePerUOM
                      WHEN 'hour(s)' THEN 
                            (CalcLeave / CalcLeavePer) /HoursPerDay
                      WHEN 'day(s)' THEN
                            (CalcLeave / CalcLeavePer)
                END 
          WHEN 'Sick' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(L.StartDate) THEN S.SickLeaveOB ELSE 0 END +
                LPD.SickLeave 
          WHEN 'Sick Leave' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(L.StartDate) THEN S.SickLeaveOB ELSE 0 END +
                LPD.SickLeave 
          WHEN 'Special' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(L.StartDate) THEN S.LeaveOB ELSE 0 END +
                CASE LPD.AnnLeavePerUOM
                      WHEN 'hour(s)' THEN 
                            (CalcLeave / CalcLeavePer) /HoursPerDay
                      WHEN 'day(s)' THEN
                            (CalcLeave / CalcLeavePer)
                END
          WHEN 'Study' THEN
                LPD.StudyLeave
          WHEN 'Study Leave' THEN
                LPD.StudyLeave
          WHEN 'Study / HR' THEN
                LPD.StudyLeave
          WHEN 'Family Responsibility' THEN
                LPD.FamilyLeave 
          WHEN 'Family' THEN
                LPD.FamilyLeave 
          ELSE
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(L.StartDate) THEN S.LeaveOB ELSE 0 END +
                CASE LPD.AnnLeavePerUOM
                      WHEN 'hour(s)' THEN 
                            (CalcLeave / CalcLeavePer) /HoursPerDay
                      WHEN 'day(s)' THEN
                            (CalcLeave / CalcLeavePer)
                END               
    END as [Total Leave],
    LPD.CalcLeave,
    LPD.FamilyLeave,
    LPD.SickLeave,
    LPD.StudyLeave,            
    CONVERT(DATETIME, CONVERT(VARCHAR, YEAR(GETDATE())) + '/' + CONVERT(VARCHAR, MONTH(S.CycleStart)) + '/' + CONVERT(VARCHAR, DAY(S.CycleStart))) as [CurrentAnnCycleStart],
    S.LeaveOBDate    
FROM Staff S
LEFT JOIN Leave L ON S.StaffID = L.UserID
LEFT JOIN LeaveType LT ON LT.LeaveTypeID = L.LeaveTypeID  
LEFT JOIN LeavePeriod LP ON LP.LeavePeriodID = L.PeriodTypeID
LEFT JOIN LeaveProfileDetails LPD ON LPD.LeavedefaultID = L.LeaveProfileID
WHERE ((L.startdate BETWEEN @CycStart AND @CycEnd) 
    OR (L.Enddate BETWEEN @CycStart AND @CycEnd) 
    OR (L.startdate <= @CycStart AND L.Enddate >= @CycEnd))
AND ISNULL(L.isGranted,0) = 1
AND LT.LeaveType = 'Annual'
{and}

UPDATE @Table 
	SET CurrentAnnCycleStart = Z.FixedCycleStart
FROM (
SELECT 
	ID as IID,  
	CASE WHEN CurrentAnnCycleStart > GETDATE() THEN
		DATEADD(YEAR, -1, CurrentAnnCycleStart)
	ELSE
		CurrentAnnCycleStart
	END as FixedCycleStart
FROM @Table
) Z 
WHERE ID = Z.IID 

UPDATE @Table 
	SET [OB/CF] = Z.[OBFix]
FROM (
	SELECT 
		ID as IID,
		CASE WHEN (LeaveOBDate >= CurrentAnnCycleStart AND LeaveOBDate <= StartDate) THEN [OB/CF] ELSE 0 END as [OBFix]
	FROM @Table 
) Z 
WHERE ID = Z.IID 

SELECT
      NEWID(),
      Z.Firstname as [First name],
      Z.Surname,
      Z.LeaveType as [Leave Type],
      (Z.[Calculated] + Z.[OB/CF]) - SUM(Z.NoDaysTaken) as [Total Annual Leave],
      SUM(Z.NoDaysTaken) as [Leave Days],
      Z.[TotalLeave] - SUM(Z.NoDaysTaken) as [Total Leave Balance],
      Z.ProvCurrency as [Currency],
      dbo.fnFormatNumber(Z.ProvRate) as [Rate],
      dbo.fnFormatNumber(Z.ProvRate * (Z.[TotalLeave] - SUM(Z.NoDaysTaken))) as [Amount]
FROM (
	SELECT 
		T.Firstname,
		T.Surname,
		LeaveType,
		NoDaysTaken,
		StartDate,
		EndDate,
		LeaveName,
		MaxAccumMonths,
		AnnLeavePerUOM,
		[OB/CF],
		TotalLeave,
		CalcLeave,
		FamilyLeave,
		SickLeave,
		StudyLeave,
		CASE WHEN (T.LeaveOBDate >= CurrentAnnCycleStart) THEN		
			CAST(ROUND(CONVERT(FLOAT, (DATEDIFF(MONTH, T.LeaveOBDate, GETDATE()) / CONVERT(FLOAT, 12))) * CalcLeave ,2) AS DECIMAL(4,2))
		ELSE
			CAST(ROUND(CONVERT(FLOAT, (DATEDIFF(MONTH, CurrentAnnCycleStart, GETDATE()) / CONVERT(FLOAT, 12))) * CalcLeave ,2) AS DECIMAL(4,2))
		END as [Calculated],
		S.ProvRate,
		S.ProvCurrency 
	FROM @Table T
	LEFT JOIN Staff S ON S.StaffID = T.StaffID  
) Z
GROUP BY Z.Firstname, Z.Surname, Z.LeaveType, Z.Calculated, Z.[OB/CF], Z.TotalLeave, Z.ProvCurrency, Z.ProvRate 

SET NOCOUNT OFF","0","","1","LRA-FUSION","0","0","fusion"
"39866","cv_dashBoard_Quotes","","SELECT Distinct convert(varchar,CEM.DocID) +  case when isnull(CEM.RevisedToDoc,0) = 0 then '##LatestRev' Else ''END as [DocID],
left('00000000', 8- len(CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END)) + convert(varchar,CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END) as [Doc. No.]
,CEM.Revision,D.Value as [Division],
case isnull(CEM.UseEC, 0) When 1 then isnull(EC.AccountNum,EC.EntityContactID) Else isnull(E.Accountnum,E.EntityID) END as [Account],
case isnull(CEM.UseEC, 0) When 1 then EC.Client ELSE E.Company END as [Client], Att.[Attn.], Att.Email,
Case When ls2.Value is null Then ls.value Else ls2.value End As [Sales Consultant],
CEM.Descr as [Description],
Convert(Varchar, CEM.DateCreated,111) as [Created],
Convert(Varchar, CEM.StartDate,103) as [Doc. Date],
CEM.DocStatus as [Status], U.[Created By], CEM.Currency, CEM.ROE as [R.O.E],
convert(varchar,cast([Est. Cost] as money),1) as [Est. Cost],
convert(varchar,cast([Total Ex. VAT] as money),1) as [Total Ex. VAT],
convert(varchar,cast([Total Incl. VAT] as money),1) as [Total Incl. VAT]
FROM Cost_Estimate_Master CEM
LEFT JOIN Lookup D 
ON CEM.DivisionID = D.LookupID
LEFT JOIN (SELECT Company, EntityID, salesconsid, AccountNum FROM Entity) E
ON CEM.Entityid = E.Entityid AND isnull(CEM.UseEC,0) = 0
LEFT JOIN (SELECT isnull(Firstname,'') + ' ' + isnull(surname,'') as [Client], EntityContactID,SalesConsID, AccountNum FROM EntityContact) EC
ON CEM.Entityid = EC.EntityContactid AND isnull(CEM.UseEC,0) = 1
LEFT JOIN (SELECT isnull(firstname,'') + ' ' + isnull(surname,'') as [Created By], UserID From Users) U
ON CEM.CreatedBy = U.UserID
LEFT JOIN (SELECT DocID, Sum(CostPriceEx * Qty ) as [Est. Cost], sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) as [Total Ex. VAT], Sum(totalIncl * ((100 - isnull(discperc,0)) /100)) as [Total Incl. VAT] FROM Cost_Estimate_Detail  WHERE isnull(componentOfLineID,0) = 0 Group By DocID) CED
ON CEM.DocID = CED.DocID
left join (SELECT Entitycontactid, isnull(firstname,'') + ' ' + isnull(Surname,'') as [Attn.], Email FROM  EntityContact) Att on Att.EntityContactid = CEM.AttentionOf
Left join Lookup ls on ls.lookupid = EC.SalesConsID
Left join Lookup ls2 on ls2.lookupid = E.salesconsid
Left join EntityGroup g on g.EntityID = E.EntityID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39867","cv_Dashboard_Quote_tot","","Select 
Sum(case when Status = 'Open' then 1 else 0 end) as [OpenQty] ,
Sum(case when Status = 'Accepted' then 1 else 0 end) as [AcceptedQty] ,
Sum(case when Status = 'Completed' then 1 else 0 end) as [CompletedQty] ,
Sum(case when Status = 'Rejected' then 1 else 0 end) as [RejectedQty],
count(*) as [Count],
Sum(case when Status = 'Open' then Convert(Money,Replace([Total Incl. VAT],',','')) else 0 end) as [OpenTot] ,
Sum(case when Status = 'Accepted' then Convert(Money,Replace([Total Incl. VAT],',','')) else 0 end) as [AcceptedTot] ,
Sum(case when Status = 'Completed' then Convert(Money,Replace([Total Incl. VAT],',','')) else 0 end) as [CompletedTot] ,
Sum(case when Status = 'Rejected' then Convert(Money,Replace([Total Incl. VAT],',','')) else 0 end) as [RejectedTot],
Sum(Convert(Money,Replace([Total Incl. VAT],',',''))) AS [Total]
from
(
	<%View%>
)a","0","","1","LRA-FUSION","0","0","fusion"
"39868","cv_DashBoard_Calls","","Select sum([Count]) as [Count],Sum([Target]) as [Target]
from
(
select UserName,Sum(case when isnull(CallLogID,0)=0 then 0 else 1 end) as [Count],
Round(case when ut.PeriodType = 'Daily' then ut.Quantity
when ut.PeriodType = 'Weekly' then Convert(Money,ut.Quantity)/7
when ut.PeriodType = 'Monthly' then Convert(Money,ut.Quantity)/30
when ut.PeriodType = 'BiAnnually' then Convert(Money,ut.Quantity)/182
when ut.PeriodType = 'Annually' then Convert(Money,ut.Quantity)/365
else
 null
end * DateDiff(d,'<%Date1%>','<%Date2%>'),0) as [Target]
from
UserTargets UT
left join Users u
on u.UserId = UT.UserId
left join 
(
	<%Where%>
)a
on a.[Call Created By] = u.UserName
where UT.Activity like 'calls' and ut.UserID in (<%Users%>)
group by username,ut.Quantity,ut.PeriodType
)b","0","","1","LRA-FUSION","0","0","fusion"
"39869","cv_Acc_Freight_Lines","","SET NOCOUNT ON

DECLARE @ShippingDocID as BigInt
DECLARE @CurrentLineID as BigInt
DECLARE @LastLineID as BigInt
Set @ShippingDocID = {shippingdocid}
Set @CurrentLineID = 0
Set @LastLineID = (SELECT max(ShippingLineID) FROM SHIPPING_DETAIL where ShippingDocID = @ShippingDocID)

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[TempShipping]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
CREATE TABLE [dbo].[TempShipping] (
    ShippingDocID bigint,
    ShippingLineID bigint,
    LineGroup   varchar(255),
        LineDescription varchar(255),
        MinValue money,
        Units float,
    UnitMultiplier float,
        Currency varchar(50),
        Rate money,
    RateMultiplier float,
        ROE money,
        VATRate float,
        Total money
) ON [PRIMARY]


DELETE FROM TempShipping WHERE ShippingDocID = @ShippingDocID
INSERT INTO TempShipping

--Insert document header totals
SELECT @ShippingDocID,0,'HeaderInfo',  'Total Price Ex.',0,1 as [Units],1,'R',(BasePriceEx * StockQty) as [Rate],1,1,0,(BasePriceEx * StockQty) as [Total]
FROM SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID
UNION ALL
SELECT @ShippingDocID,0,'HeaderInfo',  'Total Cost Ex.',0,1 as [Units],1,'R',(BaseCostPriceEx * StockQty) as [Rate],1,1,0,(BaseCostPriceEx * StockQty) as [Total]
FROM SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID
UNION ALL
SELECT @ShippingDocID,0,'HeaderInfo',  'No. Of Packages',0, NoOfPackages as [Units],1,'R',1 as [Rate],1,1,0, NoOfPackages as [Total]
FROM SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID
UNION ALL
SELECT @ShippingDocID,0,'HeaderInfo', 'Total Weight',0, (Weight * StockQty)  as [Units],1,'R',1 as [Rate],1,1,0, (Weight * StockQty) as [Total]
FROM SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID
UNION ALL
SELECT @ShippingDocID,0,'HeaderInfo', 'Volumetric',0, (Length*Width*Height*NoOfPackages) / 0.006  as [Units],1,'R',1 as [Rate],1,1,0, (Length*Width*Height*NoOfPackages)/ 0.006 as [Total]
FROM SHIPPING_MASTER
WHERE ShippingDocID = @ShippingDocID


--Create and populate temporary tables to optimise while-loop speed
CREATE TABLE #SHIPPING_DETAIL (
	[ShippingLineID] [bigint] NOT NULL ,
	[ShippingDocID] [bigint] NULL ,
	[LineDescription] [varchar] (255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
	[LineGroup] [varchar] (255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
	[MinValue] [money] NULL ,
	[Units] [float] NULL ,
	[Rate] [money] NULL ,
	[Currency] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
	[VATRate] [float] NULL ,
	[UsePercUnit] [bit] NULL ,
	[UsePercRate] [bit] NULL 
)
INSERT INTO #SHIPPING_DETAIL SELECT * FROM SHIPPING_DETAIL WHERE  ShippingDocID = @ShippingDocID

CREATE TABLE #SHIPPING_DETAIL_LINK (
	[ShippingDetailLinkID] [bigint]  NOT NULL ,
	[ShippingDocID] [bigint] NULL ,
	[LineDescription] [varchar] (255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
	[LinkedTo] [varchar] (255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
	[SumOf] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
)
INSERT INTO #SHIPPING_DETAIL_LINK SELECT * FROM SHIPPING_DETAIL_LINK WHERE  ShippingDocID = @ShippingDocID

CREATE TABLE #SHIPPING_DETAIL_RATE (
	[DetailRateID] [bigint] NOT NULL ,
	[ShippingLineID] [bigint] NULL ,
	[CrossoverValue] [float] NULL ,
	[Rate] [money] NULL 
) 
INSERT INTO #SHIPPING_DETAIL_RATE SELECT * FROM SHIPPING_DETAIL_RATE WHERE ShippingLineID In (SELECT ShippingLineID FROM #SHIPPING_DETAIL WHERE ShippingDocID = @ShippingDocID)

CREATE TABLE #SHIPPING_MASTER (
	[ShippingDocID] [int]  NOT NULL ,
	[ShippingTypeID] [int] NULL ,
	[TransporterID] [int] NULL ,
	[TransporterRefNo] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
	[DocID] [bigint] NULL ,
	[StockID] [bigint] NULL ,
	[StockQty] [float] NULL ,
	[BasePriceEx] [money] NULL ,
	[DocDate] [datetime] NULL ,
	[Origin] [varchar] (255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
	[Destination] [varchar] (255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
	[DateToShip] [datetime] NULL ,
	[DateArriving] [datetime] NULL ,
	[DeliveryTerms] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
	[NoOfPackages] [int] NULL ,
	[PackageTypeID] [int] NULL ,
	[Length] [float] NULL ,
	[Width] [float] NULL ,
	[Height] [float] NULL ,
	[Weight] [float] NULL ,
	[PackageWeight] [float] NULL ,
	[IsTemplate] [bit] NULL ,
	[CalcTotalEx] [money] NULL ,
	[CalcTotalVat] [money] NULL ,
	[LineID] [bigint] NULL ,
	[BaseCostPriceEx] [money] NULL ,
	[BasePriceIncl] [money] NULL ,
	[UsePercWeight] [bit] NULL 
) 
INSERT INTO #SHIPPING_MASTER SELECT * FROM SHIPPING_MASTER WHERE  ShippingDocID = @ShippingDocID

CREATE TABLE #SHIPPING_STOCKTYPE (
	[ShippingDocID] [bigint] NULL ,
	[StockTypeID] [bigint] NULL 
)
INSERT INTO #SHIPPING_STOCKTYPE SELECT * FROM SHIPPING_STOCKTYPE WHERE  ShippingDocID = @ShippingDocID
--Populate tables according to requirements of this doc.



WHILE @CurrentLineID < @LastLineID BEGIN
    Set @CurrentLineID = (SELECT min(ShippingLineID) FROM SHIPPING_DETAIL where ShippingDocID = @ShippingDocID AND ShippingLineID > @CurrentLineID )
    
   INSERT INTO TempShipping
    
    SELECT @ShippingDocID,SD.ShippingLineID, SD.LineGroup, SD.LineDescription, SD.MinValue,isnull(TSU.Units, SD.Units) as [Unit],
    Case when Isnull(usePercUnit,0) = 0 Then 1 ELSE isnull(SD.Units,0) / 100 END as [UnitMultplier],
    SD.Currency,
        isnull((Select Rate From #SHIPPING_DETAIL_RATE where ShippingLineID = SD.ShippingLineID AND crossovervalue = (SELECT Max(CrossoverValue) FROM #SHIPPING_DETAIL_RATE where ShippingLineID = SD.ShippingLineID and isnull(TSU.Units, SD.Units) >= CrossoverValue  )),
        isnull(TSR.Rate, SD.Rate)) as [Rate],
    Case when Isnull(usePercRate,0) = 0 Then 1 ELSE isnull(SD.Rate,0) / 100 END as [RateMultplier],
    isnull(SC.ROE,1), SD.VATRate,
        (isnull(TSU.Units, SD.Units)) * 
        (Case when Isnull(usePercUnit,0) = 0 Then 1 ELSE isnull(TSU.Units, SD.Units) / 100 END) *
        isnull((Select Rate From #SHIPPING_DETAIL_RATE where ShippingLineID = SD.ShippingLineID AND crossovervalue = (SELECT Max(CrossoverValue) FROM #SHIPPING_DETAIL_RATE where ShippingLineID = SD.ShippingLineID and isnull(TSU.Units, SD.Units) >= CrossoverValue  )),isnull(TSR.Rate, SD.Rate)) *
        (Case when Isnull(usePercRate,0) = 0 Then 1 ELSE isnull(SD.Rate,0) / 100 END) *
        isnull(SC.ROE,1) as [Total]
    FROM #SHIPPING_DETAIL SD
    LEFT JOIN (SELECT TSi.ShippingDocID,SDLi.LineDescription,Sum(Total) as [Units] FROM TempShipping TSi
        LEFT JOIN (SELECT * FROM #SHIPPING_DETAIL_LINK where SumOf = 'Unit' AND ShippingDocID = @ShippingdocID) SDLi
        ON TSi.LineDescription = SDLi.LinkedTo 
        GROUP BY SDLi.LineDescription,TSi.ShippingDocID) TSU
    ON SD.LineDescription = TSU.LineDescription and SD.ShippingDocID = TSU.ShippingDocID
    LEFT JOIN (SELECT TSi.ShippingDocID, SDLi.LineDescription,Sum(Total) as [Rate] FROM TempShipping TSi
        LEFT JOIN (SELECT * FROM #SHIPPING_DETAIL_LINK where SumOf = 'Rate' AND ShippingDocID = @ShippingdocID) SDLi
        ON TSi.LineDescription = SDLi.LinkedTo 
        GROUP BY TSi.ShippingDocID,SDLi.LineDescription) TSR
    ON SD.LineDescription = TSR.LineDescription and SD.ShippingDocID = TSR.ShippingDocID
    LEFT JOIN Shipping_Currency SC
    ON SD.ShippingDocID = SC.ShippingDocID AND SD.Currency = SC.Currency
    WHERE SD.ShippingLineID = @CurrentLineID
    
    --For min values
    UPDATE TempShipping
    SET Total = MinValue
    WHERE isnull(MinValue,0) > 0 AND isnull(Total,0) < MinValue
END

DROP TABLE #SHIPPING_DETAIL
DROP TABLE #SHIPPING_DETAIL_LINK
DROP TABLE #SHIPPING_DETAIL_RATE
DROP TABLE #SHIPPING_MASTER
DROP TABLE #SHIPPING_STOCKTYPE

SET NOCOUNT OFF
","0","","1","LRA-FUSION","0","0","fusion"
"39870","cv_Acc_GL_General_Ledger","","DECLARE @StartDate datetime
DECLARE @EndDate datetime
SET @StartDate = '{startdate}'
SET @EndDate = '{enddate}'

SELECT isnull(convert(varchar,DocID),'') + '|' + isnull(Doc,'') + '|' + convert(varchar(100),NewID()) +  CASE OrderRank WHEN 5 THEN '' ELSE '#BOLD' END, convert(varchar,[Date],111) as [Date], [Description], [Ref], [Notes],
convert(varchar,Cast([DR] as money),1) as [DR], 
convert(varchar,Cast([CR] as money),1) as [CR]
FROM (
	
	SELECT convert(varchar, JournalID) + '#' + Type + '##' + isnull(convert(varchar,GC.GLCode),'') as [GLRank],
	1 as [OrderRank],
	null as [Date],
	Upper(isnull(GL,'?') + ' - ' + isnull(Type,'?') + ' ('+ isnull(convert(Varchar,GC.GLCode),'?') +')') as [Description],
	null as [Ref],
	null as [Notes],
	null as [DR],
	null as [CR],
	null as [DocID],
	null as [Doc]
	FROM AccGL
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON AccGL.ProjectID = P.ProjectID
	LEFT JOIN (SELECT * FROM AccGLCode) GC ON (AccGL.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(AccGL.[Type]) = upper(GC.GLType) AND AccGL.JournalID = GC.GLCateGoryID
	LEFT JOIN (SELECT LookupID, Value 
				FROM Lookup 
				where class like 'JournalType' 
				UNION ALL
				SELECT -1, 'ACCOUNTS RECEIVABLE'
				UNION ALL
				SELECT -2, 'OUTPUT VAT CONTROL' 
				UNION ALL
				SELECT -3, 'COST OF SALES' 
				UNION ALL
				SELECT -4, 'INVENTORY' 
				UNION ALL
				SELECT -5, 'INPUT VAT CONTROL' 
				UNION ALL
				SELECT -6, 'BANK' 
				UNION ALL
				SELECT -8, 'FOREIGN EXCHANGE' 
				UNION ALL
				SELECT -9, 'ACCOUNTS PAYABLE' 
				UNION ALL
				SELECT -10, 'UN-RECEIVED INVENTORY' 
				UNION ALL
				SELECT -11, 'PREPAID EXPENSE' 
				UNION ALL
				SELECT -12, 'CAPITAL' 
				UNION ALL
				SELECT -13, 'INVENTORY EXPENSE' 
				UNION ALL
				SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
				UNION ALL
				SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
				UNION ALL
				SELECT -16, 'DISCOUNT ALLOWED' 
				UNION ALL
				SELECT -17, 'DISCOUNT RECEIVED' 
				UNION ALL
		        SELECT -18, 'OPENING BALANCE' 
	) L ON ACCGL.JournalID = L.LookupID
	WHERE 1 = 1 
	{where}	
	Group by JournalID,Type, ACCGL.GL, GC.GLCode

	UNION ALL
	
	SELECT convert(varchar, JournalID) + '#' + Type + '##' + isnull(convert(varchar,GC.GLCode),'') as [GLRank],
	4 as [OrderRank],
	CONVERT(varchar,@Enddate,111) as [Date],
	'BALANCE B/F:'  as [Description],
	null as [Ref],
	null as [Notes],
	CASE WHEN sum(isnull(Dr,0)) > sum(isnull(Cr,0)) THEN sum(isnull(Dr,0))  -sum(isnull(Cr,0)) END as [DR],
	CASE WHEN sum(isnull(Cr,0)) > sum(isnull(Dr,0)) THEN sum(isnull(Cr,0)) - sum(isnull(Dr,0)) END as [CR],
	null as [DocID],
	null as [Doc]
	FROM AccGL
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON AccGL.ProjectID = P.ProjectID
	LEFT JOIN (SELECT * FROM AccGLCode) GC ON (AccGL.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(AccGL.[Type]) = upper(GC.GLType) AND AccGL.JournalID = GC.GLCateGoryID
	LEFT JOIN Lookup L ON ACCGL.JournalID = L.LookupID
	WHERE DateCompleted < @StartDate 
	{where}
	Group by JournalID,Type, GC.GLCode
	
	UNION ALL
	
	SELECT convert(varchar, JournalID) + '#' + Type + '##' + isnull(convert(varchar,GC.GLCode),'') as [GLRank],
	5 as [OrderRank],
	DateCompleted  as [Date],
	[Description]  as [Description],
	Ref  as [Ref],
	Notes as [Notes],
	CASE WHEN isnull(DR,0) <> 0 THEN DR END as [DR],
	CASE WHEN isnull(CR,0) <> 0 THEN CR END as [CR],
	DocID, 
	Doc 
	FROM AccGL
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON AccGL.ProjectID = P.ProjectID
	LEFT JOIN (SELECT * FROM AccGLCode) GC ON (AccGL.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(AccGL.[Type]) = upper(GC.GLType) AND AccGL.JournalID = GC.GLCateGoryID
	LEFT JOIN Lookup L ON ACCGL.JournalID = L.LookupID
	WHERE NOT ( (isnull(Dr,0)) = 0 AND (isnull(Cr,0)) = 0)
	AND DateCompleted >= @StartDate AND DateCompleted <= @EndDate 
	{where}
	
	
	UNION ALL
	
	SELECT convert(varchar, JournalID) + '#' + Type + '##' + isnull(convert(varchar,GC.GLCode),'') as [GLRank],
	6 as [OrderRank],
	CONVERT(varchar,@Enddate,111) as [DR Date],
	'TOTAL:' as [Description],
	null as [Ref],
	null as [Notes],
	sum(isnull(Dr,0)) as [DR],
	sum(isnull(Cr,0)) as [CR],
	null as [DocID],
	null as [Doc]
	FROM AccGL
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON AccGL.ProjectID = P.ProjectID
	LEFT JOIN (SELECT * FROM AccGLCode) GC ON (AccGL.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(AccGL.[Type]) = upper(GC.GLType) AND AccGL.JournalID = GC.GLCateGoryID
	LEFT JOIN Lookup L ON ACCGL.JournalID = L.LookupID
	WHERE DateCompleted >= @StartDate AND DateCompleted <= @EndDate 
	{where}
	Group by JournalID,Type, GC.GLCode
	
	UNION ALL
	
	SELECT convert(varchar, JournalID) + '#' + Type + '##' + isnull(convert(varchar,GC.GLCode),'') as [GLRank],
	7 as [OrderRank],
	CONVERT(varchar,@Enddate,111) as [Date],
	'BALANCE:'  as [Description],
	null as [Ref],
	null as [Notes],
	CASE WHEN sum(isnull(Dr,0)) > sum(isnull(Cr,0)) THEN sum(isnull(Dr,0))  -sum(isnull(Cr,0)) END as [DR],
	CASE WHEN sum(isnull(Cr,0)) > sum(isnull(Dr,0)) THEN sum(isnull(Cr,0)) - sum(isnull(Dr,0)) END as [CR],
	null as [DocID],
	null as [Doc]
	FROM AccGL
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON AccGL.ProjectID = P.ProjectID
	LEFT JOIN (SELECT * FROM AccGLCode) GC ON (AccGL.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(AccGL.[Type]) = upper(GC.GLType) AND AccGL.JournalID = GC.GLCateGoryID
	LEFT JOIN Lookup L ON ACCGL.JournalID = L.LookupID
	WHERE DateCompleted <= @EndDate 
	{where}
	Group by JournalID,Type, GC.GLCode
	
	
	UNION ALL
	
	SELECT convert(varchar, JournalID) + '#' + Type + '##' + isnull(convert(varchar,GC.GLCode),'') as [GLRank],
	8 as [OrderRank],
	null as [DR Date],
	null as [DR Description],
	null as [DR Ref],
	null as [Notes],
	null as [DR],
	null as [CR],
	null as [DocID],
	null as [Doc]
	FROM AccGL
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects ) P ON AccGL.ProjectID = P.ProjectID
	LEFT JOIN (SELECT * FROM AccGLCode) GC ON (AccGL.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(AccGL.[Type]) = upper(GC.GLType) AND AccGL.JournalID = GC.GLCateGoryID
    LEFT JOIN Lookup L ON ACCGL.JournalID = L.LookupID
	WHERE 1=1
	{where}
	Group by JournalID,Type , GC.GLCode
) A

ORDER BY GLRank, OrderRank, [Date]

","0","","1","LRA-FUSION","0","0","fusion"
"39871","cv_debtorbalance_report","","select distinct newid() as [ID], e.company as [Client], p.projectname as [Project],
sum(isnull(CED.TotalIncl, 0)) as [Total Quoted],  
sum(isnull(DDQuote.totalincl, 0)) as [Total Sales Order],  sum(isnull(DDBilled.totalincl, 0)) as [Total Invoiced],   
sum(isnull(CED.totalincl, 0)) - sum(isnull(DDBilled.totalincl, 0)) as [Balance Quoted]  ,
sum(isnull(DDQuote.totalincl, 0)) - sum(isnull(DDBilled.totalincl, 0)) as [Balance Ordered]  
from Projects p  
LEFT JOIN entity e on e.entityid = p.entityid  left JOIN debtor_master DMQuote on e.entityid = DMQuote.entityid      
AND DMQuote.doctype LIKE 'Sales Order' AND DMQuote.projectid = p.projectid  
LEFT JOIN debtor_detail DDQuote on DMQuote.docid = DDQuote.docid  
left JOIN debtor_master DMBilled on e.entityid = DMBilled.entityid     
AND DMBilled.doctype LIKE 'Invoice' AND DMBilled.projectid = p.projectid  
left join debtor_detail DDBilled on DDBilled.docid = DMBilled.docid  
LEFT JOIN cost_estimate_master CEM on CEM.docid = DMQuote.cedocid and CEM.docstatus = 'Accepted'  
LEFT JOIN cost_estimate_detail CED on CED.docid = CEM.docid   
 {where} 
GROUP BY e.Company,p.projectname,dmquote.doctype  Order by e.company, p.projectname  ","0","","1","LRA-FUSION","0","0","fusion"
"39872","cv_debtornote_report","","  SELECT    distinct  Notes.NoteId,e.company as [Client], ec.firstname + ' ' + ec.surname as [Contact]  ,{recent} u.username as [Created By],mod.username as [Modified By],   Subject, [Description]  FROM entity e  
 {join} 
 <%where%>  
 {group}
 {order}

","0","","1","LRA-FUSION","0","0","fusion"
"39873","cv_debtorpayment_report_exploded","","Select NewID(), /*[ID],*/ [Client] , [Invoice Date], [Payment Date] , avg([Account Settlement Time(Days)]) as [Account Settlement(day(s)]    from    (select  distinct /*dp.debtor_paymentid as [id],*/ dp.debtor_paymentid  as [ID], e.company as [Client], inv.doctype as [Doc Type], convert(varchar, inv.datecompleted, 103) as [Invoice Date],  pay.doctype as [Doc Type 1], convert(varchar, pay.datecompleted, 103) as [Payment Date],   DateDiff(""dd"", inv.datecompleted, pay.datecompleted) as [Account Settlement Time(Days)], 0 as [rank]  from debtor_payment dp  left join debtor_master inv on inv.docid = dp.invoicedocid  left join debtor_master pay on pay.docid = dp.paymentdocid  Left join entity e on e.entityid = inv.entityid  where e.company is not null and inv.doctype = 'Invoice'  and pay.doctype = 'Payment Receipt'  and convert(datetime, pay.datecompleted, 103) >= convert(datetime, inv.datecompleted, 103)  {where}  /*  union all     select  distinct /*dp.debtor_paymentid,*/ e.entityid as [ID], e.Company, null, null, null, 'Average Days',  sum(DateDiff(""dd"", inv.datecompleted, pay.datecompleted)), 1 as rank  from debtor_payment dp  left join debtor_master inv on inv.docid = dp.invoicedocid  left join debtor_master pay on pay.docid = dp.paymentdocid  Left join entity e on e.entityid = inv.entityid  where e.company is not null and inv.doctype = 'Invoice'  and pay.doctype = 'Payment Receipt'  and convert(datetime, pay.datecompleted, 103) >= convert(datetime, inv.datecompleted, 103)  {where}  group by e.company, e.entityid, debtor_paymentid     */ ) A  GROUP BY [Client], [id],   [Invoice Date], [Payment Date], [rank]  order by [Client], rank, avg([Account Settlement Time(Days)]), [id],   [Invoice Date], [Payment Date]          ","0","","1","LRA-FUSION","0","0","fusion"
"39874","cv_debtorpayment_report_Normal_Full","","select distinct  newid(), e.company as [Client], sum(ddinv.totalincl) as [Total Rand Value], count(inv.docno) as [Total Invoices], 
SUM(dp.paymentportion) as [Total payed], count(pay.docno) as [Total Payments],
(Sum(ddinv.TotalIncl) - (sum(dp.paymentportion) + SUM(isnull(ddcr.totalincl, 0)))) as [Outstanding Balance], [Account Settlement Time(Days)]
from debtor_master inv
left join debtor_master pay on inv.docid = pay.previousdocid
left join debtor_payment dp on dp.paymentdocid = pay.docid
left join debtor_detail ddinv on ddinv.docid = inv.docid
left join entity e on e.entityid = inv.entityid
left join debtor_master crd on crd.previousdocid = ddinv.docid and crd.doctype = 'Credit Note'
left join (Select docid, totalincl from debtor_detail ) ddcr on ddcr.docid = crd.docid
left join (select    en.entityid  as [ID],   
		Avg(isnull(DateDiff(""dd"", inv.datecompleted, pay.datecompleted), 0)) as [Account Settlement Time(Days)]
		from debtor_payment dp  left join debtor_master inv on inv.docid = dp.invoicedocid  
		left join debtor_master pay on pay.docid = dp.paymentdocid  
		Left join entity en on en.entityid = inv.entityid  
		where en.company is not null and inv.doctype = 'Invoice'  and pay.doctype = 'Payment Receipt'  
		and convert(datetime, pay.datecompleted, 103) >= convert(datetime, inv.datecompleted, 103)
		GROUP BY en.entityid ) sd on sd.[ID] = e.entityid
 {where} 
group by e.company, inv.datecompleted, pay.datecompleted, dp.paymentportion,[Account Settlement Time(Days)]
having sum(dp.paymentportion) >= sum(ddinv.totalincl) 
order by e.company","0","","1","LRA-FUSION","0","0","fusion"
"39875","cv_debtorpayment_report_Normal_Partial","","select distinct newid(), e.company, sum(ddinv.totalincl) as [Total Rand Value], count(inv.docno) as [Total Invoices], dp.paymentportion as [Total Payed], count (pay.docno) as [Total Payments],
 (Sum(ddinv.TotalIncl) - (sum(dp.paymentportion) + SUM(isnull(ddcr.totalincl, 0)))) as [Outstanding Balance], [Account Settlement Time(Days)]
from debtor_master inv
left join debtor_master pay on inv.docid = pay.previousdocid
left join debtor_payment dp on dp.paymentdocid = pay.docid
left join debtor_detail ddinv on ddinv.docid = inv.docid
left join entity e on e.entityid = inv.entityid
left join debtor_master crd on crd.previousdocid = ddinv.docid and crd.doctype = 'Credit Note'
    left join (Select docid, totalincl from debtor_detail ) ddcr on ddcr.docid = crd.docid
left join (select    en.entityid  as [ID],   
		Avg(isnull(DateDiff(""dd"", inv.datecompleted, pay.datecompleted), 0)) as [Account Settlement Time(Days)]
		from debtor_payment dp  left join debtor_master inv on inv.docid = dp.invoicedocid  
		left join debtor_master pay on pay.docid = dp.paymentdocid  
		Left join entity en on en.entityid = inv.entityid  
		where en.company is not null and inv.doctype = 'Invoice'  and pay.doctype = 'Payment Receipt'  
		and convert(datetime, pay.datecompleted, 103) >= convert(datetime, inv.datecompleted, 103)
		GROUP BY en.entityid ) sd on sd.[ID] = e.entityid
 {where} 
group by e.company, inv.datecompleted, pay.datecompleted, dp.paymentportion, [Account Settlement Time(Days)]
having sum(dp.paymentportion) < sum(ddinv.totalincl) 
order by e.company","0","","1","LRA-FUSION","0","0","fusion"
"39876","cv_Acc_GL_Account_Man","","SELECT 
convert(varchar,G.LookupID) +'#'+ convert(varchar,isnull(GC.GLCodeID,0)) AS [ID],
GC.GLCode as [Code], [GL Group], GLType as [Type], isnull(LD.Value, 'All') as [Division]
 FROM 
(
	SELECT LookupID, Upper(Value) as [GL Group] 
	FROM Lookup 
	where class like 'JournalType' 
	 
	UNION ALL
	
	SELECT -1, 'ACCOUNTS RECEIVABLE'
	
	UNION ALL
	
	SELECT -2, 'OUTPUT VAT CONTROL' 
	
/*	UNION ALL
	
	SELECT -3, 'COST OF SALES' */
	
	UNION ALL
	
	SELECT -4, 'INVENTORY' 
	
	UNION ALL
	
	SELECT -5, 'INPUT VAT CONTROL' 
	
	UNION ALL
	
	SELECT -6, 'BANK' 
	
	UNION ALL
	
	SELECT -8, 'FOREIGN EXCHANGE' 
	
	UNION ALL
	
	SELECT -9, 'ACCOUNTS PAYABLE' 
	
	UNION ALL
	
	SELECT -10, 'UN-RECEIVED INVENTORY' 
	
	UNION ALL
	
	SELECT -11, 'PREPAID EXPENSE' 
	
	UNION ALL
	
	SELECT -12, 'CAPITAL' 
	
	UNION ALL
	
	SELECT -13, 'INVENTORY EXPENSE' 
	
	UNION ALL
	
	SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
	
	UNION ALL
	
	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
	
        UNION ALL


        SELECT -16, 'DISCOUNT ALLOWED' 

        UNION ALL

        SELECT -17, 'DISCOUNT RECEIVED' 

        UNION ALL

        SELECT -18, 'OPENING BALANCE' 
) G	
LEFT JOIN (SELECT * FROM AccGLCode) GC
ON G.LookupID = GC.GLCategoryID
LEFT JOIN (SELECT * FROM Lookup) LD 
ON GC.DivisionID = LD.LookupID
{where}
ORDER BY [GLCode]","0","","1","LRA-FUSION","0","0","fusion"
"39877","cv_Acc_Ledger_Adjustment_Details","","SELECT LineID,LineID,  LDiv.Value as [Division],
isnull(convert(varchar,GLC.GLCode),'') + ' - ' + isnull([GL Category],'') as [GL],
RC.Value as [Report Category],
Convert(varchar,AdjustDate,111) as [Adjustment Date],
Convert(varchar,cast(Debit as money),1) as [Debit], 
Convert(varchar,cast(Credit as money),1) as [Credit],
LAD.Notes as [Ref],
isnull(E.Company + ' - ','') + isnull(P.ProjectName,'') as [Project],
isnull(STK.StockDescription + ' - ','') + isnull(A.SerialNo,'') as [Asset]
FROM LEDGER_ADJUST_DETAIL LAD
LEFT JOIN AccGLCode GLC ON LAD.GLCodeID = GLC.GLCodeID
LEFT JOIN Lookup LDiv on LAD.DivisionID = LDiv.LookupID
LEFT JOIN Lookup RC on LAD.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT ProjectID, ProjectName,EntityID From Projects) P ON LAD.ProjectID = P.ProjectID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E ON P.EntityID = E.EntityID
LEFT JOIN (SELECT AssetID, StockID, SerialNo FROM AccAsset) A ON LAD.AssetID = A.AssetID
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID
LEFT JOIN ({gllookup}) LD ON GLC.GLCategoryId = LD.lookupid
WHERE DocID = {docid}
ORDER BY LAD.LineID","0","","1","LRA-FUSION","0","0","fusion"
"39878","cv_Acc_Ledger_Adjustment_Man","","SELECT 
LineID, LAD.DocID as [Doc. No.], convert(varchar,AdjustDate,111) as [Adjustment Date],  
LDiv.Value as [Division],
E.company + ' - ' + P.ProjectName as [Project],
LRC.Value as [Report Category],
STK.StockDescription + ' - ' + isnull(A.SerialNo,'') as [Asset],
GLC.GLCode as [GL Code], isnull([GL Category],'')  as [GL Group], GLC.GLType as [GL Type],
LAM.Currency,LAM.ROE,
dbo.fnFormatNumber(isnull(LAD.Debit,0)) as [Dr.],
dbo.fnFormatNumber(isnull(LAD.Credit,0)) as [Cr.],
Notes
FROM LEDGER_ADJUST_DETAIL LAD
LEFT JOIN (SELECT DocID, Currency,ROE FROM LEDGER_ADJUST_Master) LAM ON LAD.DocID = LAM.DocID
LEFT JOIN (SELECT LookupID, Value FROM Lookup ) LRC ON LAD.ReportCategoryID = LRC.LookupID
LEFT JOIN ACCGLCode GLC ON LAD.GLCodeID = GLC.GLCodeID
LEFT JOIN (SELECT * FROM Lookup) LDiv ON LAD.DivisionID = LDiv.LookupID
LEFT JOIN (SELECT ProjectID, EntityID, ProjectName  FROM Projects) P ON LAD.ProjectID = P.ProjectID 
LEFT JOIN (SELECT EntityID, Company FROM Entity ) E ON P.EntityID = E.EntityID
LEFT JOIN (SELECT AssetID, SerialNo, StockID FROM AccAsset) A ON LAD.AssetID = A.AssetID
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID
LEFT JOIN ({gllookup}) LD ON GLC.GLCategoryId = LD.lookupid
--LEFT JOIN (SELECT Lookupid, value as [GL Category] FROM Lookup ) LD ON GLC.GLCategoryId = LD.lookupid
{where}
ORDER BY AdjustDate Desc","0","","1","LRA-FUSION","0","0","fusion"
"39879","cv_Timesheet_Module_History","","select 
 t.timesheetid,convert(varchar,timesheetdate,103) as ""Timeheet Date"",t.ProjectStatus as [Comments], users.username as ""Developer"",
hoursdone as ""HoursDone"",
case when hoursdone < 1 then 1 else Round(hoursdone,0)end as ""Hours Done"",
 'Out of spec' = case(isnull(t.OutOfSpec,0)) when 0 then 'No' else 'Yes' end,
 'Needs Invoicing' = case(isnull(t.NeedInvoice,0)) when 0 then 'No' else 'Yes' end
from timesheet t
left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
{where}
order by timesheetdate
","0","","1","LRA-FUSION","0","0","fusion"
"39880","cv_Dashboard_QuotesDetails","","Select 
Sum(a.[Count]) as [Count],Sum(a.Total) as [Total],Sum(a.[TotalComp]) as [TotalComp],
Sum(b.[Count]) as [Count2],Sum(b.Total) as [Total2],Sum(b.[TotalComp]) as [TotalComp2]
,Sum
(
Round(case when ut.PeriodType = 'Daily' then ut.Quantity
when ut.PeriodType = 'Weekly' then Convert(Money,ut.Quantity)/7
when ut.PeriodType = 'Monthly' then Convert(Money,ut.Quantity)/30
when ut.PeriodType = 'BiAnnually' then Convert(Money,ut.Quantity)/182
when ut.PeriodType = 'Annually' then Convert(Money,ut.Quantity)/365
else
 null
end * DateDiff(d,'<%Date1%>','<%Date2%>'),0)
) as [Target]
--,Sum(UT.Quantity) as [Target]
from
(
Select SalesRepID,Count(*) as [Count],Sum(Total) as [Total],Sum([TotalComp]) as [TotalComp] from
Cost_Estimate_Master DM
left join (Select Sum(isnull(TotalIncl,0)) as [Total],DocID from Cost_Estimate_Detail DD group by DocID) DD
on DD.DocID = DM.DocID
left join 
(
Select Sum(isnull(TotalIncl,0)) as [TotalComp],DD.DocID 
from Cost_Estimate_Detail DD 
left join Cost_Estimate_Master CEM on CEM.DocID = DD.DocID
where DocStatus in ('Completed','Reconciled')
group by DD.DocID
) DDC
on DDC.DocID = DM.DocID
{where}
group by SalesRepID
)a
left join
(
Select SalesRepID,Count(*) as [Count],Sum(Total) as [Total],Sum([TotalComp]) as [TotalComp] from
Cost_Estimate_Master DM
left join (Select Sum(isnull(TotalIncl,0)) as [Total],DocID from Cost_Estimate_Detail DD group by DocID) DD
on DD.DocID = DM.DocID
left join 
(
Select Sum(isnull(TotalIncl,0)) as [TotalComp],DD.DocID 
from Cost_Estimate_Detail DD 
left join Cost_Estimate_Master CEM on CEM.DocID = DD.DocID
where DocStatus in ('Completed','Reconciled')
group by DD.DocID
) DDC
on DDC.DocID = DM.DocID
{where2}
group by SalesRepID
)b
on 1=1
left join UserTargets UT on UT.UserID = a.SalesRepID and Activity like 'Value Of Quotes'
","0","","1","LRA-FUSION","0","0","fusion"
"39881","cv_dashboard_SalesPipeProbability","","Select count(*) as [Count],isnull(Probability,'Not Selected') as [prob],c.Total
from SalesPipeline
left join (Select Count(*) as [Total] from SalesPipeline {where}) c on 1=1
{where}
group by Probability,c.Total","0","","1","LRA-FUSION","0","0","fusion"
"39882","cv_dashboard_SalesPipeStatus","","Select count(*) as [Count],isnull(Status,'Not Selected') as [Status],c.Total
from SalesPipeline
left join (Select Count(*) as [Total] from SalesPipeline {where}) c on 1=1
{where}
group by Status,c.Total","0","","1","LRA-FUSION","0","0","fusion"
"39883","cv_dashboard_Leads","","Select a.[Count],b.[Count2],c.[CountECAdded],d.[CountEAdded],e.[CountECMod],f.[CountEMod],
(
Round(case when ut.PeriodType = 'Daily' then ut.Quantity
when ut.PeriodType = 'Weekly' then Convert(Money,ut.Quantity)/7
when ut.PeriodType = 'Monthly' then Convert(Money,ut.Quantity)/30
when ut.PeriodType = 'BiAnnually' then Convert(Money,ut.Quantity)/182
when ut.PeriodType = 'Annually' then Convert(Money,ut.Quantity)/365
else
 null
end * DateDiff(d,'<%Date1%>','<%Date2%>'),0)
) as [Target]
 from 
(
Select Sum(Case when ec.EntityContactID is null then 0 else 1 end) as [Count] ,AgentID
from Lead L
left join EntityContact ec on ec.EntityContactID = l.EntityContactID
{where}
group by AgentID
)a
left join
(
Select Sum(Case when ec.EntityContactID is null then 0 else 1 end) as [Count2] ,AgentID
from Lead L
left join EntityContact ec on ec.EntityContactID = l.EntityContactID
{where2}
group by AgentID
)b on 1=1
left join
(
Select Count(*) as [CountECAdded] ,UserID
from  EntityContact ec 
left join users u on u.UserName = ec.ModifiedBy
{where4}
group by UserID
)c on 1=1
left join
(
Select Count(*) as [CountEAdded], UserID
from  Entity ec
left join users u on u.UserID= ec.EntityCreatorID
{where4}
group by UserID
)d on 1=1
left join
(
Select Count(*) as [CountECMod] ,UserID
from  EntityContact ec
left join users u on u.UserName = ec.ModifiedBy
{where3}
group by UserID
)e on 1=1
left join
(
Select Count(*) as [CountEMod] ,UserID
from  Entity ec
left join users u on u.UserName = ec.ModifiedBy
{where3}
group by UserID
)f on 1=1
left join UserTargets ut on ut.UserID = a.AgentID and Activity like 'New Clients'


/*Select a.[Count],b.[Count2],
(
Round(case when ut.PeriodType = 'Daily' then ut.Quantity
when ut.PeriodType = 'Weekly' then Convert(Money,ut.Quantity)/7
when ut.PeriodType = 'Monthly' then Convert(Money,ut.Quantity)/30
when ut.PeriodType = 'BiAnnually' then Convert(Money,ut.Quantity)/182
when ut.PeriodType = 'Annually' then Convert(Money,ut.Quantity)/365
else
 null
end * DateDiff(d,'<%Date1%>','<%Date2%>'),0)
) as [Target]
 from 
(
Select Sum(Case when ec.EntityContactID is null then 0 else 1 end) as [Count] ,AgentID
from Lead L
left join EntityContact ec on ec.EntityContactID = l.EntityContactID
{where}
group by AgentID
)a
left join
(
Select Sum(Case when ec.EntityContactID is null then 0 else 1 end) as [Count2] ,AgentID
from Lead L
left join EntityContact ec on ec.EntityContactID = l.EntityContactID
{where2}
group by AgentID
)b on 1=1
left join UserTargets ut on ut.UserID = a.AgentID and Activity like 'New Clients'*/
","0","","1","LRA-FUSION","0","0","fusion"
"39884","cv_UserDefinedFieldsMan","","Select Distinct <%top%> newid(), CustomFieldID, cff.displayname as [Module Name], Lookup.value as [Group], ll.value as [Sub Group],/* E.Company, */
Fieldname as [Field name], FieldType as [Field Type], ControlType as [Type OF Control]
from CustomFields
left Join Lookup on lookup.lookupid = CustomFields.GroupID
Left Join LinkLookup ll on ll.linklookupid = customfields.subgroupid
left join CustomFieldEntityGroups cfeg on cfeg.groupid = customfields.groupid
left join Entity E on E.entityid = cfeg.entityid
left join customfieldforms cff on cff.formid = customfields.formname
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39885","qf_udfCompanies","","select top 50 entityid,isnull(Accountnum,'') as [Acc. No.], Company, t.Value as Type, c.Value as Category
from entity e
left join lookup t on t.lookupid = e.entitytypeid
left join lookup c on c.lookupid = e.entitycategoryid
where (company like '<%replace%>%' OR isnull(Accountnum,'') like  '<%replace%>%')  {where} 

order by company","0","","1","LRA-FUSION","0","0","fusion"
"39886","qf_udfStockfind","","select top 50 STK.Stockid, STK.StockCode as [Code], STK.StockDescription as [Description], LJ.Value as [Stock Type]
from AccStock STK

LEFT JOIN (SELECT LookupID, Value FROM Lookup where class like 'stocktype') LJ
ON STK.stocktype = LJ.lookupid
where 
/*(isnull(stk.IsHidden,0) = 0) AND */
((STK.StockCode like '%<%replace%>%') OR (STK.StockDescription Like '%<%replace%>%')) /*<%sType%>*/
/*order by STK.Stockcode, STK.StockDescription*/  <%and%>","0","","1","LRA-FUSION","0","0","fusion"
"39887","cv_AccStock_Optional","","SELECT StockOptionID,LT.Value as [Type], STK.StockCode as [Code], STK.StockDescription as [Description]
FROM AccStock_Option SO 
LEFT JOIN (SELECT StockID, StockCode, StockDescription, StockType FROM AccStock) STK ON SO.DepStockID = STK.StockID 
LEFT JOIN Lookup LT ON STK.StockType = LT.LookupID 
where SO.PriStockID = {pristockcode}
ORDER BY LT.Value, STK.StockCode","0","","1","LRA-FUSION","0","0","fusion"
"39888","qf_AccCostEstimateStock","","select DISTINCT top 500 
convert(varchar,STK.Stockid) + '#' + convert(varchar,C.LinkLookupID),
[Stock Type], [Stock Sub Type], STK.StockCode as [Code], STK.StockDescription as [Description],null as [Qty],
/*stk.sellingpriceex as [Selling Price Excl],*/isnull(qty,0) as [In Container],C.Value as [Container],
LJ.Value as [GL Category], CASE ISNULL(sstk.[isMain],0) WHEN 0 then 'No' ELSE 'Yes' END As [Main Item], stk.StockID as [stockid]
from AccStock STK
left join (select lookupid, value as [Stock Type] from lookup) l on l.lookupid = STK.stocktype
LEFT JOIN (SELECT LinklookupID, Linkedto, value as [Stock Sub Type] FROM Linklookup) ll on ll.Linklookupid = stk.SubTypeID
Cross JOIN (SELECT LinkLookupID, Value FROM LinkLookup where Class like 'StockContainer') C
LEFT JOIN (SELECT StockID, round(Sum(qty * Ratio),4) as [Qty],ContainerID FROM ACCStockControl Group by StockID,Containerid) SC
ON STK.StockID = Sc.StockID and C.LinkLookupID = SC.ContainerID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class like 'JournalType') LJ
ON STK.JournalID = LJ.lookupid
LEFT JOIN (SELECT COUNT(DepStockID) as [isMain], PriStockID FROM AccStock_Option Group By PriStockID) SSTK
ON SSTK.PriStockID = STK.StockID
where ((STK.StockCode like '%<%replace%>%') OR (STK.StockDescription Like '%<%replace%>%')) <%and%> /*<%sType%>*/ ","0","","1","LRA-FUSION","0","0","fusion"
"39889","cv_DivUsers_UserName","","select distinct ud.userid, u.UserName as [UserName]
from users u
left join userdivisions ud on ud.userid = u.userid 
{where}
Order By u.UserName","0","","1","LRA-FUSION","0","0","fusion"
"39890","cv_Company_Notice","","Select noticeid, Convert(varchar,nb.StartDate, 103) as [Start Date], l.value as [Division], [Added By], lt.value as [Notice Type], ls.value as [Notice Status], Convert(varchar,ExpDate, 103) as [Expiry Date]
From noticeboard nb

Left Join (select userid,isnull(firstname, '') + ' ' + isnull(surname, '') as [Added By] from Users) u
On u.userid = nb.addedby
Left Join (select lookupid, value from lookup) l
On l.lookupid = nb.division
Left Join (select lookupid, value from lookup) ls
On ls.lookupid = nb.noticestatus
Left Join (select lookupid, value from lookup) lt
On lt.lookupid = nb.noticetype
Where noticeid is not null
<%where%>

Order by StartDate desc","0","","1","LRA-FUSION","0","0","fusion"
"39891","cv_Fusion_Birthdays",""," 

 
DECLARE @InNextDays INT
SET @InNextDays = {added}

Select 'bd' + Convert(Varchar,staffid), 'Birthday' as [Type], Convert(varchar,Birthdate,103) as [Date], isnull(firstname,'') + ' ' + isnull(surname,'') as [Staff Member]
from Staff 
WHERE DATEADD( Year, DATEPART( Year, GETDATE()) - DATEPART( Year, BirthDate), BirthDate)
      BETWEEN  GETDATE()
      AND  GETDATE() + @InNextDays
      AND IsNull(isActive,0) = 1
      
UNION ALL

      Select 'ed' + Convert(Varchar,staffid), 'Employed-Date' as [Type], Convert(varchar,DateEmployed,103) as [Date], isnull(firstname,'') + ' ' + isnull(surname,'') as [Staff Member]
from Staff 
WHERE DATEADD( Year, DATEPART( Year, GETDATE()) - DATEPART( Year, DateEmployed), DateEmployed)
      BETWEEN  GETDATE()
      AND  GETDATE() + @InNextDays
      AND IsNull(isActive,0) = 1","0","","1","LRA-FUSION","0","0","fusion"
"39892","cv_Client_Birthdays",""," 
DECLARE @InNextDays INT
SET @InNextDays = {added}

 
Select  entitycontactid, 'Birthday' as [Type], convert(varchar, BirthDate, 103) as [Date], isnull(firstname,'') + ' ' + isnull(surname,'') as [Contact Name], e.Company as [Company]
From EntityContact ec
Left Join entity e on e.entityid = ec.entityid
WHERE DATEADD( Year, DATEPART( Year, GETDATE()) - DATEPART( Year, BirthDate), BirthDate)
      BETWEEN  GETDATE() AND (GETDATE() + @InNextDays)

 ","0","","1","LRA-FUSION","0","0","fusion"
"39893","cv_Saved_Defaults","","Select SaveSearchFormID,FriendlyName as [Name],IsDefault as [Default],IsMain as [Main],useRange as [Use Range] from
SaveSearchForm
<%Where%>","0","","1","LRA-FUSION","0","0","fusion"
"39894","cv_Acc_AssetMan","","DECLARE @Date as datetime
SET @Date = '{date}'

SELECT 
	A.AssetID, 
	StockCode as [Code], 
	StockDescription as [Asset Code],
	SerialNo as [Asset Serial No.],
	ld.value as [Division] ,[Status],
	convert(Varchar,DateAquired,111) as [Aquired],
	convert(Varchar,cast(Cost as money),1) as [Cost], 
	Lifespan as [Lifespan], 
	convert(varchar,cast(SalvageValue as money),1) as [Salvage Value],
	DepType as [Depreciation Type], 
	round(DepRate,2) as [Depreciation Rate],
	convert(Varchar,cast(isnull(DepExpense,0) as Money),1) as [Accumulated Depreciation],
	convert(Varchar,cast( A.Cost - isnull(DepExpense,0) as Money),1) as [Book Value],
	isnull(P.ProjectNum + ' - ','') + P.ProjectName as [Project],
	CONVERT(VARCHAR, PAD.StartDate, 111) as [Date Booked Out],
	CONVERT(VARCHAR, PAD.EndDate, 111) as [Date Booked In]
FROM AccAsset A WITH(NOLOCK)
LEFT JOIN (SELECT StockID, StockCode, StockDescription,StockType, SubTypeID FROM AccStock WITH(NOLOCK)) STK
ON A.StockID = Stk.Stockid
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH(NOLOCK)) L 
ON STK.StockType = L.Lookupid
LEFT JOIN (SELECT AssetID,sum(DepExpense) as [DepExpense] FROM AccASSETDETAIL WITH(NOLOCK) WHERE SchedDate <= @Date GROUP BY AssetID) AD
ON A.AssetID = AD.AssetID
LEFT JOIN (SELECT LookupID, value FROM Lookup WITH(NOLOCK)) ld
ON ld.LookupID = A.DivisionID
LEFT JOIN (SELECT LookupID, value FROM Lookup WITH(NOLOCK)) lcl
ON lcl.lookupID = A.CompanyLocation
LEFT JOIN (SELECT LookupID, Value as [Status] FROM Lookup WITH(NOLOCK) WHERE Class LIKE 'assetstatus') las
ON las.lookupID = A.StatusID
LEFT JOIN (SELECT MIN(ProjectAssetID) as [ProjectAssetID],ProjectID, AssetID  FROM ProjectAsset where @Date between StartDate and EndDate Group by AssetID,ProjectID   ) PA
ON A.AssetID = PA.AssetID  
LEFT JOIN (SELECT ProjectAssetID, Startdate, EndDate FROM ProjectAsset ) PAD
ON PA.ProjectAssetID = PAD.ProjectAssetID 
LEFT JOIN (SELECT ProjectID, ProjectName, ProjectNum  FROM Projects ) P
ON PA.ProjectID = P.ProjectID 
{where}
ORDER BY StockDescription

","0","","1","LRA-FUSION","0","0","fusion"
"39895","cv_Get_Excel_Import_Tables","","SELECT TableID, FriendlyName FROM ExcelImportTables  EIT
LEFT JOIN sysObjects SO ON SO.ID = EIT.TableID
WHERE SO.ID IS NOT NULL
ORDER By FriendlyName","0","","1","LRA-FUSION","0","0","fusion"
"39896","cv_GetLinkedTables","","SELECT SO.Name FROM SysObjects SO
LEFT JOIN (SELECT * FROM SysColumns) SC ON SC.ID = SO.ID
WHERE SC.Name = '{TablePK}' AND SO.Name <> '{TableName}'","0","","1","LRA-FUSION","0","0","fusion"
"39897","cv_GetMainTblPK","","select  c.COLUMN_NAME from INFORMATION_SCHEMA.TABLE_CONSTRAINTS pk ,INFORMATION_SCHEMA.KEY_COLUMN_USAGE c 
where   pk.TABLE_NAME = '{TableName}' and
CONSTRAINT_TYPE = 'PRIMARY KEY' and c.TABLE_NAME = pk.TABLE_NAME and c.CONSTRAINT_NAME = pk.CONSTRAINT_NAME","0","","1","LRA-FUSION","0","0","fusion"
"39898","cv_Project_SLA","","DECLARE @ProjID INT
SET @ProjID = {pid}

SELECT ProjSLAID,
CONVERT(VARCHAR, DATENAME(MONTH,DATEADD(MONTH, ps.MonthINT, ps.StartDate))) + ' ' + CONVERT(VARCHAR, DATEPART(YEAR,DATEADD(MONTH, ps.MonthINT, ps.StartDate))) as [SLA Month],
convert(varchar,isnull(Hours,0)) as [Hours],
convert(varchar,isnull(HoursCaptured,0)) as [Captured Hours],
convert(varchar,isnull(RoundedHours,0)) as [Rounded Hours],
convert(varchar,cast(isnull(AO.AvgOutput,0) as int)) + '%' as [Avg. Time Efficiency], 
convert(varchar,Round(isnull(AO.AdjustedHours,0),2))  as [Adjusted Hours],
convert(varchar,Round(isnull(Hours,0) - isnull(AO.AdjustedHours,0),2))  as [Remaining Hours]
FROM ProjectSLA PS
--Timesheets
LEFT JOIN (SELECT ProjectID, Year([Date]) as [TSYear], Month([Date]) as [TSMonth] ,sum(cast(datediff(n, [Date], EndDate) as float) /60) as [HoursCaptured], sum(ceiling(cast(datediff(n, [Date], EndDate) as float) /60)) as [RoundedHours] FROM DevAppointment group by ProjectID,Year([Date]) , Month([Date]) ) DA
	ON PS.ProjectID = DA.ProjectID AND year(DateAdd(MM,PS.MonthInt,PS.StartDate)) = DA.TSYear AND  Month(DateAdd(MM,PS.MonthInt,PS.StartDate)) = DA.TSMonth
--Average of staff efficiency and reduced hours
LEFT JOIN 	(SELECT ProjectID,Year([Date]) as [TSYear], Month([Date]) as [TSMonth] , AVG(isnull(isnull(DA.StaffCurrentRate,S.StaffRatePerc),100.00)) as [AvgOutput], sum((isnull(isnull(DA.StaffCurrentRate,S.StaffRatePerc),100.00) /100) * (cast(datediff(n, [Date], EndDate) as float) /60)) as [AdjustedHours]  FROM DevAppointment DA
		LEFT JOIN (SELECT UserID, StaffID FROM Users) U 
			ON DA.ForUserID = U.UserID
		LEFT JOIN (SELECT StaffID, StaffRatePerc FROM Staff) S
			ON U.StaffID = S.StaffID
		Group By ProjectID,Year([Date]) , Month([Date])
		) AO
ON PS.ProjectID = AO.ProjectID  AND year(DateAdd(MM,PS.MonthInt,PS.StartDate)) = AO.TSYear AND  Month(DateAdd(MM,PS.MonthInt,PS.StartDate)) = AO.TSMonth
Where PS.ProjectID = @ProjID 
ORDER BY PS.StartDate,PS.MonthInt","0","","1","LRA-FUSION","0","0","fusion"
"39899","cv_print_entity_labels","","select DISTINCT e.entityid, e.Company as [Company],isnull(ec.[contact], 'No Contact Assigned') as [Contact],isnull(ec.jobtitle,'') as [JobTitle],isnull(ec.title, 'Mr.') as [Title],
EA.Address1 as [Address1],
EA.address2 as [Area],
EA.code as [Code]
FROM Entity E
left join (Select Distinct entityid, address1, isnull(address2, city) as [address2], code,country FROM Entityaddress WHERE AddressType like 'Postal%') EA
ON E.entityid = EA.entityid
LEFT JOIN (SELECT Top 1 entityid,isnull(title, 'Mr.') as [Title], firstname + ' ' +  surname as [Contact], isnull(JobTitle, 'Not captured') as [JobTitle]/*, isLabelContact */ FROM Entitycontact /*where isnull(islabelcontact, 0) = 1*/) EC on EC.entityid = e.entityID
WHERE e.company <> '' AND (Ea.address1 is not null AND EA.Code is not null)
ORDER BY e.company


","0","","1","LRA-FUSION","0","0","fusion"
"39900","cv_Client_SLA_TimeTotals","","SELECT SUM(a.[SLAavlHrs]) AS [SLAavlHrs], SUM(a.[SLAProjHrs]) as [SLAProjHrs] FROM (
	SELECT s.bla, s.Hours as [SLAavlHrs], ISNULL(SUM(s.HoursDone),0) as [SLAProjHrs] FROM (
		SELECT DISTINCT TimesheetID,Month(TimesheetDate) as bla ,HoursDone,ps.Hours 
		FROM Timesheet ts
		LEFT JOIN ProjectSLA ps on ts.projectid = ps.projectid AND Year(ts.TimesheetDate) = Year(ps.StartDate) AND Month(ts.TimesheetDate) = MONTH(DATEADD(Month, ps.MonthInt, ps.StartDate))
		Where Month(TimesheetDate) = (ps.MonthInt + 1)
		AND ps.ProjectID = {pid}		
	) s
	GROUP BY s.bla, s.Hours
)a","0","","1","LRA-FUSION","0","0","fusion"
"39901","cv_Client_SLA_TimeUsed","","SELECT SUM(a.[Actual]) as projHrs FROM (
Select      
      CONVERT(VARCHAR, DATENAME(MONTH,DATEADD(MONTH, ps.MonthINT, ps.StartDate))) + ' ' +    
      CONVERT(VARCHAR, DATEPART(YEAR,DATEADD(MONTH, ps.MonthINT, ps.StartDate))) as [SLA Month],   
      Hours,
      ts.[totHours] as [Actual]
FROM ProjectSLA  ps
LEFT JOIN (SELECT ProjectID, TimeSheetDate, SUM(HoursDone) as [totHours] FROM TimeSheet GROUP BY ProjectID, TimeSheetDate) ts
ON ps.ProjectID = ts.ProjectID AND ts.TimeSheetDate BETWEEN DATEADD(MONTH, ps.MonthINT, ps.StartDate) AND DATEADD(MONTH, (ps.monthINT + 1), ps.StartDate)
Where ps.ProjectID = {pid} 
)a
WHERE MONTH(CONVERT(DATETIME, a.[SLA Month])) = MONTH(GETDATE())
AND YEAR(CONVERT(DATETIME, a.[SLA Month])) = YEAR(GETDATE())
GROUP BY a.Hours","0","","1","LRA-FUSION","0","0","fusion"
"39902","cv_User_Targets","","
SELECT newid(),Activity,PeriodType as [Target Period], Target, Actual, Variance, [Weight %], round([Score %],2) as [Score %] FROM 
    (
    SELECT UserId,Activity,PeriodType, Target, Actual, Variance, convert(varchar,Weight) as [Weight %], 
    CASE WHEN Weight < CalcScore THEN Weight ELSE CalcScore END  as [Score %], 
    5 as [Rank]
    FROM UserTargetTemp

    
    UNION ALL
    
    SELECT Distinct UserID, upper([User]), null, null, null, null, null as [Weight %], null as [Score %], 4 as [Rank]
    FROM UserTargetTemp


    UNION ALL
    
    SELECT UserID, Null, Null, null, null, null, 'TOTAL SCORE %:' as [Weight %], 
    SUM(CASE WHEN Weight < CalcScore THEN Weight ELSE CalcScore END) as [Score %], 
    6 as [Rank] 
    FROM UserTargetTemp
    GROUP BY [UserID]
    ) B

ORDER BY UserID, Rank,Activity

","0","","1","LRA-FUSION","0","0","fusion"
"39903","cv_User_Targets_Pop","","DECLARE @StartDate as Datetime
SET @StartDate = '{startdate}' 

DELETE FROM UserTargetTemp
INSERT INTO UserTargetTemp (UserID, [User], Activity, PeriodType, Target, Actual, Variance, Weight, CalcScore)
SELECT isnull(A.UserID,UT.UserID) as [UserID], CONVERT(VARCHAR,U.[User]), isnull(A.Activity,UT.Activity) as [Activity],isnull(A.PeriodType,UT.PeriodType),isnull(A.Target,isnull(UT.Quantity,0)) as [Target], cast(isnull(A.Quantity,0) as float) as [Actual],
cast(isnull(A.Quantity,0) as float)  - isnull(UT.Quantity,0)  as [Variance], isnull(UT.Weight,0) as [Weight %],
(cast(isnull(A.Quantity,0) as float) / isnull(UT.Quantity,1)  * 100) * (isnull(UT.Weight,0) /100)  as [Calculated Score %]
FROM 
	(
	--Calls
	 
	SELECT  [UserID], Sum(Quantity) as [Quantity], [Activity], 
	  [PeriodType],  [Target],Weight
	
	from
	(
	SELECT CallCreatorID as [UserID], Count(CallLogID) as [Quantity], 'Calls' as [Activity], 
	isnull(UT.PeriodType,'Monthly') as [PeriodType],UT.Quantity as [Target],UT.Weight
	FROM CallLog C
	LEFT JOIN (SELECT * FROM UserTargets) UT ON C.CallCreatorID = UT.UserID AND 'Calls' = UT.Activity
	where [CallDate] between @StartDate AND CASE  isnull(UT.PeriodType,'Monthly') 
							WHEN 'Daily' THEN DateAdd(HH, 23,@StartDate)
							WHEN 'Weekly' THEN DateAdd(d, 7,@StartDate)
							WHEN 'Monthly' THEN DateAdd(m, 1,@StartDate)
							WHEN 'Biannually' THEN DateAdd(m, 6,@StartDate)
							WHEN 'Annually' THEN DateAdd(yyyy, 1,@StartDate)
						END
	Group by CallCreatorID,UT.PeriodType,UT.Quantity,UT.Weight
	
	UNION ALL
	
	--Canvas Calls Log
 	SELECT CallCreatorID as [UserID], Count(CallLogID) as [Quantity], 'Calls' as [Activity], 
	isnull(UT.PeriodType,'Monthly') as [PeriodType],UT.Quantity as [Target],UT.Weight
	FROM CanvasCallLog B
	LEFT JOIN (SELECT * FROM UserTargets) UT ON B.CallCreatorID = UT.UserID AND 'Calls' = UT.Activity
	where [CallDate] between @StartDate AND CASE  isnull(UT.PeriodType,'Monthly') 
							WHEN 'Daily' THEN DateAdd(HH, 23,@StartDate)
							WHEN 'Weekly' THEN DateAdd(d, 7,@StartDate)
							WHEN 'Monthly' THEN DateAdd(m, 1,@StartDate)
							WHEN 'Biannually' THEN DateAdd(m, 6,@StartDate)
							WHEN 'Annually' THEN DateAdd(yyyy, 1,@StartDate)
						END
	Group by CallCreatorID,UT.PeriodType,UT.Quantity,UT.Weight 
	)
	A
	group by UserID,Activity,PeriodType ,Target  ,Weight 
	
	UNION ALL 
	--Appointments
	SELECT ForUserID as [UserID], count(AppointmentID), 'Appointments' + ' - ' + ISNULL(O.OptVal,''),
	isnull(UT.PeriodType,'Monthly'),UT.Quantity,UT.Weight
	FROM Appointment A
	LEFT JOIN (SELECT * FROM Options) O ON O.OptNumVal = A.CalColour
	LEFT JOIN (SELECT * FROM UserTargets) UT ON A.ForUserID = UT.UserID AND 'Appointments' = UT.Activity AND ApptType = O.OptVal
	where [Date] between @StartDate AND CASE  isnull(UT.PeriodType,'Monthly') 
	                    WHEN 'Daily' THEN DateAdd(HH, 23,@StartDate)
	                    WHEN 'Weekly' THEN DateAdd(d, 7,@StartDate)
	                    WHEN 'Monthly' THEN DateAdd(m, 1,@StartDate)
	                    WHEN 'Biannually' THEN DateAdd(m, 6,@StartDate)
	                    WHEN 'Annually' THEN DateAdd(yyyy, 1,@StartDate)
	                END
	and isnull(Held,0) = 1
	Group by ForUserID,UT.PeriodType,UT.Quantity,UT.Weight, O.OptVal
	
	UNION ALL 
	--Modules
	SELECT U.UserID, count(M.moduleID), 'Modules',
	isnull(UT.PeriodType,'Monthly') as [PeriodType],UT.Quantity,UT.Weight
	FROM Modules M
	LEFT JOIN (SELECT * FROM ModuleAssignees) MA ON M.ModuleID =MA.ModuleID
	LEFT JOIN (SELECT UserID, StaffID FROM Users) U ON MA.StaffID = U.Staffid
	LEFT JOIN (SELECT * FROM UserTargets) UT ON U.UserID = UT.UserID AND 'Modules' = UT.Activity
	where M.EndDate between @StartDate AND CASE  isnull(UT.PeriodType,'Monthly') 
							WHEN 'Daily' THEN DateAdd(HH, 23,@StartDate)
							WHEN 'Weekly' THEN DateAdd(d, 7,@StartDate)
							WHEN 'Monthly' THEN DateAdd(m, 1,@StartDate)
							WHEN 'Biannually' THEN DateAdd(m, 6,@StartDate)
							WHEN 'Annually' THEN DateAdd(yyyy, 1,@StartDate)
						END
	AND Progress = 100
	AND U.UserID is not null
	GROUP BY U.UserID,UT.PeriodType,UT.Quantity,UT.Weight
	
	UNION ALL 
	--Number of Quotes
	SELECT CreatedBy, Count(docID), 'Number Of Quotes',
	isnull(UT.PeriodType,'Monthly'),UT.Quantity,UT.Weight
	FROM Cost_Estimate_Master A
	LEFT JOIN (SELECT * FROM UserTargets) UT ON A.CreatedBy = UT.UserID AND 'Number Of Quotes' = UT.Activity
	where isnull(RevisedToDoc,0) = 0
	AND A.DocStatus in ('Accepted', 'Completed'/*,open*/)
	AND A.DateCreated Between @StartDate AND 
		(SELECT CASE  isnull(UT.PeriodType,'Monthly') 
			WHEN 'Daily' THEN DateAdd(HH, 23, @StartDate )
			WHEN 'Weekly' THEN DateAdd(d, 7, @StartDate )
			WHEN 'Monthly' THEN DateAdd(m, 1, @StartDate )
			WHEN 'Biannually' THEN DateAdd(m, 6, @StartDate )
			WHEN 'Annually' THEN DateAdd(yyyy, 1, @StartDate )
		END)
	Group by CreatedBy,UT.PeriodType,UT.Quantity,UT.Weight
	
	UNION ALL 
	--Value of Quotes
	SELECT UT.UserID, cast(round(round(sum(isnull(Value,0)),3),2) as money), 'Value Of Quotes',
	isnull(UT.PeriodType,'Monthly'),UT.Quantity,UT.Weight
	FROM Cost_Estimate_Master CEM
	LEFT JOIN (SELECT DocID, sum(isnull(Qty,0) * isnull(PriceEx,0) * ((100 - isnull(discperc,0))/100 )) as [Value] FROM Cost_Estimate_Detail WHERE isnull(ComponentOfLineID,0) = 0 Group by DocID) CED ON CEM.DocID = CED.DocID
	LEFT JOIN (SELECT EntityID, SalesConsID FROM Entity) E ON CEM.Entityid = E.Entityid
	LEFT JOIN (SELECT LookupID, Value  as [UserName] FROM Lookup) L ON E.SalesConsID= L.LookupID
	LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(surname,'') as [UserName] FROM Users) SU ON ltrim(rtrim(L.UserName)) like ltrim(rtrim(SU.UserName))
	LEFT JOIN (SELECT * FROM UserTargets) UT ON isnull(SU.UserID,CEM.CreatedBy) = UT.UserID AND 'Value Of Quotes' = UT.Activity
	where isnull(RevisedToDoc,0) = 0
	AND CEM.DocStatus in ('Accepted', 'Completed'/*,open*/)
	AND CEM.DateCreated Between @StartDate AND	 
		(SELECT CASE  isnull(UT.PeriodType,'Monthly') 
			WHEN 'Daily' THEN DateAdd(HH, 23, @StartDate )
			WHEN 'Weekly' THEN DateAdd(d, 7, @StartDate )
			WHEN 'Monthly' THEN DateAdd(m, 1, @StartDate )
			WHEN 'Biannually' THEN DateAdd(m, 6, @StartDate )
			WHEN 'Annually' THEN DateAdd(yyyy, 1, @StartDate )
		END)
	Group by UT.UserID,UT.PeriodType,UT.Quantity,UT.Weight
	
	UNION ALL 

	--Number of Orders

	SELECT CreatedBy,count(docID), 'Number Of Orders',
	isnull(UT.PeriodType,'Monthly'),UT.Quantity,UT.Weight
	FROM DEBTOR_Master A
	LEFT JOIN (SELECT * FROM UserTargets) UT ON A.CreatedBy = UT.UserID AND 'Number Of Orders' = UT.Activity
	WHERE 
	DocType in ('Sales Order', 'Quote')
	AND A.DocStatus in ('Accepted', 'Completed'/*,open*/)
	AND A.DateCreated Between @StartDate AND 
		(SELECT CASE  isnull(UT.PeriodType,'Monthly') 
			WHEN 'Daily' THEN DateAdd(HH, 23, @StartDate )
			WHEN 'Weekly' THEN DateAdd(d, 7, @StartDate )
			WHEN 'Monthly' THEN DateAdd(m, 1, @StartDate )
			WHEN 'Biannually' THEN DateAdd(m, 6, @StartDate )
			WHEN 'Annually' THEN DateAdd(yyyy, 1, @StartDate )
		END)
	Group by CreatedBy,UT.PeriodType,UT.Quantity,UT.Weight
	
 
	UNION ALL 

	--Value of Orders
	SELECT UT.UserID, cast(round(round(sum(isnull(Value,0)),3),2) as money), 'Value Of Orders',
	isnull(UT.PeriodType,'Monthly'),UT.Quantity,UT.Weight
	FROM DEBTOR_Master CEM
	LEFT JOIN (SELECT DocID, sum(isnull(Qty,0) * isnull(PriceEx,0) * ((100 - isnull(discperc,0))/100 )) as [Value] FROM DEBTOR_Detail WHERE isnull(ComponentOfLineID,0) = 0 Group by DocID) CED ON CEM.DocID = CED.DocID
	LEFT JOIN (SELECT EntityID, SalesConsID FROM Entity) E ON CEM.Entityid = E.Entityid
	LEFT JOIN (SELECT LookupID, Value  as [UserName] FROM Lookup) L ON E.SalesConsID = L.LookupID
	LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(surname,'') as [UserName] FROM Users) SU ON ltrim(rtrim(L.UserName)) like ltrim(rtrim(SU.UserName	))
	LEFT JOIN (SELECT * FROM UserTargets) UT ON isnull(SU.UserID,CEM.CreatedBy) = UT.UserID AND 'Value Of Orders' = UT.Activity
	where Docstatus in ('Completed', 'Accepted'/*,open*/)
	AND CEM.DateCreated Between @StartDate AND 
		(SELECT CASE  isnull(UT.PeriodType,'Monthly') 
			WHEN 'Daily' THEN DateAdd(HH, 23, @StartDate )
			WHEN 'Weekly' THEN DateAdd(d, 7, @StartDate )
			WHEN 'Monthly' THEN DateAdd(m, 1, @StartDate )
			WHEN 'Biannually' THEN DateAdd(m, 6, @StartDate )
			WHEN 'Annually' THEN DateAdd(yyyy, 1, @StartDate )
		END)
	Group by UT.UserID,UT.PeriodType,UT.Quantity,UT.Weight

	UNION ALL
	--Timesheet hours
	SELECT DeveloperID, Sum(HoursDone), 'Timesheet Hours',
	isnull(UT.PeriodType,'Monthly'),UT.Quantity,UT.Weight  
	FROM Timesheet A
	LEFT JOIN (SELECT * FROM UserTargets) UT ON A.DeveloperID = UT.UserID AND 'Timesheet Hours' = UT.Activity
	where A.TimesheetDate between @StartDate AND CASE  isnull(UT.PeriodType,'Monthly') 
							WHEN 'Daily' THEN DateAdd(HH, 23,@StartDate)
							WHEN 'Weekly' THEN DateAdd(d, 7,@StartDate)
							WHEN 'Monthly' THEN DateAdd(m, 1,@StartDate)
							WHEN 'Biannually' THEN DateAdd(m, 6,@StartDate)
							WHEN 'Annually' THEN DateAdd(yyyy, 1,@StartDate)
						END
	Group By DeveloperID,UT.PeriodType,UT.Quantity,UT.Weight

	UNION ALL
	--New Clients
	SELECT EntityCreatorID, Count(EntityID), 'New Clients',
	isnull(UT.PeriodType,'Monthly'),UT.Quantity,UT.Weight
	FROM Entity A
	LEFT JOIN (SELECT * FROM UserTargets) UT ON A.EntityCreatorID = UT.UserID AND 'New Clients' = UT.Activity
	where A.DateAdded between @StartDate AND CASE  isnull(UT.PeriodType,'Monthly') 
							WHEN 'Daily' THEN DateAdd(HH, 23,@StartDate)
							WHEN 'Weekly' THEN DateAdd(d, 7,@StartDate)
							WHEN 'Monthly' THEN DateAdd(m, 1,@StartDate)
							WHEN 'Biannually' THEN DateAdd(m, 6,@StartDate)
							WHEN 'Annually' THEN DateAdd(yyyy, 1,@StartDate)
						END
	Group BY EntityCreatorID,UT.PeriodType,UT.Quantity,UT.Weight
	
	UNION ALL

	--Updated Contacts	
	SELECT U.UserID as EntityCreatorID,Count(EntityContactID), 'Contact Updates', 
	isnull(UT.PeriodType,'Monthly'),UT.Quantity,UT.Weight 	
	FROM EntityContact EC
	LEFT JOIN (SELECT * FROM Users) U on U.Username = EC.modifiedby	
	LEFT JOIN (SELECT * FROM UserTargets) UT ON U.userID = UT.UserID AND 'Contact Updates' = UT.Activity
	where EC.DateModified between @StartDate AND CASE  isnull(UT.PeriodType,'Monthly') 
	                    WHEN 'Daily' THEN DateAdd(HH, 23,@StartDate)
	                    WHEN 'Weekly' THEN DateAdd(d, 7,@StartDate)
	                    WHEN 'Monthly' THEN DateAdd(m, 1,@StartDate)
	                    WHEN 'Biannually' THEN DateAdd(m, 6,@StartDate)
	                    WHEN 'Annually' THEN DateAdd(yyyy, 1,@StartDate)
	                END
	Group BY U.UserID,UT.PeriodType,UT.Quantity,UT.Weight


	UNION ALL
	--updated Clients
	SELECT EntityUpdaterID, Count(EntityID), 'Client Updates',
	isnull(UT.PeriodType,'Monthly'),UT.Quantity,UT.Weight
	FROM Entity A
	LEFT JOIN (SELECT * FROM UserTargets) UT ON A.EntityUpdaterID = UT.UserID AND 'Client Updates' = UT.Activity
	where A.datemodified between @StartDate AND CASE  isnull(UT.PeriodType,'Monthly') 
							WHEN 'Daily' THEN DateAdd(HH, 23,@StartDate)
							WHEN 'Weekly' THEN DateAdd(d, 7,@StartDate)
							WHEN 'Monthly' THEN DateAdd(m, 1,@StartDate)
							WHEN 'Biannually' THEN DateAdd(m, 6,@StartDate)
							WHEN 'Annually' THEN DateAdd(yyyy, 1,@StartDate)
						END
	Group BY EntityUpdaterID,UT.PeriodType,UT.Quantity,UT.Weight
	

	UNION ALL

	--Added Contacts	
	SELECT U.UserID as EntityCreatorID,Count(EntityContactID), 'New Contacts', 
	isnull(UT.PeriodType,'Monthly'),UT.Quantity,UT.Weight 	
	FROM EntityContact EC
	LEFT JOIN (SELECT * FROM Users) U on U.Username = EC.modifiedby	
	LEFT JOIN (SELECT * FROM UserTargets) UT ON U.userID = UT.UserID AND 'New Contacts' = UT.Activity
	where EC.Dateadded between @StartDate AND CASE  isnull(UT.PeriodType,'Monthly') 
	                    WHEN 'Daily' THEN DateAdd(HH, 23,@StartDate)
	                    WHEN 'Weekly' THEN DateAdd(d, 7,@StartDate)
	                    WHEN 'Monthly' THEN DateAdd(m, 1,@StartDate)
	                    WHEN 'Biannually' THEN DateAdd(m, 6,@StartDate)
	                    WHEN 'Annually' THEN DateAdd(yyyy, 1,@StartDate)
	                END
	Group BY U.UserID,UT.PeriodType,UT.Quantity,UT.Weight

	UNION ALL
	
	--Project Details Updates
	SELECT u.UserID, COUNT(pm.ModifiedBy), 'Project Details Updates',
	ISNULL(UT.PeriodType, 'Monthly'), UT.Quantity, UT.Weight
	FROM Projects p
	LEFT JOIN ProjectModified pm on pm.ProjectID = p.ProjectID
	LEFT JOIN Users u ON u.UserID = pm.ModifiedBy
	LEFT JOIN (SELECT * FROM UserTargets) UT ON U.userID = UT.UserID AND 'Project Details Updates' = UT.Activity
	where pm.DateModified between @StartDate AND CASE  isnull(UT.PeriodType,'Monthly') 
	                    WHEN 'Daily' THEN DateAdd(HH, 23,@StartDate)
	                    WHEN 'Weekly' THEN DateAdd(d, 7,@StartDate)
	                    WHEN 'Monthly' THEN DateAdd(m, 1,@StartDate)
	                    WHEN 'Biannually' THEN DateAdd(m, 6,@StartDate)
	                    WHEN 'Annually' THEN DateAdd(yyyy, 1,@StartDate)
	                END
	
	GROUP BY u.UserID,UT.PeriodType, UT.Quantity, UT.Weight
	
		UNION ALL
	--GP Details Updates
	SELECT SalesRepID,Round(sum(price)-sum(cost),2)  , 'Gross Profit',
	isnull(UT.PeriodType,'Monthly'),UT.Quantity,UT.Weight
	FROM DEBTOR_Master A
	LEFT JOIN (SELECT * FROM UserTargets) UT ON A.CreatedBy = UT.UserID and  'Gross Profit' = UT.Activity
	Left Join (select DocID,Sum(PriceEx) as price,Sum(CostPriceEx) as Cost from  DEBTOR_Detail group by DocID ) AB on AB.DocID=A.DocID
	WHERE 
	DocType in ('Invoice')
	AND A.DocStatus in ('Accepted', 'Completed'/*,open*/)
	AND A.DateCompleted Between @StartDate AND 
		(SELECT CASE  isnull(UT.PeriodType,'Monthly') 
			WHEN 'Daily' THEN DateAdd(HH, 23, @StartDate )
			WHEN 'Weekly' THEN DateAdd(d, 7, @StartDate )
			WHEN 'Monthly' THEN DateAdd(m, 1, @StartDate )
			WHEN 'Biannually' THEN DateAdd(m, 6, @StartDate )
			WHEN 'Annually' THEN DateAdd(yyyy, 1, @StartDate )
		END)
	Group by SalesRepID,UT.PeriodType,UT.Quantity,UT.Weight

-- GP Percentage
UNION ALL
SELECT SalesRepID,Round((((sum(price)-sum(cost))/sum(price))*100),2)  , 'Gross Profit Percentage',
	isnull(UT.PeriodType,'Monthly'),UT.Quantity,UT.Weight
	FROM DEBTOR_Master A
	LEFT JOIN (SELECT * FROM UserTargets) UT ON A.CreatedBy = UT.UserID and  'Gross Profit Percentage' = UT.Activity
	Left Join (select DocID,Sum(PriceEx) as price,Sum(CostPriceEx) as Cost from  DEBTOR_Detail group by DocID ) AB on AB.DocID=A.DocID
	WHERE 
	DocType in ('Invoice')
	AND A.DocStatus in ('Accepted', 'Completed'/*,open*/)
	AND A.DateCompleted Between @StartDate AND 
		(SELECT CASE  isnull(UT.PeriodType,'Monthly') 
			WHEN 'Daily' THEN DateAdd(HH, 23, @StartDate )
			WHEN 'Weekly' THEN DateAdd(d, 7, @StartDate )
			WHEN 'Monthly' THEN DateAdd(m, 1, @StartDate )
			WHEN 'Biannually' THEN DateAdd(m, 6, @StartDate )
			WHEN 'Annually' THEN DateAdd(yyyy, 1, @StartDate )
		END)
	Group by SalesRepID,UT.PeriodType,UT.Quantity,UT.Weight

	) A
FULL OUTER JOIN (SELECT UserTargetID, UserID,CASE WHEN ISNULL(ApptType,'') = '' THEN Activity ELSE ISNULL(Activity,'') + ' - ' + ISNULL(ApptType,'') END AS Activity, Quantity,Weight,PeriodType,ApptType FROM UserTargets) UT ON A.UserID = UT.UserID AND A.Activity = UT.Activity AND A.PeriodType = UT.PeriodType
LEFT JOIN (SELECT UserId, isnull(Firstname, '') + ' ' + isnull(Surname,'') as [User] FROM Users) U ON isnull(A.UserID,UT.UserID) = U.UserID
WHERE u.UserId is not null AND UT.UserTargetID is Not Null
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39904","cv_Timesheet_Project_History","","SELECT 
DevApptID, 
Convert(Varchar,[Date],111) as [Timesheet Date], 
M.ModuleName as [Module],
U.AssignedTo as [User],
(cast(datediff(n, [Date], EndDate) as float) /60) as [Captured Hours], 
(ceiling(cast(datediff(n, [Date], EndDate) as float) /60)) as [Rounded Hours],
Convert(Varchar,isnull(isnull(DA.StaffCurrentRate,S.StaffRatePerc),100.00)) + '%' as [Time Efficiency],
Convert(Varchar,((isnull(isnull(DA.StaffCurrentRate,S.StaffRatePerc),100.00) /100) * (cast(datediff(n, [Date], EndDate) as float) /60))) as [Adjusted Hours]
FROM DevAppointment DA
LEFT JOIN (SELECT ModuleID , ModuleNAME from Modules) M
	ON DA.ModuleID= M.ModuleID
LEFT JOIN (SELECT UserID, Isnull(Firstname,'')+  ' ' + isnull(Surname,'') AS [AssignedTo], Staffid FROM Users) U
	ON DA.ForUserID = U.UserID 
LEFT JOIN (SELECT StaffID, StaffRatePerc FROM Staff) S
	ON U.StaffID = S.StaffID
{where}
ORDER BY [Date] Desc","0","","1","LRA-FUSION","0","0","fusion"
"39905","cv_AccSTOCKTAKE_Man_ex_Serials","","Declare @Date as datetime
set @Date = '{date}'



SELECT 
NewID(),LC.Value as [Container],A.StockID,Stk.StockCode as [Code], Stk.StockDescription as [Description],LL.Value as [Type],
'' as [S/N], L.Value as [Unit], 
convert(varchar,cast(sum(round(isnull(A.QtyStores,0),4)) as money),1) as [Qty On System],
Case when sum(A.IsStockTake) = 0 THEN '' ELSE convert(varchar,cast(sum(round(A.QtyObserved,4)) as money),1) END as [Qty Observed],
Case when sum(A.IsStockTake) = 0 THEN '' ELSE convert(varchar,cast(round((sum(isnull(A.QtyObserved,0))) - sum(isnull(A.QtyStores,0)),4) as money),1) END as [Discrepancy],
isnull(max(U.[Captured By]),'') as [Captured By]
FROM (
	--Stock Control
	SELECT StockID,DivisionID, sum(qty * Ratio) as [QtyStores],0 as [QtyObserved], ContainerID, 
	isnull(SerialNumber,'') as [SerialNumber], 0 as [IsStockTake], 0 as [CapturedBy] 
	FROM AccStockControl 
	where Adjustdate <= @Date 
	AND NOT (DocType = 'Stock Take' and adjustdate between dateadd(d, -1,@Date) AND @Date)
	group by StockID, ContainerID,isnull(SerialNumber,''),DivisionID
	UNION ALL
	--Stock Take
	SELECT StockID, DivisionID, 0 as [QtyStores], QtyCaptured , ContainerID, isnull(SerialNumber,'') , 1 as [IsStockTake],CapturedBy
	FROM  AccStockTake WHERE DateCaptured between dateadd(d, -1,@date) AND @date 
	UNION ALL
	--All Stock
	SELECT StockID, null,0,0,null,null, 0 as [IsStockTake], 0 as [CapturedBy] 
	FROM AccStock Where isnull(Istangible,0) = 1
	)A
LEFT JOIN AccStock STK ON A.StockID = STK.StockID	
LEFT JOIN Lookup L on  STK.SoldBy = L.LookupID 
LEFT JOIN Lookup LL on STK.StockType = LL.LookupID 
LEFT JOIN LinkLookup LC ON A.ContainerID = LC.LinkLookupID
LEFT JOIN (SELECT isnull(firstname, '') + ' ' + isnull(surname,'') as [Captured By], userid  FROM Users) U ON A.Capturedby = U.UserID

{where}   --**
Group by LC.Value, A.StockID, STK.StockCode, STK.StockDescription, LL.Value, L.Value
{having}
ORDER BY LC.Value, Stk.StockDescription","0","","1","LRA-FUSION","0","0","fusion"
"39906","cv_DMS_Enum","","SELECT 1 as [DMSID], 'frmStaffDetails' as [FormName], 'Staff' as [FriendlyName], 'Staff' as [TableName], 'StaffID' as [PK], 'isnull(Firstname,'''') + '' '' + isnull(Surname,'''')' as [FriendlyKey]
UNION ALL
SELECT 2 as [DMSID], 'frmAccFreightQuoteDetail' as [FormName], 'Freight Quotes' as [FriendlyName], 'SHIPPING_MASTER' as [TableName], 'ShippingDocID' as [PK], 'ShippingDocID' as [FriendlyKey]
UNION ALL
SELECT 3 as [DMSID], 'frmAccCostEstimateDetails' as [FormName], 'Quotes' as [FriendlyName], 'COST_ESTIMATE_MASTER' as [TableName], 'DocID' as [PK], 'DocID' as [FriendlyKey]
","0","","1","LRA-FUSION","0","0","fusion"
"39907","cv_acc_print_Test","","DECLARE @Entityid as integer
DECLARE @UseEC as integer
SET @Entityid = {entityid}
SET @UseEC = {useec}

SELECT DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
'Statement' as [<doctype>],
'{date}' as [<docdate>],
Case WHEN @UseEC= 0 then E.Company ELSE EC.Client END as [<client>],
Case WHEN @UseEC= 0 then ECT.ATT ELSE EC.Client END as [<contact>],
Case WHEN @UseEC= 0 THEN EA.Address1 ELSE ECA.Address1 END as [<address1>],
Case WHEN @UseEC= 0 THEN EA.Address2 ELSE ECA.Address2 END as [<address2>],
Case WHEN @UseEC= 0 THEN EA.Code ELSE ECA.Code END as [<address3>],
Case WHEN @UseEC= 0 THEN EA.city ELSE ECA.city END as [<address4>],
Case WHEN @UseEC= 0 THEN E.AccountNo ELSE EC.AccountNo END as [<account>],
Case WHEN @UseEC= 0 THEN E.VatNum ELSE '' END as [<clientvat>],
DS.Terms as [<terms>],
DS.Banking as [<banking>],
DS.Footer as [<footer>],
'{totalincl}' as [<totalincl>],
'{120days}' as [<120days>],
'{90days}' as [<90days>],
'{60days}' as [<60days>],
'{30days}' as [<30days>],
'{current}' as [<current>],
'{invno}' as [<invno>],
'{cdate}' as [<cdate>],
'{ddate}' as [<ddate>]
FROM AccDocumentSetup DS
LEFT JOIN (SELECT Company, InvoiceTo, Entityid, VatNum,Isnull(Accountnum,Entityid) as [AccountNo] from Entity ) E
ON E.Entityid = @Entityid AND @UseEC = 0
LEFT JOIN (SELECT EntityContactID, isnull(firstname, '') + ' ' + isnull(surname,'') as [ATT] FROM EntityContact) ECT
ON  @UseEC = 0 AND ECT.EntityContactID = E.InvoiceTo
LEFT JOIN (SELECT EntityContactID, isnull(firstname, '') + ' ' + isnull(surname,'') as [client],PostalAddrID, isnull(Accountnum, Entitycontactid) as [AccountNo] FROM EntityContact) EC
ON @Entityid = EC.Entitycontactid AND @UseEC = 1
LEFT JOIN (SELECT  top 1 * FROM EntityAddress where Addresstype like '%postal%' and Entityid = @Entityid) EA
ON EA.Entityid = @Entityid 
LEFT JOIN (SELECT * FROM EntityAddress) ECA
ON EC.PostalAddrID = ECA.Entityaddressid

where DS.divisionID = {divisionid}","0","","1","LRA-FUSION","0","0","fusion"
"39908","cv_developer_tasks","","SELECT 
CAL.ClientActivityListID,
CAL.ClientActivityListID as [ID],
E.Company, 
P.ProjectName as [Project],
LP.Value as [Project Type],
CAL.GeneralDescription as [Description],
PR.PriorityType as [Priority],
LS.Value as [Status],
CASE WHEN ISNULL(CAL.isApproved,0) = 0 THEN 'No' ELSE 'Yes' END as [Approved],
O.Owner,
[Assigned To],
Convert(varchar,DateIssued,111) + ' ' + Convert(varchar,DateIssued,108) as [Date Issued],
Convert(varchar,DateDue,111) + ' ' + Convert(varchar,DateDue,108) as [Due Date],
Convert(varchar,DateFollowUp,111) + ' ' + Convert(varchar,DateFollowUp,108) as [Follow-Up Date],
Escalation,
sum(isnull(CALI.EstimatedHours,0)) as [Est. Hrs.],
(isnull(cast(compActCount as float),0) / isnull(cast(ActCount as float),1) ) * 100 as [Progress],
[Change Type],
(ISNULL(uID.FirstName,'') + ' ' + ISNULL(uID.Surname,'') + ' (' + ISNULL(CONVERT(VARCHAR,CAL.ApprovedByDateTime, 120),'')) + ')' as [Approved By]

FROM ClientActivityList CAL
LEFT JOIN (SELECT ProjectID, EntityID, ProjectName,ProjectTypeID FROM Projects) P
    ON CAL.ProjectID = P.ProjectID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
    ON P.EntityID = E.EntityID
LEFT JOIN (SELECT * FROM Priority) PR
    ON CAL.PriorityID = PR.PriorityID
LEFT JOIN (SELECT * FROM Lookup) LS
    ON CAL.StatusID = LS.LookupID
LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(Surname,'') As [Owner] FROM Users) O
    ON CAL.OwnerID= O.UserID
LEFT JOIN (SELECT * FROM ClientActivityListItem ) CALI
    ON CAL.ClientActivityListID = CALI.ClientActivityListID
LEFT JOIN (SELECT count(ClientActivityListItemID) as [ActCount],ClientActivityListID FROM ClientActivityListItem Group by ClientActivityListID) CAC
    ON CAL.ClientActivityListID = CAC.ClientActivityListID
LEFT JOIN (SELECT count(ClientActivityListItemID) as [CompActCount],ClientActivityListID FROM ClientActivityListItem WHERE isnull(IsComplete,0) = 1 Group by ClientActivityListID) CACC
    ON CAL.ClientActivityListID = CACC.ClientActivityListID
    
LEFT JOIN (SELECT COUNT(*) as [OpenItems], ClientActivityListID FROM ClientActivityListItem WHERE AssignedTo = {userid} AND IsComplete = 0 GROUP BY ClientActivityListID) CCC
    ON CCC.ClientActivityListID = CAL.ClientActivityListID

LEFT JOIN (SELECT UserID, FirstName, Surname FROM Users) uID
	ON uID.UserID = CAL.IsApprovedBy
--Last person assigned
LEFT JOIN (SELECT ClientActivityListID, max(AssignedTo) as [AssignedTo], max(ClientActivityListID) as [Most] FROM ClientActivityListItem Group By ClientActivityListID ) CALIAss
    ON CALI.ClientActivityListID = CALIAss.ClientActivityListID
LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(Surname,'') As [Assigned To] FROM Users) AO
    ON CALIAss.AssignedTo= AO.UserID
LEFT JOIN Lookup LP 
    ON LP.LookupId = P.ProjectTypeID
    
LEFT JOIN (SELECT ClientActivityListID, MAX(ChangeTypeID) as [ChangeType], MAX(ClientActivityListID) AS [Most] FROM ClientActivityListItem GROUP BY ClientActivityListID) CALICType
	ON CALICType.ClientActivityListID = CALI.ClientActivityListID

LEFT JOIN (SELECT LookupID, Value As [Change Type] FROM Lookup) LCTID
    ON LCTID.LookupID = CALICType.ChangeType
 {where} 
GROUP BY 
CAL.ClientActivityListID,E.Company,P.ProjectName,PR.PriorityType,LS.Value,O.Owner,CAL.DateIssued,CAL.DateDue,CAL.DateFollowUp,CAL.Escalation,
(isnull(cast(compActCount as float),0) / isnull(cast(ActCount as float),1) ) * 100,
[Assigned To],CAL.GeneralDescription,CAL.IsApproved,LP.Value,[Change Type], uID.FirstName, uID.Surname, CAL.ApprovedByDateTime","0","","1","LRA-FUSION","0","0","fusion"
"39909","cv_export_entities_sort_new","","select 
    e.EntityID,     
    Company, 
    LegalName as [Legal Name],
	EC.Contact,
    [Holding Company],
    sc.SalesConsultant as [Sales Consultant], 
    CONVERT(VARCHAR, DateAdded, 111) as [Date Added],
    Switchboard, 
    Fax, 
    URL, 
    e.Email, 
    EC.Email AS [Contact Email],
    EC.Cell AS [Contact Cell],
    VATNum as [VAT Number], 
    VATExemptNum as [VAT Exempt Number],     
    MenthodOfContact as [Method Of Contact], 
    Website as [Web Site],      
    CompRegNum as [Registration Number],
    isnull(u.Firstname,'')+' '+isnull(u.Surname,'') As [Creator],
    [Payment Terms],
    e.RefNo as [Reference Number],
    e.modifiedby as [Modified By],
	CONVERT(VARCHAR, e.DateModified, 111) as [Date Modified],
    abc.abcCategory as [ABC],
    Category,
    ODM.AccStatus as [Accounts Status],
    b.Buscat as [Business Category],
    t.type as [Type],
	LTS.Value as [Sub Type],
	dbo.fn_EntityGroups(E.EntityID) as [Group],
    AccT.AccType as [Account Type],
    e.AccountNum as [Account Number],
    ClientRating as [Client Rating],
    ManualRating as [Manual Rating],
	VendorNumber as [Vendor Number],
    [Send Accounts To Contact],
    [Send Accounts To Email],
    dbo.fnFormatNumber(isnull(e.DebitOrder,0)) as [Debit Order Amt.],
	A.Address1 as [Physical Address 1],
	A.Address2 as [Physical Address 2],
	A.Address3 as [Physical Address 3],
	A.City as [Physical Area],
	A.Region as [Physical Province],
	A.Code as [Physical Code],
	A.Country as [Physical Country],
	AP.Address1 as [Postal Address 1],
	AP.Address2 as [Postal Address 2],
	AP.Address3 as [Postal Address 3],
	AP.City as [Postal Area],
	AP.Region as [Postal Province],
	AP.Code as [Postal Code],
	AP.Country as [Postal Country],
	Case isnull(AcceptsBackOrders, 0 ) When 0 then 'False'
		when 1 then 'True'
	end as [Accepts Backorders],
	convert(Varchar,NextCallDate,111) as [Next Call Date],
	Case isnull(IsBirthdaySupplier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Birthday Supplier],
	Case isnull(IsBirthdayCourier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Birthday Courier],
	Case isnull(IsAnniversarySupplier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Aniversary Supplier],
	Case isnull(IsAnniversaryCourier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Aniversary Courier],
	Case isnull(IsAccountSupplier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Account Supplier]
from entity e WITH(NOLOCK)
LEFT JOIN (
	SELECT 
		LookupID
		, Value as [Payment Terms] 
	FROM Lookup WITH(NOLOCK)
) lp ON lp.lookupid = E.PaymentTerms
left join (
	select 
		lookupid as typeid
		, value as type 
	from lookup WITH(NOLOCK)
	where class like 'type'
) t 
on e.entitytypeid = t.typeid
LEFT JOIN LinkLookup LTS ON LTS.LinkLookupID = E.entitysubtypeid
left join (
	select 
		lookupid as categoryid
		, value as category 
	from lookup WITH(NOLOCK) 
	where class like 'category'
) c 
on e.entitycategoryid = c.categoryid
left join (
	SELECT 
		UserID
		, Firstname
		, Surname
		, Username 
	FROM users WITH(NOLOCK)
) u 
on e.entitycreatorid = u.userid

LEFT JOIN EntityAddress a  WITH(NOLOCK)
ON A.EntityID = E.EntityID 
AND A.EntityAddressID = (SELECT TOP 1 EntityAddressID FROM EntityAddress WITH(NOLOCK) WHERE EntityID = E.EntityID AND AddressType like 'Phys%')

LEFT JOIN EntityAddress AP  WITH(NOLOCK)
ON AP.EntityID = E.EntityID 
AND AP.EntityAddressID = (SELECT TOP 1 EntityAddressID FROM EntityAddress WITH(NOLOCK) WHERE EntityID = E.EntityID AND AddressType like 'Pos%')

left join (
	select 
		lookupid as buscatid
		, value as buscat 
	from lookup  WITH(NOLOCK)
	where class like 'buscat'
) b on e.buscatid = b.buscatid
left join (
	select 
		lookupid as abccategoryid
		, value as abccategory 
	from lookup  WITH(NOLOCK)
	where class like 'abc'
) abc on e.abccatid = abc.abccategoryid
left join (
	select 
		lookupid as AccTypeid
		, value as AccType 
	from lookup WITH(NOLOCK) where class like 'accounttype'
) AccT on e.accounttypeid = AccT.AccTypeid
left join (
	select 
		lookupid as accStatusID
		, value as AccStatus 
	from lookup WITH(NOLOCK) 
	where class like 'accStat'
) ODM on e.AccStatID = ODM.accStatusID
left join( 
	select 
		staffid as SalesConsid
		, ISNULL(FirstName,'') + ' ' + IsNull(Surname,'') As SalesConsultant 
	from staff WITH(NOLOCK)
) SC
on e.salesconsid = SC.SalesConsID

LEFT JOIN (
	SELECT 
		entityID
		, Company as [Holding Company] 
	FROM Entity WITH(NOLOCK)
) HC on e.AlternateCompanyID = HC.Entityid
LEFT JOIN (
	SELECT 
		EntityContactID
		, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Send Accounts To Contact]
		, Email as [Send Accounts To Email] 
	FROM EntityContact WITH(NOLOCK)
) ECAcc ON E.InvoiceTo = ECAcc.EntityContactID
LEFT JOIN (	SELECT 	EntityContactID,EntityID,Cell,ISNULL(firstname,'') + ' ' + ISNULL(surname,'') as [Contact],IsDefault, JobTitle,Email FROM EntityContact WITH(NOLOCK)) EC
	ON EC.EntityID = E.EntityID AND EC.EntityContactID = (SELECT TOP 1 EntityContactID FROM EntityContact WITH(NOLOCK) WHERE EntityID = E.EntityID ORDER BY ISNULL(Isdefault,1), CASE WHEN JobTitle = 'Home Owner' THEN -1 ELSE 0 END)
{where}","0","2017-05-15 10:26:28","1","LRA-FUSION","0","0","fusion"
"39910","cv_timesheet_GB_Dev","","--cv_timesheet_GB_Dev
DECLARE @UseStaff INT
SET @UseStaff = (SELECT TOP 1 ISNULL(Selected,0) FROM CRMSetup WHERE Description = 'Print' AND Variable = 'StaffTimesheets')

SELECT 
	Company,
	CASE WHEN ISNULL([Project No.],'') = '' THEN NULL ELSE [Project No.] END as [Project No.],
	[Project Name],
	ModuleName as [Module Name],
	[Employee Number],
	[Division],
	[Hourly Rate],
	[Developer] As [User],
	CASE WHEN [Hours Rounded] = 0 THEN NULL ELSE [Hours Rounded] END AS [Hours Rounded],
	[Dev Rate(%)] as [Staff Rate(%)],
	[Staff Daily Rate],
	[Actual Hours],
	[Hours Captured],
	[Rate Amount],
	CASE WHEN [Total Cost to Company Rate] = '' THEN NULL ELSE 'R' + [Total Cost to Company Rate] END as [Total Cost to Company Rate],
	CASE WHEN [Total Rate] = '' THEN NULL ELSE 'R' + [Total Rate] END as [Total Rate],
	CASE WHEN [Total Rate Vs Cost to Company] = '' THEN NULL ELSE 'R' + [Total Rate Vs Cost to Company] END as [Total Rate Vs Cost to Company],
	CASE WHEN [Total Cost to Company Billable] = '' THEN NULL ELSE 'R' + [Total Cost to Company Billable] END as [Total Cost to Company Billable],
	CASE WHEN [Total Billable] = '' THEN NULL ELSE 'R' + [Total Billable] END as [Total Billable],
	CASE WHEN [Total Billable VS Total Cost to Company Billable] = '' THEN NULL ELSE 'R' + [Total Billable VS Total Cost to Company Billable] END as [Total Billable VS Total Cost to Company Billable]
FROM (

	SELECT DISTINCT  
		users.userid,	
		e.company as ""Company"",
		CONVERT(VARCHAR, P.ProjectNum) as [Project No.],
		p.projectname as ""Project Name"",
		m.ModuleName,
		S.StaffNum as [Employee Number], 
		L.Value as [Division],
		CONVERT(VARCHAR, CAST(S.CosttoCompany as MONEY),1) as [Hourly Rate],
		CONVERT(VARCHAR,CAST(ISNULL(S.ProvRate,0) as MONEY), 1) as [Staff Daily Rate],
		CASE WHEN @UseStaff = 1 THEN ISNULL(SS.Firstname,'') + ' ' + ISNULL(SS.Surname,'') ELSE ISNULL(users.FirstName,'') + ' ' + ISNULL(users.Surname,'') END as ""Developer"",
		case when SUM(hoursdone) < 1 then 1 else Round(SUM(hoursdone),0)end as ""Hours Rounded"",
		Convert(varchar,Cast(isnull(s.StaffRatePerc,0) as Money),1) as [Dev Rate(%)],	
		Convert(varchar,Cast((isnull(s.StaffRatePerc,0) / 100) * SUM(isnull(hoursdone,0)) as money), 1) as [Actual Hours],	
		SUM(isnull(hoursdone,0)) as ""Hours Captured"",
		Convert(varchar,Cast(AVG(isnull(MR.RateAmount,0)) as Money),1) As [Rate Amount],

		dbo.fnFormatNumber(SUM((isnull(hoursdone,0) * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END))) as ""Total Cost to Company Rate"",
		dbo.fnFormatNumber(SUM((isnull(hoursdone,0) * isnull(MR.RateAmount,0)))) as ""Total Rate"",
		CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN
			dbo.fnFormatNumber(((SUM(isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((SUM(isnull(hoursdone,0))*isnull(s.CosttoCompany,0)))))
		ELSE
			dbo.fnFormatNumber(((SUM(isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((SUM(isnull(hoursdone,0))*isnull(MRR.RateAmount,0))))) 
		END as ""Total Rate Vs Cost to Company"",		
		dbo.fnFormatNumber(SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0) * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END)) as [Total Cost to Company Billable],
		dbo.fnFormatNumber(SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) * SUM(MR.RateAmount)) as [Total Billable],
		dbo.fnFormatNumber(SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) * SUM(MR.RateAmount) - SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)  * 
		CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END)) as [Total Billable VS Total Cost to Company Billable],
		1 as Rank
	FROM timesheet t
	LEFT JOIN Devappointment dappt on dappt.DevApptID = t.DevApptID
	left join projects p on p.projectid = t.projectid 
	left join Modules M ON M.ModuleID = t.moduleid
	left join entity e on e.entityid = p.entityid
	left join entitycontact ec on ec.entitycontactid = p.entitycontactid
	left join modules on modules.moduleid = t.moduleid
	left join users on users.userid = t.developerid
	left join Staff S on S.StaffID = users.StaffID
	LEFT JOIN Staff SS ON SS.StaffID = t.DeveloperID
	LEFT JOIN Lookup L ON L.LookupID = S.DepartmentID	
	LEFT JOIN (
		SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
		WHERE ISNULL(IsCostToCompany,0) = 0
	) MR ON MR.ModuleID = ISNULL(modules.ModuleID,0) and MR.ConsultantID =S.staffID AND p.ProjectID = MR.ProjectID
	LEFT JOIN (
		SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
		WHERE ISNULL(IsCostToCompany,0) = 1
	) MRR ON MRR.ModuleID = ISNULL(modules.ModuleID,0) and MRR.ConsultantID =S.staffID AND p.ProjectID = MRR.ProjectID
	{where}
	GROUP BY Users.UserID, e.Company, p.ProjectNum, p.ProjectName, M.ModuleName, Users.FirstName, users.Surname, SS.Firstname, SS.Surname, s.StaffRatePerc, t.DeveloperID,
		s.CosttoCompany, MRR.RateAmount,S.StaffNum, L.Value, S.ProvRate

	UNION ALL

	SELECT DISTINCT userid,
			Company,
			'',
			'',
			'',
			'', 
			'',
			CONVERT(VARCHAR, CAST(AVG([Hourly Rate]) as MONEY),1) as [Hourly Rate],
			CONVERT(VARCHAR,CAST(AVG([Staff Daily Rate]) as MONEY), 1) as [Staff Daily Rate],
			'',
			CONVERT(VARCHAR,SUM([Hours Rounded]),1),
			CONVERT(VARCHAR,AVG([Dev Rate(%)]),1),
			CONVERT(VARCHAR,SUM([Actual Hours]),1),
			CONVERT(VARCHAR,SUM([Hours Captured]),1),
			CONVERT(VARCHAR,AVG([Rate Amount]),1),
			CONVERT(VARCHAR,CAST(SUM([Total Cost to Company Rate]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Rate]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Rate Vs Cost to Company]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Cost to Company Billable]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Billable]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Billable VS Total Cost to Company Billable]) as MONEY),1),
			Rank 
	FROM (
		SELECT DISTINCT  
			users.userid,	
			'TOTAL' as ""Company"",
			CONVERT(VARCHAR, P.ProjectNum) as [Project No.],
			p.projectname as ""Project Name"",
			m.ModuleName,
			S.StaffNum as [Employee Number], 
			L.Value as [Division],
			S.CosttoCompany as [Hourly Rate],
			CAST(ISNULL(S.ProvRate,0) as MONEY) as [Staff Daily Rate],
			CASE WHEN @UseStaff = 1 THEN ISNULL(SS.Firstname,'') + ' ' + ISNULL(SS.Surname,'') ELSE ISNULL(users.FirstName,'') + ' ' + ISNULL(users.Surname,'') END as ""Developer"",
			case when SUM(hoursdone) < 1 then 1 else Round(SUM(hoursdone),0)end as ""Hours Rounded"",
			Cast(isnull(s.StaffRatePerc,0) as Money) as [Dev Rate(%)],	
			Cast((isnull(s.StaffRatePerc,0) / 100) * SUM(isnull(hoursdone,0)) as money) as [Actual Hours],	
			SUM(isnull(hoursdone,0)) as ""Hours Captured"",
			Cast(AVG(isnull(MR.RateAmount,0)) as Money) As [Rate Amount],
			SUM((isnull(hoursdone,0) * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END)) as ""Total Cost to Company Rate"",
			SUM((isnull(hoursdone,0) * isnull(MR.RateAmount,0))) as ""Total Rate"",
			CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN
				((SUM(isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((SUM(isnull(hoursdone,0))*isnull(s.CosttoCompany,0))))
			ELSE
				((SUM(isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((SUM(isnull(hoursdone,0))*isnull(MRR.RateAmount,0))))
			END as ""Total Rate Vs Cost to Company"",		
			SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0) * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END) as [Total Cost to Company Billable],
			SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) * SUM(MR.RateAmount) as [Total Billable],
			SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) * SUM(MR.RateAmount) - SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)  * 
			CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END) as [Total Billable VS Total Cost to Company Billable],
			2 as Rank
		FROM timesheet t
		LEFT JOIN Devappointment dappt on dappt.DevApptID = t.DevApptID
		left join projects p on p.projectid = t.projectid 
		left join Modules M ON M.ModuleID = t.moduleid
		left join entity e on e.entityid = p.entityid
		left join entitycontact ec on ec.entitycontactid = p.entitycontactid
		left join modules on modules.moduleid = t.moduleid
		left join users on users.userid = t.developerid
		left join Staff S on S.StaffID = users.StaffID
		LEFT JOIN Staff SS ON SS.StaffID = t.DeveloperID	
		LEFT JOIN Lookup L ON L.LookupID = S.DepartmentID
		LEFT JOIN (
			SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
			WHERE ISNULL(IsCostToCompany,0) = 0
		) MR ON MR.ModuleID = ISNULL(modules.ModuleID,0) and MR.ConsultantID =S.staffID AND p.ProjectID = MR.ProjectID
		LEFT JOIN (
			SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
			WHERE ISNULL(IsCostToCompany,0) = 1
		) MRR ON MRR.ModuleID = ISNULL(modules.ModuleID,0) and MRR.ConsultantID =S.staffID AND p.ProjectID = MRR.ProjectID
		{where}
		GROUP BY Users.UserID, e.Company, p.ProjectNum, p.ProjectName, M.ModuleName, Users.FirstName, users.Surname, SS.Firstname, SS.Surname, s.StaffRatePerc, t.DeveloperID,
			s.CosttoCompany, MRR.RateAmount,S.StaffNum, L.Value, S.ProvRate
	) C Group by userid, Company, Rank

	UNION ALL 

	SELECT DISTINCT  
		users.userid,	
		'',
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		3 as Rank
	FROM timesheet t
	LEFT JOIN Devappointment dappt on dappt.DevApptID = t.DevApptID
	left join projects p on p.projectid = t.projectid 
	left join Modules M ON M.ModuleID = t.moduleid
	left join entity e on e.entityid = p.entityid
	left join entitycontact ec on ec.entitycontactid = p.entitycontactid
	left join modules on modules.moduleid = t.moduleid
	left join users on users.userid = t.developerid
	left join Staff S on S.StaffID = users.StaffID
	LEFT JOIN Staff SS ON SS.StaffID = t.DeveloperID	
	LEFT JOIN Lookup L ON L.LookupID = S.DepartmentID
	LEFT JOIN (
		SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
		WHERE ISNULL(IsCostToCompany,0) = 0
	) MR ON MR.ModuleID = ISNULL(modules.ModuleID,0) and MR.ConsultantID =S.staffID AND p.ProjectID = MR.ProjectID
	LEFT JOIN (
		SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
		WHERE ISNULL(IsCostToCompany,0) = 1
	) MRR ON MRR.ModuleID = ISNULL(modules.ModuleID,0) and MRR.ConsultantID =S.staffID AND p.ProjectID = MRR.ProjectID
	{where}
	GROUP BY Users.UserID


	UNION ALL

	SELECT DISTINCT userid,
			Company,
			'',
			'',
			'',
			'', 
			'',
			CONVERT(VARCHAR, CAST(AVG([Hourly Rate]) as MONEY),1) as [Hourly Rate],
			CONVERT(VARCHAR, CAST(AVG([Staff Daily Rate]) as MONEY),1) as [Staff Daily Rate],
			'',
			CONVERT(VARCHAR,SUM([Hours Rounded]),1),
			CONVERT(VARCHAR,AVG([Dev Rate(%)]),1),
			CONVERT(VARCHAR,SUM([Actual Hours]),1),
			CONVERT(VARCHAR,SUM([Hours Captured]),1),
			CONVERT(VARCHAR,AVG([Rate Amount]),1),
			CONVERT(VARCHAR,CAST(SUM([Total Cost to Company Rate]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Rate]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Rate Vs Cost to Company]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Cost to Company Billable]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Billable]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Billable VS Total Cost to Company Billable]) as MONEY),1),
			Rank 
	FROM (
		SELECT DISTINCT  
			999999999 as userid,	
			'TOTAL SHEET DETAILS' as ""Company"",
			CONVERT(VARCHAR, P.ProjectNum) as [Project No.],
			p.projectname as ""Project Name"",
			m.ModuleName,
			S.StaffNum as [Employee Number], 
			L.Value as [Division],
			S.CosttoCompany as [Hourly Rate],
			CAST(ISNULL(S.ProvRate,0) as MONEY) as [Staff Daily Rate],
			CASE WHEN @UseStaff = 1 THEN ISNULL(SS.Firstname,'') + ' ' + ISNULL(SS.Surname,'') ELSE ISNULL(users.FirstName,'') + ' ' + ISNULL(users.Surname,'') END as ""Developer"",
			case when SUM(hoursdone) < 1 then 1 else Round(SUM(hoursdone),0)end as ""Hours Rounded"",
			Cast(isnull(s.StaffRatePerc,0) as Money) as [Dev Rate(%)],	
			Cast((isnull(s.StaffRatePerc,0) / 100) * SUM(isnull(hoursdone,0)) as money) as [Actual Hours],	
			SUM(isnull(hoursdone,0)) as ""Hours Captured"",
			Cast(AVG(isnull(MR.RateAmount,0)) as Money) As [Rate Amount],
			SUM((isnull(hoursdone,0) * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END)) as ""Total Cost to Company Rate"",
			SUM((isnull(hoursdone,0) * isnull(MR.RateAmount,0))) as ""Total Rate"",
			CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN
				((SUM(isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((SUM(isnull(hoursdone,0))*isnull(s.CosttoCompany,0))))
			ELSE
				((SUM(isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((SUM(isnull(hoursdone,0))*isnull(MRR.RateAmount,0))))
			END as ""Total Rate Vs Cost to Company"",		
			SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0) * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END) as [Total Cost to Company Billable],
			SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) * SUM(MR.RateAmount) as [Total Billable],
			SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) * SUM(MR.RateAmount) - SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)  * 
			CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END) as [Total Billable VS Total Cost to Company Billable],
			4 as Rank
		FROM timesheet t
		LEFT JOIN Devappointment dappt on dappt.DevApptID = t.DevApptID
		left join projects p on p.projectid = t.projectid 
		left join Modules M ON M.ModuleID = t.moduleid
		left join entity e on e.entityid = p.entityid
		left join entitycontact ec on ec.entitycontactid = p.entitycontactid
		left join modules on modules.moduleid = t.moduleid
		left join users on users.userid = t.developerid
		left join Staff S on S.StaffID = users.StaffID
		LEFT JOIN Staff SS ON SS.StaffID = t.DeveloperID
		LEFT JOIN Lookup L ON L.LookupID = S.DepartmentID
		LEFT JOIN (
			SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
			WHERE ISNULL(IsCostToCompany,0) = 0
		) MR ON MR.ModuleID = ISNULL(modules.ModuleID,0) and MR.ConsultantID =S.staffID AND p.ProjectID = MR.ProjectID
		LEFT JOIN (
			SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
			WHERE ISNULL(IsCostToCompany,0) = 1
		) MRR ON MRR.ModuleID = ISNULL(modules.ModuleID,0) and MRR.ConsultantID =S.staffID AND p.ProjectID = MRR.ProjectID
		{where}
		GROUP BY Users.UserID, e.Company, p.ProjectNum, p.ProjectName, M.ModuleName, Users.FirstName, users.Surname, SS.Firstname, SS.Surname, s.StaffRatePerc, t.DeveloperID,
			s.CosttoCompany, MRR.RateAmount, S.StaffNum, L.Value, S.ProvRate
	) C Group by userid, Company, Rank

) X
WHERE Company IS NOT NULL AND userid IS NOT NULL
ORDER by Userid,Rank","0","","1","LRA-FUSION","0","0","fusion"
"39911","cv_timesheet_GB_Company","","--cv_timesheet_GB_Company
DECLARE @UseStaff INT
SET @UseStaff = (SELECT TOP 1 ISNULL(Selected,0) FROM CRMSetup WHERE Description = 'Print' AND Variable = 'StaffTimesheets')

SELECT 
	Company,
	CASE WHEN [Project No.] = '' THEN NULL ELSE [Project No.] END as [Project No.],
	[Project Name],
	[Employee Number],
	[Division],
	[Hourly Rate],
	[Developer] AS [User],
	CASE WHEN [Hours Rounded] = 0 THEN NULL ELSE [Hours Rounded] END AS [Hours Rounded],
	[Dev Rate(%)] as [Staff Rate(%)],
	[Staff Daily Rate],
	[Actual Hours],
	[Hours Captured],
	[Rate Amount],
	CASE WHEN [Total Cost to Company Rate] = '' THEN NULL ELSE 'R' + [Total Cost to Company Rate] END as [Total Cost to Company Rate],
	CASE WHEN [Total Rate] = '' THEN NULL ELSE 'R' + [Total Rate] END as [Total Rate],
	CASE WHEN [Total Rate Vs Cost to Company] = '' THEN NULL ELSE 'R' + [Total Rate Vs Cost to Company] END as [Total Rate Vs Cost to Company],
	CASE WHEN [Total Cost to Company Billable] = '' THEN NULL ELSE 'R' + [Total Cost to Company Billable] END as [Total Cost to Company Billable],
	CASE WHEN [Total Billable] = '' THEN NULL ELSE 'R' + [Total Billable] END as [Total Billable],
	CASE WHEN [Total Billable VS Total Cost to Company Billable] = '' THEN NULL ELSE 'R' + [Total Billable VS Total Cost to Company Billable] END as [Total Billable VS Total Cost to Company Billable]
FROM (
	SELECT DISTINCT  
		E.EntityID,	
		e.company as ""Company"",
		P.ProjectNum as [Project No.],
		p.projectname as ""Project Name"",
		m.ModuleName,
		S.StaffNum as [Employee Number], 
		L.Value as [Division],
		CONVERT(VARCHAR, CAST(S.CosttoCompany as MONEY),1) as [Hourly Rate],
		CONVERT(VARCHAR,CAST(ISNULL(S.ProvRate,0) as MONEY), 1) as [Staff Daily Rate],
		CASE WHEN @UseStaff = 1 THEN ISNULL(SS.Firstname,'') + ' ' + ISNULL(SS.Surname,'') ELSE ISNULL(users.FirstName,'') + ' ' + ISNULL(users.Surname,'') END as ""Developer"",
		case when SUM(hoursdone) < 1 then 1 else Round(SUM(hoursdone),0)end as ""Hours Rounded"",
		Convert(varchar,Cast(isnull(s.StaffRatePerc,0) as Money),1) as [Dev Rate(%)],	
		Convert(varchar,Cast((isnull(s.StaffRatePerc,0) / 100) * SUM(isnull(hoursdone,0)) as money), 1) as [Actual Hours],	
		SUM(isnull(hoursdone,0)) as ""Hours Captured"",
		Convert(varchar,Cast(AVG(isnull(MR.RateAmount,0)) as Money),1) As [Rate Amount],

		dbo.fnFormatNumber(SUM((isnull(hoursdone,0) * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END))) as ""Total Cost to Company Rate"",
		dbo.fnFormatNumber(SUM((isnull(hoursdone,0) * isnull(MR.RateAmount,0)))) as ""Total Rate"",
		CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN
			dbo.fnFormatNumber(((SUM(isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((SUM(isnull(hoursdone,0))*isnull(s.CosttoCompany,0)))))
		ELSE
			dbo.fnFormatNumber(((SUM(isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((SUM(isnull(hoursdone,0))*isnull(MRR.RateAmount,0))))) 
		END as ""Total Rate Vs Cost to Company"",		
		dbo.fnFormatNumber(SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0) * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END)) as [Total Cost to Company Billable],
		dbo.fnFormatNumber(SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) * SUM(MR.RateAmount)) as [Total Billable],
		dbo.fnFormatNumber(SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) * SUM(MR.RateAmount) - SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)  * 
		CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END)) as [Total Billable VS Total Cost to Company Billable],
		1 as Rank, E.Company as [Rank2]
	FROM timesheet t
	LEFT JOIN Devappointment dappt on dappt.DevApptID = t.DevApptID
	left join projects p on p.projectid = t.projectid 
	left join Modules M ON M.ModuleID = t.moduleid
	left join entity e on e.entityid = p.entityid
	left join entitycontact ec on ec.entitycontactid = p.entitycontactid
	left join modules on modules.moduleid = t.moduleid
	left join users on users.userid = t.developerid
	left join Staff S on S.StaffID = users.StaffID
	LEFT JOIN Staff SS ON SS.StaffID = t.DeveloperID
	LEFT JOIN Lookup L ON L.LookupID = S.DepartmentID	
	LEFT JOIN (
		SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
		WHERE ISNULL(IsCostToCompany,0) = 0
	) MR ON MR.ModuleID = ISNULL(modules.ModuleID,0) and MR.ConsultantID =S.staffID AND p.ProjectID = MR.ProjectID
	LEFT JOIN (
		SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
		WHERE ISNULL(IsCostToCompany,0) = 1
	) MRR ON MRR.ModuleID = ISNULL(modules.ModuleID,0) and MRR.ConsultantID =S.staffID AND p.ProjectID = MRR.ProjectID
	{where}
	GROUP BY e.EntityID, e.Company, p.ProjectNum, p.ProjectName, M.ModuleName, Users.FirstName, users.Surname, SS.Firstname, SS.Surname, s.StaffRatePerc, t.DeveloperID,
		s.CosttoCompany, MRR.RateAmount,S.StaffNum, L.Value, S.ProvRate
	
	UNION ALL
	
	SELECT DISTINCT 
			EntityID,
			Company,
			'' as [ProjectNo],
			'' as [ProjectName],
			'' as Modulename,
			'' as StaffNum,
			'' as Division,			
			CONVERT(VARCHAR, CAST(AVG([Hourly Rate]) as MONEY),1) as [Hourly Rate],
			CONVERT(VARCHAR,CAST(AVG([Staff Daily Rate]) as MONEY), 1) as [Staff Daily Rate],
			'' as Dev,
			CONVERT(VARCHAR,SUM([Hours Rounded]),1),
			CONVERT(VARCHAR,AVG([Dev Rate(%)]),1),
			CONVERT(VARCHAR,SUM([Actual Hours]),1),
			CONVERT(VARCHAR,SUM([Hours Captured]),1),
			CONVERT(VARCHAR,AVG([Rate Amount]),1),
			CONVERT(VARCHAR,CAST(SUM([Total Cost to Company Rate]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Rate]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Rate Vs Cost to Company]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Cost to Company Billable]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Billable]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Billable VS Total Cost to Company Billable]) as MONEY),1),
			Rank, [Rank2] 
	FROM (
		SELECT DISTINCT  
			E.EntityID,	
			'TOTAL' as ""Company"",
			P.ProjectNum as [Project No.],
			p.projectname as ""Project Name"",
			m.ModuleName,
			S.StaffNum as [Employee Number], 
			L.Value as [Division],
			S.CosttoCompany as [Hourly Rate],
			CAST(ISNULL(S.ProvRate,0) as MONEY) as [Staff Daily Rate],
			CASE WHEN @UseStaff = 1 THEN ISNULL(SS.Firstname,'') + ' ' + ISNULL(SS.Surname,'') ELSE ISNULL(users.FirstName,'') + ' ' + ISNULL(users.Surname,'') END as ""Developer"",
			case when SUM(hoursdone) < 1 then 1 else Round(SUM(hoursdone),0)end as ""Hours Rounded"",
			Cast(isnull(s.StaffRatePerc,0) as Money) as [Dev Rate(%)],	
			Cast((isnull(s.StaffRatePerc,0) / 100) * SUM(isnull(hoursdone,0)) as money) as [Actual Hours],	
			SUM(isnull(hoursdone,0)) as ""Hours Captured"",
			Cast(AVG(isnull(MR.RateAmount,0)) as Money) As [Rate Amount],

			SUM((isnull(hoursdone,0) * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END)) as ""Total Cost to Company Rate"",
			SUM((isnull(hoursdone,0) * isnull(MR.RateAmount,0))) as ""Total Rate"",
			CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN
				((SUM(isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((SUM(isnull(hoursdone,0))*isnull(s.CosttoCompany,0))))
			ELSE
				((SUM(isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((SUM(isnull(hoursdone,0))*isnull(MRR.RateAmount,0))))
			END as ""Total Rate Vs Cost to Company"",		
			SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0) * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END) as [Total Cost to Company Billable],
			SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) * SUM(MR.RateAmount) as [Total Billable],
			SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) * SUM(MR.RateAmount) - SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)  * 
			CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END) as [Total Billable VS Total Cost to Company Billable],
			2 as Rank, E.Company as [Rank2]
		FROM timesheet t
		LEFT JOIN Devappointment dappt on dappt.DevApptID = t.DevApptID
		left join projects p on p.projectid = t.projectid 
		left join Modules M ON M.ModuleID = t.moduleid
		left join entity e on e.entityid = p.entityid
		left join entitycontact ec on ec.entitycontactid = p.entitycontactid
		left join modules on modules.moduleid = t.moduleid
		left join users on users.userid = t.developerid
		left join Staff S on S.StaffID = users.StaffID
		LEFT JOIN Staff SS ON SS.StaffID = t.DeveloperID	
		LEFT JOIN Lookup L ON L.LookupID = S.DepartmentID
		LEFT JOIN (
			SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
			WHERE ISNULL(IsCostToCompany,0) = 0
		) MR ON MR.ModuleID = ISNULL(modules.ModuleID,0) and MR.ConsultantID =S.staffID AND p.ProjectID = MR.ProjectID
		LEFT JOIN (
			SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
			WHERE ISNULL(IsCostToCompany,0) = 1
		) MRR ON MRR.ModuleID = ISNULL(modules.ModuleID,0) and MRR.ConsultantID =S.staffID AND p.ProjectID = MRR.ProjectID
		{where}
		GROUP BY e.EntityID, e.Company, p.ProjectNum, p.ProjectName, M.ModuleName, Users.FirstName, users.Surname, SS.Firstname, SS.Surname, s.StaffRatePerc, t.DeveloperID,
			s.CosttoCompany, MRR.RateAmount,S.StaffNum, L.Value, S.ProvRate
	) C Group by EntityID,Company,Rank,Rank2
	
	UNION ALL 
	
	SELECT DISTINCT  
		E.EntityID,	
		'' as Comapny,
		NULL as Projectno,
		NULL as projectname,
		NULL as Modulename,
		NULL as EmpNo,
		NULL as Div,
		NULL as HourlyRate,
		NULL,
		NULL as Developer,
		NULL as HoursRound,
		NULL as DevRate,
		NULL as ActHours,
		NULL as HoursCap,
		NULL as [RateAmount],
		NULL as [CostComprate],
		NULL as [TotalRate],
		NULL as RateVsCostComp,
		NULL as CostBill,
		NULL as TotBill,
		NULL as [TotBillVSCostBill],
		3 as Rank, E.Company as [Rank2]
	FROM timesheet t
	LEFT JOIN Devappointment dappt on dappt.DevApptID = t.DevApptID
	left join projects p on p.projectid = t.projectid 
	left join Modules M ON M.ModuleID = t.moduleid
	left join entity e on e.entityid = p.entityid
	left join entitycontact ec on ec.entitycontactid = p.entitycontactid
	left join modules on modules.moduleid = t.moduleid
	left join users on users.userid = t.developerid
	left join Staff S on S.StaffID = users.StaffID
	LEFT JOIN Staff SS ON SS.StaffID = t.DeveloperID	
	LEFT JOIN Lookup L ON L.LookupID = S.DepartmentID
	LEFT JOIN (
		SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
		WHERE ISNULL(IsCostToCompany,0) = 0
	) MR ON MR.ModuleID = ISNULL(modules.ModuleID,0) and MR.ConsultantID =S.staffID AND p.ProjectID = MR.ProjectID
	LEFT JOIN (
		SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
		WHERE ISNULL(IsCostToCompany,0) = 1
	) MRR ON MRR.ModuleID = ISNULL(modules.ModuleID,0) and MRR.ConsultantID =S.staffID AND p.ProjectID = MRR.ProjectID
	{where}
	GROUP BY e.EntityID, e.Company, p.ProjectNum, p.ProjectName, M.ModuleName, Users.FirstName, users.Surname, SS.Firstname, SS.Surname, s.StaffRatePerc, t.DeveloperID,
		s.CosttoCompany, MRR.RateAmount,S.StaffNum, L.Value
	
	
	UNION ALL
	
	SELECT DISTINCT 
			EntityID,
			Company,
			'' as ProjectNo,
			'' as ProjectName,
			'' as ModuleName,
			'' as EmpNo,
			'' as Division,
			CONVERT(VARCHAR, CAST(AVG([Hourly Rate]) as MONEY),1) as [Hourly Rate],
			CONVERT(VARCHAR, CAST(AVG([Staff Daily Rate]) as MONEY),1) as [Staff Daily Rate],
			'' as Dev,
			CONVERT(VARCHAR,SUM([Hours Rounded]),1),
			CONVERT(VARCHAR,AVG([Dev Rate(%)]),1),
			CONVERT(VARCHAR,SUM([Actual Hours]),1),
			CONVERT(VARCHAR,SUM([Hours Captured]),1),
			CONVERT(VARCHAR,AVG([Rate Amount]),1),
			CONVERT(VARCHAR,CAST(SUM([Total Cost to Company Rate]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Rate]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Rate Vs Cost to Company]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Cost to Company Billable]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Billable]) as MONEY),1),
			CONVERT(VARCHAR,CAST(SUM([Total Billable VS Total Cost to Company Billable]) as MONEY),1),
			Rank, [Rank2] 
	FROM (
		SELECT DISTINCT  
			9999999999 as EntityID,	
			'TOTAL SHEET DETAILS' as ""Company"",
			P.ProjectNum as [Project No.],
			p.projectname as ""Project Name"",
			m.ModuleName,
			S.StaffNum as [Employee Number], 
			L.Value as [Division],
			S.CosttoCompany as [Hourly Rate],
			CAST(ISNULL(S.ProvRate,0) as MONEY) as [Staff Daily Rate],
			CASE WHEN @UseStaff = 1 THEN ISNULL(SS.Firstname,'') + ' ' + ISNULL(SS.Surname,'') ELSE ISNULL(users.FirstName,'') + ' ' + ISNULL(users.Surname,'') END as ""Developer"",
			case when SUM(hoursdone) < 1 then 1 else Round(SUM(hoursdone),0)end as ""Hours Rounded"",
			Cast(isnull(s.StaffRatePerc,0) as Money) as [Dev Rate(%)],	
			Cast((isnull(s.StaffRatePerc,0) / 100) * SUM(isnull(hoursdone,0)) as money) as [Actual Hours],	
			SUM(isnull(hoursdone,0)) as ""Hours Captured"",
			Cast(AVG(isnull(MR.RateAmount,0)) as Money) As [Rate Amount],

			SUM((isnull(hoursdone,0) * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END)) as ""Total Cost to Company Rate"",
			SUM((isnull(hoursdone,0) * isnull(MR.RateAmount,0))) as ""Total Rate"",
			CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN
				((SUM(isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((SUM(isnull(hoursdone,0))*isnull(s.CosttoCompany,0))))
			ELSE
				((SUM(isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((SUM(isnull(hoursdone,0))*isnull(MRR.RateAmount,0))))
			END as ""Total Rate Vs Cost to Company"",		
			SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0) * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END) as [Total Cost to Company Billable],
			SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) * SUM(MR.RateAmount) as [Total Billable],
			SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) * SUM(MR.RateAmount) - SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)  * 
			CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END) as [Total Billable VS Total Cost to Company Billable],
			2 as Rank, 'ZZZZZZZZZZZZZZZZZZZ' as [Rank2]
		FROM timesheet t
		LEFT JOIN Devappointment dappt on dappt.DevApptID = t.DevApptID
		left join projects p on p.projectid = t.projectid 
		left join Modules M ON M.ModuleID = t.moduleid
		left join entity e on e.entityid = p.entityid
		left join entitycontact ec on ec.entitycontactid = p.entitycontactid
		left join modules on modules.moduleid = t.moduleid
		left join users on users.userid = t.developerid
		left join Staff S on S.StaffID = users.StaffID
		LEFT JOIN Staff SS ON SS.StaffID = t.DeveloperID	
		LEFT JOIN Lookup L ON L.LookupID = S.DepartmentID
		LEFT JOIN (
			SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
			WHERE ISNULL(IsCostToCompany,0) = 0
		) MR ON MR.ModuleID = ISNULL(modules.ModuleID,0) and MR.ConsultantID =S.staffID AND p.ProjectID = MR.ProjectID
		LEFT JOIN (
			SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
			WHERE ISNULL(IsCostToCompany,0) = 1
		) MRR ON MRR.ModuleID = ISNULL(modules.ModuleID,0) and MRR.ConsultantID =S.staffID AND p.ProjectID = MRR.ProjectID
		{where}
		GROUP BY e.EntityID, e.Company, p.ProjectNum, p.ProjectName, M.ModuleName, Users.FirstName, users.Surname, SS.Firstname, SS.Surname, s.StaffRatePerc, t.DeveloperID,
			s.CosttoCompany, MRR.RateAmount,S.StaffNum, L.Value, S.ProvRate
	) C Group by EntityID,Company,Rank,Rank2

) X
WHERE Company IS NOT NULL AND entityID IS NOT NULL
ORDER by Rank2,Rank","0","","1","LRA-FUSION","0","0","fusion"
"39912","cv_Timesheet_Export--Old","","SELECT [Company],[Project Name],[Module Name],[Timeheet Date],[Developer],[Hours Captured],[Project Status] FROM (
select 
e.company as ""Company"",
p.projectname as ""Project Name"", 
modules.modulename as ""Module Name"",
convert(varchar,timesheetdate,111) as ""Timeheet Date"", 
users.username as ""Developer"",
hoursdone as ""Hours Captured"",
projectstatus as ""Project Status"",
1 AS Rank
from timesheet t
left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
{where}

UNION ALL

select DISTINCT
'Total' as ""Company"",
NULL as ""Project Name"", 
NULL as ""Module Name"",
NULL as ""Timeheet Date"", 
NULL as ""Developer"",
SUM(hoursdone) as ""Hours Captured"",
NULL as ""Project Status"",
2 AS Rank
from timesheet t
left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
{where}

) X Order BY Rank, [Timeheet Date]","0","","1","LRA-FUSION","0","0","fusion"
"39913","cv_Project_Expenses","","select convert(varchar,AccExpenseClaimID) + '#' + convert(varchar,accExpenseID),AccExpenseClaimID as [Expense ID],[Incurred By],
Convert(varchar, DateIncurred, 103) as [Date Incurred],
Convert(varchar, AEC.DateCreated, 103) as [Date Created],
convert(varchar,Datepaid,103) as [Date Paid],
StockCode as [Code],StockDescription as [Desc],
convert(Varchar,cast(priceex as money),1) as [Price Ex. VAT],  
convert(Varchar,cast(totalex as money),1) as [Total Ex. VAT], 
convert(Varchar,cast(TotalInc as money),1) as [Total Incl. VAT]
FROM AccExpenses AE
LEFT JOIN (SELECT EntityID, Company From Entity) E
ON AE.EntityID = E.Entityid
LEFT JOin (SELECT ProjectID, ProjectName FROM Projects) IJ
ON AE.ProjectID = IJ.ProjectID
LEFT JOIN (SELECT StockID, StockDescription,StockCode FROM AccStock) STK
ON AE.StockID = Stk.StockID
LEFT JOIN ACCExpenseClaim AEC 
ON AEC.AccExpenseClaimID = AE.ExpenseClaimID
LEFT JOIN (SELECT StaffID, Firstname + ' ' + Surname as [Incurred By] FROM Staff) s
ON AEC.IncurredBy = S.Staffid
LEFT JOIN (SELECT StaffID, Firstname + ' ' + Surname as [For Attention Of] FROM Staff) s2
ON AEC.AttentionOf = S2.Staffid
where ae.projectid = {pid}
ORDER BY DateIncurred","0","","1","LRA-FUSION","0","0","fusion"
"39914","cv_acc_debtorsControl_man","","
DECLARE @Date as Datetime
DECLARE @IsSupplier as bit
Set @Date = '{date}'
Set @IsSupplier = 0

SELECT B.Entityid + '#' + ISNULL(Currency, 'R'),Account,Company as [Client],[AccContact] as [Contact],E.Switchboard as [Phone], E.Email,ll.value as [Account Status], Currency, 
     convert(varchar,cast(Sum(isnull([Current],0)) as money),1) as [Current], 
     convert(varchar,cast(sum(isnull([30days],0)) as money),1) as [30 Days], 
     convert(varchar,cast(Sum(isnull([60days],0)) as money),1) as [60 Days], 
     convert(varchar,cast(sum(isnull([90days],0)) as money),1) as [90 Days], 
     convert(varchar,cast(sum(isnull([120days],0)) as money),1) as [120+ Days], 
     convert(varchar,cast(Sum(isnull([Current],0)) + sum(isnull([30days],0)) + Sum(isnull([60days],0)) + sum(isnull([90days],0)) + sum(isnull([120days],0)) as money),1) as [Outstanding Balance]

FROM (
		SELECT Entityid, DivisionID, Currency,EntityCategoryID,SalesConsID, 
		Case When DateCompleted >= dateadd(d,-30,@Date)  then Totalincl End as [Current],
		Case When DateCompleted Between dateadd(d,-60,@Date) And dateadd(d,-30,@Date) then Totalincl End as [30Days], 
		Case When DateCompleted Between dateadd(d,-90,@Date) And dateadd(d,-60,@Date) then Totalincl End as [60Days], 
		Case When DateCompleted Between dateadd(d,-120,@Date) And dateadd(d,-90,@Date) then Totalincl End as [90Days],
		Case When DateCompleted < dateadd(d,-120,@Date) then Totalincl  End as [120Days] 	
		FROM (
			--Invoices
			SELECT DM.DocID, DM.DocType, Case when isnull(DM.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(EH.EntityID,DM.Entityid)) As [EntityID] , 
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], TotalIncl / isnull(DM.ROE,1) as [TotalIncl], 
			DateCompleted,DivisionID,ROE,Currency,
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID], isnull(EH.SalesConsID,E.SalesConsID) as [SalesConsID]
			FROM DEBTOR_MASTER DM
			LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by docid) DD
			ON DM.DocID = DD.DocID
			LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID, AlternateCompanyID FROM Entity) E
			ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT Entityid, Accountnum, Company	,EntityCategoryID,SalesConsID FROM Entity) EH
			ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
			ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
			LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
			ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
			WHERE DocType in ('Invoice','Supplier Invoice') And DocStatus = 'Completed' 
			AND DM.DateCompleted <@Date 
			AND DM.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01')

			UNION ALL

			--Inter-Account Transfers
			SELECT LAM.DocID, CASE WHEN isnull(LAM.IsInterAccountTransfer,0) = 1 THEN 'Inter-Account Transfer' WHEN isnull(LAM.IsInterLedgerTransfer,0) = 1 THEN 'Inter-Ledger Transfer' END as [Doc. Type],
			'EN' + Convert(varchar,isnull(EH.EntityID,LAD.EntityID)),
			isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) as [Account], isnull(EH.Company,E.Company),
			(isnull(Debit,0) - isnull(Credit,0)) / isnull(LAM.ROE,1),LAD.AdjustDate, LAD.DivisionID,isnull(LAM.ROE,1) as [ROE], 
			isnull(LAM.Currency,'') as [Currency],
			isnull(EH.EntityCategoryID,E.EntityCategoryID),isnull(EH.SalesConsID,E.SalesConsID)
			FROM LEDGER_ADJUST_MASTER LAM
			LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD 
			ON LAM.DocID= LAD.DocID
			LEFT JOIN (SELECT EntityID,AccountNum, Company, IsSupplier, EntityCategoryID, SalesConsID,AlternateCompanyID FROM Entity) E
			ON LAD.EntityID = E.EntityID
			LEFT JOIN (SELECT EntityID,AccountNum, Company, IsSupplier, EntityCategoryID, SalesConsID FROM Entity) EH
			ON E.AlternateCompanyID = EH.EntityID
			WHERE isnull(LAD.EntityID,0) <> 0
			AND isnull(E.IsSupplier,0)  = 0
			AND isnull(LAM.IsComplete,0) = 1
			AND LAD.AdjustDate <@Date 

			Union all
        
			--Allocated Credit Notes
			SELECT DM.DocID, DM.DocType, Case when isnull(DM.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(E.AlternateCompanyID,DM.Entityid)) As [EntityID] , 
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
			(-1) *  (TotalIncl / isnull(DM.ROE,1)) as [TotalIncl], 
			Case WHEN PrevCompleted is null then DM.DateCompleted Else PrevCompleted END as [DateCompleted],DivisionID,
			DM.ROE,DM.Currency, 
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID],isnull(EH.SalesConsID,E.SalesConsID)
			FROM DEBTOR_MASTER DM
			LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 group by docid) DD
			ON DM.DocID = DD.DocID
			LEFT JOIN (SELECT DocID, DateCompleted as [PrevCompleted] FROM DEBTOR_MASTER ) DM2
			ON DM.PreviousDocid = Dm2.DocID
			LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
			ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID FROM Entity) EH
			ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
			ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
			LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
			ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
			WHERE DocType in ('Credit Note', 'Supplier Credit Note') And DocStatus = 'Completed' and isnull(DM.Previousdocid,0) <> 0
			And DM.DateCompleted <@date 
			AND DM.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01')

			UNION ALL 

			--Un-Allocated Credit Notes
			SELECT DM.DocID, DM.DocType, Case when isnull(DM.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(E.AlternateCompanyID,DM.Entityid)) As [EntityID] , 
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
			(-1) * (TotalIncl / isnull(DM.ROE,1)) as [TotalIncl],
			Case WHEN PrevCompleted is null then DM.DateCompleted Else PrevCompleted END as [DateCompleted],DivisionID,
			DM.ROE,DM.Currency,
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID], isnull(EH.SalesConsID,E.SalesConsID)
			FROM DEBTOR_MASTER DM
			LEFT JOIN (SELECT DocID,Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM DEBTOR_DETAIL where isnull(ComponentOfLineID,0) = 0 group by docid) DD
			ON DM.DocID = DD.DocID
			LEFT JOIN (SELECT DocID, DateCompleted as [PrevCompleted] FROM DEBTOR_MASTER ) DM2
			ON DM.PreviousDocid = Dm2.DocID
			LEFT JOIN (SELECT Entityid, Accountnum,Company,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
			ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT Entityid, Accountnum,Company,EntityCategoryID,SalesConsID FROM Entity) EH
			ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
			ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
			LEFT JOIN (SELECT PaymentDocID, sum(PaymentPortion) as [Allocated] FROM DEBTOR_PAYMENT group by PaymentDocID) DP
			ON DM.DocID = DP.PaymentDocID 
			LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
			ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
			WHERE DocType in ('Credit Note','Supplier Credit Note') And DocStatus = 'Completed' and isnull(DM.Previousdocid,0) = 0
			and DM.DateCompleted < @Date  
			AND DM.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01')        

			Union all

			--Payments
			SELECT DM.PaymentDocID, 'Payment Receipt', Case when isnull(DM3.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(E.AlternateCompanyID,DM.Entityid)) As [EntityID] , 
			Case when isnull(DM3.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
			Case when isnull(DM3.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
			(-1) * (isnull(PaymentPortion,0) + isnull(SettlementDiscount,0) /*/ isnull(DM3.ROE,1)*/ ) as [TotalIncl], 
			Case WHEN PrevCompleted is null then DM3.DateCompleted Else PrevCompleted END as [DateCompleted], DM3.DivisionID,
			DM3.ROE,DM3.Currency,
			Case when isnull(DM3.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID],
			isnull(EH.SalesConsID,E.SalesConsID)
			FROM DEBTOR_PAYMENT DM
			LEFT JOIN (SELECT DocID, DateCompleted as [PrevCompleted],DivisionID FROM DEBTOR_MASTER ) DM2
			ON DM.InvoiceDocID = Dm2.DocID
			LEFT JOIN (SELECT DocID, DateCompleted,DocType,EntityID,UseEC,DivisionID,ROE,Currency,Period FROM DEBTOR_MASTER) DM3
			ON DM.PaymentDocID = DM3.DocID
			LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
			ON DM3.EntityID = E.EntityID AND isnull(DM3.UseEC,0) = 0
			LEFT JOIN (SELECT Entityid, Accountnum,Company,EntityCategoryID,SalesConsID FROM Entity) EH
			ON E.AlternateCompanyID = EH.EntityID AND isnull(DM3.UseEC,0) = 0
			LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
			ON DM3.EntityID = EC.EntityContactID AND isnull(DM3.UseEC,0) = 1
			LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
			ON DM3.Entityid = AOB.EntityID AND isnull(DM3.UseEC,0) = isnull(AOB.UseEC,0) AND DM3.DivisionID = AOB.DivID
			where InvoiceDocID <> -1 and dm3.doctype in ('Payment Receipt', 'Supplier Payment')
			and dm3.datecompleted < @date  
			AND DM3.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01') 

			Union all


			-- 120 Day OB Payments
			SELECT  OB.EntityID, 'Payment Receipt',
			'EN' + CONVERT(Varchar,isnull(E.AlternateCompanyID,OB.EntityID)) as [ID],isnull(E.AccountNum,E.EntityID)  as [Account],E.Company,
			-CASE when isnull(-1 * Amt120,0) <= isnull(Paid,0) THEN  isnull(-1 * Amt120,0) 
			ELSE	
				CASE WHEN isnull(-1 * Amt120,0) > isnull(Paid,0) AND isnull(Paid,0) > 0 THEN isnull(Paid,0) END
			END as [TotalIncl],
			dateadd(d,-120,datecreated) as [DateCompleted], OB.DivisionID , OB.ROE, OB.Currency,E.EntityCategoryID,E.SalesconsID
			FROM AccOPENINGBALANCE OB
			LEFT JOIN (SELECT EntityID, SUM(PaymentPortion) as [Paid] FROM DEBTOR_PAYMENT DPi
					LEFT JOIN (SELECT DocID, DateCompleted, Period FROM DEBTOR_MASTER) DMi
					ON DPi.PaymentDocID = DMi.DocID
					where InvoiceDocID = -1 AND DMi.DateCompleted < @Date    Group by Entityid) DP
			ON OB.Entityid = DP.EntityID
			LEFT JOIN (SELECT EntityID, Company, Accountnum, IsSupplier,EntityCategoryID,SalesconsID,AlternateCompanyID  FROM Entity) E
			ON OB.Entityid  = E.EntityID
			WHERE isnull(Paid,0) > 0 AND ISNULL(E.IsSupplier,0) = @IsSupplier AND dateadd(d,-120,datecreated) < @Date

			UNION ALL

			-- 90 Day OB Payments
			SELECT  OB.EntityID, 'Payment Receipt',
			'EN' + CONVERT(Varchar,isnull(E.AlternateCompanyID,OB.EntityID)) as [ID],isnull(E.AccountNum,E.EntityID) as [Account],E.Company,
			-CASE when isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) <= isnull(Paid,0) THEN  isnull(-1 * Amt90,0) 
			ELSE CASE WHEN isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0)  > isnull(Paid,0) AND isnull(Paid,0) > isnull(-1 * Amt120,0) THEN isnull(Paid,0) - isnull(-1 * Amt120,0) END
			END as [TotalIncl],
			dateadd(d,-90,datecreated) as [DateCompleted], OB.DivisionID , OB.ROE, OB.Currency,E.EntityCategoryID,E.SalesconsID
			FROM AccOPENINGBALANCE OB
			LEFT JOIN (SELECT EntityID, SUM(PaymentPortion) as [Paid] FROM DEBTOR_PAYMENT DPi
					LEFT JOIN (SELECT DocID, DateCompleted, Period FROM DEBTOR_MASTER) DMi
					ON DPi.PaymentDocID = DMi.DocID
					where InvoiceDocID = -1 AND DMi.DateCompleted < @Date  Group by Entityid) DP
			ON OB.Entityid = DP.EntityID
			LEFT JOIN (SELECT EntityID, Company, Accountnum, IsSupplier,EntityCategoryID,SalesconsID,AlternateCompanyID  FROM Entity) E
			ON OB.Entityid  = E.EntityID
			WHERE isnull(Paid,0) > 0 AND ISNULL(E.IsSupplier,0) = @IsSupplier AND dateadd(d,-90,datecreated) < @Date

			UNION ALL

			-- 60 Day OB Payments
			SELECT  OB.EntityID, 'Payment Receipt',
			'EN' + CONVERT(Varchar,isnull(E.AlternateCompanyID,OB.EntityID)) as [ID],isnull(E.AccountNum,E.EntityID) as [Account],E.Company,
			-CASE when isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) <= isnull(Paid,0) THEN  isnull(-1 * Amt60,0) 
			ELSE CASE WHEN isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) > isnull(Paid,0) AND isnull(Paid,0) > isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) THEN isnull(Paid,0) - isnull(-1 * Amt120,0)  - isnull(-1 * Amt90,0) END
			END as [TotalIncl],
			dateadd(d,-60,datecreated) as [DateCompleted], OB.DivisionID , OB.ROE, OB.Currency,E.EntityCategoryID,E.SalesconsID
			FROM AccOPENINGBALANCE OB
			LEFT JOIN (SELECT EntityID, SUM(PaymentPortion) as [Paid] FROM DEBTOR_PAYMENT DPi
					LEFT JOIN (SELECT DocID, DateCompleted, Period FROM DEBTOR_MASTER) DMi
					ON DPi.PaymentDocID = DMi.DocID
					where InvoiceDocID = -1 AND DMi.DateCompleted < @Date  Group by Entityid) DP
			ON OB.Entityid = DP.EntityID
			LEFT JOIN (SELECT EntityID, Company, Accountnum, IsSupplier,EntityCategoryID,SalesconsID,AlternateCompanyID  FROM Entity) E
			ON OB.Entityid  = E.EntityID
			WHERE isnull(Paid,0) > 0 AND ISNULL(E.IsSupplier,0) = @IsSupplier AND dateadd(d,-60,datecreated) < @Date

			UNION ALL

			-- 30 Day OB Payments
			SELECT  OB.EntityID, 'Payment Receipt',
			'EN' + CONVERT(Varchar,isnull(E.AlternateCompanyID,OB.EntityID)) as [ID],isnull(E.AccountNum,E.EntityID) as [Account],E.Company,
			-CASE when isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) + isnull(-1 * Amt30,0) <= isnull(Paid,0) THEN  isnull(-1 * Amt30,0) 
			ELSE CASE WHEN isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) + isnull(-1 * Amt30,0) > isnull(Paid,0) AND isnull(Paid,0) > isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) THEN isnull(Paid,0) - isnull(-1 * Amt120,0)  - isnull(-1 * Amt90,0) - isnull(-1 * Amt60,0) END
			END as [TotalIncl],
			dateadd(d,-30,datecreated) as [DateCompleted], OB.DivisionID , OB.ROE, OB.Currency,E.EntityCategoryID,E.SalesconsID
			FROM AccOPENINGBALANCE OB
			LEFT JOIN (SELECT EntityID, SUM(PaymentPortion) as [Paid] FROM DEBTOR_PAYMENT DPi
					LEFT JOIN (SELECT DocID, DateCompleted, Period FROM DEBTOR_MASTER) DMi
					ON DPi.PaymentDocID = DMi.DocID
					where InvoiceDocID = -1 AND DMi.DateCompleted < @Date Group by Entityid) DP
			ON OB.Entityid = DP.EntityID
			LEFT JOIN (SELECT EntityID, Company, Accountnum, IsSupplier,EntityCategoryID,SalesconsID,AlternateCompanyID  FROM Entity) E
			ON OB.Entityid  = E.EntityID
			WHERE isnull(Paid,0) > 0 AND ISNULL(E.IsSupplier,0) = @IsSupplier AND dateadd(d,-30,datecreated) < @Date

			UNION ALL

			-- Current OB Payments
			SELECT  OB.EntityID, 'Payment Receipt',
			'EN' + CONVERT(Varchar,isnull(E.AlternateCompanyID,OB.EntityID)) as [ID],isnull(E.AccountNum,E.EntityID) as [Account],E.Company,
			-CASE when isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) + isnull(-1 * Amt30,0) + isnull(-1 * AmtCurrent,0) <= isnull(Paid,0) THEN  isnull(Paid,0) - isnull(-1 * Amt120,0)  - isnull(-1 * Amt90,0) - isnull(-1 * Amt60,0) - isnull(-1 * Amt30,0)
			ELSE CASE WHEN isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0) + isnull(-1 * Amt30,0) + isnull(-1 * AmtCurrent,0) > isnull(Paid,0) AND isnull(Paid,0) > isnull(-1 * Amt120,0) + isnull(-1 * Amt90,0) + isnull(-1 * Amt60,0)  + isnull(-1 * Amt30,0) THEN isnull(Paid,0) - isnull(-1 * Amt120,0)  - isnull(-1 * Amt90,0) - isnull(-1 * Amt60,0) - isnull(-1 * Amt30,0) END
			END as [TotalIncl],
			dateadd(d,-0,datecreated) as [DateCompleted], OB.DivisionID , OB.ROE, OB.Currency,E.EntityCategoryID,E.SalesconsID
			FROM AccOPENINGBALANCE OB
			LEFT JOIN (SELECT EntityID, SUM(PaymentPortion) as [Paid] FROM DEBTOR_PAYMENT DPi
					LEFT JOIN (SELECT DocID, DateCompleted, Period FROM DEBTOR_MASTER) DMi
					ON DPi.PaymentDocID = DMi.DocID
					where InvoiceDocID = -1 AND DMi.DateCompleted < @Date  Group by Entityid) DP
			ON OB.Entityid = DP.EntityID
			LEFT JOIN (SELECT EntityID, Company, Accountnum, IsSupplier,EntityCategoryID,SalesconsID,AlternateCompanyID  FROM Entity) E
			ON OB.Entityid  = E.EntityID
			WHERE isnull(Paid,0) <> 0 AND ISNULL(E.IsSupplier,0) = @IsSupplier AND dateadd(d,-0,datecreated) < @Date
	
			UNION ALL
			
			--Opening balances 
			SELECT  OB.EntityID, 'Opening Balance',
			CASE isnull(DM.UseEC,0) when 0 then 'EN' when 1 then 'EC' END + Convert(varchar,isnull(E.AlternateCompanyID,DM.EntityID)) as [ID],
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
			OB.TotalIncl,
			OB.[DateCompleted],DM.DivisionID as [DivisionID],
				1 as [ROE],DM.Currency,
			Case when isnull(DM.UseEC,0) = 0 THEN isnull(E.EntityCategoryID,EH.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID],
			isnull(EH.SalesConsID, E.SalesConsID)
			FROM AccOpeningBalance DM
			LEFT JOIN (SELECT Entityid, Accountnum, Company,IsSupplier,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
			ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT Entityid, Accountnum,Company,IsSupplier,EntityCategoryID,SalesConsID FROM Entity) EH
			ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
			LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
			ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
			LEFT JOIN (	SELECT Entityid, useec, - isnull(amtcurrent,0) as [TotalIncl], dateadd(d,0,datecreated) as [DateCompleted] FROM AccOpeningBalance
					UNION ALL
					SELECT Entityid, useec, - isnull(amt30,0) as [TotalIncl], dateadd(d,-30,datecreated) as [DateCompleted] FROM AccOpeningBalance
					UNION ALL
					SELECT Entityid, useec, - isnull(amt60,0) as [TotalIncl], dateadd(d,-60,datecreated) as [DateCompleted] FROM AccOpeningBalance
					UNION ALL
					SELECT Entityid, useec, - isnull(amt90,0) as [TotalIncl], dateadd(d,-90,datecreated) as [DateCompleted] FROM AccOpeningBalance
					UNION ALL
					SELECT Entityid, useec, - isnull(amt120,0) as [TotalIncl], dateadd(d,-120,datecreated) as [DateCompleted] FROM AccOpeningBalance
				) OB
			ON DM.Entityid = OB.Entityid AND isnull(dm.Useec,0) = isnull(OB.UseEc,0)
			WHERE isnull(e.IsSupplier, 0) = @IsSupplier
    ) A 
)B
LEFT JOIN (SELECT EntityID, Switchboard, Email,InvoiceTo,accstatid, AccountNum as [Account], Company FROM Entity) E ON B.EntityID = 'EN' + convert(varchar,E.EntityID)
LEFT JOIN (Select isnull(firstname,'') + ' ' + isnull(surname,'') as [AccContact], entitycontactid from entitycontact) AccEC
	on accec.entitycontactid = e.InvoiceTo
LEFT JOIN (select lookupid,value from lookup) ll
	on ll.lookupid = e.accstatid
{where}

Group By B.Entityid, Account, Company,Currency, E.Switchboard,E.Email,AccEC.AccContact,ll.value
{having}

ORDER BY Company
","0","","1","LRA-FUSION","0","0","fusion"
"39915","cv_Acc_Check_Stock_Delete","","DECLARE @StockID  int
SET @StockID = {stockid}
SELECT DM.DocNo, DM.DocType,StockID FROM DEBTOR_MASTER DM 
LEFT JOIN (SELECT DocID, StockID FROM DEBTOR_DETAIL) DD ON DM.DocID = DD.DocID
WHERE DD.StockId =@StockID
UNION ALL
SELECT DM.DocNo, DM.DocType,StockID FROM CREDITOR_MASTER DM 
LEFT JOIN (SELECT DocID, StockID FROM CREDITOR_DETAIL) DD ON DM.DocID = DD.DocID
WHERE DD.StockId =@StockID
UNION ALL
SELECT AccOverheadID, 'Cash Transaction', StockID FROM AccOverhead WHERE StockId =@StockID
UNION ALL
SELECT AccExpenseID, 'Expense Claim', StockID FROM AccEXPENSES WHERE StockId =@StockID
UNION ALL
SELECT AssetID, 'Asset Registry', StockID  FROM AccAsset  WHERE StockId =@StockID
UNION ALL
SELECT DocID, 'Manufacturing', StockID FROM AccManufacture_Detail WHERE StockId =@StockID
UNION ALL
SELECT DocID, 'Manufacturing', StockID FROM AccManufacture_Output WHERE StockId =@StockID
","0","","1","LRA-FUSION","0","0","fusion"
"39916","cv_Child_GLPs","","Select GLP.TaskID,DisplayName,FormName,ObjectKey,ObjectKeyVals, ValueRegistry, Rank,MainMenuImgKey 
 from GLPTAsk GLP
left join 
FavouriteTasks FT on FT.TaskID = GLP.TaskID
where (Select top 1 TaskID from GLPTAsk where DisplayName like 'Favourites') = <%TaskID%> and UserID = <%UserID%>
and isnull(Hidden,0) = 0 and glp.taskid not in (<%Hidden%>)

union all

SELECT TaskID,DisplayName,FormName,ObjectKey,ObjectKeyVals, ValueRegistry, Rank,MainMenuImgKey 
FROM GLPTask 
where isnull(TaskIDParent,-1) = <%TaskID%> and isnull(Hidden,0) = 0 and taskid not in (<%Hidden%>) 
ORDER BY Rank
","0","","1","LRA-FUSION","0","0","fusion"
"39917","cv_Parent_GLPs","","SELECT TaskID,DisplayName,FormName,ObjectKey,ObjectKeyVals, ValueRegistry, Rank,MainMenuImgKey
 FROM GLPTask Glp where TaskIDParent is null and isnull(Hidden,0) = 0 
 and taskid not in (<%Hidden%>) 
 and 
 isnull(
			(
				Select top 1 GLPU.TaskID 
				from GLPTAsk GLPU  
				left join FavouriteTasks FT on GLPU.TaskID = FT.TaskID 
				where GLPU.TaskIDParent = Glp.TaskID  
				or (Select top 1 TaskID from GLPTAsk where Displayname like 'Favourites' and isnull(ft.FavouriteTaskID,0) <> 0 ) = Glp.TaskID
				and isnull(UserID,1) = <%UserID%>
			)
		,0) <> 0
 ORDER BY Rank","0","","1","LRA-FUSION","0","0","fusion"
"39918","cv_Acc_GL_Balance_Sheet","","
DECLARE @Date as datetime
SET @Date = '{date}'

SELECT Convert(varchar(36),NEWID()) + CASE WHEN Rank in (4,6,9,11,2,0,13,14) THEN '#BOLD' ELSE '' END  ,
GLCode as [Code],GL as [Desciption], 
convert(varchar,SUM([CURRENT Amount]),1) as [Current Month],
convert(varchar,SUM([Month -1]),1) as [Month -1],
convert(varchar,SUM([Month -2]),1) as [Month -2],
convert(varchar,SUM([Month -3]),1) as [Month -3],
convert(varchar,SUM([Month -4]),1) as [Month -4],
convert(varchar,SUM([Month -5]),1) as [Month -5],
convert(varchar,SUM([Month -6]),1) as [Month -6],
convert(varchar,SUM([Month -7]),1) as [Month -7],
convert(varchar,SUM([Month -8]),1) as [Month -8],
convert(varchar,SUM([Month -9]),1) as [Month -9],
convert(varchar,SUM([Month -10]),1) as [Month -10],
convert(varchar,SUM([Month -11]),1) as [Month -11]

FROM(

    SELECT 
    GL,
    cast(Case when DateCompleted < @Date Then SUM(ISNULL(Amount,0)) END as money) as [Current Amount],
    cast(Case when DateCompleted < dateAdd(M,-1,@Date) Then SUM(ISNULL(Amount,0)) END as money)  as [Month -1],
    cast(Case when DateCompleted < dateAdd(M,-2,@Date) Then SUM(ISNULL(Amount,0)) END as money)  as [Month -2],
    cast(Case when DateCompleted < dateAdd(M,-3,@Date) Then SUM(ISNULL(Amount,0)) END as money)  as [Month -3],
    cast(Case when DateCompleted < dateAdd(M,-4,@Date) Then SUM(ISNULL(Amount,0)) END as money)  as [Month -4],
    cast(Case when DateCompleted < dateAdd(M,-5,@Date) Then SUM(ISNULL(Amount,0)) END as money)  as [Month -5],
    cast(Case when DateCompleted < dateAdd(M,-6,@Date) Then SUM(ISNULL(Amount,0)) END as money)  as [Month -6],
    cast(Case when DateCompleted < dateAdd(M,-7,@Date) Then SUM(ISNULL(Amount,0)) END as money)  as [Month -7],
    cast(Case when DateCompleted < dateAdd(M,-8,@Date) Then SUM(ISNULL(Amount,0)) END as money)  as [Month -8],
    cast(Case when DateCompleted < dateAdd(M,-9,@Date) Then SUM(ISNULL(Amount,0)) END as money)  as [Month -9],
    cast(Case when DateCompleted < dateAdd(M,-10,@Date) Then SUM(ISNULL(Amount,0)) END as money)  as [Month -10],
    cast(Case when DateCompleted < dateAdd(M,-11,@Date) Then SUM(ISNULL(Amount,0)) END as money)  as [Month -11],
    JournalID,GLCode,[Rank]
    FROM(
		SELECT GL, Isnull(DR,0) - isnull(CR,0) as [Amount],JournalID, 1 as [Rank],
        datecompleted, [Type], DivisionID 
        FROM AccGl
        WHERE Type = 'CAPITAL'
        AND DateCompleted <= @Date
        
        UNION ALL

        SELECT 'TOTAL CAPITAL EMPLOYED:', SUM(Isnull(DR,0)) - SUM(isnull(CR,0)) as [Amount],null, 2 as [Rank],
        convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01',
        [Type], DivisionID 
        FROM AccGl
        WHERE Type = 'CAPITAL'
        AND DateCompleted <= @Date
        GROUP BY DivisionID, [Type], convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01'

		UNION ALL
		
        SELECT GL, isnull(DR,0) - Isnull(CR,0) as [Amount],JournalID, 5 as [Rank],
        datecompleted, [Type], DivisionID 
        FROM AccGl
        WHERE Type = 'ASSET'
        AND DateCompleted <= @Date

        UNION ALL
        
        SELECT 'TOTAL ASSETS:', SUM(isnull(DR,0)) - SUM(Isnull(CR,0)) as [Amount],null, 6 as [Rank],
        convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01',
        [Type], DivisionID 
        FROM AccGl
        WHERE Type = 'ASSET'
        AND DateCompleted <= @Date
        Group by DivisionID, [Type], convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01'
                
        UNION ALL

        SELECT GL,  Isnull(CR,0) - isnull(DR,0) as [Amount],JournalID, 10 as [Rank],
        datecompleted,[Type], DivisionID 
        FROM AccGl
        WHERE Type = 'LIABILITY'
        AND DateCompleted <= @Date

        UNION ALL

        SELECT 'TOTAL LIABILITIES:',  SUM(Isnull(CR,0)) -SUM(isnull(DR,0)) as [Amount],null, 11 as [Rank],
        convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01',
        [Type], DivisionID 
        FROM AccGl
        WHERE Type = 'LIABILITY'
        AND DateCompleted <= @Date
        Group by DivisionID, [Type], convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01'
                
        UNION ALL
        
        SELECT 'TOTAL EMPLOYMENT OF CAPITAL:', SUM(isnull(DR,0)) - SUM(Isnull(CR,0)) as [Amount],null, 13 as [Rank],
        convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01',
        [Type], DivisionID 
        FROM AccGl
        WHERE Type IN ('ASSET','LIABILITY')
        AND DateCompleted <= @Date
        Group by DivisionID, [Type], convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01'
                
        UNION ALL
        
        SELECT 'CURRENT RETAINED PROFIT/LOSS:', SUM(isnull(DR,0)) - SUM(Isnull(CR,0)) as [Amount],null, 14 as [Rank],
        convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01',
        [Type], DivisionID 
        FROM AccGl
        WHERE Type IN ('ASSET','LIABILITY','CAPITAL')
        AND DateCompleted <= @Date
        Group by DivisionID, [Type], convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01'
        
        ) A
    LEFT JOIN (SELECT * FROM AccGLCode) GC ON (A.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(A.[Type]) = upper(GC.GLType) AND A.JournalID = GC.GLCateGoryID
    {where}
    Group By GL, DateCompleted, [Rank], A.JournalID,GLCode
    
    UNION ALL 
    
    SELECT  null as [GL] , null,null,null,null,null,null,null,null,null,null,null,null,null,null, 3 as [Rank]
    
    UNION ALL 

    SELECT  'ASSETS' as [GL] , null,null,null,null,null,null,null,null,null,null,null,null,null,null, 4 as [Rank]

    UNION ALL 

    SELECT  'LIABILITIES' as [GL] , null,null,null,null,null,null,null,null,null,null,null,null,null,null, 9 as [Rank]

    UNION ALL 

    SELECT  'CAPITAL EMPLOYED' as [GL] , null,null,null,null,null,null,null,null,null,null,null,null,null,null, 0 as [Rank]
    
    UNION ALL 

    SELECT  null as [GL] , null,null,null,null,null,null,null,null,null,null,null,null,null,null, 7 as [Rank]

    UNION ALL 

    SELECT  null as [GL] , null,null,null,null,null,null,null,null,null,null,null,null,null,null, 12 as [Rank]
    
    ) B
Group BY B.[RANK],B.GL, B.GLCode
ORDER BY [Rank], GL

","0","","1","LRA-FUSION","0","0","fusion"
"39919","cv_Acc_GL_Balance_Sheet_Grouped","","
DECLARE @Date as datetime
SET @Date =  '{date}'

SELECT Convert(varchar(36),NEWID()) + CASE WHEN Rank in (4,6,9,11,2,0,13,14) THEN '#BOLD' ELSE '' END  ,
GL as [Desciption], 
convert(varchar,SUM([CURRENT Amount]),1) as [YTD Amount]

FROM(

    SELECT 
    GL,
    cast(Case when DateCompleted < @Date Then SUM(ISNULL(Amount,0)) END as money) as [CURRENT Amount],
    JournalID,GLCode,[Rank]
   FROM(
		SELECT GL, Isnull(DR,0) - isnull(CR,0) as [Amount],JournalID, 1 as [Rank],
        datecompleted, [Type], DivisionID 
        FROM AccGl
        WHERE Type = 'CAPITAL'
        AND DateCompleted <= @Date
        
        UNION ALL

        SELECT 'TOTAL CAPITAL EMPLOYED:', SUM(Isnull(DR,0)) - SUM(isnull(CR,0)) as [Amount],null, 2 as [Rank],
        convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01',
        [Type], DivisionID 
        FROM AccGl
        WHERE Type = 'CAPITAL'
        AND DateCompleted <= @Date
        GROUP BY DivisionID, [Type], convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01'

		UNION ALL
		
        SELECT GL, isnull(DR,0) - Isnull(CR,0) as [Amount],JournalID, 5 as [Rank],
        datecompleted, [Type], DivisionID 
        FROM AccGl
        WHERE Type = 'ASSET'
        AND DateCompleted <= @Date

        UNION ALL
        
        SELECT 'TOTAL ASSETS:', SUM(isnull(DR,0)) - SUM(Isnull(CR,0)) as [Amount],null, 6 as [Rank],
        convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01',
        [Type], DivisionID 
        FROM AccGl
        WHERE Type = 'ASSET'
        AND DateCompleted <= @Date
        Group by DivisionID, [Type], convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01'
                
        UNION ALL

        SELECT GL,  Isnull(CR,0) - isnull(DR,0) as [Amount],JournalID, 10 as [Rank],
        datecompleted,[Type], DivisionID 
        FROM AccGl
        WHERE Type = 'LIABILITY'
        AND DateCompleted <= @Date

        UNION ALL

        SELECT 'TOTAL LIABILITIES:',  SUM(Isnull(CR,0)) -SUM(isnull(DR,0)) as [Amount],null, 11 as [Rank],
        convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01',
        [Type], DivisionID 
        FROM AccGl
        WHERE Type = 'LIABILITY'
        AND DateCompleted <= @Date
        Group by DivisionID, [Type], convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01'
                
        UNION ALL
        
        SELECT 'TOTAL EMPLOYMENT OF CAPITAL:', SUM(isnull(DR,0)) - SUM(Isnull(CR,0)) as [Amount],null, 13 as [Rank],
        convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01',
        [Type], DivisionID 
        FROM AccGl
        WHERE Type IN ('ASSET','LIABILITY')
        AND DateCompleted <= @Date
        Group by DivisionID, [Type], convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01'
                
        UNION ALL
        
        SELECT 'CURRENT RETAINED PROFIT/LOSS:', SUM(isnull(DR,0)) - SUM(Isnull(CR,0)) as [Amount],null, 14 as [Rank],
        convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01',
        [Type], DivisionID 
        FROM AccGl
        WHERE Type IN ('ASSET','LIABILITY','CAPITAL')
        AND DateCompleted <= @Date
        Group by DivisionID, [Type], convert(varchar,YEAR(DateCompleted)) + '/' + convert(varchar,MONTH(DateCompleted)) + '/01'
        
        ) A
    LEFT JOIN (SELECT * FROM AccGLCode) GC ON (A.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(A.[Type]) = upper(GC.GLType) AND A.JournalID = GC.GLCateGoryID
    {where}
    Group By GL, DateCompleted, [Rank], A.JournalID,GLCode
    
    UNION ALL 
    
    SELECT  null as [GL] , null,null,null, 3 as [Rank]
    
    UNION ALL 

    SELECT  'ASSETS' as [GL] , null,null,null, 4 as [Rank]

    UNION ALL 

    SELECT  'LIABILITIES' as [GL] , null,null,null, 9 as [Rank]

    UNION ALL 

    SELECT  'CAPITAL EMPLOYED' as [GL] , null,null,null, 0 as [Rank]
    
    UNION ALL 

    SELECT  null as [GL] , null,null,null, 7 as [Rank]

    UNION ALL 

    SELECT  null as [GL] , null,null, null, 12 as [Rank]
    
    ) B
Group BY B.[RANK],B.GL
ORDER BY [Rank], GL

","0","","1","LRA-FUSION","0","0","fusion"
"39920","cv_Calllog_Notify","","select distinct cln.NotifyID, cln.[Username], isnull(u.NotifyID,0) as assigned
from (select userid as [NotifyID], Username as [Username] from Users) cln
left join (select NotifyID from CallLogNotify where CallLogID = <%calllogID%>) u on cln.NotifyID = u.NotifyID
order by cln.[Username] desc
","0","","1","LRA-FUSION","0","0","fusion"
"39921","cv_CallLogAdvEmail","","select Top 1 
	cl.calllogid,
	cl.callsubject,
	cl.calldescription,
	cl.calldirection,
	e.Company,
	cm.value as [Contactmethod],
	co.Value as [callorigin],
	toc.value as [calltype],
	br.Value as [businessresult],
	u.username as [foruser],
	cl.notes, 
	CASE WHEN ISNULL(CL.LeadContactID, 0) = 0 then 
		isnull(ec.firstname, '') + ' ' + isnull(ec.surname, '') 
	ELSE 
		ISNULL(LC.Firstname, '') + ' ' + ISNULL(LC.Surname, '') 
	END as [Client],
	calldate
from calllog cl 
left join entitycontact ec on ec.entitycontactid = cl.entitycontactid 
left join users u on u.userid = cl.userid 
left join lookup cm on cm.lookupID = cl.ContactMethodID
left join lookup co on co.lookupID = cl.CallOriginID
left join lookup toc on toc.lookupID = cl.CallTypeID
left join lookup br on br.lookupID = cl.BusResID
left join entity e on e.entityid = ec.entityid
LEFT JOIN LeadContacts LC ON LC.LeadContactID = CL.LeadContactID
WHERE calllogid = <%calllogid%>","0","","1","LRA-FUSION","0","0","fusion"
"39922","cv_Acc_Print_Cost_Estimate_NoComponents","","declare @DocID as int
Declare @CommentsBelow as bit
set @DocID = {docid}
Set @CommentsBelow  = (SELECT Top 1 isnull(Selected,0) from crmSetup where variable = 'CommentsBelow')

--Normal selection
/*SELECT  [Stock Code] as [CODE],[DESCRIPTION], 
Case when (isnull([Comments],'') <> '') and ([Comments] not like '<col-grey>') then ': ' + Char(10) + isnull([Comments],'') else '' end as [Description],
[COMMENTS] ,QTY,  [PRICE EX.],  [TOTAL EX.] */
--Normal selection with comments below
SELECT  [Stock Code] as [CODE],[DESCRIPTION], QTY,  [PRICE EX.],  [TOTAL EX.] 
--Lapp Kabel selection
--SELECT [Stock Code] as [PART NUMBER], [CUSTOMER ITEM NUMBER], [DESCRIPTION+SPEC] as [QUOTATION LINE ITEM DESCRIPTION AND DETAILS],[DeliveryTerms] as [DELIVERY TERMS], [COPPER WEIGHT],[TOTAL WEIGHT], QTY, [PRICE EX.] as [GROSS PRICE EX.],[DISCOUNT] as [DISC],[Nett] as [NETT PRICE],  [TOTAL EX. DISC] as [TOTAL EX.]

FROM    (

    --Select Main items
    SELECT convert(varchar,lineid) + 'M'  as [LineID],CED.GroupName as [Group],ProjectName as [Project],CED.StockCode as [Stock Code],
    CASE WHEN isnull(CED.Comments,'') <> '' AND  @CommentsBelow = 1 THEN CED.StockDescription + ':' + char(13) + CED.Comments ELSE CED.StockDescription END as [Description],
    CED.StockDescription + isnull(char(10) + STK.Specifications,'') as [Description+Spec], 
    Comments,Company as [Supplier],
    convert(varchar,cast( (Isnull(ForexMultiplier,0) * Qty) as money),1) as [Copper Weight],
    convert(varchar,cast((isnull(STK.Weight,0) /1000) * CED.Qty  as money),1) as [Total Weight],
    convert(varchar,Qty) as [Qty],convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],CEM.Currency + ' ' + convert(varchar,cast(CED.CostPriceEx as money),1) as [Cost Ex.],
    CEM.Currency + ' ' + convert(varchar,cast(PriceEx as money),1) as [Price Ex.],  CEM.Currency + ' ' + convert(varchar,cast(PriceEx * qty as money),1) as [Total Ex.],
    CEM.Currency + ' ' + convert(varchar,cast(PriceEx * qty  * ((100 - isnull(discperc,0)) /100) as money),1) as [Total Ex. Disc],
    CEM.Currency + ' ' + convert(varchar,cast(PriceEx * ((100 - isnull(discperc,0)) /100) as money),1) as [Nett],
    SM.DeliveryTerms, 
    Rank, -1000 as [Rank2], rCED.[GroupRank],
    '' as [customer item number]
    FROM Cost_Estimate_Detail  CED
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON CED.ProjectID = P.projectID
    LEFT JOIN AccStock STK ON CED.StockID = STK.StockID
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT ShippingDocID, DeliveryTerms FROM Shipping_Master ) SM ON CED.ShippingDocID = SM.Shippingdocid
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    where isnull(ComponentOfLineID,0)  = 0
    AND CED.DocID = @DocID
 
    UNION ALL

    SELECT distinct convert(varchar,lineid) + 'C'  as [LineID],
    (SELECT Top 1 GroupName From Cost_Estimate_Detail Where LineID = DD.ComponentOfLineID), '' as [Project],'' as [Stock Code], '' as [Code],'-      ' + Comments as [Description],
    NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
    (SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = DD.ComponentOfLineID) ,Rank + 1 as [Rank2], rCED.[GroupRank],
    '' as [customer item number]
    FROM Cost_Estimate_Detail DD
    LEFT JOIN (SELECT DocID , ROE FROM Cost_Estimate_Master ) DM
    ON DD.DocID = DM.DocID 
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON DD.GroupName = rCED.GroupName AND DD.DocID = rCED.DocID
    WHERE DD.DocID = @docid
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
    and  isnull(ComponentOfLineID,0)  > 0

    UNION ALL

    --Select Groups
    SELECT Distinct null, isnull(CED.GroupName, 'Not Specified'), '<col-grey>', '<col-grey>' + '<B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>' ,  '<col-grey>','<col-grey>', '<col-grey>', '<col-grey>','<col-grey>',
    '<col-grey>',
    '<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>', 
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * qty) as money),1)  + '</B>' as [Total Ex.],
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) as money),1)  + '</B>' as [Total Ex. Disc],
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) as money),1)  + '</B>' as [Nett],
    '<col-grey>' as [DeliveryTerms],
    isnull(min(Rank),0),-2000, rCED.[GroupRank],
    '<col-grey>' as [customer item number]
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    WHERE CED.DocID = @DocID
    AND isnull(ComponentOfLineID,0)  = 0
    GROUP BY CED.GroupName,CEM.Currency , rCED.[GroupRank]
    
   

    UNION ALL
    
    --Select Summary info
    SELECT null,'<col-grey>', '<col-grey>', '<col-grey><B>SUMMARY:</B>', '<col-grey>',  '<col-grey>', '<col-grey>','<col-grey>','<col-grey>', '<col-grey>','<col-grey>', '<col-grey>', '<col-grey>','<col-grey>','<col-grey>',  
    '<col-grey>','<col-grey>','<col-grey>',
    9999999999999998,9999999999999998,9999999999999998, '<col-grey>' as [customer item number]

    UNION ALL

    --Select Summary info
    SELECT Distinct null, '<col-grey>', '<col-grey>','<col-grey><B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>', '<col-grey>',  '<col-grey>','<col-grey>', '<col-grey>','<col-grey>','<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>',
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * qty) as money),1)  + '</B>' as [Total Ex.],
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * qty  * ((100 - isnull(discperc,0)) /100)) as money),1)  + '</B>' as [Total Ex.],
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) as money),1)  + '</B>' as [Nett],
    '<col-grey>',
    9999999999999999,9999999999999999,9999999999999999, '<col-grey>' as [customer item number]
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    WHERE CED.DocID = @DocID
    AND isnull(ComponentOfLineID,0)  = 0
    GROUP BY CED.GroupName,CEM.Currency, rCED.[GroupRank] 
    ) A 
--group by lineID,[Group],Rank,Rank2,[Stock Code],[DESCRIPTION+SPEC],DeliveryTerms,[COPPER WEIGHT],[TOTAL WEIGHT],QTY,[PRICE EX.],DISCOUNT,Nett,[TOTAL EX. DISC],GroupRank

ORDER BY [GroupRank] , Rank,Rank2 ","0","","1","LRA-FUSION","0","0","fusion"
"39923","cv_Acc_Print_Cost_Estimate_Hidden_NoComponents","","declare @DocID as int
Declare @CommentsBelow as bit
set @DocID = {docid}
Set @CommentsBelow  = isnull((SELECT Top 1 Selected from crmSetup where variable = 'CommentsBelow'),0)

--Normal selection
--SELECT  [Stock Code] as [CODE],[DESCRIPTION], [COMMENTS] ,QTY,  [PRICE EX.],  [TOTAL EX.] 
--Normal selection with comments below
SELECT  [Stock Code] as [CODE],[DESCRIPTION], QTY,  [PRICE EX.],  [TOTAL EX.] 
--Lapp Kabel selection
--SELECT [Stock Code] as [PART NUMBER], [CUSTOMER ITEM NUMBER], [DESCRIPTION+SPEC] as [QUOTATION LINE ITEM DESCRIPTION AND DETAILS],[DeliveryTerms] as [DELIVERY TERMS], [COPPER WEIGHT],[TOTAL WEIGHT], QTY, [PRICE EX.] as [GROSS PRICE EX.],[DISCOUNT] as [DISC],[Nett] as [NETT PRICE],  [TOTAL EX. DISC] as [TOTAL EX.]

FROM    (

    --Select Main items
    SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],CED.StockCode as [Stock Code],
    CASE WHEN isnull(CED.Comments,'') <> '' AND  @CommentsBelow = 1 THEN CED.StockDescription + ':' + char(13) + CED.Comments ELSE CED.StockDescription END as [Description],
    CED.StockDescription + isnull(char(10) + STK.Specifications,'') as [Description+Spec], 
    Comments,Company as [Supplier],
    convert(varchar,cast((isnull(STK.Weight,0) /1000) * CED.Qty  as money),1) as [Total Weight],
    convert(varchar,Qty) as [Qty],convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],CEM.Currency + ' ' + convert(varchar,cast(CED.CostPriceEx as money),1) as [Cost Ex.],
    '' as [Price Ex.], '' as [Total Ex.],
    CEM.Currency + ' ' + convert(varchar,cast(PriceEx * qty  * ((100 - isnull(discperc,0)) /100) as money),1) as [Total Ex. Disc],
    CEM.Currency + ' ' + convert(varchar,cast(PriceEx * ((100 - isnull(discperc,0)) /100) as money),1) as [Nett],
    SM.DeliveryTerms, 
    Rank, -1000 as [Rank2],
    '' as [customer item number]
    FROM Cost_Estimate_Detail  CED
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON CED.ProjectID = P.projectID
    LEFT JOIN AccStock STK ON CED.StockID = STK.StockID
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT ShippingDocID, DeliveryTerms FROM Shipping_Master ) SM ON CED.ShippingDocID = SM.Shippingdocid
    where isnull(ComponentOfLineID,0)  = 0
    AND CED.DocID = @DocID

    UNION ALL

    SELECT distinct convert(varchar,lineid) + 'C'  as [LineID],
    (SELECT Top 1 GroupName From Cost_Estimate_Detail Where LineID = DD.ComponentOfLineID), '' as [Project],'' as [Stock Code], '' as [Code],'-      ' + Comments as [Description],
    NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
    (SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = DD.ComponentOfLineID) ,Rank + 1 as [Rank2],
    '' as [customer item number]
    FROM Cost_Estimate_Detail DD
    LEFT JOIN (SELECT DocID , ROE FROM Cost_Estimate_Master ) DM
    ON DD.DocID = DM.DocID 
    WHERE DD.DocID = @docid
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
    and  isnull(ComponentOfLineID,0)  > 0

    UNION ALL

    --Select Groups
    SELECT Distinct null, isnull(GroupName, 'Not Specified'), '<col-grey>', '<col-grey>' + '<B>' + upper(isnull(GroupName, 'Not Specified')) + '</B>' ,  '<col-grey>','<col-grey>', '<col-grey>', '<col-grey>','<col-grey>',
    '<col-grey>',
    '<col-grey>', '<col-grey>', '<col-grey>', 
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * qty) as money),1)  + '</B>' as [Total Ex.],
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) as money),1)  + '</B>' as [Total Ex. Disc],
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) as money),1)  + '</B>' as [Nett],
    '<col-grey>' as [DeliveryTerms],
    isnull(min(Rank),0),-2000,
    '<col-grey>' as [customer item number]
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    WHERE CED.DocID = @DocID
    AND isnull(ComponentOfLineID,0)  = 0
    GROUP BY CED.GroupName,CEM.Currency 
    
   

    UNION ALL
    
    --Select Summary info
    SELECT null,'<col-grey>', '<col-grey>', '<col-grey><B>SUMMARY:</B>', '<col-grey>',  '<col-grey>', '<col-grey>','<col-grey>','<col-grey>', '<col-grey>','<col-grey>', '<col-grey>','<col-grey>','<col-grey>',  
    '<col-grey>','<col-grey>','<col-grey>',
    9999999999999998,9999999999999998, '<col-grey>' as [customer item number]

    UNION ALL

    --Select Summary info
    SELECT Distinct null, '<col-grey>', '<col-grey>','<col-grey><B>' + upper(isnull(GroupName, 'Not Specified')) + '</B>', '<col-grey>',  '<col-grey>','<col-grey>', '<col-grey>','<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>',
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * qty) as money),1)  + '</B>' as [Total Ex.],
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * qty  * ((100 - isnull(discperc,0)) /100)) as money),1)  + '</B>' as [Total Ex.],
    '<col-grey><B>' + CEM.Currency + ' ' + convert(varchar,cast(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) as money),1)  + '</B>' as [Nett],
    '<col-grey>',
    9999999999999999,9999999999999999, '<col-grey>' as [customer item number]
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    WHERE CED.DocID = @DocID
    AND isnull(ComponentOfLineID,0)  = 0
    GROUP BY CED.GroupName,CEM.Currency 
    ) A 
--group by lineID,[Group],Rank,Rank2,[Stock Code],[DESCRIPTION+SPEC],DeliveryTerms,[COPPER WEIGHT],[TOTAL WEIGHT],QTY,[PRICE EX.],DISCOUNT,Nett,[TOTAL EX. DISC]

ORDER BY [Group] desc, Rank,Rank2 ","0","","1","LRA-FUSION","0","0","fusion"
"39924","cv_Acc_Find_Quote","","SELECT Top 50 CEM.DocID, CEM.DocID as [Quote No.], convert(varchar,DateCreated,103) as [Created],DocStatus as [Status],[Total Ex. VAT],[Total Incl. VAT]
FROM Cost_Estimate_Master CEM
LEFT JOIN (SELECT DocID, Sum(CostPriceEx * Qty ) as [Est. Cost], sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) as [Total Ex. VAT], Sum(totalIncl * ((100 - isnull(discperc,0)) /100)) as [Total Incl. VAT] FROM Cost_Estimate_Detail  WHERE isnull(componentOfLineID,0) = 0 Group By DocID) CED
ON CEM.DocID = CED.DocID
Where EntityID = {entityid}
AND convert(varchar,CEM.DocID) like '%<%replace%>%'
","0","","1","LRA-FUSION","0","0","fusion"
"39925","PMailer","","http://fusionsoftware.co.za","0","","1","LRA-FUSION","0","0","fusion"
"39926","cv_TasksEmail","","SELECT E.Company as [Company], P.ProjectName as [Project] , CA.DateIssued, CA.DateDue, CA.DateFollowUp, Pr.PriorityType as [Priority],
L.Value as [Status], CAL.EstHours, UO.Owner, UI.IssuedBy,Escalation
FROM clientactivitylist CA
LEFT JOIN (SELECT ProjectID , ProjectName, EntityID From Projects) P
ON CA.ProjectID = P.ProjectID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON P.EntityID= E.EntityID
LEFT JOIN (SELECT * FROM Priority) Pr 
ON CA.PriorityID =  Pr.PriorityID 
LEFT JOIN Lookup L
ON L.lookupid = CA.StatusID
LEFT JOIN (SELECT userID, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Owner] From Users) UO
ON CA.OwnerID = UO.UserID
LEFT JOIN (SELECT userID, isnull(Firstname,'') + ' ' + isnull(surname,'') as [IssuedBy] From Users) UI
ON CA.IssuedByID = UI.UserID
LEFT JOIN (SELECT ClientActivityListID, sum(isnull(EstimatedHours,0)) as [EstHours] FROM clientactivityListItem group by ClientActivityListID) CAL
ON CA.ClientActivityListID = CAL.ClientActivityListID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"39927","cv_Canvas_Man","","Select CanvasID, Company, Contact, ContactNo as [Telephone], C.Email, 
POS.value as [Position], IND.Value as [Industry], l.Value as [Status], convert(varchar, [NextContactDate], 103) as [Next Contact Date], NA.value as [Next Action],
'Converted To Lead' = case when islocked = 1 then 'Yes' Else 'No' End,
convert(varchar, DateCreated, 103) as [Created],
UC.Firstname + ' ' + UC.Surname as [Created By]
FROM Canvas C
LEFT JOIN Lookup POS on POS.Lookupid = C.PositionID
LEFT JOIN Lookup IND on IND.LookupID = C.IndustryID
LEFT JOIN Lookup L on L.LookupID = C.Status
LEFT JOIN Users UC on UC.userID = C.CreatedBy
LEFT JOIN Users UM on UM.userID = C.ModifiedBy
LEFT JOIN Lookup NA on NA.lookupid = C.NextActionID
{where}
ORDER BY Convert(Datetime, DateCreated, 103) DESC","0","","1","LRA-FUSION","0","0","fusion"
"39928","cv_Canvass_Contacts","","Select canvasContactID, isnull(Firstname, '') + ' ' + isnull(surname, '') as [Contact], Phone1 as [Phone No.], Cell, Email
FROM CanvasContacts
WHERE Canvasid = {canvassid}
ORDER BY isnull(Firstname, '') + ' ' + isnull(surname, '')","0","","1","LRA-FUSION","0","0","fusion"
"39929","cv_canvasnotes","","select canvasnoteid,Date, Note,[Note Type] from canvasnotes LN
LEFT JOIN (SELECT LookupID, Value as [Note Type] FROM Lookup) LNT ON LNT.LookupID = LN.NoteTypeID
 {where}","0","","1","LRA-FUSION","0","0","fusion"
"39930","cv_CanvasCall_Log","","Select calllogid, Div.Value as [Dealer] ,convert(varchar, calldate, 103) as [Call Date], CallDirection as [Direction],
CL.Contact, CL.CallSubject as [Subject], CL.calldescription as [Description], 
 isnull(UF.firstname, '') + ' ' + isnull(uF.surname, '') as [Assigned To],isnull(UC.firstname, '') + ' ' + isnull(uc.surname, '') as [Call Creator]

FROM CanvasCallLog CL
LEFT JOIN Lookup div on Div.lookupid = CL.DivID
LEFT JOIN Users UC on UC.userid = CL.CallCreatorID
LEFT JOIN Users UF on UF.UserID = CL.userID
{where}
order by convert(datetime, calldate, 103) desc","0","","1","LRA-FUSION","0","0","fusion"
"39931","cv_canvas_Check_Duplicates","","select top 1 canvasID as [ID], Company, ContactNo as [Phone No], 'Canvass' as [Section] FROM Canvas WHERE Company = '{company}' and ContactNo = '{phone}' AND Canvasid <> {canvasid}
UNION ALL 
Select Top 1 EntityID as [ID], Company, SwitchBoard as [Phone no], 'Company' as [Section] FROM Entity WHERE Company = '{company}' and SwitchBoard = '{phone}'
UNION ALL
Select Top 1 LeadID as [ID], Company, Phone1 as [Phone No], 'Lead' as [Section] FROM Lead WHERE Company = '{company}' and Phone1 = '{phone}' AND Canvasid <> {canvasid}","0","","1","LRA-FUSION","0","0","fusion"
"39932","cv_Acc_GL_Income_Statement_Consolidated","","DECLARE @MonthStart as datetime
SET @MonthStart = '{monthstart}'

SELECT  [ID],[Code], [Description], [MTD Amount], [Current Amount], [MTD Total], [Current Total]  FROM ( 

SELECT '1#INCOME' as [ID],'INCOME' as [Code],null as [Description],null as [MTD Amount], null as [Current Amount], 
convert(varchar, convert(varchar, cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN Cr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) as money) ,1)) as [MTD Total],
convert(varchar, convert(varchar,cast(sum(isnull(Cr,0)) - sum(isnull(dr,0)) as money),1)) as [Current Total],
2 as [Rank]
FROM AccGL G
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'INCOME'
{where}

UNION ALL

SELECT '2#INCOME##' + isnull(GL,'') +'#'+ isnull(Convert(varchar,0),''), '   ' + convert(varchar,''), GL  as [Description], 
convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN Cr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) as money),1)) as [MTD Amount], 
convert(varchar, convert(varchar,cast(sum(isnull(Cr,0)) - sum(isnull(dr,0)) as money),1)) as [Current Amount], 
null AS [MTD Tootal],
null as [Current Total], 
3 as [RANK]
FROM AccGL  G
LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid /*OR GC.Divisionid = 0*/) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'INCOME'
{where}
Group by  GL

UNION ALL

SELECT '3#COST OF SALES','COST OF SALES' as [GLCode], Null  as [Description],
null AS [MTD Amount],
null as [Amount], 
'(' + convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0)) as money),1)) + ')' as [MTD Total], 
'(' + convert(varchar, convert(varchar,cast(sum(isnull(dr,0)) - sum(isnull(cr,0)) as money),1)) + ')' as [Current Total], 
4 as [Rank]
FROM AccGL G
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND GL like 'COST OF SALES'
{where}


UNION ALL 

SELECT '4',null,null,null,null,null,null, 5 as [Rank]

UNION ALL

SELECT '5','GROSS PROFIT'  as [GLCode],null as [Description],null as [MTD Amount], null as [Amount], 
convert(varchar, convert(varchar,isnull(cast((sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN Cr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) - isnull((SELECT cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END ,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0)) as money) FROM AccGL  WHERE isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0) + isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END ,0) <> 0 AND GL like 'COST OF SALES' {where}),0)) as money),0),1)) as [MTD Total],
convert(varchar, convert(varchar,isnull(cast((sum(isnull(Cr,0)) - sum(isnull(dr,0)) - isnull((SELECT cast(sum(isnull(dr,0)) - sum(isnull(cr,0)) as money) FROM AccGL  WHERE isnull(cr,0) + isnull(dr,0) <> 0 AND GL like 'COST OF SALES' {where}),0)) as money),0),1)) as [Current Total],
5 as [Rank]
FROM AccGL G
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'INCOME'
{where}

GROUP BY G.Divisionid

UNION ALL 

SELECT '6',null,null,null,null,null,null, 6 as [Rank]

UNION ALL

SELECT '7#OTHER INCOME','OTHER INCOME',null  as [Description],
null as [MTD Amount], null as [Current Amount], 
convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN Cr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END ,0)) as money),1)) as [MTD Total], 
convert(varchar, convert(varchar,cast(sum(isnull(Cr,0)) - sum(isnull(dr,0)) as money),1)) as [Current Total], 
6 as [Rank]
FROM AccGL G
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'OTHER INCOME'
{where}


UNION ALL

SELECT '8#OTHER INCOME##' + isnull(GL,'') +'#'+ isnull(Convert(varchar,0),''), '   ' + convert(varchar,''),  GL + ' - ' + [Description]  as [Description], 
convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN  Cr END ,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN  dr END,0)) as money),1)) as [MTD Amount], 
convert(varchar, convert(varchar,cast(sum(isnull(Cr,0)) - sum(isnull(dr,0)) as money),1)) as [Current Amount], 
null as [MTD Total],null as [Current Total], 7 as [RANK]
FROM AccGL G
LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid /*OR GC.Divisionid = 0*/) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'OTHER INCOME'
{where}
Group by  GL, [Description]

UNION ALL

SELECT '9#EXPENSE','EXPENSES' as [GLCode],null  as [Description],
null as [MTD Amount], null as [Current Amount],
'(' + convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN  dr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN  cr END,0)) as money),1)) + ')' as [MTD Total],
'(' + convert(varchar, convert(varchar,cast(sum(isnull(dr,0)) - sum(isnull(cr,0)) as money),1)) + ')' as [Current Total], 
8 as [Rank]
FROM AccGL G
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'EXPENSE' and GL <> 'COST OF SALES'
{where}

UNION ALL

SELECT '10#EXPENSE##' + isnull(GL,'') +'#'+ isnull(Convert(varchar,0),''),  '   ' + convert(varchar,''), GL  as [Description], 
convert(varchar, convert(varchar,cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0)) as money),1)) as [MTD Amount] , 
convert(varchar, convert(varchar,cast(sum(isnull(dr,0)) - sum(isnull(cr,0)) as money),1)) as [Current Amount], 
null AS [MTD Total],
null as [Current Total],
9 as [RANK]
FROM AccGL G
LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid /*OR GC.Divisionid = 0*/) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'EXPENSE' and GL <> 'COST OF SALES'
{where}
Group by  GL


UNION ALL 

SELECT '11',null,null,null,null,null,null, 10 as [Rank]

UNION ALL


SELECT '12','NET PROFIT',null  as [Description],null as [MTD Amount], null as [Current Amount], 
convert(varchar,isnull(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN Cr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)),0)
- isnull((SELECT cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0)) as money) FROM AccGL G WHERE isnull(CASE WHEN DateCompleted >= @MonthStart THEN  cr END ,0) + isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0) <> 0 AND GL like 'COST OF SALES' {where}),0)
+ isnull((SELECT cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN Cr END ,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END ,0)) as money) FROM AccGL G WHERE isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0) + isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0) <> 0 AND Type like 'OTHER INCOME' {where}),0)
- isnull((SELECT cast(sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0)) - sum(isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0)) as money) FROM AccGL G WHERE isnull(CASE WHEN DateCompleted >= @MonthStart THEN cr END,0) + isnull(CASE WHEN DateCompleted >= @MonthStart THEN dr END,0) <> 0 AND Type like 'EXPENSE' and GL <> 'COST OF SALES' {where}),0),1)
as [MTD Total],
convert(varchar,isnull(sum(isnull(Cr,0)) - sum(isnull(dr,0)),0)
- isnull((SELECT cast(sum(isnull(dr,0)) - sum(isnull(cr,0)) as money) FROM AccGL G WHERE isnull(cr,0) + isnull(dr,0) <> 0 AND GL like 'COST OF SALES' {where}),0)
+ isnull((SELECT cast(sum(isnull(Cr,0)) - sum(isnull(dr,0)) as money) FROM AccGL G WHERE isnull(cr,0) + isnull(dr,0) <> 0 AND Type like 'OTHER INCOME' {where}),0)
- isnull((SELECT cast(sum(isnull(dr,0)) - sum(isnull(cr,0)) as money) FROM AccGL G WHERE isnull(cr,0) + isnull(dr,0) <> 0 AND Type like 'EXPENSE' and GL <> 'COST OF SALES' {where}),0),1)
as [Current Total], 10 as [Rank]
FROM AccGL G
WHERE isnull(cr,0) + isnull(dr,0) <> 0
AND Type like 'INCOME'
{where}

GROUP BY G.Divisionid

) A

ORDER BY RANK,[Code],[Description]



","0","","1","LRA-FUSION","0","0","fusion"
"39933","cv_Acc_Sales_Pipeline_RPT","","SELECT Distinct 
	CEM.DocID, --convert(varchar,CEM.DocID) +  case when isnull(CEM.RevisedToDoc,0) = 0 then '##LatestRev' Else ''END as [DocID],
	left('00000000', 8- len(CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END)) + 
		convert(varchar,CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END) as [Doc. No.],
	CEM.Revision,
	D.Value as [Division],
	case isnull(CEM.UseEC, 0) When 1 then isnull(EC.AccountNum,EC.EntityContactID) Else isnull(E.Accountnum,E.EntityID) END as [Account],
	case isnull(CEM.UseEC, 0) When 1 then EC.Client ELSE E.Company END as [Client], 
	CASE WHEN ISNULL(CEM.AttentionOF,0) = 0 THEN  EE.Email ELSE ECC.Email END as [Email],
	EAR.Region as [Province],
	Att.[Attn.], 
	Att.[Cell]
	,isnull(Att.[Tel],E.Switchboard) as [Tel],
	LLF.Value as [Lead From],
	SR.[Sales Consultant],
ls2.value as [Ext. Sales Consultant],
Convert(Varchar, CEM.DateCreated,111) as [Created],
Convert(Varchar, CEM.PipelineLastDate,111) as [Last Contacted],
Convert(Varchar, CEM.PipelineNextDate,111) as [Next Contact],
LPP.Value as [Probability],
CEM.DocStatus as [Status],
 LLR.Value as [Outcome],
dbo.fnformatNumber(isnull([Quoted Amount Ex.],0) ) as [Quoted Amount Ex.],

dbo.fnFormatNumber( isnull([Quoted Amount Incl.],0) ) as [Quoted Amount Incl.],

dbo.fnFormatNumber(isnull([Accepted Amount Ex.],0)) as  [Accepted Amount Ex.],

dbo.fnFormatNumber(isnull([Accepted Amount Incl.],0) ) as [Accepted Amount Incl.],
Convert(Varchar,datepart(m,expectedOrder)) + '/'  + Convert(Varchar,YEAR(expectedOrder)) as [Expected Order],
(SELECT TOP 1 Activity FROM vwLastActivity WHERE EntityID = (case isnull(CEM.UseEC, 0) When 1 then EC.EntityID Else E.EntityID END) ORDER BY [Date] DESC) as [Last Activity]
 
/*
cast(isnull([Quoted Amount Ex.],0)  * isnull(CEM.ROE,0) as money) as [Quoted Amount Ex.],

cast(isnull([Quoted Amount Incl.],0) * isnull(CEM.ROE,0) as 
money) as [Quoted Amount Incl.],

cast(isnull([Accepted Amount Ex.],0) * isnull(CEM.ROE,0) as money) [Accepted Amount Ex.],

cast(isnull([Accepted Amount Incl.],0) * isnull(CEM.ROE,0) as money) as [Accepted Amount Incl.]
*/

FROM Cost_Estimate_Master CEM WITH(NOLOCK)
LEFT JOIN Lookup D WITH(NOLOCK)  ON CEM.DivisionID = D.LookupID
LEFT JOIN (SELECT Company, EntityID, salesconsid, AccountNum, Email,Switchboard FROM Entity WITH(NOLOCK)) E ON CEM.Entityid = E.Entityid AND isnull(CEM.UseEC,0) = 0
LEFT JOIN (SELECT EntityID, Max(EntityAddressID) as [EntityAddressID] FROM EntityAddress WITH(NOLOCK) where AddressType like '%physical%' Group by Entityid ) EA ON CEM.Entityid = EA.EntityID
LEFT JOIN (SELECT EntityAddressID, Region FROM EntityAddress WITH(NOLOCK)) EAR ON EA.EntityAddressID = EAR.EntityAddressID
LEFT JOIN (SELECT isnull(Firstname,'') + ' ' + isnull(surname,'') as [Client], Email, EntityContactID,SalesConsID, AccountNum, EntityID FROM EntityContact WITH(NOLOCK)) EC ON CEM.Entityid = EC.EntityContactid AND isnull(CEM.UseEC,0) = 1
LEFT JOIN (SELECT isnull(firstname,'') + ' ' + isnull(surname,'') as [Created By], UserID From Users WITH(NOLOCK)) U ON CEM.CreatedBy = U.UserID
LEFT JOIN (SELECT DocID, Sum(CostPriceEx * Qty ) as [Est. Cost], sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) as [Quoted Amount Ex.],sum((PriceEx * qty * ((100 - isnull(discperc,0)) /100)) * (TAX /100 + 1)) as [Quoted Amount Incl.] FROM Cost_Estimate_Detail CED WITH(NOLOCK) WHERE isnull(componentOfLineID,0) = 0    Group By DocID) CED ON CEM.DocID = CED.DocID
LEFT JOIN (SELECT isnull(firstname,'') + ' ' + isnull(surname,'') as [Sales Consultant], UserID From Users WITH(NOLOCK)) SR ON CEM.SalesRepID = SR.UserID
LEFT JOIN (SELECT Entitycontactid, isnull(firstname,'') + ' ' + isnull(Surname,'') as [Attn.], Email,Cell as [Cell],Phone1 as [Tel] FROM  EntityContact WITH(NOLOCK)) Att on Att.EntityContactid = CEM.AttentionOf
LEFT JOIN Lookup ls2 WITH(NOLOCK) on ls2.lookupid = E.salesconsid
LEFT JOIN EntityGroup g WITH(NOLOCK) on g.EntityID = E.EntityID
LEFT JOIN Lookup LPS WITH(NOLOCK) ON LPS.Lookupid = CEM.PipelineStatus --CASE WHEN isnull(CEM.Revision,0) > 0 then (SELECT PipelineStatus FROM Cost_Estimate_Master Where DocID = CEM.PreviousDocID) ELSE CEM.PipelineStatus END 
LEFT JOIN (SELECT * FROM Lookup WITH(NOLOCK) where class = 'PipelineProbability') LPP ON CEM.PipelineProbability = LPP.Lookupid
LEFT JOIN (SELECT * FROM Lookup WITH(NOLOCK) where class = 'LeadFrom') LLF ON CEM.PipelineLeadFromId = LLF.Lookupid
LEFT JOIN (SELECT * FROM Lookup WITH(NOLOCK) where class = 'SalesRejectionReason') LLR ON CEM.PipelineReasonID = LLR.Lookupid
LEFT JOIN (SELECT EntityContactID, Email FROM EntityContact) ECC ON ECC.EntityCOntactID = CEM.AttentionOF
LEFT JOIN (SELECT EntityID, Email FROM Entity) EE ON EE.EntityID = CEM.EntityID

LEFT JOIN (


		SELECT MAX(DM.CEDOCID) as [CEDocID], MAX(DM.DocID) as [DocID], Sum(CostPriceEx * Qty ) as [Est. Cost], sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) as [Accepted Amount Ex.], sum((PriceEx * qty * ((100 - isnull(discperc,0)) /100)) * (TAX /100 + 1))  as [Accepted Amount Incl.] FROM DEBTOR_DETAIL  DD WITH(NOLOCK)
		LEFT JOIN (SELECT DocID, DocStatus, DateCompleted,CEDOCID FROM DEBTOR_MASTER WITH(NOLOCK) WHERE DocStatus <> 'Rejected' and DocType in ('Quote', 'Sales Order')) DM ON DD.DocID = DM.DocID
        	LEFT JOIN (SELECT DocID, StockID, max(GroupName) as [GroupName] FROM Cost_Estimate_Detail WITH(NOLOCK) Group By StockID, DocID) CED ON DD.StockID = CED.StockID AND DM.CEDocID = CED.DocID 
		WHERE DD.StockId > 0  
		AND isnull(DD.ComponentOfLineID,0) = 0
		GROUP BY (DM.CEDOCID)


            ) DD ON CEM.DocID = DD.CEDocID
LEFT JOIN (SELECT DocID, StockID FROM COST_ESTIMATE_DETAIL WITH(NOLOCK)) CEDS ON CEM.DocID = CEDS.DocID


LEFT JOIN (SELECT DocID, StockID FROM DEBTOR_DETAIL WITH(NOLOCK)) DDS ON DD.DocID = DDS.DocID
LEFT JOIN (SELECT StockID, StockType FROM AccStock WITH(NOLOCK)) CSTK  ON CEDS.StockID = CStk.StockID
LEFT JOIN (SELECT StockID, StockType FROM AccStock WITH(NOLOCK)) DSTK  ON DDS.StockID = DStk.StockID

{where}

--{order}","0","","1","LRA-FUSION","0","0","fusion"
"39934","cv_Entity_Divisions","","SELECT Distinct LD.LookupID, LD.Value, Case WHEN isnull(E.EntityID,0)> 0 THEN 1 ELSE 0 END as [Ticked]
FROM UserDivisions UD
LEFT JOIN (SELECT * FROM Lookup Where Class like 'Divisions') LD ON UD.DivisionID = LD.LookupID
LEFT JOIN (SELECT * FROM EntityDivision WHERE EntityID = {entityid}) E ON E.DivisionID = LD.LookupID
WHERE UD.UserID = {userid}
ORDER BY LD.Value","0","","1","LRA-FUSION","0","0","fusion"
"39935","cv_Entity_Divisions_Groups","","SELECT Distinct L.LookupID, L.Value, Case WHEN isnull(E.EntityID,0)> 0 THEN 1 ELSE 0 END as [Ticked] FROM Lookup L
LEFT JOIN (SELECT * FROM LookupDivision) LD ON L.LookupID = LD.LookupID
LEFT JOIN (SELECT * FROM UserDivisions) UD ON LD.DivisionID = UD.DivisionID
LEFT JOIN (SELECT * FROM EntityGroup WHERE EntityID = {entityid}) E ON L.LookupID = E.GroupID
where 
(L.class like 'group')
AND (UD.UserID = 1 OR isnull(L.IsAllDiv,0) =1)","0","","1","LRA-FUSION","0","0","fusion"
"39936","cv_Contact_Search_with_company_Schutte","","select {top}
    ec.EntityContactID,
	'' as [ ],
    SC.SalesConsultant as [Sales Consultant],
    c.Category,
    AccT.AccType as [Account Type],
    D.Division, 
    t.Type as [Type],
    STB.[Sub Type], 
    dbo.fn_EntityContactGroups(EC.EntityContactID) as [Group],
    ec.EntityContactID as [Contact ID],
    AlternateContactID as [Alternate Contact ID], 
    e.Company, 
	EC.JobTitle as [Job Title], 
    ec.Title ,
    ec.Initials, 
    ec.Firstname as [First Name], 
    ec.Surname, 
    ec.Phone1, 
    ec.Phone2, 
    [Addition 5],
    [Addition 6],
    [Addition 7],
    [Addition 8] ,
    ec.Phone3, 
    ec.HomePhone as [Home Phone], 
    ec.Cell, 
    ec.Fax, 
    ec.Email, 
    Birthdate,
    Ext as [Extention],
    lbdep.Department as [Department],
     lbind.[Industry] as [Industry],
    Spouse,
    AsstTitle as [Assistant Title],
    AsstName as [Assistant Name],
    AsstPhone as [Assistant Phone],
    AsstExt as [Assistant Extention],
    eapy.Address1,
    eapy.Address2,
    eapy.Address3,
    eapy.City,
    eapy.State,
    eapy.Code,
    eapy.Region,
    eapy.Country,
    CASE WHEN ISNULL(SendEmail,0) = 0 THEN 'False' ELSE 'True' END as [Send Emails],
    CASE WHEN ISNULL(SendSMS,0) = 0 THEN 'False' ELSE 'True' END as [Send SMS],
    ec.AccountNum as [Account Number], 
    [Business Category],
    [ABC],
    right('0'+datename(dd,ec.dateadded),2)+'/'+right('0'+cast(datepart(m,ec.dateadded) as nvarchar), 2)+'/'+datename(yyyy,ec.dateadded) as [Created Date], 
    u.username as [Created by],
    EC.Additional1 as [Addition 1],
    EC.Additional2 as [Addition 2],
    EC.Additional3 as [Addition 3],
    EC.Additional4 as [Addition 4], 
    right('0'+datename(dd,ec.datemodified),2)+'/'+right('0'+cast(datepart(m,ec.datemodified) as nvarchar), 2)+'/'+datename(yyyy,ec.datemodified) as [Last Modified Date],
    OutlookID  as [Outlook ID], uu.username as [Modified By],
    (SELECT TOP 1 CONVERT(VARCHAR, CAST(CallDate as DATETIME),103) FROM CallLog WHERE ISNULL(AdvCall,0) = 1 AND EntityContactID = ec.EntityContactID ORDER BY CallDate DESC) as [Last Call],
    (SELECT TOP 1 CONVERT(VARCHAR, CAST([Date] as DATETIME), 103) FROM Appointment a 
    LEFT JOIN AppointmentContacts ac on ac.apptID = a.AppointmentID
    WHERE ac.EntityContactID = ec.EntityContactID ORDER BY [Date] DESC) as [Last Appointment]
from entitycontact as ec
left join (select lookupid as AccTypeID, value as AccType from lookup where class like 'accounttype') AccT
 on ec.accounttypeid = AccT.AccTypeID
left join (Select lookupid, value from lookup) ls1 on ls1.lookupid = EC.SalesConsID
left join entity e
 on e.entityid = ec.entityid 
left join entitycontactgroup g 
 on ec.entitycontactid = g.entitycontactid
left join EntityGroup EGroup ON EGroup.EntityID = E.EntityID 
left join (select lookupid as groupid, value as [Group] from lookup where class like 'group') Gr
 on g.groupid = Gr.groupid 
left join( select staffid as SalesConsid, FirstName + ' ' + IsNull(Surname,'') As SalesConsultant from staff) SC
on ec.salesconsid = SC.SalesConsID
left join (select lookupid as typeid, value as type from lookup where class like 'type') t
 on ec.entitytypeid = t.typeid 
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c
 on ec.entitycategoryid = c.categoryid 
left join (select lookupid as SourceTypeID, value as SourceType from lookup where class like 'Source Type') s
 on ec.ContTypeID = s.SourceTypeID 
left join (select lookupid as InterestID, value as Interest from lookup where class like 'Interest') i
 on ec.InterestID = i.InterestID 
 
left join (select lookupid as ABCID, value as ABC from lookup where class like 'ABC') lABC
 on ec.abccatid = lABC.ABCID  
 
left join (select lookupid as PositionID, value as Position from lookup where class like 'Position') p
 on ec.PositionID = p.PositionID 
left join users u
 on ec.entitycontactcreatorid = u.userid 
left join users uu on ec.EntityContactUpdaterID = uu.userid 
left join entitycontactdivision ed
 on ed.entitycontactid = ec.entitycontactid 
left join (select lookupid as DivisionID, value as Division from lookup where class like 'Divisions') D
 on D.DivisionID = (SELECT TOP 1 DivisionID FROM EntityContactDivision WHERE EntityContactID = EC.EntityContactID)
left join entityaddress eapo
 on eapo.entityaddressid = ec.postaladdrid 
left join entityaddress eapy
 on eapy.entityaddressid = ec.physicaladdrid
left join EntityContactTypes ect
 on ec.entitycontactid = ect.entitycontactid
left join entityContactMOComm ecmc
 on ec.entitycontactid = ecmc.entitycontactid
left join (select lookupid,value as [Business Category] from lookup ) lbcat
on lbcat.lookupid = ec.buscatid
left join (select lookupid,value as [Department] from lookup ) lbdep
on lbdep.lookupid = ec.DepartmentID
left join (select lookupid,value as [Industry] from lookup ) lbind
on lbind.lookupid = ec.IndustryID
left join (select LinkLookupID,value as [Sub Type] from linklookup ) STB
on STB.LinkLookupID = ec.entitysubtypeid
  left join (select lookupid,value as [Addition 5] from lookup ) lbAD1
on lbAD1.lookupid = ec.AdditionalID5
left join (select lookupid,value as [Addition 6] from lookup ) lbAD2
on lbAD2.lookupid = ec.AdditionalID6
left join (select lookupid,value as [Addition 7] from lookup ) lbAD3
on lbAD3.lookupid = ec.AdditionalID7
left join (select lookupid,value as [Addition 8] from lookup ) lbAD4
on lbAD4.lookupid = ec.AdditionalID8
{duplicate_section}
<%where%>
 GROUP BY jobtitle,ec.EntityContactID, ec.AlternatecontactID, e.Company, ec.Title,ec.Initials , ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, 
    ec.Phone3, ec.HomePhone, ec.Cell, ec.Fax, ec.Email, ec.Birthdate, ec.Ext, ec.Department, ec.Spouse, ec.AsstTitle, ec.AsstName, ec.AsstPhone, ec.AsstExt, 
        ec.Address1, ec.Address2, ec.Address3, ec.City, ec.State, ec.Code, ec.Region, ec.Country, ec.Province, ec.SendEmail, ec.SendSMS, ec.AccountNum, 
    ec.DateAdded, ec.DateModified, OutlookID,lbdep.Department,lbind.[Industry],STB.[Sub Type],
    ec.address1,ec.address2,ec.address3,ec.city,ec.region,ec.code,ec.country,
    ec.sendemail,ec.sendsms,ec.sendpost,EC.Additional2,EC.Additional3,EC.Additional4 ,[Addition 5],[Addition 5],[Addition 6],[Addition 7],[Addition 8] ,EC.Additional1,
    ec.dateadded,u.username,ec.datemodified,uu.username,eapy.Address1,eapy.Address2,
    eapy.Address3,eapy.City,eapy.State,eapy.Code,eapy.Region,eapy.Country,SC.SalesConsultant,c.Category,AccT.AccType,D.Division,t.Type,ls1.value,[Business Category],lABC.ABC, EC.JobTitle
","0","","1","LRA-FUSION","0","0","fusion"
"39937","cv_Acc_Payroll_Totals","","SELECT GrossEarnings,EmployeeDeductions,EmployerDeductions ,isnull(GrossEarnings,0) - isnull(EmployeeDeductions,0) as [NettEarnings]
FROM AccPayroll P
LEFT JOIN (SELECT Docid, sum(isnull(Amount,0)) as [GrossEarnings] FROM AccPayrollEarnings Group By DocID) PE
ON P.DocID = PE.DocID
LEFT JOIN (SELECT Docid, sum(isnull(Amount,0)) as [EmployeeDeductions] FROM AccPayrollDeductions WHERE Isnull(IsEmployerDeduction,0) = 0 Group By DocID) PED
ON P.DocID = PED.DocID
LEFT JOIN (SELECT Docid, sum(isnull(Amount,0)) as [EmployerDeductions] FROM AccPayrollDeductions WHERE Isnull(IsEmployerDeduction,0) = 1 Group By DocID) PCD
ON P.DocID = PCD.DocID
WHERE P.DocID= {docid}","0","","1","LRA-FUSION","0","0","fusion"
"39938","cv_Acc_Print_Payslip_Header","","SELECT top 1
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
DS.Footer as [<footer>],
convert(varchar,P.DatePaid,103) as [<docdate>],
S.Staffname as [<employee>],
LD.Value as [<division>],
SP.Payer as [<paidby>],
isnull(P.Comments,'') as [<notes>],
convert(varchar,cast(GrossEarnings as money),1) as [<totalgrossearnings>],
convert(varchar,cast(EmployeeDeductions  as money),1) as [<totalemplyeedeductions>],
convert(varchar,cast(isnull(GrossEarnings,0) - isnull(EmployeeDeductions,0) as money),1) as [<totalnettearnings>]
FROM AccPayroll P
LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
ON P.DivisionID = DS.DivisionID
LEFT JOIN (SELECT StaffID, ltrim(rtrim(isnull(firstname,'') + ' ' + isnull(Surname,''))) as [Staffname] FROM Staff) S
ON P.StaffID = S.StaffID
LEFT JOIN (SELECT * FROM Lookup where class like 'divisions') LD
ON P.DivisionID = LD.LookupID
LEFT JOIN (SELECT userID, StaffID FROM Users) U 
ON P.CreatedBy = U.UserID
LEFT JOIN (SELECT StaffID, ltrim(rtrim(isnull(firstname,'') + ' ' + isnull(Surname,''))) as [Payer] FROM Staff) SP
ON U.StaffID = SP.StaffID
LEFT JOIN (SELECT Docid, sum(isnull(Amount,0)) as [GrossEarnings] FROM AccPayrollEarnings Group By DocID) PE
ON P.DocID = PE.DocID
LEFT JOIN (SELECT Docid, sum(isnull(Amount,0)) as [EmployeeDeductions] FROM AccPayrollDeductions WHERE Isnull(IsEmployerDeduction,0) = 0 Group By DocID) PED
ON P.DocID = PED.DocID
LEFT JOIN (SELECT Docid, sum(isnull(Amount,0)) as [EmployerDeductions] FROM AccPayrollDeductions WHERE Isnull(IsEmployerDeduction,0) = 1 Group By DocID) PCD
ON P.DocID = PCD.DocID
WHERE P.DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"39939","cv_Acc_Print_Payslip","","{select} (
SELECT [DESCRIPTION], DEDUCTIONS,EARNINGS,Rank
FROM (
	SELECT isnull(STK.StockDescription,L.Value) as [DESCRIPTION], '' as [DEDUCTIONS], convert(varchar,cast(isnull(Amount,0) as money),1) as [EARNINGS] , 1 as [RANK]
	FROM AccPayrollEarnings PE
	LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK
	ON PE.StockID = STK.StockID
	LEFT JOIN (SELECT  GLCodeID, GLCode, GLCategoryID FROM AccGLCode) GLC 
	ON PE.StockID = - GLC.GLCodeID  
    LEFT JOIN (SELECT LookupID, Value from Lookup) L 
    ON GLC.GLCategoryID = L.LookupID 
	WHERE DocID = {docid}
	
	UNION ALL
	
	SELECT '<B>TOTAL EARNINGS:</B>', '' as [DEDUCTIONS], '<B>' + convert(varchar,cast(sum(isnull(Amount,0)) as money),1) + '</B>' as [EARNINGS] , 2 as [RANK]
	FROM AccPayrollEarnings PE
	WHERE DocID = {docid}
	
	UNION ALL
	
	SELECT '','','',3 as [Rank]
	
	UNION ALL
	
	SELECT isnull(STK.StockDescription,L.Value) as [DESCRIPTION],  convert(varchar,cast(isnull(Amount,0) as money),1) as [DEDUCTIONS],'' as [EARNINGS], 4 as [RANK]
	FROM AccPayrollDEDUCTIONS PE
	LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK
	ON PE.StockID = STK.StockID
	LEFT JOIN (SELECT  GLCodeID, GLCode, GLCategoryID FROM AccGLCode) GLC 
	ON PE.StockID = - GLC.GLCodeID  
    LEFT JOIN (SELECT LookupID, Value from Lookup) L 
    ON GLC.GLCategoryID = L.LookupID 
	WHERE DocID = {docid}
	AND isnull(isEmployerDeduction,0) = 0
	
	UNION ALL
	
	SELECT '<B>TOTAL DEDUCTIONS:</B>' as [DESCRIPTION],  '<B>'  + convert(varchar,cast(sum(isnull(Amount,0)) as money),1) + '</B>' as [DEDUCTIONS] ,'' as [EARNINGS], 5 as [RANK]
	FROM AccPayrollDEDUCTIONS PE
	WHERE DocID = {docid}
	AND isnull(isEmployerDeduction,0) = 0
)A)X
ORDER BY Rank ","0","","1","LRA-FUSION","0","0","fusion"
"39940","cv_ChangeControl_Print","","SELECT ChangeID, convert(varchar,DateAdded,111) as [DateAdded], convert(varchar,DateModified,111) as [DateModified],FName as [FormName] ,
ChangeType,Status,[Description], AddedBy, ModifiedBy,
(SELECT Top 1 CustValue from CRMSetup where Variable = 'CompanyName' and [Description] = 'Settings' ) as [Company],
L.Value as [Division],Screenshot
FROM ChangeControl CC
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [AddedBy],DefaultDivisionID FROM Users) UA ON CC.UserID  = UA.UserID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [ModifiedBy] FROM Users) UM ON CC.ModifiedUserID  = UM.UserID
LEFT JOIN Lookup L ON UA.DefaultDivisionID = L.LookupID
WHERE changeid IN ({changeids})
","0","","1","LRA-FUSION","0","0","fusion"
"39941","cv_ClientActivityListItems","","SELECT 
	ClientActivityListItemID,
	M.ModuleName as [Module],
	Case WHEN isnull(isCancelled,0) = 1 then 'Canceled' 
		 WHEN isnull(isComplete,0) = 1 AND isnull(isCancelled,0) = 0 THEN 'Completed'
		 ELSE 'Open' END as [Status],
	CASE WHEN ((ISNULL(uID.FirstName,'') + ' ' + ISNULL(uID.Surname,'') + ' (' + ISNULL(CONVERT(VARCHAR,CAL.IsAuthorisedDate, 120),'')) + ')') = '  ()' THEN 'Not Authorised' ELSE ((ISNULL(uID.FirstName,'') + ' ' + ISNULL(uID.Surname,'') + ' (' + ISNULL(CONVERT(VARCHAR,CAL.IsAuthorisedDate, 120),'')) + ')') END as [Authorised By],
	[Assigned To],
	fName as [Form],
	[Description], 
	[Reason], 
	L.Value as [Type],
	isnull(EstimatedHours,0) as [Est. Hrs.],	
        M.EstHours as [Purchased Hours]
FROM ClientActivityListItem CAL
LEFT JOIN (SELECT * FROM Lookup WHERE Class = 'TaskType') L ON CAL.ChangeTypeID = L.LookupID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Assigned To] FROM Users) U ON CAL.AssignedTo = U.UserID
LEFT JOIN Modules M ON M.ModuleID = CAL.ModuleID
LEFT JOIN (SELECT UserID, FirstName, Surname FROM Users) uID
	ON uID.UserID = CAL.IsAuthorisedBy
Where ClientActivityListID = {id}
ORDER BY ClientActivityListItemID
","0","","1","LRA-FUSION","0","0","fusion"
"39942","cv_Calc_Escalation","","UPDATE ClientActivityList
SET Escalation = 
CASE 
	WHEN datediff(hh,Dateissued,getdate()) >= 0 AND  datediff(hh,Dateissued,getdate()) < (datediff(hh,Dateissued,datedue)/ 6 ) * 1 THEN 1
	WHEN datediff(hh,Dateissued,getdate()) >= (datediff(hh,Dateissued,datedue)/ 6 ) * 1 AND  datediff(hh,Dateissued,getdate()) < (datediff(hh,Dateissued,datedue)/ 6 ) * 2 THEN 2
	WHEN datediff(hh,Dateissued,getdate()) >= (datediff(hh,Dateissued,datedue)/ 6 ) * 2 AND  datediff(hh,Dateissued,getdate()) < (datediff(hh,Dateissued,datedue)/ 6 ) * 3 THEN 3
	WHEN datediff(hh,Dateissued,getdate()) >= (datediff(hh,Dateissued,datedue)/ 6 ) * 3 AND  datediff(hh,Dateissued,getdate()) < (datediff(hh,Dateissued,datedue)/ 6 ) * 4 THEN 4
	WHEN datediff(hh,Dateissued,getdate()) >= (datediff(hh,Dateissued,datedue)/ 6 ) * 5 THEN 5
END
WHERE StatusID not in (SELECT LookupID FROM Lookup where class like 'projectstatus' and lower(value) in ('pending') )
","0","","1","LRA-FUSION","0","0","fusion"
"39943","cv_Acc_Man_LowTierOutputs","","DECLARE @PriStockID INT
DECLARE @StockID INT
DECLARE @Qty INT
DECLARE @DivID Int
DECLARE @StockIDs Varchar(8000)
DECLARE @Level INT
Declare @MainItem Int

set @Level = 0

set @MainItem = <%MainID%>

Declare @StockTable Table(TableID Int IDENTITY (1, 1),ParentID Varchar(8000),StockID Int,qty Int,DocID Int,[level] Int,ContainerID Int, QtyPer float)

Insert Into @StockTable


SELECT StockId,StockId, <%Qty%>,DocID,0,ContainerID, <%Qty%>
From AccManufacture_Output otp
where (Select Count(*) from AccStock_dep where PriStockID = otp.StockId) > 0
and otp.OutputID = @MainItem

While 
(
SELECT Count(*)
from @StockTable s
left join AccStock_dep dep on dep.PriStockID = s.stockID
where [Level] = @Level and PriStockID is not null
) > 0
Begin

Insert Into @StockTable
SELECT s.ParentID+':'+Convert(Varchar,dep.DepStockID),DepStockID,(depSellingQty*s.Qty) - (case when isnull([QtyStores],0) < 0 then 0 else isnull([QtyStores],0) end)
,DocID,@Level+1,ContainerID, depSellingQty
from @StockTable s
left join AccStock_dep dep on dep.PriStockID = s.stockID
--In Stores
LEFT JOIN (SELECT StockID, sum(qty * Ratio) as [QtyStores],LinkedTo as DivisionID FROM AccStockControl SC left join Linklookup LC on LC.LinklookupID = ContainerID  where Adjustdate <= getDate()  group by StockID,LinkedTo) SC
on SC.stockID = DepStockID
where [Level] = @Level and (depSellingQty*s.Qty) > isnull([QtyStores],0)
--Added to only incl Parents
And (Select Count(*) from AccStock_dep where PriStockID = dep.DepStockID) > 0
and PriStockID is not null

set @Level = @Level+1


END

Insert Into AccManufacture_Output(CalcUsing, DocID, StockID,Qty,SellingQty,ActualQty,Ratio,ContainerID,IsPrimaryOutput,Step,[Status],StockIDTrail,QtyPer)
Select 'Qty',ST.DocID,ST.StockID,ST.Qty,ST.Qty,null,1,ST.ContainerID,null ,(Select isnull(Max(step),0) from Accmanufacture_Output where DocID = St.DocID)+(@Level-ST.Level),null,ParentID, ST.QtyPer
from @StockTable ST
left join AccStock STK on STK.StockID = ST.StockID
left join AccManufacture_Output AO on AO.DocID = ST.DocID and AO.StockID = ST.StockID and ST.ContainerID = AO.ContainerID
where ST.Level <> 0 and Ao.OutputID is null

Insert Into AccManufacture_Detail (docid, stockid, stockcode, stockdescription, qty, unit, containerid,
comments, departmentid, rank,costpriceex,priceex, iswasted,outputid)
SELECT STO.DocID,STK.StockID,STK.StockCode,STK.StockDescription,
--STO.Qty * DepSellingQty,
round((Convert(decimal(12,8),SD.DepSellingQty) / Convert(decimal(12,8),stk.SoldByToPurchasedByRatio)) 
/ (case when isnull(SD.Strength,100) / 100 = 0 then 100 ELSE isnull(SD.Strength,100) /100 END )
* (Case when isnull(SD.Wastage,0) = 0 then 1 ELSE  isnull(SD.Wastage,0) END)
* STO.Qty,8) as [Qty To Use],
l.Value,
--added to pick the Lower Container Level STO.ContainerID
(
SELECT top 1 ContainerID
FROM AccStockControl SC 
left join Linklookup LC on LC.LinklookupID = ContainerID  
where Adjustdate <= GetDate()  
and StockID = SD.DepStockID
group by ContainerID
having sum(qty * Ratio)>=(STO.Qty*DepSellingQty)
order by sum(qty * Ratio)
)
,null,null,null,null,null,0,AO.OutputID
FROM AccStock_Dep SD 
LEFT JOIN AccStock STK ON SD.DepStockID = STK.StockID 
left join (Select * from @StockTable ST where ST.Level <> 0) STO on SD.PriStockID =  STO.StockID
left join AccManufacture_Output AO on AO.StockID = STO.StockID and AO.DocID = STO.DocID
left join Lookup l on l.LookupId = STK.SoldBy
Left join AccManufacture_Detail AD on AD.DocID = STO.DocID and Ad.StockID = STK.StockID and isnull(AD.IsWasted,0) = 0
WHERE SD.PriStockID = STO.StockID and AD.LineId is null

Insert Into AccManufacture_Detail (docid, stockid, stockcode, stockdescription, qty, unit, containerid,
comments, departmentid, rank,costpriceex,priceex, iswasted,outputid)
SELECT STO.DocID,STK.StockID,STK.StockCode,STK.StockDescription,(WastagePerc*DepSellingQty)/100,l.Value
,
--added to pick the Lower Container Level STO.ContainerID
(
SELECT top 1 ContainerID
FROM AccStockControl SC 
left join Linklookup LC on LC.LinklookupID = ContainerID  
where Adjustdate <= GetDate()  
and StockID = SD.DepStockID
group by ContainerID
having sum(qty * Ratio)>=(STO.Qty*DepSellingQty)
order by sum(qty * Ratio)
)
,null,null,null,null,null,1,AO.OutputID
FROM AccStock_Dep SD 
LEFT JOIN AccStock STK ON SD.DepStockID = STK.StockID 
left join (Select * from @StockTable ST where ST.Level <> 0) STO on SD.PriStockID =  STO.StockID
left join AccManufacture_Output AO on AO.StockID = STO.StockID and AO.DocID = STO.DocID
left join Lookup l on l.LookupId = STK.SoldBy
Left join AccManufacture_Detail AD on AD.DocID = STO.DocID and Ad.StockID = STK.StockID and isnull(AD.IsWasted,0) = 1
WHERE SD.PriStockID = STO.StockID and AD.LineId is null and isnull(WastagePerc,0) > 0


Insert Into AccMANUFACTURE_PROCESS
SELECT STO.DocID,MT.ManufType,Mt.ManufDesc,Mt.DurationInMins,null,null,null,AO.OutputID, 0
From @StockTable ST
left join AccSTOCK_ManufType MT on MT.StockID = ST.StockID
left join (Select * from @StockTable ST where ST.Level <> 0) STO on ST.StockID =  STO.StockID
left join AccManufacture_Output AO on AO.StockID = STO.StockID and AO.DocID = STO.DocID
left join AccMANUFACTURE_PROCESS AP on AP.DocID = STO.DocID and AO.OutputID = AP.OutputID and AP.ManufDesc = MT.ManufDesc
Where ST.Level <> 0 and AP.StockManufTypeID is null

Insert Into AccMANUFACTURE_QC
SELECT STO.DocID,AO.OutputID,QC.TestName,QC.MinVal,QC.TypVal,QC.maxVal,QC.UOM,''
From @StockTable ST
left join AccSTOCK_ManufQC QC on QC.StockID = ST.StockID
left join (Select * from @StockTable ST where ST.Level <> 0) STO on ST.StockID =  STO.StockID
left join AccManufacture_Output AO on AO.StockID = STO.StockID and AO.DocID = STO.DocID
left join AccMANUFACTURE_QC AP on AP.DocID = STO.DocID and AO.OutputID = AP.OutputID and AP.TestName = QC.TestName 
Where ST.Level <> 0 and Ap.ManufQCID is null

","0","","1","LRA-FUSION","0","0","fusion"
"39944","cv_ContainerQty","","SELECT ll.LinkLookupID,isnull(ll.Value,'') + '   (' + Convert(Varchar,sum(isnull(qty,0) * isnull(Ratio,0)))+')'
FROM
Linklookup LL
left join AccStockControl SC on SC.ContainerID = ll.linkLookupID and isnull(StockId,0) = <%StockID%> and Adjustdate <= GetDate() 
left join Lookup LD on LD.LookupID = ll.LinkedTo
group by StockID,ll.Value,ll.LinkLookupID
order by sum(qty * Ratio) desc
","0","","1","LRA-FUSION","0","0","fusion"
"39945","cv_Manufacture_Trans","","Select SC.StockControlID,StockCode as [Code],StockDescription as [Description], SerialNumber as [S/N], Adjustdate as [Date],case when Qty  > 0 then Qty * Ratio else null end as [IN],case when Qty < 0 then Qty * Ratio * -1 else null end as [OUT]
from AccStockControl Sc
left join AccStock STK on STK.StockID = SC.StockID
where DocType like 'Manufacturing' /*<%And%>*/
order by AdjustDate,Qty desc","0","","1","LRA-FUSION","0","0","fusion"
"39946","cv_Manufacture_Report","","Declare @ShowDetail as Varchar(500)
Set @ShowDetail = <%ShowDetail%>

Select [ID],[Job No.],[Ext. Job No.],[Division],[Code],[Manufacture Into],[Qty. to Manufacture]
,[Qty. Actually Manufacture],[Unit],[Project],[Status],[Start],[End],[Manufacturing Time] from
(
/*StartHead*/
select Distinct Convert(Varchar,M.DocID) as [ID], M.DocID as [Job No.],ExtJobNo as [Ext. Job No.], LD.Value as [Division],null as [Code], null as [Description],
null as [Manufacture Into],
null as [Qty. to Manufacture],
null as [Qty. Actually Manufacture],
null as [Unit],
Case When M.Entityid is null then 'Stock' ELSE
    Case when isnull(M.UseEc,0) = 0 then Company ELSE Contact End
End as [Manufactured For], isnull(P.ProjectName,'') as [Project],
case isnull(Completed,0) When 1 then 'Completed' else 'Open' End as [Status],
convert(varchar,(SELECT Min(StartTime) as [Start] FROM AccMANUFACTURE_PROCESS WHERE DocID = M.DocID),111) + ' ' + convert(varchar,(SELECT Min(StartTime) as [Start] FROM AccMANUFACTURE_PROCESS WHERE DocID = M.DocID),108) as [Start],
convert(varchar,(SELECT max(EndTime) as [Start] FROM AccMANUFACTURE_PROCESS WHERE DocID = M.DocID),111) + ' ' + convert(varchar,(SELECT max(EndTime) as [Start] FROM AccMANUFACTURE_PROCESS WHERE DocID = M.DocID),108) as [End],
ManufacturingTime as [Manufacturing Time],0 as rank
from AccMANUFACTURE M
LEFT JOIN Lookup LD ON M.DivisionID = LD.LookupID
LEFT JOIN (SELECT Entityid, Company FROM Entity) E
ON M.Entityid = E.Entityid and isnull(M.UseEc,0) = 0
LEFT JOIN (SELECT EntityContactID, isnull(firstname,'') + ' ' + isnull(Surname,'') as [Contact] From EntityContact) EC
ON M.EntityId = EC.EntityContactid and isnull(M.UseEc,0) = 1
LEFT JOIN (SELECT * FROM AccManuFacture_Output where isnull(isPrimaryOutput,0) = 1) MO
ON M.docID = MO.DocID
LEFT JOIN (SELECT StockID, StockCode, StockDescription,SoldBy FROM AccStock) STK
ON MO.Stockid = STK.StockID 
LEFT JOIN Lookup LS ON STK.SoldBy = LS.LookupID
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects)P
ON M.ProjectID = P.Projectid
LEFT JOIN LinkLookup LL On MO.ContainerID = LL.LinkLookupID
--Added for in-depth querying
LEFT JOIN AccManufacture_Process MP On M.docID = MP.DocID
{where}

union all
/*EndHead*/
Select Distinct Convert(Varchar,M.DocID)+':'+Convert(Varchar,MO.OutputID) as [ID], M.DocID as [Job No.],isnull(@ShowDetail,ExtJobNo) as [Ext. Job No.],isnull(@ShowDetail,LD.Value) as [Division],STK.StockCode as [Code], STK.StockDescription as [Description],
LL.Value as [Manufacture Into],
convert(varchar,cast(MO.Sellingqty as money),1) as [Qty. to Manufacture],
convert(varchar,cast(MO.Actualqty as money),1) as [Qty. Actually Manufacture],
LS.Value as [Unit],
Case When M.Entityid is null then 'Stock' ELSE
    Case when isnull(M.UseEc,0) = 0 then Company ELSE Contact End
End as [Manufactured For], isnull(P.ProjectName,'') as [Project],
isnull(MO.Status,'New') as [Status],
convert(varchar,(SELECT Min(StartTime) as [Start] FROM AccMANUFACTURE_PROCESS WHERE DocID = M.DocID),111) + ' ' + convert(varchar,(SELECT Min(StartTime) as [Start] FROM AccMANUFACTURE_PROCESS WHERE DocID = M.DocID),108) as [Start],
convert(varchar,(SELECT max(EndTime) as [Start] FROM AccMANUFACTURE_PROCESS WHERE DocID = M.DocID),111) + ' ' + convert(varchar,(SELECT max(EndTime) as [Start] FROM AccMANUFACTURE_PROCESS WHERE DocID = M.DocID),108) as [End],
ManufacturingTime as [Manufacturing Time],1 as rank
from AccManuFacture_Output MO
left join AccManufacture M on M.DocID = MO.DocID
LEFT JOIN Lookup LD ON M.DivisionID = LD.LookupID
LEFT JOIN (SELECT Entityid, Company FROM Entity) E
ON M.Entityid = E.Entityid and isnull(M.UseEc,0) = 0
LEFT JOIN (SELECT EntityContactID, isnull(firstname,'') + ' ' + isnull(Surname,'') as [Contact] From EntityContact) EC
ON M.EntityId = EC.EntityContactid and isnull(M.UseEc,0) = 1
LEFT JOIN (SELECT StockID, StockCode, StockDescription,SoldBy FROM AccStock) STK
ON MO.Stockid = STK.StockID 
LEFT JOIN Lookup LS ON STK.SoldBy = LS.LookupID
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects)P
ON M.ProjectID = P.Projectid
LEFT JOIN LinkLookup LL On MO.ContainerID = LL.LinkLookupID
--Added for in-depth querying
LEFT JOIN AccManufacture_Process MP On M.docID = MP.DocID
{where}
)a

ORDER BY a.[Job No.] Desc,rank 
","0","","1","LRA-FUSION","0","0","fusion"
"39947","cv_Acc_Manufacture_Print_IntJobCard","","DECLARE @DocID as integer
SET @DocID = {docid}

SELECT  
A.Code,
A.[Description],
A.[Inv. Qty],
A.[Unit],
'&nbsp;' as [Qty Picked], 
'&nbsp;' as [Picked By], 
'&nbsp;' as [Qty Picked], 
'&nbsp;' as [Picked By]
FROM 
(

	SELECT 
	'<B>' + StockCode + '</B>' as [Code], 
	'<B>' + StockDescription + '</B>' as [Description],
	'<B>' + convert(varchar,round(isnull(Qty,0),2)) + '</B>' as [Inv. Qty],
	'<B>' + L.Value + '</B>' as [Unit],
	AMO.OutputID, 1 as [Rank]
	FROM AccManufacture_Output AMO
	LEFT JOIN (SELECT StockID, SoldBy, StockCode, StockDescription FROM AccStock ) STK
		ON AMO.StockID = STK.StockID
	LEFT JOIN Lookup L
		ON STK.SoldBy = L.Lookupid
	WHERE AMO.DocID = @DocID
	
	UNION ALL
	
	SELECT 
	'&nbsp;' as [Code], 
	StockCode + ' : ' + StockDescription as [Description],
	convert(varchar,round(isnull(Qty,0),2)) as [Inv. Qty],
	L.Value as [Unit],
	AMD.OutputID, 2 as [Rank]
	FROM AccManufacture_Detail AMD
	LEFT JOIN (SELECT StockID, SoldBy FROM AccStock ) STK
		ON AMD.StockID = STK.StockID
	LEFT JOIN Lookup L
		ON STK.SoldBy = L.Lookupid
	WHERE AMD.DocID = @DocID
) A
ORDER BY OutputID, Rank



","0","","1","LRA-FUSION","0","0","fusion"
"39948","cv_Acc_Manufacture_Print_TotalGrams","","DECLARE @DocID as integer
SET @DocID = {docid}

SELECT dbo.fnFormatNumber(sum(Case when L.Value like '%kilograms%' then 1000 ELSE 1 END * qty))
FROM AccManufacture_Detail AMD
LEFT JOIN (SELECT StockID, SoldBy FROM AccStock ) STK
	ON AMD.StockID = STK.StockID
LEFT JOIN Lookup L
	ON STK.SoldBy = L.Lookupid
WHERE AMD.DocID = @DocID
AND (L.Value like 'Grams' OR L.Value like 'Kilograms')



","0","","1","LRA-FUSION","0","0","fusion"
"39949","cv_MRP_Edit_Man","","Declare @Date as datetime
set @Date = '{date}'



SELECT Convert(varchar,Stk.StockID)+':'+Convert(varchar,Div.LookupID),Div.Value as [Division],
LL.Value as [Type],Stk.StockCode as [Code], Stk.StockDescription as [Description],E.Company as [Preferred Supplier],L.Value as [Unit], 
dbo.fnFormatNumber(sum(isnull([QtyStores],0))) as [Total In Stores] ,
dbo.fnFormatNumber(sum(isnull(SO.QtySO,0)) - sum(isnull(DN.Qty,0)))  as [On Sales Order],
dbo.fnFormatNumber(sum(isnull(MC.Qty,0))) as [Required For Manufacture],
dbo.fnFormatNumber(
sum(isnull([QtyStores],0)) --In stores
-
(sum(isnull(SO.QtySO,0)) - sum(isnull(DN.Qty,0))) --On S.O. & Required
-
sum( isnull(MC.Qty,0) )  --For Manufacturing 
)as [Available],
dbo.fnFormatNumber((sum(isnull(PO.QtyPO,0)) - sum(isnull(GRN.Qty,0))) * SoldByToPurchasedByRatio)  as [On Purchase Order],
dbo.fnFormatNumber(sum(isnull(uManuf.[QtyUnderManuf],0))) as [Under Manufacture],
isnull(Stk.LeadTime,0) as [Lead Time (Hrs)],
isnull(convert(Varchar,min(PO.ETA),111),'') as [Next Arrival],
dbo.fnFormatNumber(CASE WHEN 
	(sum(isnull([QtyStores],0)) - (sum(isnull(SO.QtySO,0)) - sum(isnull(DN.Qty,0))) - sum( isnull(MC.Qty,0) ))  --Available
	+ ((sum(isnull(PO.QtyPO,0)) - sum(isnull(GRN.Qty,0))) * SoldByToPurchasedByRatio) --On Purchase Order
	+ (sum(isnull(uManuf.[QtyUnderManuf],0))) -- Under Manufacture
	<=
	isnull(STK.ReOrderLevel,0)
	THEN 
	isnull(STK.FulFillment,0) --Fulfillment
	-
	(sum(isnull([QtyStores],0)) - (sum(isnull(SO.QtySO,0)) - sum(isnull(DN.Qty,0))) - sum( isnull(MC.Qty,0) ))  --Available
	-
	(((sum(isnull(PO.QtyPO,0)) - sum(isnull(GRN.Qty,0))) * SoldByToPurchasedByRatio) + (sum(isnull(uManuf.[QtyUnderManuf],0)))) -- ON PO / Being Manufactured
	ELSE 
	0
END) AS [Recommended Qty For Purchase],
isnull(SB.FC,MRPF.Amount) as [Monthly Forecast],isnull(SB.Act,MRPF.ActAmount) as [Actual for Job],Sum(SC.QtyStores)-isnull(SB.Act,MRPF.ActAmount) as [Difference]
FROM AccStock STK
Cross Join (SELECT LookupID, Value from Lookup where class like 'Divisions') Div
LEFT JOIN (SELECT SP1.StockID, SP1.DivisionID, SP1.SupplierID, SP1.CostPriceEx  FROM AccStockPrice SP1
			LEFT JOIN (SELECT StockID, DivisionID, min(CostPriceEx) as [CostPriceEx] FROM AccStockPrice where isnull(IsContract,0) =0 AND @Date between ValidFrom AND ValidTo Group by StockID, DivisionID) SP2 
			ON SP1.StockID = SP2.StockID and SP1.DivisionID = SP2.DivisionID AND SP1.CostPriceEx = SP2.CostPriceEx
			where isnull(SP1.IsContract,0) =0 AND @Date between SP1.ValidFrom AND SP1.ValidTo AND SP2.StockID is Not null
			GROUP BY  SP1.StockID, SP1.DivisionID, SP1.SupplierID, SP1.CostPriceEx) STKP
ON STK.StockID = STKP.StockID AND Div.LookupID = STKP.DivisionID
--In Stores 
LEFT JOIN (SELECT StockID,DivisionID, sum(Qty * Ratio) as [QtyStores] FROM AccStockControl WHERE AdjustDate <= @Date  Group by StockID,DivisionID) SC
ON STK.StockID = SC.StockID AND Div.LookupID = SC.DivisionID
--On Purchase Order
LEFT JOIN (SELECT StockID, isnull(CD.DivisionID, CM.DivisionID) as [DivisionID], Sum(Qty) as [QtyPO],min(ETADate) as [ETA] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType,DateCompleted, DivisionID FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Purchase Order'
            AND CM.DateCompleted <= @Date
            Group by StockID, isnull(CD.DivisionID, CM.DivisionID) ) PO
ON Stk.StockID = PO.StockID  AND Div.LookupID = PO.DivisionID
--ON GRN
LEFT JOIN (SELECT StockID, isnull(CD.DivisionID, CM.DivisionID) as [DivisionID], Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType, DateCompleted, DivisionID FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Goods Received Note'
            AND CM.DateCompleted <= @Date
            Group by StockID,  isnull(CD.DivisionID, CM.DivisionID)  ) GRN
ON STK.StockID = GRN.StockID AND  Div.LookupID = GRN.DivisionID  
--On Sales Order
LEFT JOIN (SELECT StockID, isnull(DD.DivisionID, DM.DivisionID) as [DivisionID], Sum(DD.Qty * isnull(DDM.Qty,1)) as [QtySO] FROM DEBTOR_DETAIL DD
            LEFT JOIN (SELECT DOCID, DocType, DateCompleted, DivisionID FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
            ON DD.DocID = DM.DocID
            LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL) DDM
            ON DD.ComponentOfLineID = DDM.LineID
            WHERE DM.DocType in ('Sales Order', 'Quote')
            AND DM.DateCompleted <= @Date
            Group by StockID, isnull(DD.DivisionID, DM.DivisionID) ) SO 
ON Stk.StockID = SO.StockID  AND Div.LookupID = SO.DivisionID
--On Dispatch Notes
LEFT JOIN (SELECT StockID, isnull(DD.DivisionID, DM.DivisionID) as [DivisionID], Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
            LEFT JOIN (SELECT DOCID, DocType, DateCompleted, DivisionID FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
            ON DD.DocID = DM.DocID
            LEFT JOIN (SELECT LineID, Qty, DivisionID FROM DEBTOR_DETAIL ) DDM
            ON isnull(DD.ComponentOfLineID,0) = DDM.LineID
            WHERE DM.DocType = 'Dispatch Note'
            AND DM.DateCompleted <= @Date
            Group by StockID,  isnull(DD.DivisionID, DM.DivisionID) ) DN
ON STK.StockID = DN.StockID AND Div.LookupID = DN.DivisionID
--Required For Manufacture
LEFT JOIN (SELECT MD.StockID, MM.DivisionID, Sum(MD.Qty) as [Qty],MM.RaisedByDocType FROM AccMANUFACTURE_DETAIL MD
            LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType ,DateCompleted,DivisionID FROM AccMANUFACTURE) MM
            ON MD.DocID = MM.DocID
            WHERE isnull(MM.IsComplete,0) = 0 
            AND MM.DateCompleted <= @Date
            AND MM.RaisedByDocType <> 'Sales Order'
            Group by MD.StockID, MM.DivisionID,MM.RaisedByDocType) MC
ON STK.StockID = MC.StockID AND Div.LookupID  = MC.DivisionID
--Under Manufacture
LEFT JOIN (SELECT MO.StockID, MM.DivisionID, sum(MO.Qty) as [QtyUnderManuf] FROM AccMANUFACTURE_Output MO
            LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType, DivisionID FROM AccMANUFACTURE) MM
            ON MO.DocID = MM.DocID
            WHERE isnull(MM.IsComplete,0) = 0 
            Group by MO.StockID, MM.DivisionID) UManuf
ON STK.StockID = UManuf.StockID AND Div.LookupID = uManuf.DivisionID

LEFT JOIN Lookup L on  STK.SoldBy = L.LookupID 
LEFT JOIN Lookup LL on STK.StockType = LL.LookupID 
LEFT JOIN (SELECT EntityID, Company From Entity) E
ON StkP.SupplierID = E.Entityid
--Added for the Saved Forecast
left join MRPForecast MRPF 
on MRPF.DivisionID = Div.lookupID and STK.StockID = MRPF.StockID 
and ForecastMonth = Convert(varchar,Year(@Date))+'-'+Convert(varchar,Month(@Date))+'-01'
left join
(

Select DepStockID,Sum(DepSellingQty*Amount) as [FC],Sum(DepSellingQty*ActAmount) as [Act],DivisionID
    from MRPForecast MRPFC
    left join AccStock_dep Dep
    on dep.PriStockId = MRPFC.StockID
    where MRPFC.StockID in (/*<PriStock>*/-1)
    and ForecastMonth = Convert(varchar,Year(@Date))+'-'+Convert(varchar,Month(@Date))+'-01'
    group by DepStockID,DivisionID
	
) SB on SB.DepStockID = STK.StockID and Div.LookupID = SB.DivisionID
{where}

Group by STK.StockId, LL.Value, STK.StockCode,STK.StockDescription,L.Value,STK.LeadTime,STK.FulFillment,E.Company,MRPF.Amount,Div.LookupID,MRPF.ActAmount,SB.FC,SB.Act, STK.SoldByToPurchasedByRatio, STK.ReOrderLevel, Div.Value

{having}

ORDER BY LL.Value, Stk.StockDescription","0","","1","LRA-FUSION","0","0","fusion"
"39950","cv_MRPEdit_Sub","","DECLARE @PriStockID INT
DECLARE @StockID INT
DECLARE @Qty Decimal(12,8)
DECLARE @DivID Int
DECLARE @StockIDs Varchar(8000)
DECLARE @Level INT

Set NoCount On

set @Level = 0

Declare @Date as datetime
set @Date = '{date}'

Declare @StockTable Table(TableID Int IDENTITY (1, 1),ParentID Varchar(8000),StockID Int,qty Decimal(12,8),qtyAct Decimal(12,8),DivID Int,[level] Int)

Insert Into @StockTable
Select 0,StockID,Amount,ActAmount,DivisionID,0 from MRPForeCast
where isnull(Amount,0)+isnull(ActAmount,0) > 0
<%And%>


While 
(
SELECT Count(*)
from @StockTable s
left join AccStock_dep dep on dep.PriStockID = s.stockID
where [Level] = @Level and PriStockID is not null
) > 0
Begin

Insert Into @StockTable
SELECT s.ParentID+':'+Convert(Varchar,dep.DepStockID),DepStockID,s.Qty * depSellingQty,s.QtyAct * depSellingQty,DivID,@Level+1
from @StockTable s
left join AccStock_dep dep on dep.PriStockID = s.stockID
where [Level] = @Level and PriStockID is not null


set @Level = @Level+1


END
--Select * from @StockTable

/*
SELECT 
Convert(Varchar(500),s.StockID)+':'+Convert(Varchar(500),TableID) as [ID],LL.Value as [Type],s.ParentID,s.[Level] as [Rank]
,case when s.[Level]=0 then 'Main Item'end as [Item],STK.StockCode as [Code],STK.StockDescription as [Description]
,LL.Value as [Group],E.Company as [Preferred Supplier],L.Value as [Unit],s.Qty as [Required]
,convert(varchar,sum(cast(round(isnull(SC.QtyStores,0) ,4) as money)),1) as [On Hand]
,sum(cast(round(isnull(SC.QtyStores,0) ,4) as money)) - s.Qty as [To Aquire]
FROM @StockTable s
Left join AccStock STK on STK.StockID = s.StockID
Cross Join (SELECT LookupID from Lookup where class like 'Divisions') Div
--In Stores
LEFT JOIN (SELECT StockID, sum(qty * Ratio) as [QtyStores],DivisionID FROM AccStockControl where Adjustdate <= @Date  group by StockID,DivisionID) SC
ON STK.StockID = SC.StockID AND Div.LookupID = SC.DivisionID
LEFT JOIN Lookup L on  STK.SoldBy = L.LookupID 
LEFT JOIN Lookup LL on STK.StockType = LL.LookupID 
LEFT JOIN (SELECT EntityID, Company From Entity) E
ON Stk.SupplierID = E.Entityid
--{where} 
where Rank > 0
group by s.DivID,s.StockID,s.TableID,LL.Value,s.ParentID,s.level,STK.StockCode,STK.StockDescription,E.Company
		 ,L.Value,s.qty
ORDER BY s.DivID,ParentId,TableID,Rank,LL.Value, Stk.StockDescription

*/

SELECT 
s.StockID,LL.Value as [Type],STK.StockCode as [Code],STK.StockDescription as [Description]
,LL.Value as [Group],E.Company as [Preferred Supplier],L.Value as [Unit],Sum(s.Qty) as [Forecasted],Sum(s.QtyAct) as [Actual]
,convert(varchar,sum(cast(round(isnull(SC.QtyStores,0) ,4) as money)),1) as [On Hand]
,sum(cast(round(isnull(SC.QtyStores,0) ,4) as money)) - sum(s.QtyAct) as [To Aquire]
FROM @StockTable s
Left join AccStock STK on STK.StockID = s.StockID
Cross Join (SELECT LookupID from Lookup where class like 'Divisions') Div
--In Stores
LEFT JOIN (SELECT StockID, sum(qty * Ratio) as [QtyStores],DivisionID FROM AccStockControl where Adjustdate <= @Date  group by StockID,DivisionID) SC
ON STK.StockID = SC.StockID AND Div.LookupID = SC.DivisionID
LEFT JOIN Lookup L on  STK.SoldBy = L.LookupID 
LEFT JOIN Lookup LL on STK.StockType = LL.LookupID 
LEFT JOIN (SELECT MAX(SupplierID) as [SupplierID], StockID, DivisionID FROM AccStockPrice where @Date Between ValidFrom AND ValidTo GROUP by StockID, DivisionID ) SP
ON STK.StockID= SP.StockID AND SC.DivisionID = SP.DivisionID
LEFT JOIN (SELECT EntityID, Company From Entity) E
ON SP.SupplierID = E.Entityid

--{where} 
where s.Level > 0
group by s.StockID,LL.Value,STK.StockCode,STK.StockDescription,E.Company
         ,L.Value
ORDER BY LL.Value, Stk.StockDescription

Set NoCount Off
--Select * from @StockTable


","0","","1","LRA-FUSION","0","0","fusion"
"39951","cv_Acc_Stock_Valuation_Rpt","","DECLARE @StartDate as datetime
DECLARE @EndDate as datetime 
SET @StartDate =   '{startdate}'
SET @EndDate = '{enddate}'

SELECT newID(),
LL.Value as [Container],
upper(L.Value) as [GL Group],
STK.StockCode as [Code],
STK.StockDescription as [Description],
STK.Barcode,
LT.Value as [Stock Type],
LSB.Value as [Units],
convert(varchar,cast(sum(CASE WHEN SCV2.AdjustQty > 0 THEN SCV2.AdjustQty ELSE 0 END * isnull(SC.Ratio,0)) as money),1) as [Qty In],
convert(varchar,cast(sum(CASE WHEN SCV2.AdjustQty < 0 THEN SCV2.AdjustQty ELSE 0 END * isnull(SC.Ratio,0)) as money),1) as [Qty Out],
convert(varchar,cast(sum(isnull(SCV2.AdjustQty,0) * isnull(SC.Ratio,0)) as money),1) as [Nett Movement],
convert(varchar,cast(sum(isnull(SCV.AdjustQty,0)* isnull(SC.Ratio,0)) as money),1) as [Qty On Hand],
CASE SCV.StockValuationMethod WHEN 1 THEN 'FIFO' WHEN 2 THEN 'LIFO' WHEN 3 THEN 'Average' END as [Method],
convert(varchar,cast(sum(isnull(SCV.AdjustQty,0) * isnull(SCV.LastUnitPrice,0) + isnull(SCV.AdjustQty,0) * isnull(SCV.CalculatedUnitCost,0)) as money),1) as [Total Value]
FROM AccStockControl SC
LEFT JOIN (SELECT StockID, StockCode, StockDescription, SoldBy, JournalID, StockType, Barcode  FROM AccStock) STK
	ON SC.StockID = STK.StockID
LEFT JOIN (SELECT * FROM Lookup) LT
	ON LT.LookupID = STK.StockType 
LEFT JOIN (SELECT * FROM Lookup) LSB
	ON STK.SoldBy = LSB.LookupID 
LEFT JOIN (SELECT * FROM LinkLookup )LL 
	ON SC.ContainerID = LL.LinkLookupID
LEFT JOIN (SELECT * FROM AccStockControlValuation) SCV
	ON SC.StockControlID = SCV.StockControlID
LEFT JOIN (SELECT * FROM AccStockControlValuation WHERE AdjustDate BETWEEN @StartDate AND @EndDate ) SCV2
	ON SC.StockControlID = SCV2.StockControlID
LEFT JOIN (SELECT LookupID, Value 
		FROM Lookup 
		where class like 'JournalType' 
		UNION ALL
		SELECT -1, 'ACCOUNTS RECEIVABLE'
		UNION ALL
		SELECT -2, 'OUTPUT VAT CONTROL' 
		UNION ALL
		SELECT -3, 'COST OF SALES' 
		UNION ALL
		SELECT -4, 'INVENTORY' 
		UNION ALL
		SELECT -5, 'INPUT VAT CONTROL' 
		UNION ALL
		SELECT -6, 'BANK' 
		UNION ALL
		SELECT -8, 'FOREIGN EXCHANGE' 
		UNION ALL
		SELECT -9, 'ACCOUNTS PAYABLE' 
		UNION ALL
		SELECT -10, 'UN-RECEIVED INVENTORY' 
		UNION ALL
		SELECT -11, 'PREPAID EXPENSE' 
		UNION ALL
		SELECT -12, 'CAPITAL' 
		UNION ALL
		SELECT -13, 'INVENTORY ADJUSTMENT' 
		UNION ALL
		SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
		UNION ALL
		SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
		UNION ALL
		SELECT -16, 'DISCOUNT ALLOWED' 
		UNION ALL
		SELECT -17, 'DISCOUNT RECEIVED' 
		UNION ALL
		SELECT -18, 'OPENING BALANCE' 
		) L 
	ON STK.JournalID = L.LookupID
WHERE SC.AdjustDate <= @EndDate
{where}
GROUP BY LL.Value, STK.StockCode, STK.StockDescription, LSB.Value,SCV.StockValuationMethod,L.Value,LT.Value, STK.Barcode 
{having}
ORDER BY L.Value,STK.StockCode,LL.Value

","0","","1","LRA-FUSION","0","0","fusion"
"39952","cv_StockTake_Report","","SELECT 
AccStockTakeID,
Convert(varchar,DateCaptured,111) as [Date],
LD.Value as [Division],
LLC.Value as [Container],
STK.StockCode as [Code],
STK.StockDescription as [Description], 
LT.Value as [Type],
isnull(ST.SerialNumber,'') as [S/N],
LU.Value as [Unit],
sum(isnull(SC.[QtyStores],0)) as [Qty On System],
isnull(ST.QtyCaptured,0) as [Qty Observed],
isnull(ST.QtyCaptured,0)- sum(isnull(SC.[QtyStores],0))  as [Discrepancy],
U.Capturer as [Captured By]
FROM AccStockTake ST
LEFT JOIN (	SELECT StockID,DivisionID, (qty * Ratio) as [QtyStores],ContainerID,  
			isnull(SerialNumber,'') as [SerialNumber], [Length], AdjustDate, DocType
			FROM AccStockControl) SC
	ON ST.StockID = SC.StockID AND ST.ContainerID = SC.ContainerID AND ST.DivisionID = SC.DivisionID 
	AND isnull(ST.SerialNumber,'') = isnull(SC.SerialNumber,'') AND SC.AdjustDate <= ST.DateCaptured
	AND NOT (SC.DocType = 'Stock Take' AND convert(varchar,SC.AdjustDate,111) = Convert(Varchar,ST.DateCaptured,111))
LEFT JOIN LinkLookup LLC
	ON ST.ContainerID = LLC.LinkLookupID
LEFT JOIN Lookup LD
	ON ST.DivisionID = LD.LookupID
LEFT JOIN (SELECT StockID ,StockCode, StockDescription, StockType, SoldBy FROM AccStock) STK
	ON ST.StockID = STK.StockID
LEFT JOIN Lookup LT
	ON LT.LookupID = STK.StockType
LEFT JOIN Lookup LU
	ON STK.SoldBy = LU.LookupID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') AS [Capturer] From Users) U
	ON ST.CapturedBy = U.UserID
{where}
GROUP BY ST.AccStockTakeID, ST.DateCaptured, LD.Value, LLC.Value, STK.StockCode, STK.StockDescription, LT.Value,
isnull(ST.SerialNumber,''), LU.Value, ST.QtyCaptured, U.Capturer
ORDER BY LD.Value,STK.StockCode,  ST.DateCaptured ","0","","1","LRA-FUSION","0","0","fusion"
"39953","pmailLogin","","http://fusionsoftware.co.za","0","","1","LRA-FUSION","0","0","fusion"
"39954","pmailLists","","http://mailer.fusionsoftware.co.za/lists","0","","1","LRA-FUSION","0","0","fusion"
"39955","pmailDash","","http://fusionsoftware.co.za/","0","","1","LRA-FUSION","0","0","fusion"
"39956","pmailNewMailer","","http://mailer.fusionsoftware.co.za","0","","1","LRA-FUSION","0","0","fusion"
"39957","pmailReports","","http://mailer.fusionsoftware.co.za/message-reports","0","","1","LRA-FUSION","0","0","fusion"
"39958","cv_Acc_Quick_Find_Entity","","select Distinct Top 50 E.entityid,isnull(Accountnum,'') as [Acc. No.], Company, t.Value as Type, c.Value as Category
from entity e
left join lookup t on t.lookupid = e.entitytypeid
left join lookup c on c.lookupid = e.entitycategoryid
left join (SELECT DocNo,EntityID FROM DEBTOR_MASTER Union ALL select DocNo,EntityID FROM CREDITOR_MASTER) D ON E.EntityID = D.EntityID
where (((company like '%<%replace%>%' OR isnull(Accountnum,'') like  '%<%replace%>%')) 
AND (convert(varchar,isnull(D.DocNo,0)) like '%<%replace2%>%'))
and 
(isnull(IsSupplier,0) = {issupplier})
order by company","0","","1","LRA-FUSION","0","0","fusion"
"39959","cv_Acc_SalesByStock_RPT","","DECLARE @StartDate as datetime
DECLARE @EndDate as datetime
Set @StartDate = '{startdate}'
Set @EndDate = '{enddate}'

SELECT {opt} First as [Stock ID], StockCode as [Code], StockType as [Type], Convert(Varchar, DateCompleted, 103) as [Date], StockDescription as [Description],
Qty, Units, convert(Varchar,Cast(PriceEx as money),1) as [Unit Price Ex.], convert(Varchar,Cast(TotalEx as money),1) as [Total Price Ex.]
FROM (

	SELECT convert(varchar,DD.StockID) as [First], DD.StockID, STK.StockCode,lst.value as [StockType], DM.DateCompleted, STK.StockDescription, 
	sum(case DocType when 'Credit Note' then -1 * DD.QTY else DD.Qty END) as [QTY] ,
	LSB.Value as [Units],DD.PriceEx, 
	sum(DD.PriceEx * case DocType when 'Credit Note' then -1 * DD.QTY else DD.Qty END) as [TotalEx],
	 STK.IsTangible, 1 as [Rank]
	FROM DEBTOR_DETAIL DD
	LEFT JOIN (SELECT DocID, DateCompleted, DocType,DocStatus FROM DEBTOR_MASTER) DM
	ON DD.DocID = DM.DocID
	LEFT JOIN AccStock STK ON DD.StockID = STK.StockID
	LEFT JOIN Lookup LSB ON STK.SoldBy = LSB.LookupID 
	LEFT JOIN Lookup LST ON STK.StockType = LST.LookupID 
	where DD.stockid > 0 and DM.DocType in ('Credit Note' , 'Invoice') and DM.datecompleted between @StartDate AND @EndDate
	{where}
	Group by DD.StockID, STK.StockCode,STK.StockDescription, LSB.Value, DD.PriceEx,STK.IsTangible,DM.DateCompleted,lst.value
	
	Union all
	
	SELECT 'TOTAL' as [First],DD.StockID, null,null,null,null,
	sum(case DocType when 'Credit Note' then -1 * DD.QTY else DD.Qty END) as [QTY],null,null,
	sum(DD.PriceEx * case DocType when 'Credit Note' then -1 * DD.QTY else DD.Qty END) as [TotalEx], STK.IsTangible, 2 as [Rank]
	FROM DEBTOR_DETAIL DD
	LEFT JOIN (SELECT DocID, DateCompleted, DocType,DocStatus FROM DEBTOR_MASTER) DM
	ON DD.DocID = DM.DocID
	LEFT JOIN AccStock STK ON DD.StockID = STK.StockID
	where DD.stockid > 0 and DM.DocType in ('Credit Note' , 'Invoice') and DM.datecompleted between @StartDate AND @EndDate
	{where}
	Group by DD.StockID, STK.IsTangible
	
	)A
ORDER By a.StockID,A.Rank, A.DateCompleted","0","","1","LRA-FUSION","0","0","fusion"
"39960","cv_Acc_Undispatched","","SELECT DD.StockID, DD.StockCode,DD.StockDescription, DD.Qty, DD.ContainerID, DD.DivisionID, DD.ReportCategoryId, DD.PriceEx,DD.Priceincl,DD.DiscPerc,
DD.TotalIncl,DD.Comments,DD.CostPriceEx,
isnull(DD.qty,0) - sum(isnull(DDi.Qty,0)) as [QtyRemaining]   
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, PreviousDOCID FROM DEBTOR_MASTER where DocType = 'Dispatch Note') DMi
ON DD.DocID = DMi.PreviousDocID
LEFT JOIN (SELECT DocID, StockID, Qty FROM DEBTOR_DETAIL ) DDi
ON DMi.DocID = DDi.DocID AND DD.StockID  = DDi.StockID
LEFT JOIN (SELECT StockID, IsTangible FROM AccStock) STK
ON DD.StockID = STK.StockID
Where isnull(STK.istangible,0) = 1 AND DD.DocID = {docid}
Group by DD.StockID, DD.StockCode,DD.StockDescription, DD.Qty, DD.ContainerID, DD.DivisionID, DD.ReportCategoryId, DD.PriceEx,DD.Priceincl,
DD.TotalIncl,DD.Comments,DD.CostPriceEx, DD.DiscPerc","0","","1","LRA-FUSION","0","0","fusion"
"39961","cv_Acc_ReCalcMarkups","","UPDATE AccStockPrice
SET
CostPriceEx = SD.MaterialCost,
ForexDepTotal = SD.MaterialCost,
Markup = SP.SellingPriceEx /  SD.MaterialCost,
LastUpdated = getdate()
FROM AccStockPrice SP
LEFT JOIN (	SELECT Dep.PriStockID,
			sum((isnull(SP.CostPriceEx,0) / STK.Ratio) * round(isnull(Wastage,1) * round(depsellingqty,5) / Case WHEN isnull(Dep.Strength,100) / 100 = 0 then 1 ELSE isnull(Dep.Strength,100) / 100 END, 5)) as [MaterialCost]
			FROM AccStock_Dep Dep
			LEFT JOIN (SELECT StockID,StockCode, StockDescription ,isnull(SoldbytoPurchasedByRatio,1) as [Ratio], SoldBy,Weight FROM AccSTOCK ) STK
			ON Dep.DepStockID = STK.StockID
			LEFT JOIN (SELECT StockID, PriceCategoryID, max(CostPriceEx) as [CostPriceEx] FROM AccStockPrice where getdate() between ValidFrom AND ValidTo GROUP BY StockID, PriceCategoryID) SP
			ON Dep.DepStockID = SP.StockID AND Dep.PriceCategoryID = SP.PriceCategoryID
			Group By Dep.PriStockID
			) SD
ON SP.StockID = SD.PriStockID 

WHERE isnull(SP.UseLandedCost,0) = 1
AND getdate() between SP.ValidFrom AND SP.ValidTo
AND Markup <> SP.SellingPriceEx /  SD.MaterialCost","0","","1","LRA-FUSION","0","0","fusion"
"39962","cv_acc_ReCalcMarkups_Report","","SELECT 
STK.StockCode as [Code], STK.StockDescription as [Description],
dbo.fnformatnumber(CostPriceEx) as [Current Cost], 
dbo.fnformatnumber(SD.MaterialCost) as [New Cost],
cast((Markup -1 ) * 100 as money)  as [Current Markup], cast(((SellingPriceEx /  SD.MaterialCost) -1 ) * 100 as money) as [New Markup]
FROM AccStockPrice SP
LEFT JOIN (	SELECT Dep.PriStockID,
			sum((isnull(SP.CostPriceEx,0) / STK.Ratio) * round(isnull(Wastage,1) * round(depsellingqty,5) / Case WHEN isnull(Dep.Strength,100) / 100 = 0 then 1 ELSE isnull(Dep.Strength,100) / 100 END, 5)) as [MaterialCost]
			FROM AccStock_Dep Dep
			LEFT JOIN (SELECT StockID,StockCode, StockDescription ,isnull(SoldbytoPurchasedByRatio,1) as [Ratio], SoldBy,Weight FROM AccSTOCK ) STK
			ON Dep.DepStockID = STK.StockID
			LEFT JOIN (SELECT StockID, PriceCategoryID, max(CostPriceEx) as [CostPriceEx] FROM AccStockPrice where getdate() between ValidFrom AND ValidTo GROUP BY StockID, PriceCategoryID) SP
			ON Dep.DepStockID = SP.StockID AND Dep.PriceCategoryID = SP.PriceCategoryID
			Group By Dep.PriStockID
			) SD
ON SP.StockID = SD.PriStockID 
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK
ON SP.StockID = STK.StockID
WHERE isnull(SP.UseLandedCost,0) = 1
AND getdate() between SP.ValidFrom AND SP.ValidTo
AND Markup <> SP.SellingPriceEx /  SD.MaterialCost
ORDER BY STK.StockCode","0","","1","LRA-FUSION","0","0","fusion"
"39963","cv_Acc_ReCalcPrices_Report","","SELECT STK.StockCode as [Code], STK.StockDescription as [Description],
dbo.fnformatnumber(SP.CostPriceEx) as [Current Cost], 
dbo.fnformatnumber(sum(SD.MaterialCost)) as [New Cost],
dbo.fnformatnumber(SP.SellingPriceEx) as [Current Selling Price], 
dbo.fnformatnumber(sum(SD.MaterialCost) * SP.Markup) as [New Selling Price]
FROM AccStockPrice SP
LEFT JOIN (	SELECT Dep.PriStockID, StockCode, StockDescription,
			sum((isnull(SP.CostPriceEx,0) / STK.Ratio) * round(isnull(Wastage,1) * round(depsellingqty,5) / Case WHEN isnull(Dep.Strength,100) / 100 = 0 then 1 ELSE isnull(Dep.Strength,100) / 100 END, 5)) as [MaterialCost]
			FROM AccStock_Dep Dep
			LEFT JOIN (SELECT StockID,StockCode, StockDescription ,isnull(SoldbytoPurchasedByRatio,1) as [Ratio], SoldBy,Weight FROM AccSTOCK ) STK
			ON Dep.DepStockID = STK.StockID
			LEFT JOIN (SELECT StockID, PriceCategoryID, max(CostPriceEx) as [CostPriceEx] FROM AccStockPrice where getdate() between ValidFrom AND ValidTo GROUP BY StockID, PriceCategoryID) SP
			ON Dep.DepStockID = SP.StockID AND Dep.PriceCategoryID = SP.PriceCategoryID
			Group By Dep.PriStockID,StockCode, StockDescription
			) SD
ON SP.StockID = SD.PriStockID 
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK
ON SP.StockID = STK.StockID
WHERE isnull(SP.UseLandedCost,0) = 1
AND getdate() between SP.ValidFrom AND SP.ValidTo
AND round(SellingPriceEx,2) <>  Round(SD.MaterialCost * Markup,2)
Group by STK.StockCode,STK.StockDescription,SP.SellingPriceEx,SP.Markup,SP.CostPriceEx
ORDER BY STK.StockCode","0","","1","LRA-FUSION","0","0","fusion"
"39964","cv_LeadAddresses","","select 
	leadAddrID,
	addresstype as Type,
	address1 as [Address Line 1],
	address2 as [Address Line 2],
	address3 as [Address Line 3],
	City as [Area], 
	Region as [Province], 
	Code, 
	Country
from LeadAddress
where leadid = {leadid}
order by addresstype","0","","1","LRA-FUSION","0","0","fusion"
"39965","cv_Lead_Call_Log","","SELECT 
	CallLogID, 
	CASE WHEN ISNULL(CL.AdvCall,0) = 0 then 'Call' ELSE 'Advanced Call' END as [Type],
	CASE WHEN ISNULL(CL.LeadContactID, 0) = 0 then 
		ISNULL(L.Firstname, '') + ' ' + ISNULL(L.LastName, '')
	Else
		ISNULL(LC.Firstname, '') + ' ' + ISNULL(LC.Surname, '')
	END as [Contact],
	convert(varchar,CallDate,111) + ' ' +  convert(varchar,CallDate,108) as [Call Date], 
	CallDirection as [Direction], 
	CallSubject as [Subject],
	CallDescription as [Description], 
	U.[Created By]
FROM CallLog CL 
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Created By] FROM Users) U ON CL.CallCreatorID = U.UserID
LEFT JOIN Lead L ON L.LeadID = CL.LeadID
LEFT JOIN LeadContacts LC ON LC.LeadContactID = CL.LeadContactID
{where}
ORDER BY CallDate DESC","0","","1","LRA-FUSION","0","0","fusion"
"39966","cv_Deadline_Report","","SELECT DISTINCT    
	c.ClientActivityListID,    
	e.company As [Company],    
	pj.projectname As [Project],
    m.modulename As [Module],
    pr.prioritytype As [Priority],
    l.value As [Status],
    lo.value as [Owner],
	dev.[Name] as [Developer],
    c.DateIssued As [Date Issued],    
	c.DateDue As [Due Date],    
	c.DateFollowUp As [Follow Up Date],    
	c.escalation As [Escalation],    
	dateDiff(Day, c.DateDue, GETDATE()) as [Days Overdue],
	c.perccompleted As [Percentage Completed] 
FROM ClientActivityList c  
LEFT JOIN ClientActivities ca ON c.clientactivityid = ca.clientactivityid  
LEFT JOIN Priority pr ON c.priorityid = pr.priorityid  
LEFT JOIN Projects pj ON c.projectid = pj.projectid   
LEFT JOIN Entity e ON pj.entityid = e.entityid  
LEFT JOIN Modules m ON m.moduleid = c.moduleid  
LEFT JOIN (SELECT LOOKUPID, Value FROM Lookup) lo ON lo.Lookupid = c.OwnerID  
LEFT JOIN (SELECT Lookupid, Value FROM Lookup) l ON c.statusid = l.lookupid  
LEFT JOIN userActivityList u ON u.clientactivitylistid = c.clientactivitylistid  
LEFT JOIN (SELECT UserID, staffID,  ISNULL(Firstname,'') + ' ' + ISNULL(surname,'') as [Name] FROM Users) dev   
ON dev.UserID = (SELECT TOP 1 UserID FROM UserActivityList Where ClientActivityListID = c.ClientActivityListID )  
Where ISNULL(c.perccompleted,0) < 100  
AND e.Company is not null  
AND l.value NOT LIKE 'InActive'
{and}
ORDER BY e.company","0","","1","LRA-FUSION","0","0","fusion"
"39967","cv_Print_JobCard_Header_DocBK","","SELECT 
P.ProjectID as [<jobno>],
P.TicketID as [<ticketno>],
P.ProjectName as [<jobname>],
E.Accountnum as [<account>],
E.Company as [<client>],
EC.Contact as [<contact>],
EC.phone1 + Case when len(isnull(EC.Cell,'')) > 0 then ' / ' + isnull(Ec.Cell,'') ELSE '' END as [<telno>],
P.ClientPO as [<refno>],
LD.Value as [<division>],
P.ProjectNotes as [<notes>],
P.CompletionNotes as [<completionnotes>],
Convert(Varchar,PDS.StartDate,103) + ' ' + Convert(Varchar,PDS.StartDate,108) as [<startdate>],
Convert(Varchar,PDE.EndDate,103) + ' ' + Convert(Varchar,PDE.EndDate,108) as [<enddate>],
PS.Value as [<status>],
JT.Value as [<type>],
T.Technician as [<technician>],
M.Manager as [<manager>],
EA.Address1 as [<address1>],
EA.Address2 as [<address2>],
EA.Address3 as [<address3>],
EA.Region as [<region>],
EA.Code as [<code>],
EA.City as [<city>],
EA.Country as [<country>],
ltrim(rtrim(Replace(Replace(isnull(replace(EA.Address1,char(13),'') + char(13),'')
+ isnull(replace(EA.Address2,char(13),'') +  char(13),'')
+ isnull(replace(EA.Address3,char(13),'') + char(13),'')
+ isnull(replace(EA.Code,char(13),'') + char(13),'')
+ isnull(replace(EA.city,char(13),'') + char(13),'')
+ isnull(replace(EA.country,char(13),''),''), char(13) + char(13), Char(13)), char(13) + char(13), Char(13)))) as [<address>],
dbo.fnFormatNumber(isnull(JS.PriceEx,0)) as [<totalex>],
dbo.fnFormatNumber(isnull(JS.PriceIncl,0)) as [<totalincl>],
dbo.fnFormatNumber(isnull(JS.PriceIncl,0) - isnull(JS.PriceEx,0) ) as [<totalvat>],
dbo.fnFormatNumber(isnull([PriceExStock],0)) as [<stockprice>] ,
dbo.fnFormatNumber(isnull([PriceExLabour],0)) as [<labourprice>] 
FROM Projects P
LEFT JOIN (SELECT EntityID,Company, Switchboard,Fax,AccountNum  FROM Entity) E
	ON  P.Entityid = E.Entityid
LEFT JOIN (SELECT * FROM Lookup where class like 'divisions') LD
	ON P.DivID = LD.Lookupid
LEFT JOIN (SELECT * FROM EntityAddress) EA
	ON E.EntityID = EA.EntityID AND EA.EntityAddressID = (SELECT Max(EntityAddressID) FROM EntityAddress where EntityID = P.EntityID AND AddressType like '%physical%')
LEFT JOIN (SELECT ProjectID, Min(ProjDate) as [StartDate] FROM ProjectDates WHERE isnull(IsStartEndDate,0) = 1 GROUP BY ProjectID) PDS
	ON P.ProjectID = PDS.ProjectID
LEFT JOIN (SELECT ProjectID, Max(ProjDate) as [EndDate] FROM ProjectDates WHERE isnull(IsStartEndDate,0) = 1 GROUP BY ProjectID) PDE
	ON P.ProjectID = PDE.ProjectID
LEFT JOIN (SELECT * FROM ProjContacts) PC
	ON PC.JobContID = (SELECT Min(JobContID) FROM ProjContacts where ProjectID = P.ProjectID)
LEFT JOIN (SELECT EntityContactID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Contact], Phone1, Cell FROM EntityContact) EC
	ON PC.EntitycontactID = EC.Entitycontactid
LEFT JOIN (SELECT * FROM Lookup where class like 'ProjectState') PS
	ON P.ProjectStateID = PS.Lookupid
LEFT JOIN (SELECT * FROM Lookup where class like 'JobType') JT
	ON P.ProjectTypeID = JT.Lookupid
LEFT JOIN (SELECT ProjectID, StaffID as TechnicianID FROM JobTechnician WHERE JobTechnicianID in (SELECT min(JobTechnicianID) FROM JobTechnician Group By ProjectID)) PT
	ON P.ProjectID = PT.ProjectID
LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Technician] FROM Staff) T
	ON PT.TechnicianID = T.StaffID
LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Manager] FROM Staff) M
	ON P.TechnicianID = M.StaffID
LEFT JOIN (SELECT sum((qty * PriceEx)) AS [PriceEx], 
	 sum((TotalIncl / CASE WHEN (qty * PriceEx) = 0 then 1 else (qty * PriceEx) END) * (Qty * PriceEx)) as [PriceIncl],
	ProjectID,
	sum((CASE WHEN isnull(STK.IsTangible,0) = 1 THEN qty * PriceEx ELSE 0 END)) AS [PriceExStock] ,
	sum((CASE WHEN isnull(STK.IsTangible,0) = 0 THEN qty * PriceEx ELSE 0 END)) AS [PriceExLabour] 
	FROM Job_Stock JS 
	LEFT JOIN AccStock STK ON JS.StockID = STK.StockID
	Group by ProjectID) JS
	ON P.ProjectID = JS.ProjectID
Where P.ProjectID = {projectid}

","0","","1","LRA-FUSION","0","0","fusion"
"39968","cv_CompanyExistCheck","","select distinct Convert(Varchar(50),[ID])   ,Company   ,legalname [Trading As]   ,Type   
from  (   select distinct 'en' + Convert(varchar(50),entityid) As [ID],company,legalname,'Company' [type],[Division],[did] [divid]   
from entity e   left join (select divisionid [did],entityid [eid] from entitydivision) ed     
on ed.eid = e.entityid   left join (select lookupid,value [Division] from lookup) l   
on l.lookupid = ed.did      union all      select distinct 'ld' + Convert(Varchar(50),leadid) As [ID],Company,null, 
'Lead',[Division],lead.divisionid   from lead   left join (select lookupid,value [division] from lookup) l   
on l.lookupid = lead.divisionid    union all      select distinct 'ca' + Convert(Varchar(50),Canvasid) AS [ID],company,null,'Canvas',[Division],canvas.divisionid   
from canvas   left join (select lookupid,value [division] from lookup) l   on l.lookupid = canvas.divisionid   ) 
a  where (company like '%<%company%>%' or legalname like '%<%company%>%')  and a.divid in (<divids>)","0","","1","LRA-FUSION","0","0","fusion"
"39969","cv_LeadAppts","","select appointmentid,convert(varchar,date,106) [Date],Subject,
	case when u.userid is not null then
	u.[user] else '' end [User]
from
appointment a
left join (Select userid, isnull(firstname,'') + ' ' + isnull(Surname,'') [User] from users)u
	on u.userid = a.userid
where leadid = {lid}
/*<and>*/
/*and (a.Date between '{sdate}' and '{edate}')*/","0","","1","LRA-FUSION","0","0","fusion"
"39970","cv_Appt_LeadContacts","","select 
	LeadContactID, 
	isnull(firstname,'') + ' ' + isnull(surname,'') as [contact],
	isnull(ac.EntityContactID,0) as [Assigned]
from leadcontacts ec
left join appointmentcontacts ac
on ac.entitycontactid = ec.leadcontactid and ac.ApptID = <%apptid%>
where ec.leadID = <%lid%> 
ORDER BY firstname,Surname","0","","1","LRA-FUSION","0","0","fusion"
"39971","qf_AccStockFind_Pricelist","","select top 50 STK.Stockid, STK.StockCode as [Code], STK.StockDescription as [Description], isnull(qty,0) as [In Container],LJ.Value as [GL Category]
from AccStock STK
LEFT JOIN (SELECT StockID, round(Sum(qty * Ratio),4) as [Qty],ContainerID FROM ACCStockControl where ContainerID  = {container} Group by StockID,Containerid) SC
ON STK.StockID =Sc.StockID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class like 'JournalType') LJ
ON STK.JournalID = LJ.lookupid
where 
(isnull(stk.IsHidden,0) = 0) AND
((STK.StockCode like '%<%replace%>%') OR (STK.StockDescription Like '%<%replace%>%'))
AND STK.StockType = (SELECT PriceListID FROM Entity Where EntityID = {entityid}) /*<%sType%>*/
order by STK.Stockcode, STK.StockDescription","0","","1","LRA-FUSION","0","0","fusion"
"39972","cv_Calc_Job_Escalation","","--Add incomplete jobs that have not been modified within the specified number of hours
INSERT INTO Job_Escalation (ProjectID, ProjectName, Company,Technician,DateModified)
SELECT P.ProjectID, P.ProjectName,E.Company,S.Technician,P.DateModified FROM Projects P
LEFT JOIN (SELECT EntityID, Company From Entity) E ON P.EntityID= E.EntityID
LEFT JOIN (SELECT ProjectID, StaffID as TechnicianID FROM JobTechnician WHERE JobTechnicianID in (SELECT min(JobTechnicianID) FROM JobTechnician Group By ProjectID)) PT  ON P.ProjectID = PT.ProjectID
LEFT JOIN (Select StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Technician] FROM Staff ) S ON PT.TechnicianID = S.StaffID
LEFT JOIN (Select ProjectID FROM Job_Escalation) JE ON P.ProjectID = JE.ProjectID
WHERE 
JE.ProjectID is null
AND isnull(P.IsComplete,0) = 0
AND isnull(P.IsJob,0) = 1
AND isnull(P.DateModified,'2000/01/01') < dateadd(HH,- isnull((SELECT convert(integer,custvalue) FROM CRMSetup where [Description] = 'Alerts' AND Variable = 'JobEscHrs'),24),getdate())

--Remove job that have been completed or updated subsequently
DELETE FROM Job_Escalation WHERE JobEscalationID IN
	(SELECT JobEscalationID FROM Job_Escalation JE
	LEFT JOIN (SELECT ProjectID, DateModified, IsComplete from Projects) P ON JE.ProjectID = P.ProjectID
	WHERE 
	isnull(P.IsComplete,0) = 1 
	OR P.DateModified > JE.DateModified)

","0","","1","LRA-FUSION","0","0","fusion"
"39973","cv_Calc_Lead_Escalation","","SELECT LeadID, Company, Firstname, Lastname, Amount, DateModified,Agent  
FROM Lead L
LEFT JOIN (SELECT userid, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Agent] FROM Users ) U 
ON L.AgentID = U.UserID
WHERE isnull(EscalationEmailSent,0) = 0
AND isnull(EntityContactID ,0) < 1
AND  isnull(DateModified,'2000/01/01') < dateadd(HH,- isnull((SELECT convert(integer,custvalue) FROM CRMSetup where [Description] = 'Alerts' AND Variable = 'LeadEscHrs'),24),getdate())
","0","","1","LRA-FUSION","0","0","fusion"
"39974","CV_Leads_Man","","SELECT Distinct {top} 
	LeadID, '' as [ ], 
    Company, 
    [First Name], 
    [Surname], 
    [Modified By],
    [Sales Consultant],
    [Sub Sales Consultant],
    Phone1, 
    Phone2,
    Email, 
    [Probability], 
    [Amount],
    [Reoccuring Amount],
    [Status], 
    [From], 
    [Created],
    [Modified], 
    [Last Contact Date],  
    [Next Contact Date],
    [Next Action],
    [LastNoteAdded] as [Last Note/Activity Added],
    [LastNoteAddedBy] as [Last Note/Activity Added By],
    [Position], 
    [Department],
    [Industry],
    [Region],
    [Deal Type],
    (select top 1 Country from leadaddress where leadaddress.leadid = a.leadid  ) as [Country],
    (select top 1 City from leadaddress where leadaddress.leadid =  a.leadid  ) as City,
    (select top 1 Region from leadaddress where leadaddress.leadid = a.leadid  ) as Province,
    [Has Sales Order]
FROM 
(   
    SELECT 
        L.LeadID,
        Laddr.City,
        Laddr.Country,
        LAddr.Region As 'Province', 
        L.Company, 
        L.Firstname as [First Name], 
        L.UserID, 
        L.LastName as [Surname], 
        U.[Modified By], 
        L.Phone1, 
        L.Phone2,
        L.Email, 
        L.Possibilty as [Probability],
        convert(varchar,cast((isnull(L.Amount,0)) as money),1) as [Amount], 
        convert(varchar,cast((isnull(L.ReoccurringAmount,0)) as money),1) as [Reoccuring Amount],
        DateModified,
        LS.Value as [Status],
        LastDate As [Last Contact Date], 
        NextDate As [Next Contact Date],
        LNA.Value as [Next Action],
        LP.ProductID, 
        L.LeadFromID,  
        LF.Value as [From],
        L.LeadStatus, 
        DateCreated as [Created], 
        DateModified as [Modified],
        L.PositionID,
        LK.Value as [Position],
        LD.[Department],
        L.IndustryID,
        LJ.Value as [Industry],
        L.RegionID,
        LR.Value as [Region],
        
        L.DealTypeID,
        LDT.Value as [Deal Type],
        K.[Sales Consultant], 
        SK.[Sub Sales Consultant],
         L.AgentID, 
         L.SubSalesConsultantID,
        LastDate,
        NextDate,
            (SELECT TOP 1 NOTE FROM 

        (
        SELECT LEADID,ISNULL(CallSubject + ' ' ,'')+ ISNULL(CallDescription,'') AS NOTE,CallDate AS [DATEADDED]  FROM CallLog 
        
        UNION ALL
        
        SELECT LEADID,ISNULL(CallSubject + ' ' ,'')+ ISNULL(CallDescription,'') AS NOTE,CallDate AS [DATEADDED]  FROM CanvasCallLog 
        
        UNION ALL

        SELECT LEADID,Subject,Date AS [DATEADDED] FROM appointment 
        
        UNION ALL

        SELECT LEADID,comments,DateAdded AS [DATEADDED] FROM activity 
        
        UNION ALL

        SELECT LEADID,Note,Date AS [DATEADDED] FROM LeadNotes 

        ) X  WHERE X.LeadID = L.LeadID ORDER BY X.[DATEADDED] DESC ) as [LastNoteAdded],
        (SELECT TOP 1 Username FROM 

        (
        SELECT LEADID,UserID AS UserID,CallDate AS [DATEADDED]  FROM CallLog 
        
        UNION ALL
        
        SELECT LEADID,UserID AS UserID,CallDate AS [DATEADDED]  FROM CanvasCallLog 
        
        UNION ALL

        SELECT LEADID,Createbyid,Date AS [DATEADDED] FROM LeadNotes 
        
          UNION ALL

        SELECT LEADID,CreateUserID,Date AS [DATEADDED] FROM appointment 
        
        UNION ALL

        SELECT LEADID,AddedByID,DateAdded AS [DATEADDED] FROM activity

        ) X  left join (select UserID,Username from users) u on u.UserID = x.UserID WHERE X.LeadID = L.LeadID ORDER BY X.[DATEADDED] DESC ) as [LastNoteAddedBy],
        CASE WHEN ISNULL(DM.SOCount,0) > 0 THEN 'Yes' ELSE 'No' END as [Has Sales Order]
        --(SELECT TOP 1 Note FROM LeadNotes LN WHERE LN.LeadID = L.LeadID ORDER BY LeadNoteID DESC) as [LastNoteAdded] 
    FROM Lead L
    LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') As [Modified By] FROM Users) U
    ON L.UserID = U.UserID
    LEFT JOIN (SELECT userid, isnull(Firstname,'') + ' ' + isnull(Surname,'') As [Sales Consultant] FROM users) K
    ON L.AgentID = K.userid
    LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') As [Sub Sales Consultant] FROM Users) SK
    ON L.SubSalesConsultantID = SK.UserID
    LEFT JOIN (SELECT LookupID, Value FROM Lookup) LS
    ON L.LeadStatus = LS.LookupID
    LEFT JOIN (SELECT * FROM LeadProduct) LP
    ON L.LeadID = LP.LeadID
    LEFT JOIN (SELECT LookupID, Value FROM Lookup) LF
    ON L.LeadFromID = LF.LookupID
     LEFT JOIN (SELECT LookupID, Value FROM Lookup) LK
    ON L.PositionID = LK.LookupID
    LEFT JOIN (SELECT LookupID, Value FROM Lookup) LJ
    ON L.IndustryID = LJ.LookupID
        LEFT JOIN (SELECT LookupID, Value FROM Lookup) LR
    ON L.RegionID = LR.LookupID
          LEFT JOIN (SELECT LookupID, Value FROM Lookup) LDT
    ON L.DealTypeID = LDT.LookupID
    LEFT JOIN (SELECT LookupID, Value FROM Lookup) LNA
        ON L.NextActionID = LNA.LookupID
    LEFT JOIN leadaddress LAddr
        ON L.LeadID = lAddr.LeadID
    LEFT JOIN (select lookupid, value as [Department] from lookup where class like 'department') LD ON LD.LookupID = L.DepartmentID
    LEFT JOIN (SELECT EntityID, EntityContactID FROM EntityContact) EC ON EC.EntityContactID = L.EntityContactID
    LEFT JOIN (SELECT EntityID, AttentionOf, UseEC, COUNT(DocID) as [SOCount] FROM Debtor_Master WHERE DocType in ('Sales Order','Quote') GROUP BY EntityID, AttentionOF, UseEC ) DM
        ON (DM.EntityID = EC.EntityID OR DM.EntityID = EC.EntityContactID)
    
) A

{where}
{orderby}","0","","1","LRA-FUSION","0","0","fusion"
"39975","cv_Acc_GL_Trial_Balance_Print","","DECLARE @Date as datetime
DECLARE @PeriodStart as datetime
SET @Date = '{date}'
SET @PeriodStart = '{periodstart}'

--Trial Balance
SELECT  GLCode as [Code], [Description], --Division, 
Convert(varchar,sum(MonthDr),1) as [Month To Date Dr], 
Convert(varchar,sum(MonthCr),1) as [Month To Date Cr],
convert(varchar,sum(YearDr),1) as [YTD Dr],
convert(varchar,sum(YearCr),1) as [YTD Cr] 
FROM 	(
	SELECT GC.GLCode, GL as [Description],--LD.Value as [Division],
	--CASE WHEN Type ='ASSET' AND sum(isnull(Dr,0)) - sum(isnull(Cr,0)) < 0 THEN 'LIABILITY' WHEN Type ='LIABILITY' AND sum(isnull(Dr,0)) - sum(isnull(Cr,0)) > 0 THEN 'ASSET' ELSE Type END as [Type],
	[Type],
	0 as [MonthDr],
	0 as [MonthCr],
	isnull(cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) > 0  then sum(isnull(Dr,0)) - sum(isnull(Cr,0)) END as money),0) as [YearDr],
	isnull(cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) < 0  then sum(isnull(Cr,0)) - sum(isnull(Dr,0)) END as money),0) as [YearCr],
	1 as [Rank]
	FROM AccGL G
	LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
	LEFT JOIN Lookup LD ON G.DivisionID = LD.LookupID
	where isnull(Dr,0) + isnull(Cr,0) <>0 
	AND DateCompleted <= @Date 
	{where}
	GROUP BY GL ,Type,GC.GLCode --,LD.Value

	UNION ALL
	
		SELECT GC.GLCode, GL as [Description],--LD.Value as [Division],
	--CASE WHEN Type ='ASSET' AND sum(isnull(Dr,0)) - sum(isnull(Cr,0)) < 0 THEN 'LIABILITY' WHEN Type ='LIABILITY' AND sum(isnull(Dr,0)) - sum(isnull(Cr,0)) > 0 THEN 'ASSET' ELSE Type END as [Type],
	[Type],
	isnull(cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) > 0  then sum(isnull(Dr,0)) - sum(isnull(Cr,0)) END as money),0) as [MonthDr],
	isnull(cast(CASE WHEN sum(isnull(Dr,0)) - sum(isnull(Cr,0)) < 0  then sum(isnull(Cr,0)) - sum(isnull(Dr,0)) END as money),0) as [MonthCr],
	0 as [YearDr],
	0 as [YearCr],
	1 as [Rank]
	FROM AccGL G
	LEFT JOIN (SELECT * FROM AccGLCode) GC ON (G.Divisionid = GC.Divisionid OR GC.Divisionid = 0) and upper(G.Type) = upper(GC.GLType) AND G.JournalID = GC.GLCateGoryID
	LEFT JOIN Lookup LD ON G.DivisionID = LD.LookupID
	where isnull(Dr,0) + isnull(Cr,0) <>0 
	AND DateCompleted <= @Date AND DateCompleted >= @PeriodStart
	{where}
	GROUP BY GL ,Type,GC.GLCode--,LD.Value
		
	
	) A
Group by  A.GLCode, A.[Description]  ,A.Rank --, A.[Division]
ORDER BY [Code],[Description]
","0","","1","LRA-FUSION","0","0","fusion"
"39976","cv_Acc_Account_Summary","","SELECT EntityID, sum(isnull([Total Quoted],0)) as [Total Quoted],  
sum(isnull([Total Invoiced],0)) as [Total Invoiced],  
sum(isnull([Total Paid],0)) as [Total Paid],  
sum(isnull([Total SO],0)) as [Total SO]
FROM 
(
	--Quotes
	SELECT 
	CEM.EntityID,
	(sum([Total Incl. VAT])) as [Total Quoted], 0 as [Total Invoiced], 0 as [Total Paid], 0 as [Total SO]
	FROM Cost_Estimate_Master CEM
	LEFT JOIN (SELECT DocID, Sum(CostPriceEx * Qty ) as [Est. Cost], sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) as [Total Ex. VAT], Sum(totalIncl * ((100 - isnull(discperc,0)) /100)) as [Total Incl. VAT] FROM Cost_Estimate_Detail  WHERE isnull(componentOfLineID,0) = 0 Group By DocID) CED
		ON CEM.DocID = CED.DocID
	WHERE isnull(RevisedToDoc,0) = 0
	GROUP BY Entityid

UNION ALL

	--Opening Balances
	SELECT EntityID,0,
	- isnull(ROE,1) * (isnull(AmtCurrent,0) + isnull(Amt30,0) + isnull(Amt60,0) + isnull(Amt90,0) + isnull(Amt120,0)),
	0,0
	FROM AccOpeningBalance
	
UNION ALL

	--Invoices and Credit Notes
	SELECT DM.EntityID, 0,
	sum(CASE doctype when 'Credit Note' then -1 ELSE 1 END * cast([Total Incl. VAT]   as money))  as [Total Incl. VAT],
	0,0
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT DocID, convert(money,Sum(round(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100),2))) as [Total Ex. VAT],
	             round(round(cast(sum(round(PriceIncl / case PriceEx when 0 then 1 else priceex end,2) * round(PriceEx * qty * ((100 - isnull(discperc,0))/100),2)) as money),3),2) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             convert(money,(Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)))) as [Total Discount]
	             FROM DEBTOR_DETAIL Group by Docid) DD
	ON DM.DocID = DD.Docid
	Where DocType in ('Invoice', 'Credit Note')	
	And DocStatus = 'Completed'	
	Group by Dm.Entityid

UNION ALL

	--Sales Orders
	SELECT DM.EntityID, 0,0,0,
	sum(CASE doctype when 'Credit Note' then -1 ELSE 1 END * cast([Total Incl. VAT]   as money))  as [Total Incl. VAT]
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT DocID, convert(money,Sum(round(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100),2))) as [Total Ex. VAT],
	             round(round(cast(sum(round(PriceIncl / case PriceEx when 0 then 1 else priceex end,2) * round(PriceEx * qty * ((100 - isnull(discperc,0))/100),2)) as money),3),2) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             convert(money,(Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)))) as [Total Discount]
	             FROM DEBTOR_DETAIL Group by Docid) DD
	ON DM.DocID = DD.Docid
	Where DocType in ('Sales Order')	
	AND Docstatus in ('Completed', 'Accepted')
	Group by Dm.Entityid

UNION ALL

	--Payments
	SELECT DM.EntityID, 0,0,
	sum(CASE doctype when 'Payment Receipt' then -1 ELSE 1 END * cast([Total Incl. VAT]   as money))  as [Total Incl. VAT],0
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT DocID, convert(money,Sum(round(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100),2))) as [Total Ex. VAT],
	             round(round(cast(sum(round(PriceIncl / case PriceEx when 0 then 1 else priceex end,2) * round(PriceEx * qty * ((100 - isnull(discperc,0))/100),2)) as money),3),2) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             convert(money,(Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)))) as [Total Discount]
	             FROM DEBTOR_DETAIL Group by Docid) DD
	ON DM.DocID = DD.Docid
	Where DocType in ('Payment Receipt')	
	Group by Dm.Entityid		

UNION ALL

	--Inter Ledger and Inter Account transfers
	SELECT 	DD.EntityID,0,0,
	cast(isnull(DD.Debit,0) - isnull(DD.Credit,0) as money) as [Total Incl. VAT],0
	FROM LEDGER_ADJUST_MASTER DM
	LEFT JOIN LEDGER_ADJUST_DETAIL DD 
	ON DM.DocID = DD.DocID
	LEFT JOIN (SELECT EntityID, Company, Issupplier FROM Entity) E 
	ON DD.Entityid = E.Entityid
	WHERE (isnull(DM.IsInterAccountTransfer,0) = 1 OR isnull(DM.IsInterLedgerTransfer,0) = 1 )
	AND isnull(E.Issupplier,0) = 0
	AND isnull(DD.EntityID,0) <> 0
) A
{where}
Group by Entityid

","0","","1","LRA-FUSION","0","0","fusion"
"39977","Cv_Acc_FusionCostEstimateQuote","","declare @DocID as int
declare @GroupID as int
set @DocID =  {docid}
Set @GroupID = {salesgroupid}

SELECT [Stock Code] as [Code], Qty as [Unit], [Description], [Price Ex.] as [Unit Cost], [Price Ex.] as [Total Cost]
FROM	(
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],CED.StockCode as [Stock Code], CED.StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	CEM.Currency +  ' ' + dbo.fnFormatNumber(CED.CostPriceEx ) as [Cost Ex.],
	CEM.Currency +  ' ' + dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	CEM.Currency +  ' ' + dbo.fnFormatNumber(Priceincl ) as [Price Incl.],
	CEM.Currency +  ' ' + dbo.fnFormatNumber(TotalIncl ) as [Total Incl.],
	Rank, -1000 as [Rank2]
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN Cost_Estimate_Master CEM
	ON CEM.DocID = CED.DocID
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN AccStock A
    ON A.StockID = CED.StockID
	where isnull(ComponentOfLineID,0)  = 0
	AND CED.DocID =  @DocID
	AND A.SalesGroup = @GroupID
	
	UNION ALL
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + null as [Stock Code], '-    ' + CED.StockDescription as [Description], Comments,Company as [Supplier],
	Null as Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	Null as [Cost Ex.],
	Null as [Price Ex.], 
	Null as [Price Incl.],
	Null as [Total Incl.], 
	(SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2]
	FROM Cost_Estimate_Detail CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN AccStock A
    ON A.StockID = CED.StockID
	where isnull(ComponentOfLineID,0)  > 0
	AND CED.DocID =  @DocID
	AND A.SalesGroup = @GroupID
	) A
ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"39978","cv_Acc_Print_CEDoc_Header_FQuote","","Declare @Currency as varchar(20)
Declare @ROE as float
SET @Currency = {currency}
SET @ROE = {roe}

SELECT Top 1
'{doctype}' as [<doctype>],
Case When isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END as [<client>],
--Case When isnull(DM.UseEC,0) = 0 then [AccountContact] ELSE [Contact] END as [<contact>],
--Case When isnull(DM.UseEC,0) = 0 then E.Fax ELSE EC.Fax END as [<fax>],
--Case When isnull(DM.UseEC,0) = 0 then E.Switchboard ELSE EC.Phone1 END as [<phone>],
--Case When isnull(DM.UseEC,0) = 0 then Aec.Email ELSE EC.email END as [<email>],
'{vattage1}' as [<vattag1>],
'{vattage2}' as [<vattag2>],
'{vattage3}' as [<vattag3>],
isnull(Att.Attention,'') as [<contact>],
isnull(Att.FullTitle,'') as [<fulltitle>],
isnull(Att.Fax,'') as [<fax>],
isnull(Att.Phone1,'') as [<phone>],
isnull(EA.Address1,'') as [<address1>],
isnull(EA.Address2,'') as [<address2>],
isnull(EA.Address3,'') as [<address3>],
isnull(EA.City,'') as [<address4>],
Att.Email as [<email>],
'{subtotal1}' as [<subtotal1>],
'{subtotal2}' as [<subtotal2>],
'{vat1}' as [<vat1>],
'{vat2}' as [<vat2>],
'{total1}' as [<total1>],
'{total2}' as [<total2>],
convert(varchar,DM.DateCreated,103) as [<docdate>],
convert(varchar,DM.Startdate,103) + ' - ' + convert(varchar,DM.Enddate,103) as [<rundates>] ,
case WHEN isnull(DM.PreviousDocID,0) > 0 then PreviousDocID Else DM.DocID END  as [<docno>],
'.' + convert(varchar,DM.Revision) AS [<revision>],
--Fusion Software needs Analysis Costing
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD.TotalEx / @ROE)  as [<totalex>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD.Discount /@ROE) as [<discount>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber((Cast(DD.TotalIncl / case isnull(DD.TotalEx,0) when 0 then 1 else DD.TotalEx end as float) * (DD.TotalEx - round(DD.Discount,2))) / @ROE ) as [<totalincl>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(((Cast(DD.TotalIncl / case isnull(DD.TotalEx,0) when 0 then 1 else DD.TotalEx end as float) * (DD.TotalEx - round(DD.Discount,4))) - (DD.TotalEx - DD.Discount)) / @ROE) as [<totalvat>], 
--Software Costing Details
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD2.TotalEx / @ROE)  as [<totalex2>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD2.Discount /@ROE) as [<discount2>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber((Cast(DD2.TotalIncl / case isnull(DD2.TotalEx,0) when 0 then 1 else DD2.TotalEx end as float) * (DD2.TotalEx - round(DD2.Discount,2))) / @ROE ) as [<totalincl2>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(((Cast(DD2.TotalIncl / case isnull(DD2.TotalEx,0) when 0 then 1 else DD2.TotalEx end as float) * (DD2.TotalEx - round(DD2.Discount,4))) - (DD2.TotalEx - DD2.Discount)) / @ROE) as [<totalvat2>], 
--Annual License Fees
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD3.TotalEx / @ROE)  as [<totalex3>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD3.Discount /@ROE) as [<discount3>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber((Cast(DD3.TotalIncl / case isnull(DD3.TotalEx,0) when 0 then 1 else DD3.TotalEx end as float) * (DD3.TotalEx - round(DD3.Discount,2))) / @ROE ) as [<totalincl3>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(((Cast(DD3.TotalIncl / case isnull(DD3.TotalEx,0) when 0 then 1 else DD3.TotalEx end as float) * (DD3.TotalEx - round(DD3.Discount,4))) - (DD3.TotalEx - DD3.Discount)) / @ROE) as [<totalvat3>], 
--Software Development and Setup costs
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD4.TotalEx / @ROE)  as [<totalex4>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD4.Discount /@ROE) as [<discount4>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber((Cast(DD4.TotalIncl / case isnull(DD4.TotalEx,0) when 0 then 1 else DD4.TotalEx end as float) * (DD4.TotalEx - round(DD4.Discount,2))) / @ROE ) as [<totalincl4>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(((Cast(DD4.TotalIncl / case isnull(DD4.TotalEx,0) when 0 then 1 else DD4.TotalEx end as float) * (DD4.TotalEx - round(DD4.Discount,4))) - (DD4.TotalEx - DD4.Discount)) / @ROE) as [<totalvat4>], 
--Software Implementation and Training Costs
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD5.TotalEx / @ROE)  as [<totalex5>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD5.Discount /@ROE) as [<discount5>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber((Cast(DD5.TotalIncl / case isnull(DD5.TotalEx,0) when 0 then 1 else DD5.TotalEx end as float) * (DD5.TotalEx - round(DD5.Discount,2))) / @ROE ) as [<totalincl5>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(((Cast(DD5.TotalIncl / case isnull(DD5.TotalEx,0) when 0 then 1 else DD5.TotalEx end as float) * (DD5.TotalEx - round(DD5.Discount,4))) - (DD5.TotalEx - DD5.Discount)) / @ROE) as [<totalvat5>], 

CASE WHEN isnull(DD.Discount,0) <> 0 then char(13) + 'Discount' END as [<disclabel>],
CASE WHEN isnull(DD.Discount,0) <>  0 then char(13) + isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(cast(DD.Discount as money) / @ROE)  END as [<invisiblediscount>],
U.SalesCon as [<salescons>],
S.SalesRepCell as [<salesrepcell>],
LC.Value as [<extsalescons>],
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
DM.Descr as [<gendescr>],
DM.Descr as [<gendescr>],
DM.memo as [<notes>],
DS.Terms as [<terms>],
DS.Banking as [<banking>],
DS.Footer as [<footer>],
'R.O.E.' as [<roe>],
dm.clientpo as [<clientpo>],
dm.clientpo as [<clientpo2>]
FROM COST_ESTIMATE_MASTER DM
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] , sum(TotalIncl) as [TotalIncl], DocID FROM COST_ESTIMATE_DETAIL CED LEFT JOIN ACCSTOCK Acc ON Acc.StockID = CED.StockID WHERE isnull(ComponentOfLineID,0) = 0 AND Acc.SalesGroup = (Select LookupID From Lookup where class like 'SalesGroup' And Value like 'Fusion Software needs Analysis Costing') Group By DocID) DD
ON DM.DocID = DD.DocID
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] , sum(TotalIncl) as [TotalIncl], DocID FROM COST_ESTIMATE_DETAIL CED LEFT JOIN ACCSTOCK Acc ON Acc.StockID = CED.StockID WHERE isnull(ComponentOfLineID,0) = 0 AND Acc.SalesGroup = (Select LookupID From Lookup where class like 'SalesGroup' And Value like 'Software Costing Details') Group By DocID) DD2
ON DM.DocID = DD2.DocID
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] , sum(TotalIncl) as [TotalIncl], DocID FROM COST_ESTIMATE_DETAIL CED LEFT JOIN ACCSTOCK Acc ON Acc.StockID = CED.StockID WHERE isnull(ComponentOfLineID,0) = 0 AND Acc.SalesGroup = (Select LookupID From Lookup where class like 'SalesGroup' And Value like 'Annual License Fees') Group By DocID) DD3
ON DM.DocID = DD3.DocID
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] , sum(TotalIncl) as [TotalIncl], DocID FROM COST_ESTIMATE_DETAIL CED LEFT JOIN ACCSTOCK Acc ON Acc.StockID = CED.StockID WHERE isnull(ComponentOfLineID,0) = 0 AND Acc.SalesGroup = (Select LookupID From Lookup where class like 'SalesGroup' And Value like 'Software Development and Setup costs') Group By DocID) DD4
ON DM.DocID = DD4.DocID
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] , sum(TotalIncl) as [TotalIncl], DocID FROM COST_ESTIMATE_DETAIL CED LEFT JOIN ACCSTOCK Acc ON Acc.StockID = CED.StockID WHERE isnull(ComponentOfLineID,0) = 0 AND Acc.SalesGroup = (Select LookupID From Lookup where class like 'SalesGroup' And Value like 'Software Implementation and Training Costs') Group By DocID) DD5
ON DM.DocID = DD5.DocID
LEFT JOIN (SELECT EntityID, Company ,VATNum,AccountNum,InvoiceTo,Fax,Switchboard, SalesConsID From Entity) E
ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact],Accountnum,Email,Fax,Phone1,SalesConsID FROM EntityContact) EC
ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention], ltrim(rtrim(isnull(Title,'') + ' ' + isnull(firstname,'') +  ' '+ isnull(surname,''))) as [FullTitle],Accountnum,Email,Fax,Phone1,SalesConsID FROM EntityContact) ATT
ON DM.AttentionOf = Att.EntityContactID 
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact],Accountnum,Email,SalesConsID FROM EntityContact) AEC
ON E.InvoiceTo = AEc.EntityContactID 
LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
ON DM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') +  ' '  + isnull(surname,'') as [SalesCon],StaffID  FROM Users) U 
ON DM.SalesRepID = U.UserID
LEFT JOIN (SELECT Staffid, Cell as [SalesRepCell] FROM Staff ) S 
ON U.Staffid = S.Staffid
LEFT JOIN Lookup LC 
ON LC.Lookupid =  CASE WHEN  isnull(DM.UseEC,0) =0 THEN E.SalesConsID ELSE EC.SalesConsID END
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%Postal%') EA
ON E.EntityID = EA.Entityid
WHERE DM.DocID = {docid}


","0","","1","LRA-FUSION","0","0","fusion"
"39979","cv_acc_FusionQuote_SolutionCosts","","SET NOCOUNT ON
DECLARE @LookupID INT
DECLARE @DocID INT
DECLARE @SalesLine CURSOR
DECLARE @TempTable TABLE (
      CODE VARCHAR(50),
      UNIT INT,
      [DESCRIPTION] VARCHAR(200),
      [UNIT COST] VARCHAR(50),
      [TOTAL COST] VARCHAR(50))

SET @DocID = {docid}
SET @SalesLine = CURSOR FAST_FORWARD FOR SELECT {top} LookupID FROM Lookup Where Class like 'SalesGroup'
OPEN @SalesLine
FETCH NEXT FROM @SalesLine INTO @LookupID

WHILE @@FETCH_STATUS = 0
BEGIN 
      
      INSERT INTO @TempTable
      SELECT
            'TOTAL',
            1,
            L.Value,
            CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(A.PriceEx) AS MONEY),1),
            CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(A.PriceEx) AS MONEY),1)
      FROM Cost_Estimate_Detail A
      LEFT JOIN Cost_Estimate_Master CEM ON CEM.DocID = A.DocID
      LEFT JOIN AccStock B ON B.StockID = A.StockID
      LEFT JOIN Lookup L ON L.LookupID = B.SalesGroup
      Where A.DocID = @DocID
      AND B.SalesGroup = @LookupID
      Group BY L.Value, CEM.Currency
      
      FETCH NEXT FROM @SalesLine INTO @LookupID
END

CLOSE @SalesLine
DEALLOCATE @SalesLine

SET NOCOUNT OFF

SELECT * FROM @TempTable
","0","","1","LRA-FUSION","0","0","fusion"
"39980","cv_acc_Print_FusionSolutionCostsTotal","","SET NOCOUNT ON
DECLARE @LookupID INT
DECLARE @DocID INT
DECLARE @SalesLine CURSOR
DECLARE @TempTable TABLE (
      CODE VARCHAR(50),
      UNIT INT,
      [DESCRIPTION] VARCHAR(200),
      [UNIT COST] VARCHAR(50),
      [TOTAL COST] VARCHAR(50))

SET @DocID = {docid}
SET @SalesLine = CURSOR FAST_FORWARD FOR SELECT {top} LookupID FROM Lookup Where Class like 'SalesGroup'
OPEN @SalesLine
FETCH NEXT FROM @SalesLine INTO @LookupID

WHILE @@FETCH_STATUS = 0
BEGIN 
      
      INSERT INTO @TempTable
      SELECT
            'TOTAL',
            1,
            L.Value,
            CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(A.PriceEx) AS MONEY),1),
            CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(A.PriceEx) AS MONEY),1)
      FROM Cost_Estimate_Detail A
      LEFT JOIN Cost_Estimate_Master CEM ON CEM.DocID = A.DocID
      LEFT JOIN AccStock B ON B.StockID = A.StockID
      LEFT JOIN Lookup L ON L.LookupID = B.SalesGroup
      Where A.DocID = @DocID
      AND B.SalesGroup = @LookupID
      Group BY L.Value, CEM.Currency
      
      FETCH NEXT FROM @SalesLine INTO @LookupID
END

CLOSE @SalesLine
DEALLOCATE @SalesLine

SET NOCOUNT OFF

SELECT 
Sum(Convert(MONEY,REPLACE([Unit Cost], 'R', ''))) as [Sub Total], 
(Sum(Convert(MONEY,REPLACE([Unit Cost], 'R', '')))  * 1.14 ) - Sum(Convert(MONEY,REPLACE([Unit Cost], 'R', '')))  as [VAT], 
Sum(Convert(MONEY,REPLACE([Unit Cost], 'R', ''))) * 1.14 as [Total]  FROM @TempTable
","0","","1","LRA-FUSION","0","0","fusion"
"39981","cv_Acc_PrintQuote4Payment","","
declare @DocID as int
set @DocID = {docid}

SELECT 
	'PMT TMS' as [CODE],
	1 as [UNIT],
	'Deposit Payment 40%' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) * 0.4 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND CED.DocID =  @DocID
	) A
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = A.DocID
Group by CEM.Currency

UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	2 as [UNIT],
	'Deployment Payment 30%' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) * 0.4 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) B
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = B.DocID
Group by CEM.Currency
	
	UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	3 as [UNIT],
	'Go Live Payment (1) 20%' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) * 0.4 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) C
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = C.DocID
Group by CEM.Currency
	
UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	4 as [UNIT],
	'Go Live Payment (2) 10%' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) * 0.4 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) D
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = D.DocID
Group by CEM.Currency
	
	UNION ALL
	
	SELECT
	NULL,
	NULL,
	NULL,
	'SUB TOTAL',
	CEM.Currency + ' ' + CONVERT(VARCHAR,CAST(SUM(PriceEx) as MONEY),1)
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN Cost_Estimate_Master CEM
	ON CEM.DocID = CED.DocID
	where isnull(ComponentOfLineID,0)  = 0
	AND CED.DocID =  @DocID
	Group by CEM.Currency
		UNION ALL
	
	SELECT
	NULL,
	NULL,
	NULL,
	'VAT',
	CEM.Currency + ' ' + CONVERT(VARCHAR,CAST(SUM(PriceEx) * 0.14 as MONEY),1)
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN Cost_Estimate_Master CEM
	ON CEM.DocID = CED.DocID
	where isnull(ComponentOfLineID,0)  = 0
	AND CED.DocID =  @DocID
	Group by CEM.Currency
		UNION ALL
	
	SELECT
	NULL,
	NULL,
	NULL,
	'TOTAL',
	CEM.Currency + ' ' + CONVERT(VARCHAR,CAST(SUM(PriceEx) * 0.14 + (SUM(PriceEx))   as MONEY),1)
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN Cost_Estimate_Master CEM
	ON CEM.DocID = CED.DocID
	where isnull(ComponentOfLineID,0)  = 0
	AND CED.DocID =  @DocID
	Group by CEM.Currency","0","","1","LRA-FUSION","0","0","fusion"
"39982","cv_Acc_PrintQuote6Payment","","
declare @DocID as int
set @DocID = {docid}
SELECT 
	'PMT TMS' as [CODE],
	1 as [UNIT],
	'Payment One Of Six' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) / 6 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID

	) A
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = A.DocID
Group by CEM.Currency

UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	2 as [UNIT],
	'Payment Two Of Six' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) / 6 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID

	) B
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = B.DocID
	Group by CEM.Currency

		UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	3 as [UNIT],
	'Payment Three Of Six' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) / 6 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID

	) C
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = C.DocID	
	Group by CEM.Currency
		UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	4 as [UNIT],
	'Payment Four Of Six' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) / 6 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID

	) D
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = D.DocID	
	Group by CEM.Currency

		UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	5 as [UNIT],
	'Payment Five Of Six' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) / 6 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID

	) E
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = E.DocID	
	Group by CEM.Currency

		UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	6 as [UNIT],
	'Payment Six Of Six' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx) / 6 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID

	) F
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = F.DocID
	Group by CEM.Currency
	UNION ALL
	
	SELECT
	NULL,
	NULL,
	NULL,
	'SUB TOTAL',
	CEM.Currency + ' ' + CONVERT(VARCHAR,CAST(SUM(PriceEx) as MONEY),1)
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN COST_Estimate_Master CEM
	ON CED.DocID = CEM.DocID
	where isnull(ComponentOfLineID,0)  = 0
	AND CED.DocID =  @DocID
	Group by CEM.Currency
	
		UNION ALL
	
	SELECT
	NULL,
	NULL,
	NULL,
	'VAT',
	CEM.Currency + ' ' + CONVERT(VARCHAR,CAST(SUM(PriceEx) * 0.14 as MONEY),1)
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN COST_Estimate_Master CEM
	ON CED.DocID = CEM.DocID
	where isnull(ComponentOfLineID,0)  = 0
	AND CED.DocID =  @DocID
	Group by CEM.Currency
		UNION ALL
	
	SELECT
	NULL,
	NULL,
	NULL,
	'TOTAL',
	CEM.Currency + ' ' + CONVERT(VARCHAR,CAST(SUM(PriceEx) * 0.14 + (SUM(PriceEx))   as MONEY),1)
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN COST_Estimate_Master CEM
	ON CED.DocID = CEM.DocID
	where isnull(ComponentOfLineID,0)  = 0
	AND CED.DocID =  @DocID
	Group by CEM.Currency","0","","1","LRA-FUSION","0","0","fusion"
"39983","cv_Acc_PrintQuote12Payment","","
declare @DocID as int
set @DocID = {docid}

SELECT 
	'PMT TMS' as [CODE],
	1 as [UNIT],
	'Payment One Of Twelve' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx)  * 1.10 as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM((PriceEx) *1.10) / 12 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) A
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = A.DocID
Group By CEM.Currency
UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	2 as [UNIT],
	'Payment Two Of Twelve' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx)  * 1.10 as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM((PriceEx) *1.10) / 12 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) B
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = B.DocID
Group By CEM.Currency

UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	3 as [UNIT],
	'Payment Three Of Twelve' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx)  * 1.10 as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM((PriceEx) *1.10) / 12 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) C
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = C.DocID
Group By CEM.Currency	
	
UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	4 as [UNIT],
	'Payment Four Of Twelve' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx)  * 1.10 as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM((PriceEx) *1.10) / 12 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) D
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = D.DocID
Group By CEM.Currency	
	

UNION ALL
SELECT 
	'PMT TMS' as [CODE],
	5 as [UNIT],
	'Payment Five Of Twelve' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx)  * 1.10 as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM((PriceEx) *1.10) / 12 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) E
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = E.DocID
Group By CEM.Currency	
	

UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	6 as [UNIT],
	'Payment Six Of Twelve' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx)  * 1.10 as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM((PriceEx) *1.10) / 12 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) F
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = F.DocID
Group By CEM.Currency	
	
UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	7 as [UNIT],
	'Payment Seven Of Twelve' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx)  * 1.10 as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM((PriceEx) *1.10) / 12 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) G
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = G.DocID
Group By CEM.Currency	
	

UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	8 as [UNIT],
	'Payment Eight Of Twelve' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx)  * 1.10 as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM((PriceEx) *1.10) / 12 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) H
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = H.DocID
Group By CEM.Currency	

UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	9 as [UNIT],
	'Payment Nine Of Twelve' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx)  * 1.10 as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM((PriceEx) *1.10) / 12 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) I
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = I.DocID
Group By CEM.Currency
	
	UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	10 as [UNIT],
	'Payment Ten Of Twelve' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx)  * 1.10 as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM((PriceEx) *1.10) / 12 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) J
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = J.DocID
Group By CEM.Currency
	
	UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	11 as [UNIT],
	'Payment Eleven Of Twelve' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx)  * 1.10 as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM((PriceEx) *1.10) / 12 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) K
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = K.DocID
Group By CEM.Currency
	
	UNION ALL

SELECT 
	'PMT TMS' as [CODE],
	12 as [UNIT],
	'Payment Twelve Of Twelve' as [DESCRIPTION],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM(PriceEx)  * 1.10 as MONEY),1) as [UNIT COST],
	CEM.Currency + ' ' + CONVERT(VARCHAR, CAST(SUM((PriceEx) *1.10) / 12 as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	DocID,
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) L
LEFT JOIN Cost_Estimate_Master CEM
ON CEM.DocID = L.DocID
Group By CEM.Currency
	
		UNION ALL
	
	SELECT
	NULL,
	NULL,
	NULL,
	'SUB TOTAL',
	CEM.Currency + ' ' + CONVERT(VARCHAR,CAST(SUM(PriceEx) * 1.1 as MONEY),1)
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN Cost_Estimate_Master CEM
	ON CEM.DocID = CED.DocID
	where isnull(ComponentOfLineID,0)  = 0
	AND CED.DocID =  @DocID
	Group By CEM.Currency
	
		UNION ALL
	
	SELECT
	NULL,
	NULL,
	NULL,
	'VAT',
	CEM.Currency + ' ' + CONVERT(VARCHAR,CAST((SUM(PriceEx) * 0.14) * 1.1 as MONEY),1)
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN Cost_Estimate_Master CEM
	ON CEM.DocID = CED.DocID
	where isnull(ComponentOfLineID,0)  = 0
	AND CED.DocID =  @DocID
	Group By CEM.Currency
	
		UNION ALL
	
	SELECT
	NULL,
	NULL,
	NULL,
	'TOTAL',
	CEM.Currency + ' ' + CONVERT(VARCHAR,CAST(SUM(PriceEx) * 0.14 + (SUM(PriceEx)) * 1.1   as MONEY),1)
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN Cost_Estimate_Master CEM
	ON CEM.DocID = CED.DocID
	where isnull(ComponentOfLineID,0)  = 0
	AND CED.DocID =  @DocID
	Group By CEM.Currency","0","","1","LRA-FUSION","0","0","fusion"
"39984","cv_acc_printQuotepaymentTotal","","
declare @DocID as int
set @DocID = {docid}

SELECT 

	CONVERT(VARCHAR, CAST(SUM(PriceEx) as MONEY),1) as [UNIT COST],
	CONVERT(VARCHAR,CAST(SUM(PriceEx) * 0.14 as MONEY),1) as [VAT],
	CONVERT(VARCHAR, CAST(SUM(PriceEx) * 0.14 + (SUM(PriceEx))   as MONEY),1) as [TOTAL COST]
	
FROM	(
	--Select Main items
	SELECT
	PriceEx
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	) A
	
","0","","1","LRA-FUSION","0","0","fusion"
"39985","cv_Acc_Stock_Price","","SELECT SP.StockPriceID, L.Value AS Division, LL.Value as [Price Category],E.Company as [Supplier],
dbo.fnFormatNumber(isnull(CostPriceEx,0)) as [Bulk Cost Price],
dbo.fnFormatNumber(isnull(CostPriceEx,0) / isnull(SoldByToPurchasedByRatio,1)) as [Unit Cost Price],
dbo.fnFormatNumber((isnull(markup,0) - (case when isnull(markup,0) <= 0 then 0 else 1 end)) * 100) as [Markup %] ,
dbo.fnFormatNumber(isnull(SellingPriceEx,0)) as [Unit Selling Price]
FROM AccStockPrice SP
LEFT JOIN Lookup L ON SP.divisionID = L.LookupID
LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock ) STK ON SP.StockID = STK.StockID
LEFT JOIN Lookup LL ON SP.PriceCategoryID = LL.LookupId
LEFT JOIN (SELECT EntityID, Company FROM Entity) E ON SP.SupplierID = E.EntityID
{where}
Order by L.Value
","0","","1","LRA-FUSION","0","0","fusion"
"39986","cv_Acc_Entity_Contract_Man","","SELECT SP.StockPriceID,LD.Value as [Division], isnull(E.AccountNum, E.EntityID) as [Account], E.Company as [Client],
STK.StockCode as [Code], STK.StockDescription as [Description],
convert(varchar,SP.ValidFrom,111) as [Start], convert(varchar,SP.ValidTo,111) as [End], dbo.fnFormatNumber(SellingPriceEx) as [Unit Selling Price]
FROM AccStockPrice SP
LEFT JOIN (SELECT EntityID, AccountNum, Company From Entity) E 
ON SP.EntityID = E.EntityID
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM accStock) STK
ON SP.StockID = STK.StockID 
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LD
ON SP.DivisionID = LD.lookupId
{where}
Order by LD.Value, E.Company, STK.StockDescription, SP.ValidFrom","0","","1","LRA-FUSION","0","0","fusion"
"39987","cv_Acc_Inventory_Man_PriceLists","","SELECT 
convert(varchar,STK.StockID) + '#' + convert(varchar,isnull(SP.DivisionID,'')) +'##' + convert(varchar,isnull(SP.PriceCategoryID,'')), 
StockCode as [Code], StockDescription as [Description], STK.Barcode,LSG.Value as [Sales Group],LT.Value as [Type],LST.Value as [Sub Type], LJ.value as [GL Category],
LLJ.value as [GL Account],[Supplier],
dbo.fnFormatNumber(SP.CostPriceEx) as [Cost Price], 
convert(varchar,cast((SP.Markup -1 )* 100 as money),1) + '%' as [Markup],
dbo.fnFormatNumber(SP.SellingPriceEx) as [Selling Price], 
Specifications as [Comments / Specifications],
Convert(VARCHAR, CAST(stk.DateCreated as DateTime),111) as [Date Added],
Convert(VARCHAR, CAST(stk.DateModified as DateTime),111) as [Date Modified],
Case when isnull(IsHidden,0) = 1 then 'Inactive' else '' END as [Inactive],
Weight as [Total Weight],
ForexMultiplier as [ForEx Multiplier]
FROM AccStock Stk
Left Join (SELECT LookupID, Value From Lookup) LT
ON stk.StockType = LT.lookupid
LEFT JOIN (SELECT LookupID, Value From Lookup) LSG
ON Stk.SalesGroup = LSG.LookupID
Left Join (SELECT LinkLookupID, Value From LinkLookup) LST
ON STK.SubTypeID = LST.Linklookupid
LEFT JOIN (SELECT * FROM AccStockPrice WHERE isnull(isContract,0) = 0) SP
ON STK.StockID = SP.StockID AND Getdate() between SP.ValidFrom AND SP.ValidTo
LEFT JOIN (Select EntityID, Company as [Supplier] FROM Entity) E
ON E.EntityID = SP.SupplierID
Left Join (SELECT LookupID, Value From Lookup
	UNION ALL
	SELECT -1, 'ACCOUNTS RECEIVABLE'
	UNION ALL
	SELECT -2, 'OUTPUT VAT CONTROL' 
	UNION ALL
	SELECT -3, 'COST OF SALES' 
	UNION ALL
	SELECT -4, 'INVENTORY' 
	UNION ALL
	SELECT -5, 'INPUT VAT CONTROL' 
	UNION ALL
	SELECT -6, 'BANK' 
	UNION ALL
	SELECT -8, 'FOREIGN EXCHANGE' 
	UNION ALL
	SELECT -9, 'ACCOUNTS PAYABLE' 
	UNION ALL
	SELECT -10, 'UN-RECEIVED INVENTORY' 
	UNION ALL
	SELECT -11, 'PREPAID EXPENSE' 
	UNION ALL
	SELECT -12, 'CAPITAL' 
	UNION ALL
	SELECT -13, 'INVENTORY EXPENSE' 
	) LJ
ON stk.JournalID = Lj.lookupid
Left Join (SELECT LinkLookupID, Value From LinkLookup) LLJ
ON stk.SubJournalID = Llj.Linklookupid
{where}
ORDER BY Stk.StockDescription","0","","1","LRA-FUSION","0","0","fusion"
"39988","cv_Acc_Multibilling_Report","","SET NoCount ON

DECLARE @StartDate as datetime
DECLARE @EndDate as datetime
DECLARE @squery1 as varchar(8000)
DECLARE @DayCount as datetime 
SET @StartDate = '{startdate}'
SET @DayCount = @StartDate 
SET @EndDate = '{enddate}'
SET @squery1 = 
'CREATE TABLE ##DayTab
(Daylist Datetime )'

IF OBJECT_ID(N'tempdb..##DayTab', N'U') IS NOT NULL 
BEGIN
	DROP TABLE ##DayTab;
END
Exec (@squery1)

While @DayCount <= @EndDate 
BEGIN
	INSERT INTO ##DayTab(Daylist) SELECT @DayCount 
	SET @Daycount = dateadd(d,1,@DayCount )
END


SELECT BM.DocID as [Batch Doc ID], E.Accountnum as [Account], E.Company,convert(varchar,DT.Daylist,111) as [Expected Invoice Date],
BM.OcInterval as [Frequency], BM.DocStatus as [Batch Doc Status], CONVERT(varchar,BM.StartDate,111) as [Start],
CONVERT(varchar,BM.EndDate,111) as [End],
DM.DocNo as [Invoice], DM.DocStatus as [Invoice Status], convert(varchar,DM.DateCompleted,111) as [Invoice Date],
DM.Memo as [Invoice Notes],
dbo.fnFormatNumber(isnull(BD.[TotalExVAT],0)) as [Expected Ex. VAT],
dbo.fnFormatNumber(isnull(BD.[TotalInclVAT],0) - isnull(DD.[TotalExVAT],0)) as [Expected VAT],
dbo.fnFormatNumber(isnull(BD.[TotalInclVAT],0)) as [Expected Incl. VAT],
dbo.fnFormatNumber(isnull(DD.[TotalExVAT],0)) as [Invoiced Ex. VAT],
dbo.fnFormatNumber(isnull(DD.[TotalInclVAT],0) - isnull(DD.[TotalExVAT],0)) as [Invoiced VAT],
dbo.fnFormatNumber(isnull(DD.[TotalInclVAT],0)) as [Invoiced Incl. VAT],
CASE WHEN DM.DocID is null THEN 'No invoice found'
ELSE 
	CASE WHEN (BM.OcInterval = 'Monthly' AND month(DM.DateCompleted) <> month(DT.Daylist))
			OR (BM.OcInterval = 'Daily' AND convert(varchar,DM.DateCompleted,111) <> convert(varchar,DT.Daylist,111))
			OR (BM.OcInterval = 'Yearly' AND Year(DM.DateCompleted) <> Year(DT.Daylist))
	THEN 'Invoice date set to wrong period'
		ELSE
			CASE WHEN isnull(BD.[TotalInclVAT],0) <> isnull(DD.[TotalInclVAT],0) THEN
			'Invoiced amount discrepant'
		END
	END
END as [Problem]
FROM ##DayTab DT
LEFT JOIN (SELECT DocID, DateCompleted, OcInterval, DocStatus,StartDate ,EndDate,EntityID     FROM BILLING_MASTER where (StartDate between @StartDate AND @EndDate) OR (EndDate between @StartDate AND @enddate) OR (Startdate <= @Startdate AND EndDate >= @Enddate))  BM
ON (BM.OcInterval = 'Daily' AND DT.Daylist between BM.StartDate AND BM.EndDate )
OR (BM.OcInterval = 'Monthly' AND DT.Daylist between BM.StartDate AND BM.EndDate AND  DAY(bm.datecompleted) = DAY(DT.DayList))
OR (BM.OcInterval = 'Yearly' AND DT.Daylist between BM.StartDate AND BM.EndDate AND  DAY(bm.datecompleted) = DAY(DT.DayList) AND  MONTH(bm.datecompleted) = MONTH(DT.DayList))
LEFT JOIN (SELECT * FROM DEBTOR_MASTER ) DM 
ON DM.BatchID = BM.DocID AND convert(varchar,DT.Daylist,111) = convert(varchar,DM.DateCreated,111)
LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [TotalExVAT],
             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) )  as [TotalInclVAT]
             FROM DEBTOR_DETAIL Group by Docid) DD
ON DM.DocID = DD.Docid  
LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [TotalExVAT],
             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) )  as [TotalInclVAT]
             FROM BILLING_DETAIL Group by Docid) BD
ON BM.DocID = BD.Docid  
LEFT JOIN (SELECT Entityid, Company, Accountnum from Entity ) E 
ON BM.Entityid = E.EntityID 
WHERE BM.DocID is not null
{where}
ORDER BY  BM.DocID,DT.Daylist


SET NoCount OFF","0","","1","LRA-FUSION","0","0","fusion"
"39989","cv_Acc_GL_Balance_Sheet_Print_FixedAsset","","SELECT [Description], Value, '' FROM
(
SELECT GL as [Description],dbo.fnFormatNumber(sum(isnull(Dr,0) - isnull(Cr,0))) as [Value]
FROM accGL
WHERE Type like 'Asset'
AND Doc in ('Asset Registry')
{where}
Group by GL
UNION ALL
SELECT GL + ' ACCUMULATED DEPRECIATION'  as [Description],dbo.fnFormatNumber(sum(isnull(Dr,0) - isnull(Cr,0))) as [Value]
FROM accGL
WHERE Type like 'Asset'
AND Doc in ('Asset Depreciation')
{where}
Group by GL
)A
ORDER BY [Description]","0","","1","LRA-FUSION","0","0","fusion"
"39990","cv_Acc_GL_Balance_Sheet_Print","","SELECT GL as [Description],dbo.fnFormatnumber(sum(isnull(Dr,0) - isnull(Cr,0))) as [Value], ''
FROM accGL
{where}
Group by GL
ORDER BY GL
","0","","1","LRA-FUSION","0","0","fusion"
"39991","cv_Acc_GL_Income_Statement_Print","","DECLARE @StartDate 			as datetime
DECLARE @DisplayStartDate	as datetime
DECLARE @EndDate  			as datetime
DECLARE @MonthRange 		as integer

SET @StartDate = '{startdate}'
SET @DisplayStartDate = '{displaystartdate}'
SET @EndDate ='{enddate}'
SET @MonthRange = datediff(m, @StartDate, @EndDate)


SELECT GL, 
dbo.fnFormatNumber(sum(Isnull(AmountCurrent,0))) as [CURRENT], 
dbo.fnFormatNumber(sum(isnull(BudgetedCurrent,0))) as [BUDGET], 
dbo.fnFormatNumber(sum(Isnull(AmountCurrent,0)) - (case when A.Type like '%INCOME%' THEN 1 ELSE -1 END *  sum(isnull(BudgetedCurrent,0)))) as [AMT VARIANCE] ,
'<B>' + dbo.fnFormatNumber(sum(Isnull(AmountYTD,0))) + '</B>' as [Y.T.D. ACTUAL], 
'<B>' + dbo.fnFormatNumber(sum(isnull(BudgetedYTD,0))) + '</B>' as [Y.T.D. BUDGET], 
'<B>' + dbo.fnFormatNumber(sum(Isnull(Amountytd,0)) - (case when A.Type like '%INCOME%' THEN 1 ELSE -1 END * sum(isnull(Budgetedytd,0)))) + '</B>' as [AMT VARIANCE] 

FROM (
	SELECT GLC.GLCodeID, GL.JournalId , 
	GL.TYPE, GLC.GLCode, GL.GL, GL.DivisionID, isnull(GL.ReportCategoryID,0) as [ReportCategoryID],
	CASE WHEN GL.DateCompleted BETWEEN  convert(Varchar,@DisplayStartDate,111)  AND   convert(Varchar,@EndDate,111) then isnull(Cr,0) - isnull(Dr,0) ELSE 0 END as [AmountCurrent],
	isnull(Cr,0) - isnull(Dr,0) as [AmountYTD],
	0 as [BudgetedCurrent], 0 as [BudgetedYTD]
	FROM AccGL GL
	LEFT JOIN AccGLCode GLC ON GL.JournalID = GLC.GLCategoryID AND upper(GL.Type) = upper(GLC.GLType) and (GL.DivisionID = GLC.Divisionid OR isnull(GLC.Divisionid,0) = 0 )
	WHERE GL.Type in ('EXPENSE', 'INCOME', 'OTHER INCOME', 'COST OF SALES') 
	AND GL.GL is not null AND GL.DateCompleted BETWEEN  convert(Varchar,@StartDate,111)  AND   convert(Varchar,@EndDate,111) 
	AND isnull(Cr,0) - isnull(Dr,0) <> 0
	
	UNION ALL

	SELECT GLC.GLCodeID, B.JournalID,upper(DocType) as [GLType],GLC.GLCode,Upper(LGL.Value) + isnull(' - ' + LRC.Value,'') as [GL],B.DivisionID,  isnull(B.GLReportCategoryID,0) as [ReportCategoryID],
	0 as [AmountCurrent], 0 as [AmountYTD],
	CASE WHEN B.DocType like '%INCOME%' THEN 1 ELSE -1 END * CASE WHEN B.BudDate BETWEEN convert(Varchar,@DisplayStartDate,111)  AND   convert(Varchar,@EndDate,111) then isnull(B.TotalSellingPriceEx,0) ELSE 0 END as [BudgetedCurrent],
	CASE WHEN B.DocType like '%INCOME%' THEN 1 ELSE -1 END * isnull(B.TotalSellingPriceEx,0) as [BudgetedYTD]
	FROM AccBudget B
	LEFT JOIN Lookup LRC ON B.GLReportCategoryID = LRC.LookupID
	LEFT JOIN (SELECT LookupID, Value 
	FROM Lookup 
	where class like 'JournalType' 
	UNION ALL
	SELECT -1, 'ACCOUNTS RECEIVABLE'
	UNION ALL
	SELECT -2, 'OUTPUT VAT CONTROL' 
	UNION ALL
	SELECT -3, 'COST OF SALES' 
	UNION ALL
	SELECT -4, 'INVENTORY' 
	UNION ALL
	SELECT -5, 'INPUT VAT CONTROL' 
	UNION ALL
	SELECT -6, 'BANK' 
	UNION ALL
	SELECT -8, 'FOREIGN EXCHANGE' 
	UNION ALL
	SELECT -9, 'ACCOUNTS PAYABLE' 
	UNION ALL
	SELECT -10, 'UN-RECEIVED INVENTORY' 
	UNION ALL
	SELECT -11, 'PREPAID EXPENSE' 
	UNION ALL
	SELECT -12, 'CAPITAL' 
	UNION ALL
	SELECT -13, 'INVENTORY EXPENSE' 
	UNION ALL
	SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
	UNION ALL
	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL'
	UNION ALL
	SELECT -16, 'DISCOUNT ALLOWED' 
	UNION ALL
	SELECT -17, 'DISCOUNT RECEIVED' 
	UNION ALL
	SELECT -18, 'OPENING BALANCE'
	) LGL 
	ON B.JournalID = LGL.LookupID
	LEFT JOIN AccGLCode GLC ON B.JournalID = GLC.GLCategoryID AND upper(B.DocType) = upper(GLC.GLType) and (B.DivisionID = GLC.Divisionid OR GLC.Divisionid = 0) and isnull(B.GLCode,0) = isnull(GLC.GLCode,0)
	WHERE isnull(B.IsGLBudget,0) = 1 AND B.BudDate BETWEEN convert(Varchar,@StartDate,111)  AND   convert(Varchar,@EndDate,111) 
	AND isnull(B.TotalSellingPriceEx,0) <> 0
) A
{where}
Group by A.GL, A.Type
ORDER BY A.GL

","0","","1","LRA-FUSION","0","0","fusion"
"39992","cv_Acc_GL_Income_Statement_Print_NoReportCategory","","DECLARE @StartDate 			as datetime
DECLARE @DisplayStartDate	as datetime
DECLARE @EndDate  			as datetime
DECLARE @MonthRange 		as integer

SET @StartDate = '{startdate}'
SET @DisplayStartDate = '{displaystartdate}'
SET @EndDate ='{enddate}'
SET @MonthRange = datediff(m, @StartDate, @EndDate)


SELECT GL, 
dbo.fnFormatNumber(sum(Isnull(AmountCurrent,0))) as [CURRENT], 
dbo.fnFormatNumber(sum(isnull(BudgetedCurrent,0))) as [BUDGET], 
dbo.fnFormatNumber(sum(Isnull(AmountCurrent,0)) - (case when A.Type like '%INCOME%' THEN 1 ELSE -1 END *  sum(isnull(BudgetedCurrent,0)))) as [AMT VARIANCE] ,
dbo.fnFormatNumber(sum(Isnull(AmountYTD,0))) as [Y.T.D. ACTUAL], 
dbo.fnFormatNumber(sum(isnull(BudgetedYTD,0))) as [Y.T.D. BUDGET], 
dbo.fnFormatNumber(sum(Isnull(Amountytd,0)) - (case when A.Type like '%INCOME%' THEN 1 ELSE -1 END * sum(isnull(Budgetedytd,0)))) as [AMT VARIANCE] 

FROM (
	SELECT GLC.GLCodeID, GL.JournalId , 
	GL.TYPE, GLC.GLCode, replace(GL.GL, ' - ' + isnull(LRC.Value,0),'') as [GL], GL.DivisionID, isnull(GL.ReportCategoryID,0) as [ReportCategoryID],
	CASE WHEN GL.DateCompleted BETWEEN  convert(Varchar,@DisplayStartDate,111)  AND   convert(Varchar,@EndDate,111) then isnull(Cr,0) - isnull(Dr,0) ELSE 0 END as [AmountCurrent],
	isnull(Cr,0) - isnull(Dr,0) as [AmountYTD],
	0 as [BudgetedCurrent], 0 as [BudgetedYTD]
	FROM AccGL GL
	LEFT JOIN AccGLCode GLC ON GL.JournalID = GLC.GLCategoryID AND upper(GL.Type) = upper(GLC.GLType) and (GL.DivisionID = GLC.Divisionid OR isnull(GLC.Divisionid,0) = 0 )
	LEFT JOIN Lookup LRC ON GL.ReportCategoryID = LRC.Lookupid
	WHERE GL.Type in ('EXPENSE', 'INCOME', 'OTHER INCOME', 'COST OF SALES') 
	AND GL.GL is not null AND GL.DateCompleted BETWEEN  convert(Varchar,@StartDate,111)  AND   convert(Varchar,@EndDate,111) 
	AND isnull(Cr,0) - isnull(Dr,0) <> 0 
	
	UNION ALL

	SELECT GLC.GLCodeID, B.JournalID,upper(DocType) as [GLType],GLC.GLCode,Upper(LGL.Value) as [GL],B.DivisionID,  isnull(B.GLReportCategoryID,0) as [ReportCategoryID],
	0 as [AmountCurrent], 0 as [AmountYTD],
	CASE WHEN B.DocType like '%INCOME%' THEN 1 ELSE -1 END * CASE WHEN B.BudDate BETWEEN convert(Varchar,@DisplayStartDate,111)  AND   convert(Varchar,@EndDate,111) then isnull(B.TotalSellingPriceEx,0) ELSE 0 END as [BudgetedCurrent],
	CASE WHEN B.DocType like '%INCOME%' THEN 1 ELSE -1 END * isnull(B.TotalSellingPriceEx,0) as [BudgetedYTD]
	FROM AccBudget B
	LEFT JOIN Lookup LRC ON B.GLReportCategoryID = LRC.LookupID
	LEFT JOIN (SELECT LookupID, Value 
	FROM Lookup 
	where class like 'JournalType' 
	UNION ALL
	SELECT -1, 'ACCOUNTS RECEIVABLE'
	UNION ALL
	SELECT -2, 'OUTPUT VAT CONTROL' 
	UNION ALL
	SELECT -3, 'COST OF SALES' 
	UNION ALL
	SELECT -4, 'INVENTORY' 
	UNION ALL
	SELECT -5, 'INPUT VAT CONTROL' 
	UNION ALL
	SELECT -6, 'BANK' 
	UNION ALL
	SELECT -8, 'FOREIGN EXCHANGE' 
	UNION ALL
	SELECT -9, 'ACCOUNTS PAYABLE' 
	UNION ALL
	SELECT -10, 'UN-RECEIVED INVENTORY' 
	UNION ALL
	SELECT -11, 'PREPAID EXPENSE' 
	UNION ALL
	SELECT -12, 'CAPITAL' 
	UNION ALL
	SELECT -13, 'INVENTORY EXPENSE' 
	UNION ALL
	SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
	UNION ALL
	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL'
	UNION ALL
	SELECT -16, 'DISCOUNT ALLOWED' 
	UNION ALL
	SELECT -17, 'DISCOUNT RECEIVED' 
	UNION ALL
	SELECT -18, 'OPENING BALANCE'
	) LGL 
	ON B.JournalID = LGL.LookupID
	LEFT JOIN AccGLCode GLC ON B.JournalID = GLC.GLCategoryID AND upper(B.DocType) = upper(GLC.GLType) and (B.DivisionID = GLC.Divisionid OR GLC.Divisionid = 0) and isnull(B.GLCode,0) = isnull(GLC.GLCode,0)
	WHERE isnull(B.IsGLBudget,0) = 1 AND B.BudDate BETWEEN convert(Varchar,@StartDate,111)  AND   convert(Varchar,@EndDate,111) 
	AND  isnull(B.TotalSellingPriceEx,0) <> 0
) A
{where}
Group by A.GL, A.Type
ORDER BY A.GL

","0","","1","LRA-FUSION","0","0","fusion"
"39993","cv_Acc_Payroll_Man_Totals","","SELECT PED.StockID,
STK.StockDescription as [Description],
convert(varchar,cast(sum(isnull([Deductions], 0)) as money),1) as [Deductions]
FROM AccPayroll P
LEFT JOIN (SELECT Staffid, isnull(firstname, '') + ' ' +  isnull(Surname,'') as [Staff Member] FROM Staff ) ST
ON P.Staffid =  ST.Staffid
LEFT JOIN Lookup LD  ON P.DivisionID = LD.LookupID
LEFT JOIN (SELECT DocID,Stockid, sum(isnull(Amount,0)) as [Deductions] FROM AccPayrollDeductions  Group By DocID,StockID) PED
ON P.DocID = PED.DocID
LEFT JOIN (SELECT StockID, StockDescription FROM AccStock ) STK
ON PED.StockID = STK.StockID
{where}
GROUP BY PED.StockID , STK.StockDescription
ORDER By STK.StockDescription

","0","","1","LRA-FUSION","0","0","fusion"
"39994","cv_AccSTOCK_ControlMan_Containers","","--cv_AccSTOCK_ControlMan_Containers
DECLARE @Date as Datetime
SET @Date ='{date}'

SELECT 
Convert(varchar,STK.StockID) + '#' + Convert(varchar,isnull(LL.LinkLookupid,0))  as [ID], 
ST.Value as [Type],
SST.Value as [Sub Type],
LL.Value as [Container],
STK.StockCode as [Code], 
STK.StockDescription as [Description],
LU.Value as [Unit],
dbo.fnFormatNumber(isnull(SO.Qty,0) - isnull(DN.Qty,0))  as [On S.O.],
dbo.fnFormatNumber(isnull(MC.Qty,0)) as [For Manufacturing], 
dbo.fnFormatNumber(isnull([Qty In Container],0)) as [Qty In Container],
dbo.fnFormatNumber((isnull(PO.Qty,0) - isnull(GRN.Qty,0)) * SoldByToPurchasedByRatio)  as [On P.O.],
dbo.fnFormatNumber(isnull(MO.Qty,0)) as [Being Manufactured],
dbo.fnFormatNumber(isnull(STK.Fulfillment,0)) as [Fulfillment],
dbo.fnFormatNumber(
isnull([Qty In Container],0) --In Container
-
(isnull(SO.Qty,0) - isnull(DN.Qty,0)) --On S.O. & Required
-
CASE WHEN isnull(MC.RaisedByDocType,'') ='Sales Order' then  0 ELSE isnull(MC.Qty,0) END  --For Manufacturing 
)as [Available],
STK.LeadTime as [Lead Time (Hrs)],
dbo.fnFormatNumber(
isnull(STK.Fulfillment,0) --Fulfillment
-
isnull(MO.Qty,0) --Being Manufactured
- 
((isnull(PO.Qty,0) - isnull(GRN.Qty,0)) * SoldByToPurchasedByRatio ) --On P.O.
-
(
    isnull([Qty In Container],0) --In Container
    -
    (isnull(SO.Qty,0) - isnull(DN.Qty,0)) --On S.O. & Required
    -
    CASE WHEN isnull(MC.RaisedByDocType,'') ='Sales Order' then  0 ELSE isnull(MC.Qty,0) END --For Manufacturing 
)) as [Recommended]
FROM  AccStock STK
CROSS JOIN (SELECT * FROM LinkLookup where class like 'StockContainer') LL
LEFT JOIN (SELECT * FROM Lookup) LU
ON STK.SoldBy = LU.LookupID
LEFT JOIN (SELECT * FROM Lookup where class like 'StockType') ST
ON STK.StockType= ST.Lookupid
LEFT JOIN (SELECT * FROM LinkLookup where class like 'StockSubType') SST
ON STK.SubTypeID = SST.LinkLookupid
LEFT JOIN (SELECT StockID,ContainerID, sum(Qty * Ratio) as [Qty In Container] FROM AccStockControl WHERE AdjustDate <= @Date  Group by StockID,ContainerID) SC
ON STK.StockID = SC.StockID AND LL.LinkLookupID = SC.ContainerID
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
            LEFT JOIN (SELECT DOCID, DocType, DateCompleted FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
            ON DD.DocID = DM.DocID
            LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*DEBTOR_DETAIL*/) DDM
            ON DD.ComponentOfLineID = DDM.LineID
            WHERE DM.DocType in ('Sales Order','Quote')
            AND DM.DateCompleted <= @Date
            Group by StockID, ContainerID ) SO
ON STK.StockID = SO.StockID AND LL.LinkLookupID = SO.ContainerID    
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
            LEFT JOIN (SELECT DOCID, DocType, DateCompleted FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
            ON DD.DocID = DM.DocID
            LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*DEBTOR_DETAIL*/) DDM
            ON isnull(DD.ComponentOfLineID,0) = DDM.LineID
            WHERE DM.DocType = 'Dispatch Note'
            AND DM.DateCompleted <= @Date
            Group by StockID, ContainerID ) DN
ON STK.StockID = DN.StockID AND LL.LinkLookupID = DN.ContainerID    
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType,DateCompleted FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Purchase Order'
            AND CM.DateCompleted <= @Date
            Group by StockID, ContainerID ) PO
ON STK.StockID = PO.StockID AND LL.LinkLookupID = PO.ContainerID    
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType, DateCompleted FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Goods Received Note'
            AND CM.DateCompleted <= @Date
            Group by StockID, ContainerID ) GRN
ON STK.StockID = GRN.StockID AND LL.LinkLookupID = GRN.ContainerID  
LEFT JOIN (SELECT MD.StockID, MD.ContainerID, Sum(MD.Qty) as [Qty],MM.RaisedByDocType FROM AccMANUFACTURE_DETAIL MD
            LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType ,DateCompleted FROM AccMANUFACTURE) MM
            ON MD.DocID = MM.DocID
            WHERE isnull(MM.IsComplete,0) = 0 
            AND MM.DateCompleted <= @Date
            Group by MD.StockID, MD.ContainerID, MM.RaisedByDocType) MC
ON STK.StockID = MC.StockID AND LL.LinkLookupID = MC.ContainerID
LEFT JOIN (SELECT MO.StockID, MO.ContainerID, sum(MO.Qty) as [Qty],MM.RaisedByDocType FROM AccMANUFACTURE_Output MO
            LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType FROM AccMANUFACTURE) MM
            ON MO.DocID = MM.DocID
            WHERE isnull(MM.IsComplete,0) = 0 
            Group by MO.StockID, MO.ContainerID,MM.RaisedByDocType) MO
ON STK.StockID = MO.StockID AND LL.LinkLookupID = MO.ContainerID
LEFT JOIN (SELECT StockID, DivisionID, PriceCategoryID, max( CostPriceEx) as [CostPriceEx], max(SellingPriceEx) as [SellingPriceEx] FROM AccStockPrice WHERE @Date between ValidFrom AND ValidTo GROUP BY  StockID, DivisionID, PriceCategoryID) ASP
ON STK.StockID = ASP.StockID AND  ASP.DivisionID = LL.LinkedTo
{where}


ORDER BY StockCode, LL.Value","0","","1","LRA-FUSION","0","0","fusion"
"39995","cv_Acc_Document_Link_Report","","SELECT DocID, [Doc. Type], [Doc. No.], LD.Value as [Division], 
CASE WHEN isnull(A.UseEC,0) = 1 then EC.AccountNum ELSE E.AccountNum END as [Account],
CASE WHEN isnull(A.UseEC,0) = 1 then EC.Contact ELSE E.Company END as [Client],
isnull(EH.Company,'') as [Holding Company],
A.ClientPo as [Customer Order Number], Project,Notes, 
Convert(varchar,Created,111) as [Created],Convert(varchar,[Doc. Date],111) as [Doc. Date],
[Status], U.Consultant,ExtSal.Value as [Ext. Consultant], Currency, [R.O.E.], 
dbo.fnFormatNumber([Total Ex. VAT]) as [Total Ex. VAT], 
dbo.fnFormatNumber([Total VAT]) as [Total VAT],
dbo.fnFormatNumber([Total Incl. VAT]) as [Total Incl. VAT],
dbo.fnFormatNumber([Est. Cost]) as [Est. Cost]
FROM 
(
	SELECT Convert(Varchar,DM.DocID) + '#' + DocType as [DocID], DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
	DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
	[ClientPO], P.ProjectName  as [Project],	isnull(DM.Memo,'') as Notes, 
	DateCreated as [Created],DateCompleted as [Doc. Date],DocStatus as [Status], DM.SalesRepID as [SalesRepID],DM.CreatedBy,
	DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * [Total Ex. VAT] as [Total Ex. VAT], 
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT] - [Total Ex. VAT]) as [Total VAT], 
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * cast([Total Incl. VAT]   as money)  as [Total Incl. VAT],
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * cast([Est. Cost] as money) as [Est. Cost],
	DM.Period, DM.BatchID, DM.PreviousDocID, DMP.PreviousDocType 
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT DocID, convert(money,Sum(round(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100),2))) as [Total Ex. VAT],
	             round(round(cast(sum(round(PriceIncl / case PriceEx when 0 then 1 else priceex end,2) * round(PriceEx * qty * ((100 - isnull(discperc,0))/100),2)) as money),3),2) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             convert(money,(Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)))) as [Total Discount]
	             FROM DEBTOR_DETAIL Group by Docid) DD
	ON DM.DocID = DD.Docid
	LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
	ON DM.DocID = SD.DocID
	LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
	ON DM.ProjectID = P.ProjectID
	LEFT JOIN (SELECT ModuleID, ModuleName FROM Modules) M
	ON DM.ModuleID = M.ModuleID
	LEFT JOIN (SELECT DocID, DocType as [PreviousDocType] FROM DEBTOR_MASTER) DMP
	ON isnull(DM.PreviousDocID,0) = isnull(DMP.DocID,0)

	UNION ALL

	SELECT Convert(Varchar,DM.DocID) + '#' + DocType as [DocID], DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
	DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
	[ClientPO], P.ProjectName  as [Project],	isnull(DM.Memo,'') as Notes, 
	DateCreated as [Created],DateCompleted as [Doc. Date],DocStatus as [Status], DM.SalesRepID as [SalesRepID],DM.CreatedBy,
	DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
	CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * [Total Ex. VAT] as [Total Ex. VAT], 
	CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT] - [Total Ex. VAT]) as [Total VAT], 
	CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * cast([Total Incl. VAT]   as money)  as [Total Incl. VAT],
	CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * cast([Est. Cost] as money) as [Est. Cost],
	DM.Period, null as [Batchid],DM.PreviousDocID, DMP.PreviousDocType
	FROM CREDITOR_MASTER DM
	LEFT JOIN (SELECT DocID, convert(money,Sum(round(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100),2))) as [Total Ex. VAT],
	             round(round(cast(sum(round(PriceIncl / case PriceEx when 0 then 1 else priceex end,2) * round(PriceEx * qty * ((100 - isnull(discperc,0))/100),2)) as money),3),2) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             convert(money,(Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)))) as [Total Discount]
	             FROM CREDITOR_DETAIL Group by Docid) DD
	ON DM.DocID = DD.Docid
	LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
	ON DM.DocID = SD.DocID
	LEFT JOIN (SELECT DocID, ClientID, ProjectID FROM CREDITOR_DETAIL) CDD
	ON DM.DocID= CDD.DocID
	LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
	ON DM.ProjectID = P.ProjectID
	LEFT JOIN (SELECT ModuleID, ModuleName FROM Modules) M
	ON DM.ModuleID = M.ModuleID
	LEFT JOIN (SELECT DocID, DocType as [PreviousDocType] FROM CREDITOR_MASTER) DMP
	ON isnull(DM.PreviousDocID,0) = isnull(DMP.DocID,0)
	
	
) A
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
	On A.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
	ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
	ON A.EntityID = E.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
	ON E.AlternateCompanyID = EH.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
	ON A.Entityid = EC.EntityContactID AND isnull(A.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
	ON E.SalesConsID = ExtSal.lookupid
{where}
ORDER BY A.DocID desc



","0","","1","LRA-FUSION","0","0","fusion"
"39996","cv_Timesheet_Mailer_New","","SELECT [Company],[Project Name],[Module Name],[Timeheet Date] as [Timesheet Date],[Developer],[Hours Captured] FROM (
select 
e.company as ""Company"",
p.projectname as ""Project Name"", 
modules.modulename as ""Module Name"",
convert(varchar,timesheetdate,111) as ""Timeheet Date"", 
users.username as ""Developer"",
hoursdone as ""Hours Captured"",
projectstatus as ""Project Status"",
1 AS Rank
from timesheet t
left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
{where}

UNION ALL

select DISTINCT
'Total' as ""Company"",
NULL as ""Project Name"", 
NULL as ""Module Name"",
NULL as ""Timeheet Date"", 
NULL as ""Developer"",
SUM(hoursdone) as ""Hours Captured"",
NULL as ""Project Status"",
2 AS Rank
from timesheet t
left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
{where}

) X Order BY Rank, [Timeheet Date], [Company]","0","","1","LRA-FUSION","0","0","fusion"
"39997","cv_Weekly_sla_Report","","DECLARE @Today DATETIME
SET @Today = GETDATE()

SELECT 
    Projects.ProjectName, 
    SUM(a.[h1]) as [Total Hours], 
    CONVERT(VARCHAR, CAST(SUM(a.h2) as MONEY),1) as [Total Actual],
    CAST(
                CASE WHEN SUM(ISNULL(a.[h1],0)) = 0 
                    THEN 0 
                ELSE  
                CASE WHEN SUM(ISNULL(a.h2,0)) = 0 
                    THEN 0 
                ELSE  
                    ROUND((sum(a.h2) / (sum(a.[h1]))) * 100,1)
                END
                END
            AS MONEY)
       AS [% Used],
       dbo.GetReportDetails(Projects.entityid, 'activity', @Today) as [Last Activity Date-Details],
	   dbo.GetReportDetails(Projects.entityID, 'notes', @Today) as [Last Note Date-Details]
FROM Projects 
LEFT JOIN (SELECT s.ProjectID , s.bla, ISNULL(s.Hours,0) as [h1] , ISNULL(SUM(s.HoursDone),0) as [h2] FROM (
        SELECT DISTINCT ts.ProjectID,TimesheetID,Month(TimesheetDate) as bla ,HoursDone,ps.Hours FROM Timesheet ts
        LEFT JOIN ProjectSLA ps on ts.projectid = ps.projectid AND Year(ts.TimesheetDate) = Year(ps.StartDate) AND Month(ts.TimesheetDate) = MONTH(DATEADD(Month, ps.MonthInt, ps.StartDate))
        where ts.TimeSheetDate > ps.StartDate
    ) s
    GROUP BY s.BLA, s.HOURS, s.ProjectID) a ON Projects.ProjectID = a.ProjectID
LEFT JOIN Entity e ON e.EntityID = Projects.EntityID
left join (SELECT ProjectID, ProjDate as [Start Date] FROM ProjectDates Where Descr like 'Start Date' ) PDS
ON Projects.ProjectID  = PDS.ProjectID
left join (SELECT ProjectID, ProjDate as [End Date] FROM ProjectDates Where Descr like 'End Date') PDE
ON Projects.ProjectID  = PDE.ProjectID
--{where} 
WHERE projects.projectstateid = (select ProjectStateID from projectstate WHERE ProjectState Like 'SLA%')
GROUP BY Projects.ProjectName, Projects.ProjectID, pds.[Start Date], pde.[End Date], Projects.entityid
","0","","1","LRA-FUSION","0","0","fusion"
"39998","cv_Project_mailer","","DECLARE @Today DATETIME

SET @Today = GETDATE()

SELECT * FROM (
Select 
	ProjectID,
	Company,
	ProjectName AS [Project Name],
	ProjectState as [Project Status],
	ProjMan as [Project Manager],
	ROUND((Sum([Estimated Hours])),1) AS [Purchased Hours],
	ROUND((Sum([Actual Hours])),1) AS [Used Hours],
CAST(
				CASE WHEN SUM(ISNULL([Estimated Hours],0)) = 0 
                    THEN 0 
                ELSE  
				CASE WHEN SUM(ISNULL([Actual Hours],0)) = 0 
                    THEN 0 
                ELSE  
                    ROUND((sum([Actual Hours]) / (sum([Estimated Hours]))) * 100,1)
                END
                END
            AS MONEY)
       AS [% Used],
Activity as [Last Activity Date-Details],
Notes as [Last Note Date-Details]

from
(
	select 
		e.company,
		projects.ProjectName,
		projects.projectid,
		PS.ProjectState, 
		isnull(modules.esthours,0) as ""Estimated Hours"",
		sum(mh.hours) as ""Actual Hours"",
		dbo.GetReportDetails(e.entityID, 'notes',@Today) as Notes, 
		dbo.GetReportDetails(e.entityid, 'activity',@Today) as Activity, s.[projMan]
	from modules WITH(NOLOCK)
	left join projects  WITH(NOLOCK) on projects.projectid = modules.projectid
	left join entity e WITH(NOLOCK) on e.entityid = projects.entityid
	left join entitycontact WITH(NOLOCK) on entitycontact.entitycontactid = modules.entitycontactid
	left join modulehours mh WITH(NOLOCK) on mh.moduleid = modules.moduleid
	left join (SELECT ProjectID, ProjDate as [Start Date] FROM ProjectDates WITH(NOLOCK) Where Descr like 'Start Date' ) PDS
	ON Projects.ProjectID  = PDS.ProjectID
	left join (SELECT ProjectID, ProjDate as [End Date] FROM ProjectDates WITH(NOLOCK) Where Descr like 'End Date') PDE
	ON Projects.ProjectID  = PDE.ProjectID
	LEFT JOIN (SELECT staffID, ISNULL(FirstName, '') + ' ' + ISNULL(Surname, '') as [ProjMan] FROM staff WITH(NOLOCK)) s
	ON s.staffid = Projects.ProjectManagerID
	LEFT JOIN ProjectState PS ON PS.ProjectStateID = Projects.ProjectStateID
	--{where}
	WHERE projects.projectstateid IN (select ProjectStateID from projectstate WHERE ProjectState NOT IN ('Completed Project','Cancelled Project','Cold Project'))
	group by e.company, projects.ProjectName,projects.projectid, modules.moduleid, modules.esthours,s.[projMan],e.entityID, PS.ProjectState
)a
GROUP BY a.company, a.ProjectName, a.projectid , a.notes, a.activity, a.[projMan], A.ProjectState
)b
ORDER BY b.Company
","0","","1","LRA-FUSION","0","0","fusion"
"39999","cv_Acc_Project_Specifications","","SELECT DISTINCT A.Specifications, A.StockID,A.StockDescription, CED.Qty FROM COST_ESTIMATE_DETAIL CED
LEFT JOIN (SELECT StockID,StockDescription,Specifications FROM AccStock) A 
ON A.StockID = CED.StockID
WHERE CED.DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40000","cv_TimesheetBillingMan","","DECLARE @UseStaff INT
SET @UseStaff = (SELECT TOP 1 ISNULL(Selected,0) FROM CRMSetup WHERE Description = 'Print' AND Variable = 'StaffTimesheets')

select 
 t.timesheetid
 ,e.company as ""Company""
 ,P.ProjectID as [Project No.]
 ,p.projectname as ""Project Name""
 ,dappt.notes as [Description]
 , modules.modulename as ""Module Name""
 ,l.Value As 'Task Type'
 ,convert(varchar,timesheetdate,111) as ""Timeheet Date""
 ,DATEPART(WEEK, timesheetdate) as [Week]
 ,CASE WHEN @UseStaff = 1 THEN ISNULL(SS.Firstname,'') + ' ' + ISNULL(SS.Surname,'') ELSE ISNULL(users.FirstName,'') + ' ' + ISNULL(users.Surname,'') END as ""Consultant""
 ,isnull(hoursdone,0) as ""Hours Captured""
 ,isnull(MR.RateAmount,0) As [Rate Amount]
 --,CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END as [Cost to Company]
 ,dbo.fnFormatNumber((isnull(hoursdone,0)* CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END)) as ""Total Cost to Company Rate""
 ,dbo.fnFormatNumber((isnull(hoursdone,0)*isnull(MR.RateAmount,0))) as ""Total Rate""
 ,CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN
    dbo.fnFormatNumber(((isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((isnull(hoursdone,0)*isnull(s.CosttoCompany,0))))
 ELSE
	dbo.fnFormatNumber(((isnull(hoursdone,0)*isnull(MR.RateAmount,0)))-((isnull(hoursdone,0)*isnull(MRR.RateAmount,0)))) END as ""Total Rate Vs Cost to Company""
 ,case when hoursdone < 1 then 1 else Round(hoursdone,0)end as ""Hours Rounded""
 ,Convert(varchar,Cast(isnull(s.StaffRatePerc,0) as Money),1) as [Dev Rate(%)]
 ,(isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0) as [Actual Hours]
  ,(isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)  * CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN ISNULL(s.CosttoCompany,0) ELSE ISNULL(MRR.RateAmount,0) END as [Total Cost to Company Billable]
 ,(isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)  * SUM(MR.RateAmount) as [Total Billable]
 ,((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)  * SUM(MR.RateAmount)) - ((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)  * 
    CASE WHEN ISNULL(s.CosttoCompany,0) = ISNULL(MRR.RateAmount,0) THEN    
        (s.CosttoCompany) ELSE (MRR.RateAmount) END) as [Total Billable VS Total Cost to Company Billable]
 ,'Not Quoted For' = case(isnull(t.OutOfSpec,0)) when 0 then 'No' else 'Yes' end
 ,'Billable' = case(isnull(t.NeedInvoice,0)) when 0 then 'No' else 'Yes' end
 ,'Billed' = Case(ISNULL(t.Billed,0)) when 0 Then 'No' else 'Yes' End
 ,'Approved' = Case(IsNull(t.Approved,0)) when 0 then 'No' else 'Yes' end
 ,isnull(  left('00000000', 8- len(t.InvoiceNo)) + convert(varchar,t.InvoiceNo),'None') as [Invoice No]

from timesheet t
left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
LEFT JOIN Staff SS ON SS.StaffID = t.DeveloperID
left join Devappointment dappt on dappt.DevApptID = t.DevApptID
left join lookup l on l.lookupid = dappt.TASKTYPEID 
LEFT JOIN (
    SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
    WHERE ISNULL(IsCostToCompany,0) = 0
) MR ON MR.ModuleID = ISNULL(modules.ModuleID,0) and MR.ConsultantID =S.staffID AND p.ProjectID = MR.ProjectID
LEFT JOIN (
    SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
    WHERE ISNULL(IsCostToCompany,0) = 1
) MRR ON MRR.ModuleID = ISNULL(modules.ModuleID,0) and MRR.ConsultantID =S.staffID AND p.ProjectID = MRR.ProjectID
LEFT JOIN (
SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Consultant],StaffID FROM Users) U 
ON U.StaffID = MR.ConsultantID
Left Join userdivisions UD on UD.UserID=U.UserID
{where}
GROUP BY t.timesheetid,e.Company,p.ProjectID,p.ProjectName,modules.ModuleName,l.Value,t.TimesheetDate
,users.FirstName,users.Surname,t.HoursDone,S.StaffRatePerc,dappt.Notes,t.OutOfSpec,t.NeedInvoice,t.Billed,t.Approved,t.InvoiceNo,MR.RateAmount
,U.UserID,s.CosttoCompany
 ,T.DeveloperID, SS.Firstname, SS.Surname, MRR.RateAmount

order by timesheetdate","0","","1","LRA-FUSION","0","0","fusion"
"40001","cv_Export_TimesheetBillingCompany","","SELECT 
	Company, 
	[Project No.],
	[Project Name],
	[Module Name],
	[Timeheet Date],
	Developer,
	[Hours Captured],
	[Hours Rounded], 
	[Actual Hours],
	[Notes],
	[Not Quoted For],
	[Billable],
	Approved,
	[Task Type],
	Billed
FROM (
select 
	t.timesheetid,
	E.EntityID,
	e.company as ""Company"",
	P.ProjectID as [Project No.],
	p.projectname as ""Project Name"", 
	modules.modulename as ""Module Name"",
	convert(varchar,timesheetdate,111) as ""Timeheet Date""
	, users.username as ""Developer"",
	hoursdone as ""Hours Captured"",
	case when hoursdone < 1 then 1 else Round(hoursdone,0)end as ""Hours Rounded"",
	CAST((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0) as DECIMAL(12,2)) as [Actual Hours],
	projectstatus as ""Notes"",
	'Not Quoted For' = case(isnull(t.OutOfSpec,0)) when 0 then 'No' else 'Yes' end,
	'Billable' = case(isnull(t.NeedInvoice,0)) when 0 then 'No' else 'Yes' end,
	t.Approved,
	l.Value As 'Task Type',
	'Billed' = Case(ISNULL(t.Billed,0)) when 0 Then 'No' else 'Yes' End,
	1 As Ranks
from timesheet t
left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
left join Devappointment dappt on dappt.DevApptID = t.DevApptID
left join lookup l on l.lookupid = dappt.TASKTYPEID 
{where}

UNION ALL

SELECT DISTINCT NULL,E.EntityID,NULL,P.ProjectID,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, 2 as Ranks 
from timesheet t
left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
left join Devappointment dappt on dappt.DevApptID = t.DevApptID
left join lookup l on l.lookupid = dappt.TASKTYPEID
{where}

UNION ALL

select 
	9999999999999,
	E.EntityID,
	'Total' as ""Company"",
	P.ProjectID as [Project No.],
	NULL as ""Project Name"", 
	NULL as ""Module Name"",
	NULL as ""Timeheet Date""
	,NULL as ""Developer"",
	SUM(hoursdone) as ""Hours Captured"",
	SUM(case when hoursdone < 1 then 1 else Round(hoursdone,0)end) as ""Hours Rounded"",
	SUM(
		(isnull(s.StaffRatePerc,0) /100) * 
		isnull(hoursdone,0)
	) as [Actual Hours],
	NULL as ""Notes"",
	NULL,
	NULL,
	NULL As 'Task Type',
	NULL,
	NULL,
	3 As Ranks
from timesheet t
left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
left join Devappointment dappt on dappt.DevApptID = t.DevApptID
left join lookup l on l.lookupid = dappt.TASKTYPEID
{where}
GROUP BY E.EntityID,P.ProjectID

) X 
ORDER By EntityID,Ranks","0","","1","LRA-FUSION","0","0","fusion"
"40002","cv_Acc_Print_Cost_Estimate_ScopeOfWork","","SELECT 
	A.StockCode as [Code], 
	ST.Value as [Type], 
	STS.Value as [Activity], 
	--A.StockDescription as [Description], 
	A.Specifications as [Comments / Specifications] 
FROM COST_ESTIMATE_DETAIL CED
LEFT JOIN (
	SELECT * FROM AccStock
) A ON A.StockID = CED.StockID
LEFT JOIN (
	SELECT 
		LookupID, 
		Value 
	FROM Lookup 
	WHERE Class LIKE 'StockType'
) ST ON ST.LookupID = A.StockType
LEFT JOIN (
	SELECT 
		LinkLookupID, 
		Value, 
		LinkedTo 
	FROM LinkLookup 
	WHERE Class LIKE 'StockSubType'
) STS 
ON STS.LinkLookupID = A.SubTypeID 
WHERE A.StockCode IS NOT NULL AND CED.DocID = {docid}
AND ST.Value NOT IN ('Consultant','Retainer','Travel') AND STS.Value NOT LIKE '%Accommodation%' AND STS.Value NOT LIKE '%Travel%'","0","","1","LRA-FUSION","0","0","fusion"
"40003","cv_Acc_Print_COST_Estimate_Custom_Header","","Declare @Currency as varchar(20)
Declare @ROE as float
SET @Currency = {currency}
SET @ROE = {roe}

SELECT Top 1
'{doctype}' as [<doctype>],
Case When isnull(DM.UseEC,0) = 0 then E.Legalname ELSE EC.Contact END as [<client>],
Case When isnull(DM.UseEC,0) = 0 then E.Legalname ELSE EC.Contact END as [<client>],
Case When isnull(DM.UseEC,0) = 0 then E.Legalname ELSE EC.Contact END as [<client>],
isnull(Att.Attention,'') as [<contact>],
isnull(Att.FullTitle,'') as [<fulltitle>],
isnull(Att.JobTitle,'') as [<jobtitle>],
isnull(Att.Fax,'') as [<fax>],
isnull(Att.Phone1,'') as [<phone>],
isnull(EA.Address1,'') as [<address1>],
isnull(EA.Address2,'') as [<address2>],
isnull(EA.Address3,'') as [<address3>],
isnull(EA.City,'') as [<address4>],

CASE isnull(EA.Address1,'') WHEN '' THEN '' ELSE  isnull(EA.Address1,'') + Char(13) END
+ 
CASE isnull(EA.Address2,'') WHEN '' THEN '' ELSE  isnull(EA.Address2,'') + Char(13) END 
+ 
CASE isnull(EA.Address3,'') WHEN '' THEN '' ELSE  isnull(EA.Address3,'') + Char(13) END
+ 
CASE isnull(EA.City,'') WHEN '' THEN '' ELSE  isnull(EA.City,'') + Char(13) END 
+ 
CASE isnull(EA.Code,'') WHEN '' THEN '' ELSE  isnull(EA.Code,'') END 

as [<address>],



Att.Email as [<email>],
convert(varchar,DM.DateCreated,103) as [<docdate>],
convert(varchar,DM.DateCreated,103) as [<docdate>],
convert(varchar,DM.DateCreated,103) as [<docdate>],
convert(varchar,DM.Startdate,103) + ' - ' + convert(varchar,DM.Enddate,103) as [<rundates>] ,
case WHEN isnull(DM.PreviousDocID,0) > 0 then PreviousDocID Else DM.DocID END  as [<docno>],
'.' + convert(varchar,DM.Revision) AS [<revision>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD.TotalEx / @ROE)  as [<totalex>],
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(DD.Discount /@ROE) as [<discount>],

/*
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber((Cast(DD.TotalIncl / case isnull(DD.TotalEx,0) when 0 then 1 else DD.TotalEx end as float) * (DD.TotalEx - round(DD.Discount,2))) / @ROE ) as [<totalincl>],
*/

/*
isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(((Cast(DD.TotalIncl / case isnull(DD.TotalEx,0) when 0 then 1 else DD.TotalEx end as float) * (DD.TotalEx - round(DD.Discount,4))) - (DD.TotalEx - DD.Discount)) / @ROE) as [<totalvat>], 
*/

CASE WHEN isnull(DD.Discount,0) <> 0 then char(13) + 'Discount' END as [<disclabel>],
CASE WHEN isnull(DD.Discount,0) <>  0 then char(13) + isnull(@Currency,DM.Currency) + ' ' + dbo.fnFormatNumber(cast(DD.Discount as money) / @ROE)  END as [<invisiblediscount>],
U.SalesCon as [<salescons>],
S.SalesRepCell as [<salesrepcell>],
LC.Value as [<extsalescons>],
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
DM.Descr as [<gendescr>],
DM.Descr as [<gendescr>],
DM.memo as [<notes>],
DS.Terms as [<terms>],
DS.Banking as [<banking>],
DS.Footer as [<footer>],
'R.O.E.' as [<roe>],
E.VATNum as [<clientvatnum>],
E.compregnum as [<compregnum>],
DM.Descr as [<description>],
DM.memo as [<longdescription>],
DM.ClientPO as [<clientpo>],
CONVERT(VARCHAR,CAST((
	SELECT SUM(PriceEx) FROM COST_Estimate_Detail CED
	LEFT JOIN (SELECT * FROM AccStock) A ON A.StockID = CED.StockID
	LEFT JOIN (SELECT * FROM Lookup) L ON L.LookupID = A.StockType
	WHERE L.Value LIKE 'Retainer' AND CED.DocID = DM.DocID
) as Money),1) as [<retainer>]
FROM COST_ESTIMATE_MASTER DM
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] 
--, sum(TotalIncl) as [TotalIncl]
, DocID 
	FROM COST_ESTIMATE_DETAIL DD
	LEFT JOIN AccStock stk ON Stk.StockID = DD.StockID
	LEFT JOIN Lookup L ON L.LookupID = Stk.StockType
	WHERE isnull(ComponentOfLineID,0) = 0 
	AND L.Value NOT IN ('Consultant','Retainer')
	Group By DocID) DD
ON DM.DocID = DD.DocID
LEFT JOIN (SELECT EntityID, Company,Legalname ,VATNum,AccountNum,InvoiceTo,Fax,Switchboard, SalesConsID,compregnum From Entity) E
ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact],Accountnum,Email,Fax,Phone1,SalesConsID FROM EntityContact) EC
ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention], ltrim(rtrim(isnull(Title,'') +  ' '+ isnull(surname,''))) as [FullTitle],Accountnum,Email,Fax,Phone1,SalesConsID,JobTitle FROM EntityContact) ATT
ON DM.AttentionOf = Att.EntityContactID 
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact],Accountnum,Email,SalesConsID FROM EntityContact) AEC
ON E.InvoiceTo = AEc.EntityContactID 
LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
ON DM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') +  ' '  + isnull(surname,'') as [SalesCon],StaffID  FROM Users) U 
ON DM.SalesRepID = U.UserID
LEFT JOIN (SELECT Staffid, Cell as [SalesRepCell] FROM Staff ) S 
ON U.Staffid = S.Staffid
LEFT JOIN Lookup LC 
ON LC.Lookupid =  CASE WHEN  isnull(DM.UseEC,0) =0 THEN E.SalesConsID ELSE EC.SalesConsID END
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%Postal%') EA
ON E.EntityID = EA.Entityid
WHERE DM.DocID = {docid}
","0","","1","LRA-FUSION","0","0","fusion"
"40004","cv_Acc_Print_Cost_Estimate_Consulting","","SELECT 
	ISNULL(l.Value,'') + '-' + ISNULL(ll.Value,'') + '-' + ISNULL(A.StockDescription,'') as [Task],
	CED.QTY as [Hours], 
	CONVERT(VARCHAR,CAST(CED.PriceEx AS Money),1) as [Rate per Hour], 
	CONVERT(VARCHAR,CAST((CED.PriceEx * CED.QTY) AS Money),1) as [Total]  
FROM COST_ESTIMATE_MASTER CEM
LEFT JOIN (SELECT * FROM Cost_Estimate_Detail) CED ON CED.DocID = CEM.DocID
LEFT JOIN (SELECT * FROM AccStock) A ON A.StockID = CED.StockID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) L ON L.LookupID = A.StockType
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LL ON LL.LinkLookupID = A.SubTypeID
WHERE CEM.DocID = {docid} AND (LL.Value NOT LIKE '%Accommodation%' AND LL.Value NOT LIKE '%Travel%') AND (L.Value Not LIKE '%Consultant%') AND (L.Value Not LIKE '%Retainer%')
","0","","1","LRA-FUSION","0","0","fusion"
"40005","cv_Acc_Print_Cost_Estimate_TravelAndAccomodation","","
SELECT 
	ISNULL(A.StockDescription,'') as Item,
	CED.QTY as [Unit], 
	CONVERT(VARCHAR,CAST(CED.PriceEx AS Money),1) as [Rate], 
	CONVERT(VARCHAR,CAST((CED.PriceEx * CED.QTY) AS Money),1) as [Cost]  
FROM COST_ESTIMATE_MASTER CEM
LEFT JOIN (SELECT * FROM Cost_Estimate_Detail) CED ON CED.DocID = CEM.DocID
LEFT JOIN (SELECT * FROM AccStock) A ON A.StockID = CED.StockID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) L ON L.LookupID = A.StockType
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LL ON LL.LinkLookupID = A.SubTypeID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) L2 ON L2.LookupID = A.SoldBy
WHERE CEM.DocID = {docid} AND (LL.Value LIKE '%Accommodation%' OR LL.Value LIKE '%Travel%') AND (L.Value Not LIKE '%Consultant%') AND (L.Value Not LIKE '%Retainer%')","0","","1","LRA-FUSION","0","0","fusion"
"40006","cv_TimesheetBillingBatchLines","","SELECT DISTINCT
	SUM(T.HoursDone) as MHours
	,S.StockID
	,S.StockDescription
	,S.StockCode
	,MR.RateAmount as CostPriceEx
	--S.SellingPriceEx 
	,MR.RateAmount as SellingPriceEx
	,[Consultant] as Comment
FROM Timesheet T
LEFT JOIN (SELECT * FROM projects) p on p.projectid = t.projectid
left join Devappointment dappt on dappt.DevApptID = t.DevApptID
left join lookup l on l.lookupid = dappt.TASKTYPEID  
LEFT JOIN (SELECT * FROM modules) M on M.moduleid = t.moduleid
LEFT JOIN (
	SELECT 
		StockID
		, ISNULL(LST.StockType,'') + '-' + ISNULL(LLT.StockSubType,'') + '-' + ISNULL(A.StockDescription,'') as StockModule 
	FROM AccStock A
	LEFT JOIN (SELECT LookupID, Value as StockType FROM Lookup) LST ON LST.LookupID = A.StockType
	LEFT JOIN (SELECT LinkLookupID, Value as StockSubType FROM LinkLookup) LLT ON LLT.LinkLookupID = A.SubTypeID
) A
--ON A.StockModule = M.ModuleName
 
ON A.StockID = M.StockID

LEFT JOIN (
	SELECT * FROM AccStock
) S ON S.StockID = A.StockID
LEFT JOIN (
	SELECT * FROM COST_ESTIMATE_DETAIL
) CED ON CED.DocID = P.CEDocID AND CED.StockID = A.StockID
LEFT JOIN (SELECT UserID, Firstname, Surname, StaffID FROM Users) U2 ON U2.UserID = T.DeveloperID


LEFT JOIN (
	SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
	WHERE ISNULL(IsCostToCompany,0) = 0
) MR ON MR.ModuleID = M.ModuleID AND MR.ConsultantID = U2.StaffID

LEFT JOIN (
SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Consultant],StaffID FROM Users) U 
ON U.StaffID = MR.ConsultantID
--WHERE P.ProjectID = 10134
--WHERE S.StockID IS NOT NULL
{where}
GROUP BY S.StockID,S.StockDescription,S.StockCode,MR.RateAmount,[Consultant]
ORDER BY S.StockDescription","0","","1","LRA-FUSION","0","0","fusion"
"40007","cv_TimesheetBillingBatchHeader","","

SELECT DISTINCT
	
	/*T.ProjectID,*/
	--T.ModuleID,
	T.EntityID
	--T.TimesheetDate
FROM Timesheet T

left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
left join Devappointment dappt on dappt.DevApptID = t.DevApptID
left join lookup l on l.lookupid = dappt.TASKTYPEID 
LEFT JOIN (
	SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
) MR ON MR.ModuleID = modules.ModuleID
LEFT JOIN (
SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Consultant],StaffID FROM Users) U 
ON U.StaffID = MR.ConsultantID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40008","cv_Acc_Print_Cost_Estimate_CV","","SELECT 
	CASE WHEN ISNULL(Position,'') <> '' THEN
		ISNULL([Name],'') + ' - ' + ISNULL(Position,'') 
	ELSE
		ISNULL([Name],'')
	End
FROM (
SELECT A.StockID, A.StockDescription as [Name], LL.Value as [Position],1 as [Rank] FROM COST_ESTIMATE_MASTER CEM
LEFT JOIN
(SELECT * FROM COST_ESTIMATE_DETAIL) CED 
ON CED.DocID = CEM.DocID
LEFT JOIN
(SELECT * FROM AccStock) A 
ON A.StockID = CED.StockID
LEFT JOIN 
(SELECT * FROM Lookup) L 
ON L.LookupID = A.StockType
LEFT JOIN
(SELECT * FROM LinkLookup) LL 
ON LL.LinkLookupID = A.SubTypeID
{where}

UNION ALL

SELECT A.StockID, NULL,NULL,3 as [Rank] FROM COST_ESTIMATE_MASTER CEM
LEFT JOIN
(SELECT * FROM COST_ESTIMATE_DETAIL) CED 
ON CED.DocID = CEM.DocID
LEFT JOIN
(SELECT * FROM AccStock) A 
ON A.StockID = CED.StockID
LEFT JOIN 
(SELECT * FROM Lookup) L 
ON L.LookupID = A.StockType
LEFT JOIN
(SELECT * FROM LinkLookup) LL 
ON LL.LinkLookupID = A.SubTypeID
{where}

UNION ALL

SELECT A.StockID, A.Specifications,NULL,2 as [Rank] FROM COST_ESTIMATE_MASTER CEM
LEFT JOIN
(SELECT * FROM COST_ESTIMATE_DETAIL) CED 
ON CED.DocID = CEM.DocID
LEFT JOIN
(SELECT * FROM AccStock) A 
ON A.StockID = CED.StockID
LEFT JOIN 
(SELECT * FROM Lookup) L 
ON L.LookupID = A.StockType
LEFT JOIN
(SELECT * FROM LinkLookup) LL 
ON LL.LinkLookupID = A.SubTypeID
{where}
) X
ORDER BY StockID, [Rank]","0","","1","LRA-FUSION","0","0","fusion"
"40009","cv_Timesheet_Export","","select 
 t.timesheetid,e.company as ""Company"",P.ProjectID as [Project No.],
 p.projectname as ""Project Name"", modules.modulename as ""Module Name"",convert(varchar,timesheetdate,111) as ""Timeheet Date""
 ,DATEPART(WEEK, Timesheetdate) as [Week], users.username as [Username],ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'')  as [Staff Name],isnull(S.StaffNum,'') as [Staff No.], isnull(LS.Value,'') as [Staff Division],
 isnull(S.CosttoCompany,'') as [Hourly Rate],
hoursdone as ""Hours Captured"",
case when hoursdone < 1 then 1 else Round(hoursdone,0)end as ""Hours Rounded"",
 Convert(varchar,Cast(isnull(s.StaffRatePerc,0) as Money),1) as [Staff Rate(%)],
 (isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0) as [Actual Hours],
 projectstatus as ""Notes"",
 'Not Quoted For' = case(isnull(t.OutOfSpec,0)) when 0 then 'No' else 'Yes' end,
 'Billable' = case(isnull(t.NeedInvoice,0)) when 0 then 'No' else 'Yes' end,t.Approved,l.Value As 'Task Type'
from timesheet t
left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
left join Devappointment dappt on dappt.DevApptID = t.DevApptID
left join lookup l on l.lookupid = dappt.TASKTYPEID 
Left Join Lookup LS on S.departmentid =LS.LookupID
{where}
order by timesheetdate","0","","1","LRA-FUSION","0","0","fusion"
"40010","cv_ClientActivityModuleUpdate","","DECLARE @CALID as integer
SET @CALID = {calid}

UPDATE Modules
SET 
EstHours = isnull(CALI.EstimatedHours,0),
StartDate = isnull(CAL.StartDate,M.StartDate),
Enddate = isnull(CAL.EndDate,M.Enddate),
Progress = isnull((isnull(CALI.[CompletedESTHours],0) / CASE when isnull([EstimatedHours],0) = 0 THEN 1 ELSE [EstimatedHours] END) * 100, M.Progress)
FROM Modules M
LEFT JOIN (	SELECT ModuleID, 
			sum(isnull(EstimatedHours,0)) as [EstimatedHours],
			sum(CASE WHEN isnull(IsComplete,0) = 1 then isnull(EstimatedHours,0) ELSE 0 END) as [CompletedESTHours]
			FROM ClientActivityListItem Group by ModuleID ) CALI
ON M.ModuleID = CALI.ModuleID
LEFT JOIN (	SELECT CALIi.ModuleID, Min(DateIssued) as [StartDate], Max(DateDue)  as [EndDate] FROM ClientActivityList CALi
			LEFT JOIN (SELECT ClientActivityListID, ModuleID FROM ClientActivityListItem) CALIi
			ON CALi.ClientActivityListID = CALIi.ClientActivityListID
			where CALIi.ModuleID IN (SELECT isnull(ModuleID,0) FROM ClientActivityListItem where ClientActivityListID = @CALID)
			Group by CALIi.ModuleID) CAL
ON M.ModuleID =  CAL.ModuleID
where M.ModuleID IN (SELECT isnull(ModuleID,0) FROM ClientActivityListItem where ClientActivityListID = @CALID)","0","","1","LRA-FUSION","0","0","fusion"
"40011","cv_Acc_Expired_Quotes","","DECLARE @ExpireDays as int
SET @ExpireDays = (SELECT isnull((SELECT top 1 CustValue FROM CrmSetup where Description = 'GenAccSettings' AND Variable = 'QuoteExpireDays'),0))

UPDATE Cost_Estimate_Master
SET DocStatus = 'Expired'
Where DocStatus not in ('Accepted', 'Rejected')
And (datediff(d,startdate,getdate()) > @ExpireDays OR EndDate < getdate())
AND @ExpireDays > 0","0","","1","LRA-FUSION","0","0","fusion"
"40012","CV_TicketAddress","","SELECT
  TicketAddressID
, addresstype AS Type
, address1 AS [Address Line 1]
, address2 AS [Address Line 2]
, address3 AS [Address Line 3]
, City AS [Area]
, Region AS [Province]
, Code
, Country
, CASE WHEN ISNULL(isTicketLocation,0) = 1 THEN 'Yes' ELSE 'No' END AS [Default Location]
from TicketAddress
<%where%>
order by addresstype","0","","1","LRA-FUSION","0","0","fusion"
"40013","CV_Checklist","","select 
	JC.[JobChecklistID],
	convert(varchar,JC.[JobDateTime],103) AS [Date],
	convert(varchar,JC.[JobDateTime],108) as [Time],
	case when JC.[Questions]<>'' then JC.[Questions] else L.Value end as [Question],
	CASE WHEN ISNULL(JC.IsUncertain,0) = 0 THEN
		Case When JC.[IsYes] = 0 Then 'No' Else 'Yes' End 
	ELSE 'Uncertain' END as [Answer],
	JC.[Comments] as [Comment],
	isnull(U.FirstName,'') + ' ' + isnull(U.Surname,'') as [Created By],
	convert(varchar,JC.[DateCreated],103) as [Date Created],
	isnull(US.FirstName,'') + ' ' + isnull(US.Surname,'') as [Modified By],
	convert(varchar,JC.[DateModified],103) as [Date Modified]
from JobChecklist JC
Left Join Users U on 
U.UserID= JC.[CreatedBy]
Left Join Users US on 
US.UserID= JC.[ModifiedBy]
left join Lookup L on L.LookupID=JC.QuestionID
{Where}","0","","1","LRA-FUSION","0","0","fusion"
"40014","CV_Machines","","select MD.[MachineConfigID], E.Company,
isnull(EC.FirstName,'') as [First Name],
isnull(EC.Surname,'') as [Surname],
LJ.Machine,
LM.Machine as [Machine Model],
AccS.StockCode As [Stock Code],
LF.Folder,LT.Feeder,LB.Label,LE.Letter,I.ink,
MD.[Options],
MD.InterfaceScale as [Interface Scale],
MD.Framalink as [Frama Link No],
MD.Serialno as [Serial No],
MD.Licenceno as [Licence No],
MD.CDNo as CDNO,
isnull(CostCentre,'') as [Cost Centre],
isnull(Valuesettings,'') as [Value Settings],
isnull(TownDie,'') as [Town Die],
Case When IOBase=0 Then 'No' else 'Yes' End as [IO Base],
Case When Tarrifs=0 Then 'No' else 'Yes' End as [Tariff],
Case When Statsonline=0 Then 'No' else 'Yes' End as [Stats Online Software],
Case When Statsoffline=0 Then 'No' else 'Yes' End as [Stats Offline Software],
convert(varchar, MD.Contractrenewaldate, 103) as [Contract Date],
convert(varchar, MD.Instalationdate, 103) as [Instalation Date],
convert(varchar, MD.Guaranteedate, 103) as [Guarantee Date],
convert(varchar, MD.RMSDate, 103) as [RMS Date],
convert(varchar, MD.CreatedDate, 103) as [Created Date]
from Machinedetails MD
Left Join(select  L.LookupID,LP.linklookupID as ID,L.value as Machine from lookup L Left Join linklookup LP on L.LookupID = LP.LinkedTO) LJ 
on LJ.ID =MD.ModelTypeID
Left Join (select LinkLookupID ,value as Machine from LinkLookup  ) LM on LM.LinkLookupID=MD.ModelTypeID
Left Join (select LinkLookupID ,value as Folder from LinkLookup  ) LF on LF.LinkLookupID=MD.FolderTypeID
Left Join (select LinkLookupID ,value as Feeder from LinkLookup  ) LT on LT.LinkLookupID=MD.FeederType
Left Join (select LinkLookupID ,value as Label from LinkLookup  ) LB on LB.LinkLookupID=MD.LabelTypeID
Left Join (select LinkLookupID ,value as Letter from LinkLookup  ) LE on LE.LinkLookupID=MD.LetteroppenerID
Left Join (select LinkLookupID ,value as Ink from LinkLookup  ) I on I.LinkLookupID=MD.InkCatridgeID
LEFT JOIN (SELECT StockID, StockCode FROM AccStock) AccS on AccS.StockID = MD.StockID
Left Join Entity E on E.EntityID =MD.EntityID
Left Join EntityContact EC on EC.EntityContactID =MD.EntityContactID
where MD.EntityID={Where}","0","","1","LRA-FUSION","0","0","fusion"
"40015","cv_RiskAssessment_Man","","select 
	X.AssessmentID,
	X.Client,
	X.Contact,
	X.[Date Created],
	X.[Home],
	X.[Work],
	X.[Cell],
	X.Email,
	X.[Status],
	X.[Policy Number],
	X.[Address]
from (
SELECT distinct
	RA.AssessmentID,
	E.Company as [Client],
	ISNULL(EC.Firstname, '') + ' ' + ISNULL(EC.Surname, '') as [Contact],
	Convert(Varchar, RA.DateCreated, 111) as [Date Created],
	RA.HomeTel as [Home],
	RA.WorkTel as [Work],
	RA.CellTel as [Cell],
	RA.Email,
	value as [Status],
	E.vendornumber as [Policy Number],
	EA.[Address],
	ISNULL(EC.Surname, '') as [Surname]
FROM Risk_Assessment RA
LEFT JOIN lookup ON RA.StatusID = lookupID
LEFT JOIN Entity E ON E.EntityID = RA.EntityID
LEFT JOIN (
SELECT DISTINCT
	entityID,
	ISNULL(Address1,'')
	+ISNULL(' '+ Address2,'')
	+ISNULL(' '+ Address3,'')
	+ISNULL(' '+ City,'')
	+ISNULL(' '+ Region,'')
	+ISNULL(' '+ Code,'')
	+ISNULL(' '+ Country,'') as [Address]
FROM EntityAddress 
Where IsDefault = 1 AND AddressType like '%Physical%')  EA ON EA.EntityID = E.EntityID
LEFT JOIN EntityContact EC ON EC.EntityContactID = RA.EntityContactID
LEFT JOIN Risk_Assessment_Master RAM ON RAM.AssessmentID = RA.AssessmentID
LEFT JOIN Entity EB ON EB.EntityID = RAM.BrokerID
LEFT JOIN Entity EI ON EI.EntityID = RAM.InsurerID
LEFT JOIN (
SELECT 
	RAM.AssessmentID, 
	CASE 
		WHEN 
		RAN.isold = 1
		THEN
		convert(varchar(7),Date, 120) + '/' +
		SUBSTRING('0000000', 1,(len('0000000')-len(number))) +
		convert(varchar,number) + '/'+Prefix
		ELSE
		convert(varchar(7),NewDate) + '/' +
		SUBSTRING('0000000', 1,(len('0000000')-len(number))) +
		convert(varchar,number) + '/'+Prefix
		END As [Assessment No]
FROM Risk_Assessment_Master RAM
LEFT JOIN  Risk_AssessmentNo RAN ON RAN.RiskAssessmentID = RAM.RiskAssessmentID
) RAN ON RAN.AssessmentID = RA.AssessmentID
{where}
) X

order by X.Surname","0","","1","LRA-FUSION","0","0","fusion"
"40016","cv_Ass_Vehicles","","SELECT
	VehicleID,
	Convert(Varchar, ReportDate, 111) as [Date] ,
	ISNULL(S.FirstName, '') + ' ' + ISNULL(S.Surname, '') as [Surveyor],
	LS.Value as [Status],
	CONVERT(VARCHAR, RV.ValTotal, 1) as Total
FROM Risk_Vehicle RV WITH(NOLOCK)
LEFT JOIN Staff S WITH(NOLOCK) ON S.StaffID = RV.SurveyorID
LEFT JOIN Lookup LS WITH(NOLOCK) ON LS.LookupID = RV.StatusID
WHERE RV.AssessmentID = {assessmentid}","0","","1","LRA-FUSION","0","0","fusion"
"40017","cv_Assessment_Summary","","select
	 RAM.RiskAssessmentID,
	AssessmentTypeName as [Type],  
	Convert(varchar,SurveyDate,111) as [Survey Date],
	CASE 
	WHEN isnull(ReplacementSurveyorID,0) = 0
	THEN U.Surveyor
	ELSE UR.Surveyor
	END  as [Surveyor],
	SL.Value as [Status],
	convert(varchar,CAST(isnull(TotalValue,0) AS MONEY),1) as [Total Value] 
from Risk_Assessment RA
Left join (SELECT MAX(RiskAssessmentID) as [ID], AssessmentTypeID, AssessmentID FROM Risk_Assessment_Master  GROUP BY  AssessmentTypeID, AssessmentID ) MAXRAM 
ON RA.AssessmentID = MAXRAM.AssessmentID 
LEFT JOIN Risk_Assessment_Master RAM ON MAXRAM.ID = RAM.RiskAssessmentID
LEFT JOIN (SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Surveyor] FROM Staff) U
	ON RAM.SurveyorID = U.StaffID
LEFT JOIN (SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Surveyor] FROM Staff) UR
	ON RAM.ReplacementSurveyorID = UR.StaffID
LEFT JOIN Lookup SL ON SL.lookupID = RAM.StatusID
where RA.AssessmentID = {id}

","0","","1","LRA-FUSION","0","0","fusion"
"40018","cv_Ass_Domestic","","SELECT 
	RD.DomesticID,
	Convert(Varchar, RD.AssessmentDate, 111) as [Date],
	ISNULL(S.Firstname, '') + ' ' + ISNULL(S.Surname, '') as [Surveyor],
	'' as [Status],
	CONVERT(VARCHAR, RD.InuranceSum,1) as [Total]
FROM Risk_Domestic RD
LEFT JOIN Staff S ON S.StaffID = RD.SurveryorID
WHERE RD.AssessmentID = {assessmentid}","0","","1","LRA-FUSION","0","0","fusion"
"40019","cv_Assessment_Residents","","SELECT 
	Convert(VARCHAR, RAS.LineID) + 'SECTIONA' + CONVERT(VARCHAR, RAS.CategoryID),
	RTV.Name as [Sub Section]	
FROM Risk_Domestic_Detail RAS
LEFT JOIN Risk_TreeView RTV ON RTV.NodeID = RAS.CategoryID
{where}
ORDER BY RTV.NODEID","0","","1","LRA-FUSION","0","0","fusion"
"40020","cv_AssessmentDomNextPrev","","SELECT TOP 1
	RAS.LineID,
	RTV.NodeID,
	RTV.FormName,
	RTV.Name as [Sub Section]	
FROM Risk_TreeView RTV 
LEFT JOIN Risk_Domestic_Detail RAS ON RTV.NodeID = RAS.CategoryID
WHERE FormName is not null
{where}
ORDER BY RTV.NODEID {orderby}","0","","1","LRA-FUSION","0","0","fusion"
"40021","cv_Ass_Domestic_Other","","SELECT 
	AdditionID,
	[Description]
FROM Risk_Domestic_Additional
WHERE LineID = {lineid}","0","","1","LRA-FUSION","0","0","fusion"
"40022","cv_Assessment_Vehicle_Summary","","SELECT
	RV.VehicleID,
	E.Company as Client,
	ISNULL(EC.FirstName, '') + ' ' + ISNULL(EC.Surname, '') as [Client Name],
	RV.PolicyNo as [Policy No],
	Convert(VARCHAR, ReportDate, 111) as [Date],
	Convert(Varchar, valTotal, 1) as Total
FROM Risk_Vehicle RV
LEFT JOIN Entity E ON E.EntityID = RV.EntityID
LEFT JOIN EntityContact EC ON EC.EntityContactID = RV.EntityContactID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40023","cv_Assessment_Domestic_Summary","","SELECT
	RD.DomesticID,
	E.Company as Client,
	ISNULL(EC.FirstName, '') + ' ' + ISNULL(EC.Surname, '') as [Client Name],
	RD.PolicyNo as [Policy No],
	Convert(VARCHAR, AssessmentDate, 111) as [Date],
	Convert(Varchar, InuranceSum, 1) as Total
FROM Risk_Domestic RD
LEFT JOIN Entity E ON E.EntityID = RD.EntityID
LEFT JOIN EntityContact EC ON EC.EntityContactID = RD.EntityContactID
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"40024","cv_Guard_Areas","","Declare @Areas Table(AreaID Int identity(1,1),Description Varchar(500))

Set NOCOUNT ON

Insert Into @Areas

Select 'Area 1'
union all
Select 'Area 2'
union all
Select 'Area 3'
union all
Select 'Area 4'
--When adding please add to the below list

Set NOCOUNT OFF

--Add this to query for ID's

--Replace /* for Getting Columns
/*Select AreaID,Description from @Areas*/","0","","1","LRA-FUSION","0","0","fusion"
"40025","cv_Guard_AreaSetup","","Select Convert(Varchar,isnull(ArS.AreaSetupID,0))+':'+Convert(varchar,Ar.AreaID),Description,PremSunday as [Sunday Prem.],PremPublicHol as [Holiday Prem.],LeaveProvPerDays as [Days Worked Provision]
,SickPay as [Sick Pay],StudyLeave as [Study Leave],NightShiftAllowance as [Night Shift],ProvidentFund as [Provident Fund]
,Bonus,UIF,[COID/WCA],Uniform,Training,Cleaning
from
@Areas Ar
left join AreaSetup ArS on Ar.AreaID = ArS.AreaID and ContractPricingID = <%ContractPricingID%>
<%Where%>","0","","1","LRA-FUSION","0","0","fusion"
"40026","cv_Guard_Contracts","","Select ContractPricingID,Description,StartDate,EndDate
From ContractPricing CP
<%Where%>","0","","1","LRA-FUSION","0","0","fusion"
"40027","cv_Guard_CopyAreaSetup","","Delete from AreaSetup
where ContractPricingID = <%ContractPricingID%>
and AreaID =  <%AreaID%>
SELECT * FROM AreaSetup
Insert Into AreaSetup (ContractPricingID,AreaID,DaysPA,PublicHolPA,PremSunday,PremPublicHol,LeaveProvPerDays,SickPay,
StudyLeave,NightShiftAllowance,ProvidentFund,Bonus,UIF,[COID/WCA],Uniform,Training,Cleaning )

Select 
ArS.ContractPricingID,
<%AreaID%>,
ArS.DaysPA,
ArS.PublicHolPA,
ArS.PremSunday,
ArS.PremPublicHol,
ArS.LeaveProvPerDays,
ArS.SickPay,
ArS.StudyLeave,
ArS.NightShiftAllowance,
ArS.ProvidentFund,
ArS.Bonus,
ArS.UIF,
ArS.[COID/WCA],
ArS.Uniform,
ArS.Training,
ArS.Cleaning
from
AreaSetup ArS
left join AreaSetup ArSJ on
ArSJ.ContractPricingID = ArS.ContractPricingID
and ArSJ.AreaID = <%AreaID%>
where ArS.AreaSetupID = <%AreaSetupID%> 
and ArSJ.AreaSetupID is null
","0","","1","LRA-FUSION","0","0","fusion"
"40028","cv_Guard_Grades","","Declare @Grades Table(GradeID Int identity(1,1),Description Varchar(500))

Set NOCOUNT ON

Insert Into @Grades

Select 'Grade A'
union all
Select 'Grade B'
union all
Select 'Grade C'
union all
Select 'Grade D'

Set NOCOUNT OFF

--Add this to query for ID's

--Replace /* for Getting Columns
/*Select GradeID,Description from @Grades*/","0","","1","LRA-FUSION","0","0","fusion"
"40029","cv_Guard_Pricing","","Select g.GradeID,[Description] as [Header]<%Cols%>
from @Grades G
<%Joins%>","0","","1","LRA-FUSION","0","0","fusion"
"40030","cv_Guard_Special_Allocation","","Select SpecialallocationID,l.Value,Rate 
from Specialallocation SP
left join Lookup L on L.lookupID = SP.LookupID
<%Where%>","0","","1","LRA-FUSION","0","0","fusion"
"40031","cv_Guard_UpdatePricing","","Insert Into GuardPricing
Select <%GradeID%>,<%Area%>,<%ContractPriceID%>,<%Value1%>,<%Value2%>
where (Select top 1 GuardPricingID
from GuardPricing GP where 
GP.AreaID = <%Area%> and GradeID = <%GradeID%> 
and ContractPricingID=<%ContractPriceID%>) is null

Update GuardPricing
set Monthly=<%Value1%>,Hourly=<%Value2%>
where AreaID = <%Area%> and GradeID = <%GradeID%> 
and ContractPricingID=<%ContractPriceID%>","0","","1","LRA-FUSION","0","0","fusion"
"40032","cv_Acc_Permanent_Guard_Cost","","SET NoCount ON
DECLARE @DocDate as datetime
DECLARE @ContractPricingID as int
DECLARE @GradeID as int
DECLARE @AreaID as int
DECLARE @LineID as int 

DECLARE @DaysPerYear as float
DECLARE @DaysPerWeek as float
DECLARE @PriGuardMultiplier as float
DECLARE @SecGuardMultiplier as float
DECLARE @PriGuardHrsPM	as float
DECLARE @SecGuardHrsPM	as float
DECLARE @PriGuardSundayHrsPM as float
DECLARE @SecGuardSundayHrsPM as float
DECLARE @PriGuardHolidayHrsPM as float
DECLARE @SecGuardHolidayHrsPM as float
DECLARE @PriGuardOvertimeHrsPM as float
DECLARE @SecGuardOvertimeHrsPM as float
DECLARE @TempSundayHours as float

DECLARE @GradeRateA as money
DECLARE @GradeRateB as money
DECLARE @GradeRateC as money
DECLARE @GradeRateD as money

SET @DocDate = '{docdate}'
SET @GradeID = {gradeid}
SET @AreaID = {areaid}
SET @LineID = {lineid}
SET @ContractPricingID = (SELECT max(ContractPricingID) FROM ContractPricing where @DocDate between StartDate and EndDate)
SET @DaysPerYear = (SELECT isnull(DaysPA,365) FROM AreaSetup WHERE AreaID = @AreaID AND ContractPricingID = @ContractPricingID)

--Set the days-on, days-off split
SET @DaysPerWeek = (SELECT isnull(DaysPerWeek,5) FROM COST_ESTIMATE_GUARDING WHERE LineID = @LineID)
SET @PriGuardMultiplier = (SELECT CASE isnull(DaysPerWeek,5) WHEN 7 Then 2.0/3.0 WHEN 6 THEN 5.0/6.0 ELSE 1.0 END FROM COST_ESTIMATE_GUARDING WHERE LineID = @LineID)
SET @SecGuardMultiplier = (SELECT CASE isnull(DaysPerWeek,5) WHEN 7 Then 1.0/3.0 WHEN 6 THEN 1.0/6.0 ELSE 0.0 END FROM COST_ESTIMATE_GUARDING WHERE LineID = @LineID)

--Get total Hours for Primary guard in the month
SET @PriGuardHrsPM = 
(
	SELECT 
	Round(
	(isnull(HrsMon,0) + isnull(HrsTue,0) + isnull(HrsWed,0) + isnull(HrsThur,0) + isnull(HrsFri,0) + isnull(HrsSat,0) + isnull(HrsSun,0))  --Sum of hours
	*
	(@DaysPerYear / 12 / 7) --Days per annum
	*
	(@PriGuardMultiplier)  -- Multiplier split between guards
	,0)
	FROM COST_ESTIMATE_GUARDING
	WHERE LineID = @LineID
)

--Get total Hours for Relief guard in the month
SET @SecGuardHrsPM = 
(
	SELECT 
	Round(
	(isnull(HrsMon,0) + isnull(HrsTue,0) + isnull(HrsWed,0) + isnull(HrsThur,0) + isnull(HrsFri,0) + isnull(HrsSat,0) + isnull(HrsSun,0))  --Sum of hours
	*
	(@DaysPerYear / 12 / 7) --Days per annum
	*
	(@SecGuardMultiplier)  -- Multiplier split between guards
	,0)
	FROM COST_ESTIMATE_GUARDING
	WHERE LineID = @LineID
)

--Get total sunday hours for primary guard
SET @PriGuardSundayHrsPM = (((52.0 / 12.0) * (SELECT isnull(HrsSun,0) FROM COST_ESTIMATE_GUARDING WHERE LineID = @LineID))) * @PriGuardMultiplier 
SET @SecGuardSundayHrsPM = (((52.0 / 12.0) * (SELECT isnull(HrsSun,0) FROM COST_ESTIMATE_GUARDING WHERE LineID = @LineID))) * @SecGuardMultiplier

--If the total sunday hours does not completely match the shift time, round them up
SET @TempSundayHours = 0
IF @SecGuardSundayHrsPM > 0 AND (SELECT isnull(HrsSun,0) FROM COST_ESTIMATE_GUARDING WHERE LineID = @LineID) > 0 
BEGIN
	WHILE @TempSundayHours < @PriGuardSundayHrsPM
	BEGIN
		SET @TempSundayHours = @TempSundayHours + (SELECT isnull(HrsSun,0) FROM COST_ESTIMATE_GUARDING WHERE LineID = @LineID)
	END
	SET @SecGuardSundayHrsPM = (@PriGuardSundayHrsPM + @SecGuardSundayHrsPM) -@TempSundayHours
	SET @PriGuardSundayHrsPM = @TempSundayHours
END


--Get  Guards Public Holiday Hours
SET @PriGuardHolidayHrsPM  = ((round(((SELECT isnull(PublicHolPA,0) FROM AreaSetup WHERE AreaID = @AreaID AND ContractPricingID = @ContractPricingID ) /12) * 12,0)) )
SET @SecGuardHolidayHrsPM =0


--Get Normal hours less Sunday and Public Holiday hours for the Guards
SET @PriGuardHrsPM = @PriGuardHrsPM - @PriGuardSundayHrsPM - @PriGuardHolidayHrsPM
SET @SecGuardHrsPM = @SecGuardHrsPM - @SecGuardSundayHrsPM - @SecGuardHolidayHrsPM

--Get overtime hours
SET @PriGuardOvertimeHrsPM = (SELECT CASE WHEN @PriGuardHrsPM -208 < 0 THEN 0 ELSE @PriGuardHrsPM -208 END)
SET @SecGuardOvertimeHrsPM = (SELECT CASE WHEN  @DaysPerWeek= 7 THEN 22 ELSE (CASE WHEN @SecGuardHrsPM > 0 THEN @PriGuardOvertimeHrsPM * 0.5 ELSE 0 END) END)

--Get Final Normal hours for both Guards 
SET @PriGuardHrsPM = @PriGuardHrsPM -@PriGuardOvertimeHrsPM
SET @SecGuardHrsPM = @SecGuardHrsPM - @SecGuardOvertimeHrsPM  


SET @GradeRateA = (SELECT Top 1 isnull(Hourly,0) FROM GuardPricing WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID AND GradeID = 1)
SET @GradeRateB = (SELECT Top 1 isnull(Hourly,0) FROM GuardPricing WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID AND GradeID = 2)
SET @GradeRateC = (SELECT Top 1 isnull(Hourly,0) FROM GuardPricing WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID AND GradeID = 3)
SET @GradeRateD = (SELECT Top 1 isnull(Hourly,0) FROM GuardPricing WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID AND GradeID = 4)


/*******************************************************************************************************/
--Begin generating BasicCosts
/*******************************************************************************************************/

--Set the days-on, days-off split (changes for the allowances because relief guard ratio is different for 6on-3off split
SET @PriGuardMultiplier = (SELECT CASE isnull(DaysPerWeek,5) WHEN 7 Then 0.5 WHEN 6 THEN 5.0/6.0 ELSE 1.0 END FROM COST_ESTIMATE_GUARDING WHERE LineID = @LineID)
SET @SecGuardMultiplier = (SELECT CASE isnull(DaysPerWeek,5) WHEN 7 Then 0.5 WHEN 6 THEN 1.0/6.0 ELSE 0.0 END FROM COST_ESTIMATE_GUARDING WHERE LineID = @LineID)

Create Table #BasicCosts
([Description] varchar(1000),
[Hours] float,
[A] money,
[B] money,
[C] money,
[D] money,
[Rank] integer
)
INSERT INTO #BasicCosts
SELECT * FROM (

SELECT 'NORMAL' as [Description], @PriGuardHrsPM as [Hours], 
Cast(@GradeRateA * @PriGuardHrsPM as money) as [A],
Cast(@GradeRateB * @PriGuardHrsPM as money) as [B],
Cast(@GradeRateC * @PriGuardHrsPM as money) as [C],
Cast(@GradeRateD * @PriGuardHrsPM as money) as [D],
2 as [Rank]

UNION ALL

SELECT 'OVERTIME' as [Description], @PriGuardOvertimeHrsPM as [Hours], 
Cast(@GradeRateA * @PriGuardOvertimeHrsPM * isnull(PremSunday,1) as money) as [A],
Cast(@GradeRateB * @PriGuardOvertimeHrsPM * isnull(PremSunday,1) as money) as [B],
Cast(@GradeRateC * @PriGuardOvertimeHrsPM * isnull(PremSunday,1) as money) as [C],
Cast(@GradeRateD * @PriGuardOvertimeHrsPM * isnull(PremSunday,1) as money) as [D],
3 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID

UNION ALL

SELECT 'SUNDAY' as [Description], @PriGuardSundayHrsPM as [Hours], 
Cast(@GradeRateA * @PriGuardSundayHrsPM * isnull(PremSunday,1) as money) as [A],
Cast(@GradeRateB * @PriGuardSundayHrsPM * isnull(PremSunday,1) as money) as [B],
Cast(@GradeRateC * @PriGuardSundayHrsPM * isnull(PremSunday,1) as money) as [C],
Cast(@GradeRateD * @PriGuardSundayHrsPM * isnull(PremSunday,1) as money) as [D],
4 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID

UNION ALL

SELECT 'PUBLIC HOLIDAY' as [Description], @PriGuardHolidayHrsPM as [Hours], 
Cast(@GradeRateA * @PriGuardHolidayHrsPM * isnull(PremPublicHol,1) as money) as [A],
Cast(@GradeRateB * @PriGuardHolidayHrsPM * isnull(PremPublicHol,1) as money) as [B],
Cast(@GradeRateC * @PriGuardHolidayHrsPM * isnull(PremPublicHol,1) as money) as [C],
Cast(@GradeRateD * @PriGuardHolidayHrsPM * isnull(PremPublicHol,1) as money) as [D],
5 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID

UNION ALL

SELECT 'NORMAL' as [Description], @SecGuardHrsPM as [Hours], 
Cast(@GradeRateA * @SecGuardHrsPM as money) as [A],
Cast(@GradeRateB * @SecGuardHrsPM as money) as [B],
Cast(@GradeRateC * @SecGuardHrsPM as money) as [C],
Cast(@GradeRateD * @SecGuardHrsPM as money) as [D],
8 as [Rank]
WHERE @SecGuardHrsPM >0

UNION ALL

SELECT 'OVERTIME' as [Description], @SecGuardOvertimeHrsPM as [Hours], 
Cast(@GradeRateA * @SecGuardOvertimeHrsPM * isnull(PremSunday,1) as money) as [A],
Cast(@GradeRateB * @SecGuardOvertimeHrsPM * isnull(PremSunday,1) as money) as [B],
Cast(@GradeRateC * @SecGuardOvertimeHrsPM * isnull(PremSunday,1) as money) as [C],
Cast(@GradeRateD * @SecGuardOvertimeHrsPM * isnull(PremSunday,1) as money) as [D],
9 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID AND @SecGuardHrsPM >0

UNION ALL

SELECT 'SUNDAY' as [Description], @SecGuardSundayHrsPM as [Hours], 
Cast(@GradeRateA * @SecGuardSundayHrsPM * isnull(PremSunday,1) as money) as [A],
Cast(@GradeRateB * @SecGuardSundayHrsPM * isnull(PremSunday,1) as money) as [B],
Cast(@GradeRateC * @SecGuardSundayHrsPM * isnull(PremSunday,1) as money) as [C],
Cast(@GradeRateD * @SecGuardSundayHrsPM * isnull(PremSunday,1) as money) as [D],
10 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID AND @SecGuardHrsPM >0

UNION ALL

SELECT 'PUBLIC HOLIDAY' as [Description], @SecGuardHolidayHrsPM as [Hours], 
Cast(@GradeRateA * @SecGuardHolidayHrsPM * isnull(PremPublicHol,1) as money) as [A],
Cast(@GradeRateB * @SecGuardHolidayHrsPM * isnull(PremPublicHol,1) as money) as [B],
Cast(@GradeRateC * @SecGuardHolidayHrsPM * isnull(PremPublicHol,1) as money) as [C],
Cast(@GradeRateD * @SecGuardHolidayHrsPM * isnull(PremPublicHol,1) as money) as [D],
11 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID AND @SecGuardHrsPM >0

union all

SELECT 'LEAVE PRIMARY GUARD' as [Description], ((@PriGuardHrsPM + @PriGuardSundayHrsPM + @PriGuardOvertimeHrsPM + @PriGuardHolidayHrsPM) / isnull(LeaveProvPerDays,1)) as [Hours], 
Cast(@GradeRateA *  ((@PriGuardHrsPM + @PriGuardSundayHrsPM + @PriGuardOvertimeHrsPM + @PriGuardHolidayHrsPM) / isnull(LeaveProvPerDays,1)) as money) as [A],
Cast(@GradeRateB *  ((@PriGuardHrsPM + @PriGuardSundayHrsPM + @PriGuardOvertimeHrsPM + @PriGuardHolidayHrsPM) / isnull(LeaveProvPerDays,1)) as money) as [B],
Cast(@GradeRateC *  ((@PriGuardHrsPM + @PriGuardSundayHrsPM + @PriGuardOvertimeHrsPM + @PriGuardHolidayHrsPM) / isnull(LeaveProvPerDays,1)) as money) as [C],
Cast(@GradeRateD *  ((@PriGuardHrsPM + @PriGuardSundayHrsPM + @PriGuardOvertimeHrsPM + @PriGuardHolidayHrsPM) / isnull(LeaveProvPerDays,1)) as money) as [D],
101 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID

UNION ALL

SELECT 'LEAVE RELIEF GUARD' as [Description], ((@SecGuardHrsPM + @SecGuardSundayHrsPM + @SecGuardOvertimeHrsPM + @SecGuardHolidayHrsPM) / isnull(LeaveProvPerDays,1)) as [Hours], 
Cast(@GradeRateA *  ((@SecGuardHrsPM + @SecGuardSundayHrsPM + @SecGuardOvertimeHrsPM + @SecGuardHolidayHrsPM) / isnull(LeaveProvPerDays,1)) as money) as [A],
Cast(@GradeRateB *  ((@SecGuardHrsPM + @SecGuardSundayHrsPM + @SecGuardOvertimeHrsPM + @SecGuardHolidayHrsPM) / isnull(LeaveProvPerDays,1)) as money) as [B],
Cast(@GradeRateC *  ((@SecGuardHrsPM + @SecGuardSundayHrsPM + @SecGuardOvertimeHrsPM + @SecGuardHolidayHrsPM) / isnull(LeaveProvPerDays,1)) as money) as [C],
Cast(@GradeRateD *  ((@SecGuardHrsPM + @SecGuardSundayHrsPM + @SecGuardOvertimeHrsPM + @SecGuardHolidayHrsPM) / isnull(LeaveProvPerDays,1)) as money) as [D],
102 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID
AND @SecGuardHrsPM > 0

union all

SELECT 'LEAVE PRIMARY GUARD - Comp' as [Description], (CompLeavePerYear / 12) * 12 as [Hours], 
Cast(@GradeRateA * (CompLeavePerYear / 12) * 12 as money) as [A],
Cast(@GradeRateB * (CompLeavePerYear / 12) * 12 as money) as [B],
Cast(@GradeRateC * (CompLeavePerYear / 12) * 12 as money) as [C],
Cast(@GradeRateD * (CompLeavePerYear / 12) * 12 as money) as [D],
103 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID

UNION ALL

SELECT 'LEAVE RELIEF GUARD - Comp' as [Description], ((CompLeavePerYear / 12) * @SecGuardMultiplier) * 12 as [Hours], 
Cast(@GradeRateA * ((CompLeavePerYear / 12) /2) * 12 as money) as [A],
Cast(@GradeRateB * ((CompLeavePerYear / 12) /2) * 12 as money) as [B],
Cast(@GradeRateC * ((CompLeavePerYear / 12) /2) * 12 as money) as [C],
Cast(@GradeRateD * ((CompLeavePerYear / 12) /2) * 12 as money) as [D],
104 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID
AND @SecGuardHrsPM > 0

union all

SELECT 'LEAVE PRIMARY GUARD - Sick' as [Description], (SickPay) * 12 as [Hours], 
Cast(@GradeRateA * (SickPay) * 12 as money) as [A],
Cast(@GradeRateB * (SickPay) * 12 as money) as [B],
Cast(@GradeRateC * (SickPay) * 12 as money) as [C],
Cast(@GradeRateD * (SickPay) * 12 as money) as [D],
105 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID

UNION ALL

SELECT 'LEAVE RELIEF GUARD - Sick' as [Description], ((SickPay) * @SecGuardMultiplier) * 12 as [Hours], 
Cast(@GradeRateA * ((SickPay)/ 2) * 12 as money) as [A],
Cast(@GradeRateB * ((SickPay)/ 2) * 12 as money) as [B],
Cast(@GradeRateC * ((SickPay)/ 2) * 12 as money) as [C],
Cast(@GradeRateD * ((SickPay)/ 2) * 12 as money) as [D],
106 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID
AND @SecGuardHrsPM > 0

union all

SELECT 'LEAVE PRIMARY GUARD - Study' as [Description], ((StudyLeave) /12) * 12 as [Hours], 
Cast(@GradeRateA * ((StudyLeave) /12) * 12 as money) as [A],
Cast(@GradeRateB * ((StudyLeave) /12) * 12 as money) as [B],
Cast(@GradeRateC * ((StudyLeave) /12) * 12 as money) as [C],
Cast(@GradeRateD * ((StudyLeave) /12) * 12 as money) as [D],
107 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID

UNION ALL

SELECT 'LEAVE RELIEF GUARD - Study' as [Description], (((StudyLeave) /12)) * 12  * @SecGuardMultiplier as [Hours], 
Cast(@GradeRateA * (((StudyLeave) /12)/ 2) * 12 as money) as [A],
Cast(@GradeRateB * (((StudyLeave) /12)/ 2) * 12 as money) as [B],
Cast(@GradeRateC * (((StudyLeave) /12)/ 2) * 12 as money) as [C],
Cast(@GradeRateD * (((StudyLeave) /12)/ 2) * 12 as money) as [D],
108 as [Rank]
FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID
AND @SecGuardHrsPM > 0


) A


/*******************************************************************************************************/
--Begin generating Allowances
/*******************************************************************************************************/
INSERT INTO #BasicCosts


SELECT 'Night Shift Allowance' as [Description], isnull(CEG.TotalShifts,0) as [Hours], 
Cast(isnull(NightShiftAllowance,0) * isnull(CEG.TotalShifts,0) as money) as [A],
Cast(isnull(NightShiftAllowance,0) * isnull(CEG.TotalShifts,0) as money) as [B],
Cast(isnull(NightShiftAllowance,0) * isnull(CEG.TotalShifts,0) as money) as [C],
Cast(isnull(NightShiftAllowance,0) * isnull(CEG.TotalShifts,0) as money) as [D],
200 as [Rank]
FROM AreaSetup A
Cross JOIN (SELECT TotalShifts,ShiftTypeID FROM COST_ESTIMATE_GUARDING where LineID = @LineID) CEG
WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID
AND isnull(ShiftTypeID,0) > 1


UNION ALL

SELECT 'Provident Fund' as [Description], isnull(A.ProvidentFund,0) as [Hours], 
Cast(Sum(isnull(A,0)) * (isnull(A.ProvidentFund,0) / 100) as money) as [A],
Cast(sum(isnull(B,0)) * (isnull(A.ProvidentFund,0) / 100) as money) as [B],
Cast(sum(isnull(C,0)) * (isnull(A.ProvidentFund,0) / 100) as money) as [C],
Cast(sum(isnull(D,0)) * (isnull(A.ProvidentFund,0) / 100) as money) as [D],
201 as [Rank]
FROM #BasicCosts BC
CROSS JOIN (SELECT Top 1 ProvidentFund FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID ) A
Cross JOIN (SELECT TotalShifts,ShiftTypeID FROM COST_ESTIMATE_GUARDING where LineID = @LineID) CEG
WHERE BC.[Description] = 'NORMAL'
Group by A.ProvidentFund

UNION ALL

SELECT top 1 'Service Bonus' as [Description], isnull(A.Bonus,0) as [Hours], 
Cast(Sum(isnull(A.Bonus,0)) as money) as [A],
Cast(sum(isnull(A.Bonus,0)) as money) as [B],
Cast(sum(isnull(A.Bonus,0)) as money) as [C],
Cast(sum(isnull(A.Bonus,0)) as money) as [D],
202 as [Rank]
FROM AreaSetup A
WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID 
Group by A.Bonus


UNION ALL

SELECT 'UIF' as [Description], isnull(A.UIF,0) as [Hours], 
Cast(Sum(isnull(A,0)) * (isnull(A.UIF,0) / 100) as money) as [A],
Cast(sum(isnull(B,0)) * (isnull(A.UIF,0) / 100) as money) as [B],
Cast(sum(isnull(C,0)) * (isnull(A.UIF,0) / 100) as money) as [C],
Cast(sum(isnull(D,0)) * (isnull(A.UIF,0) / 100) as money) as [D],
203 as [Rank]
FROM #BasicCosts BC
CROSS JOIN (SELECT Top 1 UIF FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID ) A
Cross JOIN (SELECT TotalShifts,ShiftTypeID FROM COST_ESTIMATE_GUARDING where LineID = @LineID) CEG
WHERE BC.[Description] in ('NORMAL','OVERTIME','SUNDAY','PUBLIC HOLIDAY')
Group by A.UIF

UNION ALL

SELECT 'SDL' as [Description], isnull(A.SDL,0) as [Hours], 
Cast(Sum(isnull(A,0)) * (isnull(A.SDL,0) / 100) as money) as [A],
Cast(sum(isnull(B,0)) * (isnull(A.SDL,0) / 100) as money) as [B],
Cast(sum(isnull(C,0)) * (isnull(A.SDL,0) / 100) as money) as [C],
Cast(sum(isnull(D,0)) * (isnull(A.SDL,0) / 100) as money) as [D],
204 as [Rank]
FROM #BasicCosts BC
CROSS JOIN (SELECT Top 1 SDL FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID ) A
Cross JOIN (SELECT TotalShifts,ShiftTypeID FROM COST_ESTIMATE_GUARDING where LineID = @LineID) CEG
WHERE BC.[Description] in ('NORMAL','OVERTIME','SUNDAY','PUBLIC HOLIDAY')
Group by A.SDL

UNION ALL

SELECT 'COID/WCA' as [Description], isnull(A.[COID/WCA],0) as [Hours], 
Cast(Sum(isnull(A,0)) * (isnull(A.[COID/WCA],0) / 100) as money) as [A],
Cast(sum(isnull(B,0)) * (isnull(A.[COID/WCA],0) / 100) as money) as [B],
Cast(sum(isnull(C,0)) * (isnull(A.[COID/WCA],0) / 100) as money) as [C],
Cast(sum(isnull(D,0)) * (isnull(A.[COID/WCA],0) / 100) as money) as [D],
205 as [Rank]
FROM #BasicCosts BC
CROSS JOIN (SELECT Top 1 [COID/WCA] FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID ) A
Cross JOIN (SELECT TotalShifts,ShiftTypeID FROM COST_ESTIMATE_GUARDING where LineID = @LineID) CEG
WHERE BC.[Description] in ('NORMAL','OVERTIME','SUNDAY','PUBLIC HOLIDAY')
Group by A.[COID/WCA]

UNION ALL

SELECT 'Uniform' as [Description], isnull(A.[Uniform],0) as [Hours], 
Cast((isnull(A.Uniform,0)  + isnull(A.Uniform,0) * @SecGuardMultiplier) /12 as money) as [A],
Cast((isnull(A.Uniform,0)  + isnull(A.Uniform,0) * @SecGuardMultiplier) /12 as money)  as [B],
Cast((isnull(A.Uniform,0)  + isnull(A.Uniform,0) * @SecGuardMultiplier) /12 as money)  as [C],
Cast((isnull(A.Uniform,0)  + isnull(A.Uniform,0) * @SecGuardMultiplier) /12 as money)  as [D],
206 as [Rank]
FROM AreaSetup A
WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID

UNION ALL

SELECT 'Training' as [Description], isnull(A.Training,0) as [Hours], 
Cast(Sum(isnull(A,0)) * (isnull(A.Training,0) / 100) as money) as [A],
Cast(sum(isnull(B,0)) * (isnull(A.Training,0) / 100) as money) as [B],
Cast(sum(isnull(C,0)) * (isnull(A.Training,0) / 100) as money) as [C],
Cast(sum(isnull(D,0)) * (isnull(A.Training,0) / 100) as money) as [D],
207 as [Rank]
FROM #BasicCosts BC
CROSS JOIN (SELECT Top 1 Training FROM AreaSetup WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID ) A
Cross JOIN (SELECT TotalShifts,ShiftTypeID FROM COST_ESTIMATE_GUARDING where LineID = @LineID) CEG
WHERE BC.[Description] in ('NORMAL')
Group by A.Training

UNION ALL

SELECT 'Cleaning' as [Description], isnull(A.[Cleaning],0) as [Hours], 
Cast((isnull(A.Cleaning,0)  + isnull(A.Cleaning,0) * @SecGuardMultiplier)  as money) as [A],
Cast((isnull(A.Cleaning,0)  + isnull(A.Cleaning,0) * @SecGuardMultiplier)  as money)  as [B],
Cast((isnull(A.Cleaning,0)  + isnull(A.Cleaning,0) * @SecGuardMultiplier)  as money)  as [C],
Cast((isnull(A.Cleaning,0)  + isnull(A.Cleaning,0) * @SecGuardMultiplier)  as money)  as [D],
208 as [Rank]
FROM AreaSetup A
WHERE ContractPricingID = @ContractPricingID AND AreaID = @AreaID


/*******************************************************************************************************/
--Finalise Totals
/*******************************************************************************************************/
INSERT INTO #BasicCosts
SELECT 'TOTAL COSTS', null as [Hours], Sum(isnull(A,0)),Sum(isnull(B,0)),Sum(isnull(C,0)),Sum(isnull(D,0)), 300 as [Rank]
FROM #BasicCosts

UNION ALL

SELECT 'PRIMARY GUARD' AS [Description], null as [Hours], null as [A], null as [B], null as [C], null as [D], 1 as [Rank]

UNION ALL

SELECT 'HOURLY EQUIVALENT RATE' as [Description], '' as [Hours], 
@GradeRateA as [A],
@GradeRateB as [B],
@GradeRateC as [C],
@GradeRateD as [D], 
0 as [Rank]

UNION ALL

SELECT 'RELIEF GUARD' AS [Description], null as [Hours / Shifts], null as [A], null as [B], null as [C], null as [D], 6 as [Rank] WHERE @SecGuardHrsPM >0

UNION ALL

SELECT '' AS [Description], null as [Hours / Shifts], null as [A], null as [B], null as [C], null as [D], 12 as [Rank] WHERE @SecGuardHrsPM >0


SELECT [Description], isnull(convert(varchar,cast([Hours] as money),1),'') as [Hours], 
CASE @GradeID 
	WHEN 1 THEN Convert(varchar,Cast([A] as Money),1)
	WHEN 2 THEN Convert(varchar,Cast([B] as Money),1) 
	WHEN 3 THEN Convert(varchar,Cast([C] as Money),1)
	WHEN 4 THEN Convert(varchar,Cast([D] as Money),1)
END as [Cost]
FROM #BasicCosts
ORDER BY Rank


DROP Table #BasicCosts

SET NoCount off","0","","1","LRA-FUSION","0","0","fusion"
"40033","cv_Import_Leads","","INSERT INTO Lookup (Value, Class)
SELECT DISTINCT Division,'Divisions' FROM ImportLeads IL
LEFT JOIN (
SELECT * FROM Lookup WHERE Class LIKE 'Divisions'
) LD ON LD.Value = IL.Division
WHERE lD.LookupID IS NULL

INSERT INTO Lookup (Value, Class)
SELECT POSITION,'jobtitle' FROM ImportLeads IL
LEFT JOIN (
select lookupid, value from Lookup Where Class like 'jobtitle'
) LP ON LP.Value = IL.POSITION
WHERE LP.LookupID IS NULL




INSERT INTO Lookup (Value, Class)
SELECT INDUSTRY,'canvasIndustry' FROM ImportLeads IL
LEFT JOIN (
select lookupid, value from Lookup Where Class like 'canvasIndustry'
) LC ON LC.Value = IL.INDUSTRY
WHERE lC.LookupID IS NULL

INSERT INTO Lookup (Value, Class)
SELECT REGION,'regions' FROM ImportLeads IL
LEFT JOIN (
select lookupid, value from Lookup Where Class like 'regions'
) LR ON LR.Value = IL.REGION
WHERE lR.LookupID IS NULL


INSERT INTO Lookup (Value, Class)
SELECT [LEAD FROM],'LeadFrom' FROM ImportLeads IL
LEFT JOIN (
select lookupid, value from Lookup Where Class like 'LeadFrom'
) LLF ON LLF.Value = IL.[LEAD FROM]
WHERE LLF.LookupID IS NULL

INSERT INTO Lookup (Value, Class)
SELECT STATUS, 'leadstatus' FROM ImportLeads IL
LEFT JOIN (
select lookupid, value from lookup 
where class like 'leadstatus' 
AND isnull(Hierarchy,0) <= (SELECT min(isnull(Hierarchy,0)) FROM Lookup where class = 'leadstatus')
) LS ON LS.Value = IL.STATUS
WHERE LS.LookupID IS NULL


INSERT INTO Lookup (Value, Class)
SELECT [NEXT ACTION],'LeadNextAction' FROM ImportLeads IL
LEFT JOIN (
select lookupid, value from lookup where class like 'LeadNextAction'
) LNA ON LNA.Value = IL.[NEXT ACTION]
WHERE LNA.LookupID IS NULL


INSERT INTO Users (Firstname, Surname, Username)
SELECT 
SUBSTRING([SALES CONSULTANT], 1, CHARINDEX(' ', [SALES CONSULTANT]) - 1) AS [FirstName],
SUBSTRING([SALES CONSULTANT], CHARINDEX(' ', [SALES CONSULTANT]) + 1, LEN([SALES CONSULTANT])) AS [LastName],
[SALES CONSULTANT]
FROM ImportLeads IL
LEFT JOIN (
Select userid, isnull(firstname,'') + ' ' + isnull(surname,'') as sUser from users
) U ON U.sUSer = IL.[SALES CONSULTANT]
WHERE U.UserID IS NULL

INSERT INTO Users (Firstname, Surname, Username)
SELECT 
SUBSTRING([SUB CONSULTANT], 1, CHARINDEX(' ', [SUB CONSULTANT]) - 1) AS [FirstName],
SUBSTRING([SUB CONSULTANT], CHARINDEX(' ', [SUB CONSULTANT]) + 1, LEN([SUB CONSULTANT])) AS [LastName],
[SUB CONSULTANT]
FROM ImportLeads IL
LEFT JOIN (
Select userid, isnull(firstname,'') + ' ' + isnull(surname,'') as sUser from users
) SU ON SU.sUSer = IL.[SUB CONSULTANT]
WHERE SU.UserID IS NULL



INSERT INTO Lead (
DivisionID,
Company,
Firstname,
Lastname,
Phone1,
Phone2,
Cell,
Email,
PositionID,
IndustryID,
RegionID,
LeadFromId,
LeadStatus,
NextDate,
LastDate,
NextActionID,
Amount,
AgentID,
CommPerc1,
SubSalesConsultantID,
CommPerc2
)

SELECT DISTINCT 
LD.LookupID as DivisionID,
IL.Company,
[CONTACT FIRST NAME],
[CONTACT SURNAME],
[PHONE 1],
[PHONE 2],
IL.CELL,
IL.EMAIL,
LP.lookupid as POSITION,
LC.lookupid as INDUSTRY,
LR.LookupID as REGION,
LLF.lookupid as [LEAD FROM],
LS.LookupID as STATUS,
[NEXT CONTACT DATE],
[LAST CONTACT DATE],
LNA.lookupid as [NEXT ACTION],
[INITIAL AMOUNT (RANDS)],
U.UserID as [SALES CONSULTANT],
[COMMISSION %],
SU.UserID as [SUB CONSULTANT],
[SUB COMMISION %]
FROM ImportLeads IL
LEFT JOIN (
	SELECT * FROM Lead
) L 
ON L.Company = IL.Company AND L.Firstname = IL.[CONTACT FIRST NAME] 
AND L.Lastname = IL.[CONTACT SURNAME]
AND L.Phone1 = IL.[PHONE 1]
LEFT JOIN (
	SELECT lookupid, value FROM Lookup WHERE Class LIKE 'Divisions'
) LD ON LD.Value = IL.Division
LEFT JOIN (
	select lookupid, value from Lookup Where Class like 'jobtitle'
) LP ON LP.Value = IL.POSITION
LEFT JOIN (
	select lookupid, value from Lookup Where Class like 'canvasIndustry'
) LC ON LC.Value = IL.INDUSTRY
LEFT JOIN (
	select lookupid, value from Lookup Where Class like 'regions'
) LR ON LR.Value = IL.REGION
LEFT JOIN (
	select lookupid, value from Lookup Where Class like 'LeadFrom'
) LLF ON LLF.Value = IL.[LEAD FROM]
LEFT JOIN (
	select lookupid, value from lookup 
	where class like 'leadstatus' 
	AND isnull(Hierarchy,0) <= (SELECT min(isnull(Hierarchy,0)) FROM Lookup where class = 'leadstatus')
) LS ON LS.Value = IL.STATUS
LEFT JOIN (
	select lookupid, value from lookup where class like 'LeadNextAction'
) LNA ON LNA.Value = IL.[NEXT ACTION]
LEFT JOIN (
Select userid, isnull(firstname,'') + ' ' + isnull(surname,'') as sUser from users
) U ON U.sUSer = IL.[SALES CONSULTANT]
LEFT JOIN (
Select userid, isnull(firstname,'') + ' ' + isnull(surname,'') as sUser from users
) SU ON SU.sUSer = IL.[SUB CONSULTANT]
WHERE L.LeadID IS NULL","0","","1","LRA-FUSION","0","0","fusion"
"40034","CV_AccSTOCK_ByProducts","","SELECT ByProductID, STK.StockCode as [Stock Code], stk.StockDescription as [Description],
round(DepByProductQty,5) as [Qty],
L.Value as [Units], 
dbo.fnformatnumber(isnull((isnull(costPriceEx, 0) / isnull(SoldbytoPurchasedByRatio,1)),0) * round(round(DepByProductQty,5), 5)) as [Material Cost]
--,dbo.fnformatnumber(stk.[cost] * depsellingqty) as [Landed Cost]
FROM AccStock_ByProduct Dep
LEFT JOIN (SELECT StockID,StockCode, StockDescription, SoldbytoPurchasedByRatio, SoldBy,Weight FROM AccSTOCK ) STK
ON Dep.DepStockID = STK.StockID 
LEFT JOIN (SELECT * FROM AccStockPrice WHERE Getdate() between ValidFrom and ValidTo) STKP
ON STK.StockID = STKP.StockID AND DEP.PriceCategoryID = STKP.PriceCategoryID
LEFT JOIN (SELECT LookupID, Value FROM Lookup ) L
ON Stk.SoldBy = L.Lookupid
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40035","cv_AccSTOCK_LandedCost","","DECLARE @StockID as int
SET @StockID = {stockid}


SELECT sum(isnull(MaterialCost,0)) as [MaterialCost]
FROM (
	SELECT 
	isnull((isnull(costPriceEx, 0) / isnull(SoldbytoPurchasedByRatio,1)),0) * round(isnull(Wastage,1) * round(depsellingqty,5) / Case WHEN isnull(Dep.Strength,100) / 100 = 0 then 1 ELSE isnull(Dep.Strength,100) / 100 END, 5) as [MaterialCost]
	FROM AccStock_Dep Dep
	LEFT JOIN (SELECT StockID,StockCode, StockDescription, SoldbytoPurchasedByRatio, SoldBy,Weight FROM AccSTOCK ) STK
	ON Dep.DepStockID = STK.StockID 
	LEFT JOIN (SELECT Max(CostPriceEx) as [CostPriceEx], StockID, PriceCategoryID FROM AccStockPrice WHERE Getdate() between ValidFrom and ValidTo Group By  StockID, PriceCategoryID) STKP
	ON STK.StockID = STKP.StockID AND DEP.PriceCategoryID = STKP.PriceCategoryID
	where Pristockid = @StockID
	
	UNION ALL
	
	SELECT 
	-1 * isnull((isnull(costPriceEx, 0) / isnull(SoldbytoPurchasedByRatio,1)),0) * round( round(DepByProductQty,5), 5) as [MaterialCost]
	FROM AccStock_ByProduct  Dep
	LEFT JOIN (SELECT StockID,StockCode, StockDescription,SoldbytoPurchasedByRatio, SoldBy,Weight FROM AccSTOCK ) STK
	ON Dep.DepStockID = STK.StockID 
	LEFT JOIN (SELECT Max(CostPriceEx) as [CostPriceEx], StockID, PriceCategoryID FROM  AccStockPrice WHERE Getdate() between ValidFrom and ValidTo Group By StockID, PriceCategoryID) STKP
	ON STK.StockID = STKP.StockID AND DEP.PriceCategoryID = STKP.PriceCategoryID
	where Pristockid = @StockID
	AND isnull(DeductFromLandedCost,0) =1
	)A
	
	
	","0","","1","LRA-FUSION","0","0","fusion"
"40036","cv_Risk_Assessment_Items","","SELECT convert(varchar,RiskAssessmentItemID) + '#' + convert(varchar,ItemType) as [Id],
[Rank],ItemPrompt as [Type], isnull(AR.RegisterDescription + ' - ','') + AI.[Description] as [Description], AI.Model, isnull(SelectedAnswer,Qty) as [Selection / Qty],
convert(varchar,cast(AI.Price as money),1) as [Price],
Location
FROM Risk_Assessment_Item AI
LEFT JOIN (SELECT * FROM AssessmentRegister) AR
ON AI.AssessmentRegisterID = AR.AssessmentRegisterID
where RiskAssessmentCategoryID = {catid}
ORDER BY [Rank], ItemPrompt, Price","0","","1","LRA-FUSION","0","0","fusion"
"40037","cv_Risk_Assessments","","SELECT 
	RAM.RiskAssessmentID, 
	CASE 
		WHEN 
		RAN.isold = 1
		THEN
		convert(varchar(7),Date, 120) + '/' +
		SUBSTRING('0000000', 1,(len('0000000')-len(number))) +
		convert(varchar,number) + '/'+Prefix
		ELSE
		convert(varchar(7),NewDate) + '/' +
		SUBSTRING('0000000', 1,(len('0000000')-len(number))) +
		convert(varchar,number) + '/'+Prefix
		END As [Assessment No],
	AssessmentTypeName as [Type], 
	CASE 
	WHEN isnull(ReplacementSurveyorID,0) = 0
	THEN U.Surveyor
	ELSE UR.Surveyor
	END  as [Surveyor],
	Convert(varchar,SurveyDate,111) as [Survey Date],
	Convert(varchar,DateReceived,111) as [Date Received],
	Convert(varchar,DateSent,111) as [Date Sent],
	convert(varchar,CAST(isnull(TotalValue,0) AS MONEY),1) as [Total Value],
        convert(varchar,CAST(isnull(NegotiatedAmount,0) AS MONEY),1) as [Neg. Amount]
FROM Risk_Assessment_Master RAM
LEFT JOIN (SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Surveyor] FROM Staff) U
ON RAM.SurveyorID = U.StaffID
LEFT JOIN (SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Surveyor] FROM Staff) UR
ON RAM.ReplacementSurveyorID = UR.StaffID
LEFT JOIN  Risk_AssessmentNo RAN ON RAN.RiskAssessmentID = RAM.RiskAssessmentID
WHERE AssessmentID = {assessmentid}
Order by SurveyDate Desc","0","","1","LRA-FUSION","0","0","fusion"
"40038","CV_MonthService","","SELECT 
	MonthID,
	[Month],
	(SELECT COUNT(*) FROM machineservice WHERE MachineID = {where} AND MonthID = M.MonthID) as [Ticked]
FROM machineMonths M
ORDER BY M.MonthID","0","","1","LRA-FUSION","0","0","fusion"
"40039","CV_MachimeMan","","select distinct MD.[MachineConfigID], E.Company,
isnull(EC.FirstName,'') as [First Name],
isnull(EC.Surname,'') as [Surname],
LJ.Machine,
LM.Machine as [Machine Model],
LMS.Value as [Status],
LF.Folder,LT.Feeder,LB.Label,LE.Letter,I.ink,
MD.[Options],
MD.InterfaceScale as [Interface Scale],
MD.Framalink as [Frama Link No],
MD.Serialno as [Serial No],
MD.Licenceno as [Licence No],
MD.CDNo as CDNO,
isnull(CostCentre,'') as [Cost Centre],
isnull(Valuesettings,'') as [Value Settings],
isnull(TownDie,'') as [Town Die],
Case When IOBase=0 Then 'No' else 'Yes' End as [IO Base],
Case When Tarrifs=0 Then 'No' else 'Yes' End as [Tariff],
Case When Statsonline=0 Then 'No' else 'Yes' End as [Stats Online Software],
Case When Statsoffline=0 Then 'No' else 'Yes' End as [Stats Offline Software],
convert(varchar, MD.Contractrenewaldate, 103) as [Contract Date],
convert(varchar, MD.Instalationdate, 103) as [Instalation Date],
convert(varchar, MD.Guaranteedate, 103) as [Guarantee Date],
convert(varchar, MD.RMSDate, 103) as [RMS Date],
convert(varchar, MD.CreatedDate, 103) as [Created Date]
from Machinedetails MD
Left Join(select  L.LookupID,LP.linklookupID as ID,L.value as Machine from lookup L Left Join linklookup LP on L.LookupID = LP.LinkedTO) LJ 
on LJ.ID =MD.ModelTypeID
Left Join (select LinkLookupID ,value as Machine from LinkLookup  ) LM on LM.LinkLookupID=MD.ModelTypeID
Left Join (select LinkLookupID ,value as Folder from LinkLookup  ) LF on LF.LinkLookupID=MD.FolderTypeID
Left Join (select LinkLookupID ,value as Feeder from LinkLookup  ) LT on LT.LinkLookupID=MD.FeederType
Left Join (select LinkLookupID ,value as Label from LinkLookup  ) LB on LB.LinkLookupID=MD.LabelTypeID
Left Join (select LinkLookupID ,value as Letter from LinkLookup  ) LE on LE.LinkLookupID=MD.LetteroppenerID
Left Join (select LinkLookupID ,value as Ink from LinkLookup  ) I on I.LinkLookupID=MD.InkCatridgeID
LEFT JOIN (SELECT LookupID, Value, Colour FROM Lookup WHERE Class LIKE 'Machinestatus') LMS ON LMS.LookupID = MD.StatusID 

Left Join Entity E on E.EntityID =MD.EntityID
Left Join EntityContact EC on EC.EntityContactID =MD.EntityContactID
left join MachineService MS on MS.MachineID =MD.[MachineConfigID]

{where}

","0","","1","LRA-FUSION","0","0","fusion"
"40040","qf_Machine","","select LookupID,Value from lookup ls
where class like 'StockType'
order by value asc","0","","1","LRA-FUSION","0","0","fusion"
"40041","qf_model","","select DISTINCT 
	CONVERT(VARCHAR,ISNULL(LP.LinkLookupID,'')) + '#' + CONVERT(VARCHAR,ISNULL(StockID,''))
	,LP.value as [Stock Type]
	,StockCode as [Stock Code]
	,StockDescription  as [Stock Description]
from linklookup LP
left Join (select LookupID,Class,value from Lookup ) L
on LP.LinkedTo = L.LookupID
LEFT JOIN (SELECT StockID,StockDescription, StockCode, StockType, SubTypeID FROM AccStock) A 
ON A.StockType = l.lookupID AND A.SubTypeID = LP.LinkLookupID
where L.Class like 'StockType' AND (LP.value LIKE '%<%replace%>%' OR StockDescription LIKE '%<%replace%>%') {and}
order by lp.value","0","","1","LRA-FUSION","0","0","fusion"
"40042","CV_MachineAdress","","select MachineAddressID,AddressType,Address1,Address2,Address3,City,Region,Code from MachineAddress
where machineID={Where}","0","","1","LRA-FUSION","0","0","fusion"
"40043","CV_Checlist_Print","","select 
	case when JC.[Questions]<>'' then JC.[Questions] else L.Value end as [Question]
      ,Case When JC.[IsYes] = 0 Then 'No' Else 'Yes' End as [SetUp]
      ,JC.[Comments] as [Comment]
     from JobChecklist JC
Left Join Users U on 
U.UserID= JC.[CreatedBy]
Left Join Users US on 
US.UserID= JC.[ModifiedBy]
left join Lookup L on L.LookupID=JC.QuestionID
{projectid}","0","","1","LRA-FUSION","0","0","fusion"
"40044","CV_Checlist_Print_Header","","select E.company as [<Customername>],
  M.SerialNo as [<serial>],
    L.value as [<model>],
    S.Firstname + ' ' + S.Surname as [<Technician>],
	JP.Machineid
from 
Projects P
left Join JobMachine JP on JP.JobID = P.ProjectID
Left Join LinkLookup L on L.LinkLookupID = JP.MachineID
Left Join Entity E on E.EntityID = JP.EntityID
left Join machineDetails M on Jp.EntityID = M.EntityID and ModelTypeID =JP.MachineID 
Left Join (Select top 1 ProjectID,StaffID from JobTechnician where ProjectID = {projectid}) J on J.ProjectID =P.ProjectID
Left Join Staff S on J.StaffID = S.StaffID
where P.ProjectID = {projectid}","0","","1","LRA-FUSION","0","0","fusion"
"40045","CV_JobMachine","","select DISTINCT MD.MachineConfigID , l.Value ,
(select count(*) from JobMachine where JOBID={where} and MD.MachineConfigID=MachineID )as [Ticked]
from LinkLookup L
Left Join machinedetails MD on MD.ModelTypeID = L.LinkLookupID
where MD.EntityID={wheres}

","0","","1","LRA-FUSION","0","0","fusion"
"40046","cv_Acc_Print_CEDoc_HeaderBK","","SELECT Top 1

    'COST ESTIMATE' as [<doctype>],
    UPPER(Case When isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END) as [<client>],
    UPPER(Case When isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END) as [<client>],
    UPPER(Case When isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END) as [<client>],
    E.Switchboard as [<switchboard>],
    Case When isnull(DM.UseEC,0) = 0 then E.Fax ELSE EC.Fax END as [<fax1>],
convert(varchar,DM.Enddate,103) as [<Expiry>] ,
    isnull(E.AccountNum,'') as [<ACCno>],
    isnull('('+Att.Attention+')','') as  [<contact2>],
    Case When isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END as [<client1>],
    isnull(Att.Attention,'') as [<contact>],
    isnull(Att.Attention,'') as [<contact>],
    isnull(Att.Attention,'') as [<contact2>],
    KJK.value as [<machine1>],
    CAST(DAY(DM.DateCreated) AS VARCHAR(2)) + ' ' + DATENAME(MM, DM.DateCreated) + ' ' + CAST(YEAR(DM.DateCreated) AS VARCHAR(4))  as [<docdate>],
    isnull(Att.FullTitle,'') as [<fulltitle>],
    isnull(Att.Fax,'') as [<fax>],
    isnull(Att.Phone1,'') as [<phone>],
    isnull(EA.Address1,'') as [<address1>],
    isnull(EA.Address2,'') as [<address2>],
    isnull(EA.Address3,'') as [<address3>],
    isnull(ED.Code,EP.Code) as [<Dcode>],
    DM.ClientPO as [<refno>],
    DM.ClientPO as [<refno1>],
    Att.Cell as [<Cell>], 
    isnull(EA.City,'') as [<address4>],
    isnull(ED.Address1,EP.Address1) as [<Daddress1>],
    isnull(ED.Address2,EP.Address2) as [<Daddress2>],
    isnull(ED.Address3,EP.Address3) as [<Daddress3>],
    isnull(ED.City,EP.City) as [<Daddress4>],
 isnull(ED.Country,EP.Country) as [<Daddress5>],
    isnull(EA.code,'') as [<code>],
    Att.Email as [<email>],
    convert(varchar,DM.Startdate,103) + ' - ' + convert(varchar,DM.Enddate,103) as [<rundates>] ,
    case WHEN isnull(DM.PreviousDocID,0) > 0 then PreviousDocID Else DM.DocID END  as [<docno>],
    '.' + convert(varchar,ISNULL(DM.Revision,1)) AS [<revision>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.TotalEx / DM.ROE)  as [<totalex>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.TotalEx / DM.ROE)  as [<totalexcl>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.Discount / DM.ROE) as [<discount>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.TotalIncl / DM.ROE ) as [<totalincl>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber((DD.TotalIncl - (DD.TotalEx - DD.Discount)) / DM.ROE) as [<totalvat>], 
    ISNULL(DM.Currency,'') + ' ' + dbo.fnFormatNumber((DD.TotalEx / DM.ROE) - (DD.Discount / DM.ROE)) as [<totalexdisc>],
    CASE WHEN isnull(DD.Discount,0) <> 0 then char(13) + 'Discount' END as [<disclabel>],
    CASE WHEN isnull(DD.Discount,0) <>  0 then char(13) + isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(cast(DD.Discount as money) / DM.ROE)  END as [<invisiblediscount>],
    U.SalesCon as [<salescons>],
    U.SalesCon as [<salescons1>],
    isnull(E.compregnum,'') as [<cCompreg>],
    isnull(E.VATnum,'') as [<cVATnum>],
    S.SalesRepCell as [<salesrepcell>],
    s.sMail as [<Semail>],
    s. Stel as [<Stel>],
    s.sFax as [<Sfax>],
    LC.Value as [<extsalescons>],
    DS.CoRegNo as [<compreg>],
    DS.VatRegNo as [<vatno>],
    DM.Descr as [<gendescr>],
    DM.Descr as [<gendescr>],
    DM.memo as [<notes>],
    DS.Terms as [<terms>],
    DS.Banking as [<banking>],
    DS.Footer as [<footer>],
    '' as [<roe>],
    ACC.StockDescription as  [<desc>],
    KJK.value as [<machine>],
    ACC.Specifications [<spec>],
    ACC.Extraspecifications [<info>],
    us.SalesCons as [<consultant>],
    us.SalesCons as [<consultant>],
    LP.[Position] as [<Position>],
    DM.accCostOther4 as [<pax>],
    LPs.[accCostOther1] as [<other1>],
    LPG.[accCostOther2] as [<other2>],
    LPT.[accCostOther3] as [<other3>],
    dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.4) as [<amount40%>],
    dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.3) as [<amount30%>],
    dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.2) as [<amount20%>],
    dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.1) as [<amount10%>],
    dbo.fnFormatNumber((DD.Totalincl / DM.ROE) / 6) as [<amt6mth>],
    dbo.fnFormatNumber(((DD.Totalincl / DM.ROE) * 1.2)/ 12) as [<amt12mth>],
     RDM.[Monthly Payment] as [<Rate>],
     convert(varchar,DM.PipelineNextDate,106) as [<nextdate>],
     convert(varchar,DM.PipelineLastDate,106) as [<lastdate>],
     convert(varchar,DM.ExpectedOrder,106) as [<expecteddate>],
     DD.[TotalQTY] as [<TotalQTY>],
     SH.[<TotalPacking>] as [<TotalPacking>],
     SH.[<netweight>] as [<TotalKG>],
     DD.[TotalKGS] as [<TotalKGs>],
      DD.[TotalKGS] as [<TotalKGs1>],
      isnull(DM.accCostOther4,0) AS [<TotalPackings>],
     isnull(DM.accCostOther4,0) AS [<TotalPackings1>],
     DM.accCostOther4 as [<packaging>],
     SH.[<volume>] as [<volume>],
     SH.[<netweight>] as [<netweight>],
     SH.[<grossweight>] as [<grossweight>],
     DM.accCostOther5 as [<other5>],
     DM.accCostOther6 as [<other6>]
FROM COST_ESTIMATE_MASTER DM
LEFT JOIN (
	SELECT 
		Sum(PriceEx * qty) as [TotalEx]
		, SUM(QTY) as [TotalQTY]
		, sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] 
		, Sum((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (J.TAX /100 + 1)) as [TotalIncl]
		, J.DocID 
		,SUM(QTY*STK.[WEIGHT]) as [TotalKGS]
		,sum(convert(numeric(18,0),isnull(MM.accCostOther4,0))) AS [PACK]
	FROM COST_ESTIMATE_DETAIL J
	lEFT JOIN ACCSTOCK STK ON STK.STOCKID=J.STOCKID
	lEFT jOIN COST_ESTIMATE_MASTER MM ON MM.DocID=J.DocID
	WHERE isnull(ComponentOfLineID,0) = 0 
	Group By J.DocID
) DD
ON DM.DocID = DD.DocID
LEFT JOIN (
	SELECT 
		EntityID
		,Company 
		,VATNum
		,AccountNum
		,InvoiceTo
		,Fax
		,Switchboard
		,compregnum
		,SalesConsID 
	From Entity
) E
ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (
	Select 
		Entitycontactid
		,isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact]
		,Accountnum
		,Email
		,Fax
		,Phone1
		,SalesConsID 
	FROM EntityContact
) EC
ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN (
	Select 
		Entitycontactid
		,isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention]
		,ltrim(rtrim(isnull(Title,'') + ' ' + isnull(firstname,'') +  ' '+ isnull(surname,''))) as [FullTitle]
		,Accountnum
		,Email
		,Fax
		,Phone1
		,SalesConsID
		,Cell 
	FROM EntityContact
) ATT
ON DM.AttentionOf = Att.EntityContactID 
LEFT JOIN (
	Select 
		Entitycontactid
		,isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact]
		,Accountnum
		,Email
		,SalesConsID 
	FROM EntityContact
) AEC
ON E.InvoiceTo = AEc.EntityContactID 
LEFT JOIN (
	SELECT 
		* 
	FROM AccDocumentSetup
) DS
ON DM.DivisionID = DS.DivisionID
LEFT JOIN (
	SELECT 
		UserID
		,isnull(Firstname,'') +  ' '  + isnull(surname,'') as [SalesCon]
		,StaffID  
	FROM Users
) U 
ON DM.SalesRepID = U.UserID
LEFT JOIN (
	SELECT 
		Staffid
		,isnull(Cell,'') as [SalesRepCell]
		,isnull(Email,'') as sMail
		,isnull(Tel,'')as Stel
		,isnull(Fax,'') as sFax  
	FROM Staff 
) S 
ON U.Staffid = S.Staffid
LEFT JOIN Lookup LC 
ON LC.Lookupid =  CASE WHEN  isnull(DM.UseEC,0) =0 THEN E.SalesConsID ELSE EC.SalesConsID END
LEFT JOIN (
	SELECT 
		* 
	FROM EntityAddress 
	where addresstype like '%Postal%'
) EA
ON E.EntityID = EA.Entityid
left join COST_ESTIMATE_DETAIL DF on DF.DocID = DD.DocID
left Join (
	select top 1 
		stockid 
		,StockDescription
		,Specifications
		,Extraspecifications
		,StockType 
	from accstock 
	where stockID=
	(
		select top 1 stockID from COST_ESTIMATE_DETAIL where DocID = 528929
	) 
) ACC  on DF.stockID=ACC.stockID
left join Lookup KJK on KJK.LookupID = ACC.StockType
LEFT JOIN (
	SELECT 
		* 
	FROM EntityAddress 
	where addresstype like '%Delive%'
) ED
ON E.EntityID = ED.Entityid
LEFT JOIN (
	SELECT 
		* 
	FROM EntityAddress 
	where addresstype like '%physic%'
) EP
ON E.EntityID = EP.Entityid
LEFT JOIN (
	select 
		UserID
		,StaffID
		,isnull(firstname,'') + ' ' + isnull(Surname,'') as SalesCons 
	from Users
) US 
ON US.UserID = DM.SalesRepID
LEFT JOIN (SELECT StaffID, position FROM Staff) st
ON St.StaffID = US.StaffID
LEFT JOIN (
	SELECT 
		LookupID
		,Value as [Position] 
	FROM Lookup 
	WHERE Class LIKE 'jobtitle'
) LP ON LP.LookupID = st.position
LEFT JOIN (
    SELECT DM.DocID, [TotalIncl] ,
    (
        SELECT  Top 1
            Interest 
        FROM ACCRates 
        WHERE TotalFrom >= [TotalIncl] 
        or [TotalIncl] <= TotalTo
    )  AS Rate
    , [TotalIncl] * (
        SELECT  top 1
            Interest 
        FROM ACCRates 
        WHERE TotalFrom >= [TotalIncl] 
        or [TotalIncl] <= TotalTo
    ) as [Monthly Payment]

    FROM COST_ESTIMATE_MASTER DM
    LEFT JOIN (
        SELECT 
            DocID
            ,Sum((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1)) as [TotalIncl]
        FROM COST_ESTIMATE_DETAIL
        GROUP BY DocID
    ) DD ON DD.DocID = DM.DocID

) RDM ON RDM.DocID = DM.DocID
Left Join (
	SELECT 
		LookupID
		, Value as [accCostOther1]  
	FROM Lookup 
	WHERE Class LIKE 'accCostOther1' 
) LPs ON LPs.LookupID = DM.accCostOther1
Left Join (
	SELECT 
		LookupID
		, Value as [accCostOther2]  
	FROM Lookup 
	WHERE Class LIKE 'accCostOther2' 
) LPG ON LPG.LookupID = DM.accCostOther2
Left Join (
	SELECT 
		LookupID
		, Value as [accCostOther3]  
	FROM Lookup 
	WHERE Class LIKE 'accCostOther3'  
) LPT ON LPT.LookupID = DM.accCostOther3
Left Join (
	SELECT 
		LookupID
		, Value as [Lead From]  
	FROM Lookup 
	WHERE Class LIKE 'LeadFrom'  
) LPK ON LPK.LookupID = DM.PipelineLeadFromId
LEFT JOIN (
	SELECT 
		DocID
		, SUM(NoOfPackages) as [<TotalPacking>]
		, SUM([Length] * Width * Height) as [<volume>]
		, SUM([Weight]) as [<netweight>] 
		, SUM(PackageWeight + [Weight]) as [<grossweight>]
	FROM SHIPPING_MASTER
	GROUP BY DocID
) SH ON SH.DocID = DM.DocID
WHERE DM.DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40047","cv_SMSPortal_Audit","","SELECT 
	'SM' + Convert(Varchar,SMS.SMSID),
	E.Company,
	ISNULL(EC.FirstName,'') + ' ' + ISNULL(EC.Surname, '') as [Contact],
	SMS.[Message],
	DateCreated as [Date],
	CASE WHEN ISNULL(SMS.IsReply,0) = 0 THEN 'Sent' ELSE 'Received' END as [Message Direction],
	CASE WHEN SentBy = 0 THEN 
		'Retrived from SMSPortal'
	ELSE
		ISNULL(U.Firstname, '') + ' ' + ISNULL(U.Surname, '') 
	END as [Sent By]
FROM EntityContactSMS SMS
LEFT JOIN EntityContact EC ON EC.EntityContactID = SMS.EntityContactID 
LEFT JOIN Entity E ON E.EntityID = EC.EntityID
LEFT JOIN Users U ON U.UserID = SMS.SentBy
{where}
{orderby}","0","","1","LRA-FUSION","0","0","fusion"
"40048","cv_SMSPortalLog_Audit_SetLIistView","","SELECT top 0 
	SMS.SMSID,
	E.Company,
	ISNULL(EC.FirstName,'') + ' ' + ISNULL(EC.Surname, '') as [Contact],
	SMS.[Message],
	DateCreated as [Date],
	CASE WHEN ISNULL(SMS.IsReply,0) = 0 THEN 'Sent' ELSE 'Received' END as [Message Direction],
	CASE WHEN SentBy = 0 THEN 
		'Retrived from SMSPortal'
	ELSE
		ISNULL(U.Firstname, '') + ' ' + ISNULL(U.Surname, '') 
	END as [Sent By]
FROM EntityContactSMS SMS
LEFT JOIN EntityContact EC ON EC.EntityContactID = SMS.EntityContactID 
LEFT JOIN Entity E ON E.EntityID = EC.EntityID
LEFT JOIN Users U ON U.UserID = SMS.SentBy","0","","1","LRA-FUSION","0","0","fusion"
"40049","cv_Acc_Print_DebtorDoc_Header","","SELECT Top 1
	isnull(EH.LegalName,E.Legalname) as [<legalname>],
	Case When isnull(DM.UseEC,0) = 0 then isnull(EH.Company,E.Company) ELSE EC.Contact END as [<client>],
	Case When isnull(DM.UseEC,0) = 0 then isnull(EH.Company,E.Company) ELSE EC.Contact END as [<client1>],
	isnull(EH.Accountnum,'') as [<holdingaccnum>],
	isnull(E.Accountnum,'') as [<companyaccnum>],
	isnull(E.Switchboard,'') as [<Telephone>]   ,
	isnull(E.Fax,'') as [<fax>],
	ISNULL(EAC.Address1,EACA.Address1) as [<address11>],
	ISNULL(EAC.Address2,EACA.Address2) as [<address12>],
	ISNULL(EAC.Address3,EACA.Address3) as [<address13>],
	CASE WHEN ISNULL(EAPo.Address1,'') = '' THEN (COALESCE(EAPoNo.Address1 + ', ','') + COALESCE(EAPoNo.Address2 + ', ','') + COALESCE(EAPoNo.Address3 + ', ','') + COALESCE(EAPoNo.City + ', ','') + COALESCE(EAPoNo.Code + ', ','') + COALESCE(EAPoNo.Region + '','')) ELSE (COALESCE(EAPo.Address1 + ', ','') + COALESCE(EAPo.Address2 + ', ','') + COALESCE(EAPo.Address3 + ', ','') + COALESCE(EAPo.City + ', ','') + COALESCE(EAPo.Code + ', ','') + COALESCE(EAPo.Region + '','')) END as [<postaladdress>],
	CASE WHEN ISNULL(EACA.Address1,'') = '' THEN (COALESCE(EAC.Address1 + ', ','') + COALESCE(EAC.Address2 + ', ','') + COALESCE(EAC.Address3 + ', ','') + COALESCE(EAC.City + ', ','') + COALESCE(EAC.Code + ', ','') + COALESCE(EAC.Region + '','')) ELSE (COALESCE(EACA.Address1 + ', ','') + COALESCE(EACA.Address2 + ', ','') + COALESCE(EACA.Address3 + ', ','') + COALESCE(EACA.City + ', ','') + COALESCE(EACA.Code + ', ','') + COALESCE(EACA.Region + '','')) END as [<physicaladdress>],
	ISNULL(ISNULL(ISNULL(EACA.Address1,EAPo.Address1),IsNull(EAC.Address1,EAPoNo.Address1)),'') as [<address1>],
	ISNULL(ISNULL(ISNULL(EACA.Address2,EAPo.Address2),IsNull(EAC.Address2,EAPoNo.Address2)),'') as [<address2>],
	ISNULL(ISNULL(ISNULL(EACA.Address3,EAPo.Address3),IsNull(EAC.Address3,EAPoNo.Address3)),'') as [<address3>],
	ISNULL(ISNULL(ISNULL(EACA.Region,EAPo.Region),IsNull(EAC.Region,EAPoNo.Region)),'') as [<region>],
	ISNULL(ISNULL(ISNULL(EACA.Code,EAPo.Code),IsNull(EAC.Code,EAPoNo.Code)),'') as [<address4>],
	ISNULL(ISNULL(ISNULL(EACA.city,EAPo.city),IsNull(EAC.City,EAPoNo.City)),'') as [<address5>],
	case ISNULL(DM.Delivery,0) when 0 then 'For collection' ELSE ISNULL(DM.Address,'') END as [<Daddress1>],
	ISNULL(DM.City,'') as [<Daddress2>],
	ISNULL(DM.Code,'') as [<Daddress3>],
	ISNULL(DM.region,'') as [<Daddress4>],
	ISNULL(DM.Country,'') as [<Daddress5>],
	--ISNULL(isnull(EAP.Address1,EAC.Address1),'') as [<Daddress1>],
	--ISNULL(isnull(EAP.Address2,EAC.Address2),'') as [<Daddress2>],
	--ISNULL(isnull(EAP.Address3,EAC.Address3),'') as [<Daddress3>],
	--ISNULL(isnull(EAP.Code,EAC.Code),'') as [<Daddress4>],
	--ISNULL(isnull(EAP.city,EAC.city),'') as [<Daddress5>],
	isnull(E.compregnum,'') as [<cregno>],
	isnull(E.VATnum,'') as [<cvat>],
	CASE WHEN isnull(EA.Address1,'') <> '' THEN isnull(EA.Address1,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.Address2,'') <> '' THEN isnull(EA.Address2,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.Address3,'') <> '' THEN isnull(EA.Address3,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.City,'') <> '' THEN isnull(EA.City,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.Country,'') <> '' THEN isnull(EA.Country,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.Code,'') <> '' THEN isnull(EA.Code,'') ELSE '' END as [<address>],
	ISNULL(u.[Consultant],'') as [<consultant>],
	ISNULL(u.[Consultant],'') as [<consultant>],
	ISNULL(u.staffmail,'') as[<Semail>],
	ISNULL(u.staffmail,'') as[<semail>],
	ISNULL(u.staffTel,'') as [<Stel>],
	ISNULL(u.staffFax,'') as [<Sfax>],
	ISNULL(u.staffcell,'') as [<salesrepcell>],
	ISNULL(u.staffext,'') as [<ext>],
	ISNULL(u.staffext,'') as [<sext>],
	ISNULL(DM.ClientPo,'') as [<refno>],
	ISNULL(DM.ClientPo,'') as [<refno1>],
	ISNULL(DM.descr,'') as [<description>],
	Case when isnull(DM.UseEC,0) = 0 then isnull(isnull(EH.Accountnum, EH.entityid),isnull(E.AccountNum, E.EntityID)) ELSE isnull(EC.Accountnum, EC.EntitycontactID) END as [<accounts>],
	Case when isnull(DM.UseEC,0) = 0 then isnull(isnull(EH.Accountnum, EH.entityid),isnull(E.AccountNum, E.EntityID)) ELSE isnull(EC.Accountnum, EC.EntitycontactID) END as [<account>],
	isnull(EH.VatNum,E.VatNum) as [<clientvat>],
	isnull(EH.CompRegNum,E.CompRegNum) as [<clientreg>],
	ISNULL(Case when Att.Entitycontactid is not null then Att.[Attention] ELSE
	Case when ECP.Entitycontactid is not null then ECP.[ProjContact] ELSE 
		  Case when isnull(DM.UseEC,0) = 0 then AEC.[AccountContact] ELSE EC.Contact END
	END
	END,'') as [<contact1>],
	ISNULL(Att.Cell,'') as [<Cell>],
	ISNULL(Att.Fax,'') as [<attfax>],
	ISNULL(Case when Att.Entitycontactid is not null then Att.[Attention] ELSE
	Case when ECP.Entitycontactid is not null then ECP.[ProjContact] ELSE 
		  Case when isnull(DM.UseEC,0) = 0 then AEC.[AccountContact] ELSE EC.Contact END
	END
	END,'') as [<contact>],
	ISNULL(P.ProjectID,'') as [<projectno>],
	ISNULL(P.ProjectName,'') as [<projectname>],
	ISNULL(P.ProjectNum,'') as [<projectcode>],
	convert(varchar,isnull(DM.DateCompleted, getdate()),103) as [<docdate>],
	convert(varchar,isnull(DM.DateCompleted, getdate()),103) as [<docdate>],
	CONVERT(varchar,isnull(DM.DueDate, getdate()),103) as [<duedate>],

	IsNull(EA.Address1,'') as [<poaddress1>],
	IsNull(EA.Address2,'') as  [<poaddress2>],
	IsNull(EA.Address3,'') as  [<poaddress3>],
	IsNull(EA.City,'') as  [<pocity>],
	IsNull(EA.Region,'') as [<poprovince>],
	IsNull(EA.Code,'') as [<pocode>],
	Isnull(ACT.TaxTypeName,'') as [<exempt>],
	CASE WHEN DM.Doctype = 'Invoice' and DocStatus = 'Open' THEN 'PROFORMA INVOICE' WHEN DM.Doctype = 'Invoice' and DocStatus <> 'Open' AND DM.TAX = 0 THEN 'INVOICE' WHEN DM.Doctype = 'Invoice' and DocStatus <> 'Open' AND DM.TAX <> 0 THEN 'TAX INVOICE' ELSE upper(DM.DocType) END as [<doctype>],
	CASE WHEN DM.Doctype = 'Invoice' and DocStatus = 'Open' THEN 'PROFORMA INVOICE' WHEN DM.Doctype = 'Invoice' and DocStatus <> 'Open' AND DM.TAX = 0 THEN 'INVOICE' WHEN DM.Doctype = 'Invoice' and DocStatus <> 'Open' AND DM.TAX <> 0 THEN 'TAX INVOICE' ELSE upper(DM.DocType) END as [<doctype>],
	isnull(DS.Prefix,'') + ' ' + convert(varchar,DM.DocNo) as [<docno>],
	DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalEx / isnull(DM.ROE,1)) as [<totalex>],
	DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalEx / isnull(DM.ROE,1))-(DD.Discount / isnull(DM.ROE,1))) as [<totalexcl>],
	DM.Currency + ' ' + dbo.fnFormatNumber(DD.Discount / isnull(DM.ROE,1)) as [<discount>],
	DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl / isnull(DM.ROE,1)) as [<totalincl>],
	DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl / isnull(DM.ROE,1)) as [<totalincl>],
	DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) ) as [<totalvat>], 
	
	DM.Currency + ' ' + dbo.fnFormatNumber(DDP.TotalEx / isnull(DM.ROE,1)) as [<prevtotalex>],
	DM.Currency + ' ' + dbo.fnFormatNumber((DDP.TotalEx / isnull(DM.ROE,1))-(DDP.Discount / isnull(DM.ROE,1))) as [<prevtotalexcl>],
	DM.Currency + ' ' + dbo.fnFormatNumber(DDP.Discount / isnull(DM.ROE,1)) as [<prevdiscount>],
	DM.Currency + ' ' + dbo.fnFormatNumber(DDP.TotalIncl / isnull(DM.ROE,1)) as [<prevtotalincl>],
	DM.Currency + ' ' + dbo.fnFormatNumber(DDP.TotalIncl / isnull(DM.ROE,1)) as [<prevtotalincl>],
	DM.Currency + ' ' + dbo.fnFormatNumber((DDP.TotalIncl  - (DDP.TotalEx - DDP.Discount))  / isnull(DM.ROE,1) ) as [<prevtotalvat>], 
	ISNULL(DM.Currency,'') + ' ' + dbo.fnFormatNumber((DDP.TotalEx / ISNULL(DM.ROE,1)) - (DDP.Discount / DM.ROE)) as [<prevtotalexdisc>],
	ISNULL(DS.CoRegNo,'') as [<compreg>],
	ISNULL(DS.VatRegNo,'') as [<vatno>],
	isnull(DS.ContactDetails,'')as [<companycontact>],
	isnull(DS.Emails,'')as [<companymail>],
	isnull(DS.Telephone     ,'')as [<companytel>],
	isnull(DS.Faxno,'')as [<companyfax>],
	ISNULL(DM.memo,'') as [<notes>],
	ISNULL(DS.Terms,'') as [<terms>],
	ISNULL(DS.Banking,'') as [<banking>],
	ISNULL(DS.Footer,'') as [<footer>],
	ISNULL(Case when isnull(DM.UseEC,0) = 0 then 
		(SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = (SELECT Top 1 agnetID FROM EntityContact where entitycontactID = E.InvoiceTo))
	ELSE
		(SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = Ec.agnetID)
	END,'') as [<agent>],
	isnull(DR.RuleName, 'Standard') as [<documentrule>],
	ISNULL(DV.Division,'') as [<division>],
	ISNULL(DV.Division,'') as [<division>],
	--EC.Phone1 as [<phone>]
	ISNULL(Att.Phone1,'') as [<phone>],
	ISNULL(LPT.value,'') as [<paymentterms>],
	ISNULL(MDS.Serialno,'') as [<serial>],
	ISNULL(MDS.Licenceno,'')   as [<Licence>],
	ISNULL(MDS.CDNo,'') as [<CDNO>],
	ISNULL(MDS.CostCentre,'') as [<cost>],
	ISNULL(MDS.Valuesettings,'') as [<value>], 
	ISNULL(MDS.TownDie,'') as [<Towndie>],
	isnull(DS.URL,'') as [<URL>],
	isnull(DS.URL,'') as [<web>],
	ISNULL(LJ.VAlue,'') as [<model>],
	convert(varchar,getdate(),106) as [<todays>],
	CASE (DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) WHEN 0
	THEN '0.00 @ 0%'
	ELSE DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) ) + ' @ ' + dbo.fnFormatNumber(DM.Tax)
	END as [<vatsummary>],
	ISNULL(DMP.DocType + ' ' + isnull(DS.Prefix,'') + ' ' + convert(varchar,DMP.DocNo),'') as [<prevdocno>],
	convert(varchar,getdate(),103) as [<todaydate>],
	ISNULL(DM.Currency,'R') as [<currency>],
	'n/a' as [<deliverydate>],
	ISNULL(Att.Email,'') as [<email>],
	ISNULL(DMP.docno,'') as [<prevdocno2>],
	isnull(DR.RuleName,'Standard') as [<docrule>],
	isnull(DR.ReduceByPerc,100) as [<drp>],
	ISNULL(DA.Address1,'') AS [<coaddr1>],
	ISNULL(DA.Address2,'') AS [<coaddr2>],
	ISNULL(DA.Code,'') as [<coaddrcode>],
	ISNULL(DA.City,'') as [<coaddrregion>],
	ISNULL(E.VendorNumber,'') As [<vendornumber>],
	ISNULL(LOther1.Value,'') As [<other1>],
	ISNULL(LOther2.Value,'') As [<other2>],
	ISNULL(LOther3.Value,'') As [<other3>],
	ISNULL(DM.other4,'') As [<other4>],
	ISNULL(DM.other5,'') As [<other5>],
	ISNULL(DM.other6,'') As [<other6>]
FROM DEBTOR_MASTER DM
LEFT JOIN ( SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount], sum(PriceEx * Qty * (1 - (isnull(Discperc,0) / 100)) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl], DocID FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group By DocID) DD
	ON DM.DocID = DD.DocID
LEFT JOIN ( SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount], sum(PriceEx * Qty * (1 - (isnull(Discperc,0) / 100)) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl], DocID FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group By DocID) DDP
	ON DM.PreviousDocID = DDP.DocID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention], Accountnum, AgnetID, phone1, cell, Email, Fax FROM EntityContact) Att
	ON DM.AttentionOf = Att.EntityContactID 
LEFT JOIN (SELECT EntityID, Company, LegalName, VATNum, AccountNum, InvoiceTo, CompRegNum, AlternateCompanyID, PaymentTerms, Switchboard, Fax, VendorNumber From Entity) E
	ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN Lookup LPT 
	ON E.PaymentTerms = LPT.LookupID
LEFT JOIN ( SELECT EntityID, Company, LegalName, VATNum, AccountNum, InvoiceTo, CompRegNum, AlternateCompanyID From Entity) EH
	ON E.AlternateCompanyID = EH.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN ( Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact], Accountnum, AgnetID, Phone1, Fax, Email FROM EntityContact) EC
	ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN ( Select Entitycontactid, isnull(firstname,'') + ' ' + isnull(surname,'') as [AccountContact], Accountnum, phone1 FROM EntityContact) AEC
	ON isnull(EH.InvoiceTo,E.InvoiceTo) = AEc.EntityContactID 
LEFT JOIN (SELECT ProjectID, EntityContactID, ProjectName, ProjectNum FROM Projects) P
	ON DM.ProjectID = P.ProjectID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [ProjContact] FROM EntityContact) ECP
	ON P.EntityContactID  = ECP.EntityContactID 
LEFT JOIN (SELECT U.UserID, isnull(u.firstname,'')+ ' ' + isnull(u.surname,'') as [Consultant], 
			u.StaffID, isnull(s.Tel,'') as [StaffTel], Isnull(s.Fax,'') as [stafffax], 
			Isnull(s.Email,'') as [staffmail], isnull(s.cell,'') as [staffcell], isnull(s.Ext,'') as [staffext]
			From users u
			Left Join Staff s
			on u.StaffID = s.StaffID
			) u
	ON DM.SalesRepID = u.userid
LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
	ON DM.DivisionID = DS.DivisionID
LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%postal%') EA
	ON isnull(EH.Entityid, E.EntityID) = EA.Entityid
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%postal address%') EAPos
	ON isnull(EH.Entityid, E.EntityID) = EA.Entityid
LEFT JOIN (SELECT * FROM AccDocRules) DR
	ON DM.RuleID = DR.DocRulesID
LEFT JOIN (SELECT lookupID,Value as Division FROM Lookup) DV 
	ON DV.LookupID = DM.DivisionID
Left Join ( SELECT * FROM DivisionAddress) DA 
	ON DM.DivisionID = DA.DivisionID   
Left Join Machinedetails MDS 
	on MDS.EntityID = E.EntityID
Left Join LinkLookup LJ  
	on MDS.ModelTypeID= LJ.LinkLookupID
LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%postal%' AND IsDefault = 1) EAPo
    ON isnull(EH.EntityID,E.Entityid) = EAPo.Entityid
LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%physical%' AND IsDefault = 1) EACA
    ON isnull(EH.EntityID,E.Entityid) = EACA.Entityid
LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%physical%') EAC
    ON isnull(EH.EntityID,E.Entityid) = EAC.Entityid
LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%postal%') EAPoNo
	ON isnull(EH.EntityID,E.Entityid) = EAPoNo.Entityid    
Left Join (select * from Entityaddress where Addresstype like '%Delivery Address%')EAP 
	ON isnull(EH.Entityid, E.EntityID) = EAP.Entityid
LEFT JOIN (SELECT DocID, DocNo, DocType FROM DEBTOR_MASTER) DMP
	ON DM.PreviousDocID = DMP.DocID
Left Join AccTaxType ACT 
	on ACT.TaxTypeID=DM.TaxTypeID
LEFT JOIN (SELECT LookupID, Value FROM Lookup)LOther1 
	ON LOther1.LookupID = DM.other1
LEFT JOIN (SELECT LookupID, Value FROM Lookup)LOther2 
	ON LOther2.LookupID = DM.other2
LEFT JOIN (SELECT LookupID, Value FROM Lookup)LOther3 
	ON LOther3.LookupID = DM.other3
WHERE DM.DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40050","cv_Print_JobCard_Header_Doc","","SELECT getdate() AS [<datetime>]
     , convert(VARCHAR, getdate(), 106) AS [<docdate>]
     , convert(VARCHAR, getdate(), 106) AS [<todaydate>]
     , P.ProjectID AS [<jobno>]
     , P.ProjectID AS [<docno>]
     , P.TicketID AS [<ticketno>]
     , P.ProjectName AS [<jobname>]
     , E.Accountnum AS [<account>]
     , E.Company AS [<client>]
     , E.Company AS [<client1>]
     , P.Designation AS [<designation>]
     , P.FNumber AS [<fnumber>]
     , E.Vatnum AS [<clientvat>]
     , EC.Contact AS [<contact>]
     , EC.Contact AS [<contact1>]
     , EC.phone1 + CASE
                     WHEN len(isnull(EC.Cell, '')) > 0 THEN
                       ' / ' + isnull(Ec.Cell, '')
                     ELSE
                       ''
                   END AS [<telno>]
     , E.fax AS [<Fax>]
     , E.Switchboard AS [<Tel>]
     , P.ClientPO AS [<refno>]
     , LD.value AS [<division>]
     , isnull(P.ProjectNotes, '') AS [<notes>]
     , isnull(P.ProjectNotes, '') AS [<notes>]
     , P.CompletionNotes AS [<completionnotes>]
     , convert(VARCHAR, P.ReleaseDate, 103) + ' ' + convert(VARCHAR, P.ReleaseDate, 108) AS [<startdate>]
     , convert(VARCHAR, P.DateManufactured, 103) + ' ' + convert(VARCHAR, P.DateManufactured, 108) AS [<enddate>]
     , PS.value AS [<status>]
     , JT.value AS [<type>]
     , T.Technician AS [<technician>]
     , M.Manager AS [<manager>]
     , ISNULL(JA.Address1,'') AS [<address1>]
     , ISNULL(JA.Address2,'') AS [<address2>]
     , ISNULL(JA.Address3,'') AS [<address3>]
     , ISNULL(JA.Region,'') AS [<region>]
     , ISNULL(JA.Code,'') AS [<code>]
     , ISNULL(JA.City,'') AS [<city>]
     , ISNULL(JA.Country,'') AS [<country>]
     , EAD.Address1 AS [<Deladdress1>]
     , EAD.Address2 AS [<Deladdress2>]
     , EAD.Address3 AS [<Deladdress3>]
     , EAD.Region AS [<Delregion>]
     , EAD.Code AS [<DelPcode>]
     , EAD.City AS [<DelPcity>]
     , EAD.Country AS [<DelPcountry>]
     , EAC.Address1 AS [<Daddress1>]
     , EAC.Address2 AS [<Daddress2>]
     , EAC.Address3 AS [<Daddress3>]
     , EAC.Region AS [<Dregion>]
     , EAC.Code AS [<Dcode>]
     , EAC.City AS [<Dcity>]
     , EAC.Country AS [<Dcountry>]
     , ltrim(rtrim(replace(replace(isnull(replace(EA.Address1, char(13), '') + char(13), '') + isnull(replace(EA.Address2, char(13), '') + char(13), '') + isnull(replace(EA.Address3, char(13), '') + char(13), '') + isnull(replace(EA.Code, char(13), '') + char(13), '') + isnull(replace(EA.city, char(13), '') + char(13), '') + isnull(replace(EA.country, char(13), ''), ''), char(13) + char(13), char(13)), char(13) + char(13), char(13)))) AS [<address>]
     , EAP.Address1 AS [<Paddress1>]
     , EAP.Address2 AS [<Paddress2>]
     , EAP.Address3 AS [<Paddress3>]
     , EAP.Region AS [<Pregion>]
     , EAP.Code AS [<Pcode>]
     , EAP.City AS [<Pcity>]
     , EAP.Country AS [<Pcountry>]
     , dbo.fnFormatNumber(isnull(JS.PriceEx, 0)) AS [<totalex>]
     , dbo.fnFormatNumber(isnull(JS.PriceEx, 0) * (isnull((JS.DiscPerc / 100), 1))) AS [<discount>]
     , dbo.fnFormatNumber((isnull(JS.PriceEx, 0)) + isnull(JS.PriceEx, 0) * (isnull((JS.DiscPerc / 100), 1))) AS [<totalexcd>]
     , dbo.fnFormatNumber(isnull([PriceExStock], 0)) AS [<stockprice>]
     , dbo.fnFormatNumber(isnull([PriceExLabour], 0)) AS [<labourprice>]
     , dbo.fnFormatNumber(JS.TotalIncl - JS.PriceEx) AS [<totalvat>]
     , dbo.fnFormatNumber(JS.TotalIncl) AS [<totalincl>]
     , MDS.TownDie AS [<town>]
     , convert(VARCHAR, MDS.Instalationdate, 106) AS [<instalation>]
     , convert(VARCHAR, MDS.Guaranteedate, 106) AS [<guarantee>]
     , datename (MONTH, MDS.RMSDate) AS [<rms>]
     , MDS.Serialno AS [<Serial>]
     , MDS.CostCentre AS [<costcentre>]
     , MDS.Valuesettings AS [<valuesetting>]
     , MDS.Options AS [<options>]
     , MDS.InterfaceScale AS [<interface>]
     , MDS.Licenceno AS [<Licenceno>]
     , isnull(lo.value, 'None') AS [<letter>]
     , isnull(lF.value, 'None') AS [<feeder>]
     , isnull(LMT.value, 'None') AS [<folder>]
     , isnull(LDT.value, 'None') AS [<model>]
     , isnull(LB.value, 'None') AS [<labels>]
     , isnull(LNK.value, 'None') AS [<ink>]
     , isnull(GT.value, 'None') AS [<Machinetype>]
     , dbo.ServiceM(MDS.MachineConfigID) AS [<servicing>]
     , P.QuoteAccepted AS [<quoteaccepted>]
     , P.OrderNumber AS [<ordernumber>]
     , P.FullName AS [<fullname>]
     , isnull(TT.TaxTypeName, '') AS [<exempt>]
     , convert(VARCHAR, P.SignOffDate, 111) AS [<signdate>]
     , isnull(PM.Firstname, '') + ' ' + isnull(PM.Surname, '') AS [<consultant>]
     , isnull(PM.Firstname, '') + ' ' + isnull(PM.Surname, '') AS [<salescons>]
     , isnull(PM.Firstname, '') + ' ' + isnull(PM.Surname, '') AS [<salescons1>]
     , isnull(PM.Email, '') AS [<semail>]
     , DS.CoRegNo AS [<compreg>]
     , DS.VatRegNo AS [<vatno>]
     , isnull(DS.ContactDetails, '') AS [<companycontact>]
     , isnull(DS.Emails, '') AS [<companymail>]
     , isnull(DS.Telephone, '') AS [<companytel>]
     , isnull(DS.Faxno, '') AS [<companyfax>]
     , DS.Terms AS [<terms>]
     , DS.Banking AS [<banking>]
     , DS.Footer AS [<footer>]
     , isnull(DS.URL, '') AS [<URL>]
     , isnull(PM.Email, '') AS [<semail1>]
/*{signature}*/
FROM
  Projects P
  LEFT JOIN (SELECT EntityID
                  , Company
                  , VatNum
                  , Switchboard
                  , Fax
                  , AccountNum
                  , TaxTypeID
             FROM
               Entity) E
    ON P.Entityid = E.Entityid
  LEFT JOIN (SELECT *
             FROM
               JobAddress WHERE isJobtLocation = 1) JA
    ON JA.ProjectID = P.ProjectID
  LEFT JOIN (SELECT *
             FROM
               Lookup
             WHERE
               class LIKE 'divisions') LD
    ON P.DivID = LD.Lookupid
  LEFT JOIN (SELECT *
             FROM
               EntityAddress) EA
    ON E.EntityID = EA.EntityID AND isnull(EA.IsDefault, 0) = 1
  /*AND EA.EntityAddressID = (	SELECT 
									Max(EntityAddressID) 
								FROM EntityAddress 
								where EntityID = P.EntityID AND AddressType like '%physical%'
								)*/
  LEFT JOIN (SELECT ProjectID
                  , min(ProjDate) AS [StartDate]
             FROM
               ProjectDates
             WHERE
               isnull(IsStartEndDate, 0) = 1
             GROUP BY
               ProjectID) PDS
    ON P.ProjectID = PDS.ProjectID
  LEFT JOIN (SELECT ProjectID
                  , max(ProjDate) AS [EndDate]
             FROM
               ProjectDates
             WHERE
               isnull(IsStartEndDate, 0) = 1
             GROUP BY
               ProjectID) PDE
    ON P.ProjectID = PDE.ProjectID
  LEFT JOIN (SELECT *
             FROM
               ProjContacts) PC
    ON PC.JobContID = (SELECT min(JobContID)
                       FROM
                         ProjContacts
                       WHERE
                         ProjectID = P.ProjectID)
  LEFT JOIN (SELECT EntityContactID
                  , isnull(Firstname, '') + ' ' + isnull(Surname, '') AS [Contact]
                  , Phone1
                  , fax
                  , Cell
             FROM
               EntityContact) EC
    ON PC.EntitycontactID = EC.Entitycontactid
  LEFT JOIN (SELECT *
             FROM
               Lookup
             WHERE
               class LIKE 'ProjectState') PS
    ON P.ProjectStateID = PS.Lookupid
  LEFT JOIN (SELECT *
             FROM
               Lookup
             WHERE
               class LIKE 'JobType') JT
    ON P.ProjectTypeID = JT.Lookupid
  LEFT JOIN (SELECT ProjectID
                  , StaffID AS TechnicianID
             FROM
               JobTechnician
             WHERE
               JobTechnicianID IN (SELECT min(JobTechnicianID)
                                   FROM
                                     JobTechnician
                                   GROUP BY
                                     ProjectID)) PT
    ON P.ProjectID = PT.ProjectID
  LEFT JOIN (SELECT StaffID
                  , isnull(Firstname, '') + ' ' + isnull(Surname, '') AS [Technician]
             FROM
               Staff) T
    ON PT.TechnicianID = T.StaffID
  LEFT JOIN (SELECT StaffID
                  , isnull(Firstname, '') + ' ' + isnull(Surname, '') AS [Manager]
             FROM
               Staff) M
    ON P.ProjectManagerID = M.StaffID
  LEFT JOIN (SELECT sum(PriceEx * ((100 - isnull(Discperc, 0)) / 100) * (isnull(Tax, 0) / 100 + 1)) AS [PriceIncl]
                  , ProjectID
                  , sum((CASE
                           WHEN isnull(STK.IsTangible, 0) = 1 THEN
                             qty * PriceEx
                           ELSE
                             0
                         END)) AS [PriceExStock]
                  , sum((CASE
                           WHEN isnull(STK.IsTangible, 0) = 0 THEN
                             qty * PriceEx
                           ELSE
                             0
                         END)) AS [PriceExLabour]
                  , sum(((isnull(PriceEx, 0) * isnull(Qty, 0) * ((100 - isnull(Discperc, 0)) / 100)) * (TAX / 100 + 1))) AS [TotalIncl]
                  , sum(isnull(PriceEx, 0)) AS [PriceEx]
                  , sum(isnull(Qty, 0)) AS [Qty]
                  , sum(isnull(DiscPerc, 0)) AS [DiscPerc]
             FROM
               Job_Stock JS
               LEFT JOIN AccStock STK
                 ON JS.StockID = STK.StockID
             GROUP BY
               ProjectID) JS
    ON P.ProjectID = JS.ProjectID
  LEFT JOIN JobMachine JP
    ON JP.JobID = P.ProjectID
  LEFT JOIN Linklookup LDT
    ON LDT.Linklookupid = JP.MachineID
  LEFT JOIN Lookup GT
    ON GT.LookupID = LDT.LinkedTo
  LEFT JOIN machineDetails MDS
    ON Jp.EntityID = MDS.EntityID AND MDS.ModelTypeID = JP.MachineID
  LEFT JOIN Linklookup Lo
    ON Lo.Linklookupid = MDS.LetteroppenerID
  LEFT JOIN Linklookup LF
    ON LF.Linklookupid = MDS.FeederType
  LEFT JOIN Linklookup LMT
    ON LMT.Linklookupid = MDS.FolderTypeID
  LEFT JOIN Linklookup LB
    ON LB.Linklookupid = MDS.LabelTypeID
  LEFT JOIN Linklookup LNK
    ON LNK.Linklookupid = MDS.InkCatridgeID
  LEFT JOIN (SELECT *
             FROM
               MachineAddress
             WHERE
               AddressType LIKE 'Physical Address') EAC
    ON EAC.MachineID = MDS.MachineConfigID
  LEFT JOIN (SELECT *
             FROM
               EntityAddress
             WHERE
               AddressType LIKE '%Delivery%') EAD
    ON EAD.EntityID = P.EntityID
  LEFT JOIN (SELECT *
             FROM
               EntityAddress) EAP
    ON E.EntityID = EAP.EntityID AND EAP.EntityAddressID = (SELECT max(EntityAddressID)
                                                            FROM
                                                              EntityAddress
                                                            WHERE
                                                              EntityID = P.EntityID
                                                              AND AddressType LIKE '%Postal%')
  LEFT JOIN Staff PM
    ON PM.StaffID = P.ProjectManagerID
  LEFT JOIN (SELECT *
             FROM
               AccDocumentSetup) DS
    ON P.DivID = DS.DivisionID
  LEFT JOIN AccTaxType TT
    ON TT.TaxTypeID = E.TaxTypeID
WHERE
  P.ProjectID = {projectid}
GROUP BY
  P.ProjectID
, P.ProjectID
, P.TicketID
, P.ProjectName
, E.Accountnum
, E.Company
, E.Company
, E.Vatnum
, EC.Contact
, EC.Contact
, EC.phone1
, EC.Cell
, E.fax
, E.Switchboard
, P.ClientPO
, LD.value
, P.ProjectNotes
, P.CompletionNotes
, PDS.StartDate
, PDE.EndDate
, PS.value
, JT.value
, T.Technician
, M.Manager
, EA.Address1
, EA.Address2
, EA.Address3
, EA.Region
, EA.Code
, EA.City
, EA.Country
, EAD.Address1
, EAD.Address2
, EAD.Address3
, EAD.Region
, EAD.Code
, EAD.City
, EAD.Country
, PriceEx
, EAC.Address1
, EAC.Address2
, EAC.Address3
, EAC.Region
, EAC.Code
, EAC.City
, EAC.Country
, [PriceExStock]
, EAP.Address1
, EAP.Address2
, EAP.Address3
, EAP.Region
, EAP.Code
, EAP.City
, EAP.Country
, MDS.TownDie
, MDS.Instalationdate
, MDS.Guaranteedate
, MDS.RMSDate
, MDS.Serialno
, MDS.CostCentre
, MDS.Valuesettings
, MDS.Options
, MDS.InterfaceScale
, MDS.Licenceno
, lo.value
, lF.value
, LMT.value
, LDT.value
, LB.value
, LNK.value
, GT.value
, MDS.MachineConfigID
, [PriceExLabour]
, JS.PriceEx
, JS.Qty
, JS.TotalIncl
, P.QuoteAccepted
, P.OrderNumber
, P.FullName
, P.SignOffDate
, P.Designation
, P.FNumber
, P.ReleaseDate
, P.DateManufactured
, PM.Firstname
, PM.Surname
, PM.Email
, JS.DiscPerc
, DS.CoRegNo
, DS.VatRegNo
, isnull(DS.ContactDetails, '')
, isnull(DS.Emails, '')
, isnull(DS.Telephone, '')
, isnull(DS.Faxno, '')
, DS.Terms
, DS.Banking
, DS.Footer
, DS.URL
, TT.TaxTypeName
, JA.Address1
, JA.Address2
, JA.Address3
, JA.City
, JA.Code
, JA.Region
, JA.Country","0","","1","LRA-FUSION","0","0","fusion"
"40051","cv_RateCard","","Select {top} rc.RateCardID,rc.RateCardID as '       ',e.Company,p.ProjectName As [Project Name],l.Value As Status,rc.StartDate,rc.EndDate from RateCard rc  left join entity e on  rc.EntityID = e.EntityID  left join projects p on   p.ProjectID = rc.ProjectID  left join lookup l on  l.lookupid = rc.StatusID     {where}","0","","1","LRA-FUSION","0","0","fusion"
"40052","cv_OrderForm","","select 
{top} 
	O.OrderID,
	O.OrderID as [Order Number],
	isnull(EC.Surname,'') + ' '+  isnull(EC.FirstName,'') as [Client Name],
	ISNULL(E.FAX,'') AS [Client Fax],
        ISNULL(EC.Additional3,'') AS [PO Number],
	E.vendorNumber as [Client Policy Number],
	FromCompany as [From Company],
	FromTel as [From Tel],
	FromEmail as [From Email],
	FromFax as [From Fax],
	isnull(Q.firstname,'')+ ' ' + isnull(Q.Surname,'') as [Qantifier],
	case when ISNULL(RI.OrdertemplateID,0) > 0 then 'Yes' Else 'No' end  as [Invetory],
	case when ISNULL(RBV.OrdertemplateID,0) > 0 then 'Yes' Else 'No' end  as [Residential Building Valuation],
	case when ISNULL(RI.OrdertemplateID,0) > 0 then 'Yes' Else 'No' end  as [Vehicle Inspections],
	case when ISNULL(RD.OrdertemplateID,0) > 0 then 'Yes' Else 'No' end  as [Domestic Risk],
	case when ISNULL(RHSS.OrdertemplateID,0) > 0 then 'Yes' Else 'No' end  as [High Security Survey],
	case when ClaimPostLoss = 1 then 'Yes' Else 'No' end  as [Claim (Post Loss)],
	E.vendornumber as [Policy Number],
	EA.[Address],
	ClientContactTellH as [Contact Tell(H)],
	ClientContactTelW as [Contact Tel (W)],
	ClientContactEmail as [Contact Email],
	ClientContactCell as [Contact Cell],
	UnderWriterName as [UnderWriter Name],
	BrokerName as [Broker],
	ContentsSumInsured as [Contents Sum Insured],
	SpecifiedInsuredAmount as [Specified Insured Amount],
	UnspecifiedInsuredAmount as [Unspecified Insured Amount],
	case when presenceofValuable = 1 then 'Yes' Else 'No' end as [Presence of Valuable],
	CurrentHouseowners as [Current House Owners],
	InsuredVehicleRegNos as [Insured Vehicle Reg. No's],
	Reason as [Reason for Survey Request],
	SpecialInstructions as [Special Instructions],
	PartyName as [Party Name],
	PartyTel as [Party Tel],
	PartyPostal1 as [Party Postal 1],
	PartyPostal2 as [Party Postal 2],
	PartyPostal3 as [Party Postal 3],
	PartyCity as [Party City],
	PartyRegion as [Party Region],
	PartyCode as [Party Code],
	PartyCountry as [Party Postal Country],
	PartyEmail as [Party Email],
	PartyVatNo as [Party Vat No],
	PartyCell as [Party Cell],
	T.[Value] as [Order Type],
	S.[Value] as [Order Status],
	convert(varchar,O.DateAdded,111) as [Order Date],
	convert(varchar,O.DateReceived,111) as [Date Received],
	convert(varchar,O.DateModified,111) as [Last updated Date],
	case 
		when 
			isComplete = 1 
		then 
			convert(varchar,O.DateCompleted,111)
		else 
			'' 
	end as [Date Completed],
	isnull(CB.Surname,'') + ' '+  isnull(CB.FirstName,'') as [Added by],
	isnull(MB.Surname,'') + ' '+  isnull(MB.FirstName,'') as [Modified by]
from orderform O
LEFT JOIN EntityContact EC ON EC.EntityContactID = O.ClientID
LEFT JOIN Entity E ON E.EntityID = EC.EntityID
LEFT JOIN (
SELECT DISTINCT
	EntityAddressID,
	ISNULL(Address1,'')
	+ISNULL(' '+ Address2,'')
	+ISNULL(' '+ Address3,'')
	+ISNULL(' '+ City,'')
	+ISNULL(' '+ Region,'')
	+ISNULL(' '+ Code,'')
	+ISNULL(' '+ Country,'') as [Address],
	ISNULL(City,'') as [City]
FROM EntityAddress )  EA ON EA.EntityAddressID = O.EntityAddressID
LEFT JOIN (select LookupID,Value from lookup) S ON LookupID = OrderStatus
LEFT JOIN (SELECT * FROM Ordertemplates WHERE RiskTemplateID IN (SELECT RiskTemplateID FROM Risk_Template WHERE TemplateName = 'INVENTORY')) RI
	ON RI.OrderID = O.OrderID
LEFT JOIN (SELECT * FROM Ordertemplates WHERE RiskTemplateID IN (SELECT RiskTemplateID FROM Risk_Template WHERE TemplateName = 'RESIDENTIAL BUILDING VALUATION')) RBV
	ON RBV.OrderID = O.OrderID
LEFT JOIN (SELECT * FROM Ordertemplates WHERE RiskTemplateID IN (SELECT RiskTemplateID FROM Risk_Template WHERE TemplateName = 'VEHICLE INSPECTION')) RVI
	ON RVI.OrderID = O.OrderID
LEFT JOIN (SELECT * FROM Ordertemplates WHERE RiskTemplateID IN (SELECT RiskTemplateID FROM Risk_Template WHERE TemplateName = 'DOMESTIC RISK')) RD
	ON RD.OrderID = O.OrderID
LEFT JOIN (SELECT * FROM Ordertemplates WHERE RiskTemplateID IN (SELECT RiskTemplateID FROM Risk_Template WHERE TemplateName = 'HIGH SECURITY SURVEY ')) RHSS
	ON RHSS.OrderID = O.OrderID
LEFT JOIN staff Q ON SurveyorID =	Q.staffID
LEFT JOIN Users CB ON O.Addedby =	CB.UserID
LEFT JOIN Users MB ON O.Addedby =	MB.UserID
LEFT JOIN (
SELECT 1 as [ID] , 'Web' as [Value]

UNION ALL

SELECT 2 as [ID] , 'Manual' as [Value] ) T ON ID = OrderType

{where}","0","","1","LRA-FUSION","0","0","fusion"
"40053","cv_Acc_Payroll_Report","","SET NOCOUNT ON

DECLARE @i					as int
DECLARE @squery1			as varchar(8000)
DECLARE @ID					as int

/********************************************************************************************************************************
Dynamically build up a temporary table with all info required to build a payroll report
********************************************************************************************************************************/
IF OBJECT_ID(N'tempdb..##TempColumns', N'U') IS NOT NULL 
BEGIN
	DROP TABLE ##TempColumns;
END
CREATE TABLE ##TempColumns
(Ranking int Identity(1,1),
StockID INT,
StockDescription Varchar(2000),
IsDeduction BIT,
Amount MONEY
)

INSERT INTO ##TempColumns
SELECT Distinct StockID, StockDescription, IsDeduction,Amount
FROM (
	SELECT PE.StockID, STK.StockDescription, 0 as [IsDeduction],Sum(Amount) as [Amount] FROM AccPayrollEarnings PE
	LEFT JOIN (SELECT stockID, StockDescription From AccStock) STK
	ON PE.StockID = STK.StockID
	WHERE isnull(PE.StockID,0) <> 0 
	Group By PE.StockID, STK.StockDescription
	UNION ALL
	SELECT PD.StockID, STK.StockDescription, 1 as [IsDeduction],Sum(Amount) as [Amount] FROM AccPayrollDeductions PD
	LEFT JOIN (SELECT stockID, StockDescription From AccStock) STK
	ON PD.StockID = STK.StockID
	Group By PD.StockID, STK.StockDescription
	)A
ORDER BY IsDeduction, Amount Desc


IF OBJECT_ID(N'tempdb..##TempPayroll', N'U') IS NOT NULL 
BEGIN
	DROP TABLE ##TempPayroll;
END
CREATE TABLE ##TempPayroll 
(DocID INT,
Division varchar(500),
[Date Paid] Varchar(20),
[Staff Name] varchar(200),
[EARNINGS:] varchar(10))

--Add earnings columns
SET @i = 0
WHILE @i <= (SELECT max(Ranking) FROM ##TempColumns WHERE isDeduction = 0)
BEGIN
	SET @i = (SELECT min(Ranking) FROM ##TempColumns WHERE Ranking > @i and isDeduction = 0)
	SET @squery1 = 'Alter Table ##TempPayroll ADD [' +  (SELECT Top 1 StockDescription From ##TempColumns WHERE Ranking = @i) + '] MONEY'
	Exec (@squery1)
	--SET @i = @i + 1
END
Alter Table ##TempPayroll ADD [TOTAL SALARY] MONEY
Alter Table ##TempPayroll ADD [TOTAL TAXABLE] MONEY

--Add deductions columns
Alter Table ##TempPayroll ADD [DEDUCTIONS:] varchar(10)
SET @i = 0
WHILE @i <= (SELECT max(Ranking) FROM ##TempColumns WHERE isDeduction = 1)
BEGIN
	SET @i = (SELECT min(Ranking) FROM ##TempColumns WHERE Ranking > @i and isDeduction = 1)
	SET @squery1 = 'Alter Table ##TempPayroll ADD [ ' +  (SELECT Top 1 StockDescription From ##TempColumns WHERE Ranking = @i) + '] MONEY'
	Exec (@squery1)
	--SET @i = @i + 1
END
Alter Table ##TempPayroll ADD [TOTAL DEDUCTED] MONEY
Alter Table ##TempPayroll ADD [TOTAL PAYABLE] MONEY

INSERT INTO ##TempPayroll(DOCID,[Date Paid],[Staff Name],Division)
SELECT DocID, convert(varchar,DatePaid,111), S.[StaffName], L.Value FROM AccPayroll P
LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'')  as [StaffName] FROM Staff) S
ON P.StaffID = S.StaffID
LEFT JOIN (SELECT * FROM Lookup) L
ON P.DivisionID = L.LookupID

/********************************************************************************************************************************
Dynamically update the temporary table with all info required to build a payroll report
********************************************************************************************************************************/
--Earnings
SET @ID  = (SELECT min(EarningID) FROM AccPayrollEarnings)
WHILE @ID <= (SELECT max(EarningID) FROM AccPayrollEarnings)
BEGIN
	SET @squery1 = (SELECT 'UPDATE ##TempPayroll SET [' + STK.StockDescription + '] = ' + Convert(varchar,Amount) + 
	', [TOTAL SALARY] = isnull([TOTAL SALARY],0) + ' + Convert(varchar,Amount) +
	', [TOTAL TAXABLE] = isnull([TOTAL TAXABLE],0) + ' + CASE WHEN isnull(TaxableValue,0) <> 0 THEN Convert(varchar,TaxableValue) ELSE Convert(varchar,Amount * (isnull(TaxablePercentage,0) / 100)) END  +
	', [TOTAL PAYABLE] = isnull([TOTAL PAYABLE],0) + ' + Convert(varchar,Amount) +
	' WHERE DocID = ' + convert(varchar,DocID) FROM AccPayrollEarnings PE 
	LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK
	ON PE.StockID = STK.StockID
	WHERE EarningID = @ID)
	EXEC (@squery1)
	SET @ID = (SELECT min(EarningID) FROM AccPayrollEarnings WHERE EarningID > @ID)
END

--Deductions
SET @ID  = (SELECT min(DeductionID) FROM AccPayrollDeductions)
WHILE @ID <= (SELECT max(DeductionID) FROM AccPayrollDeductions)
BEGIN
	SET @squery1 = (SELECT 'UPDATE ##TempPayroll SET [ ' + STK.StockDescription + '] = ' + Convert(varchar,Amount) + 
	', [TOTAL DEDUCTED] = isnull([TOTAL DEDUCTED],0) + ' + Convert(varchar,Amount) +
	', [TOTAL PAYABLE] = isnull([TOTAL PAYABLE],0) - ' + Convert(varchar,Amount) +
	' WHERE DocID = ' + convert(varchar,DocID) FROM AccPayrollDeductions PE 
	LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK
	ON PE.StockID = STK.StockID
	WHERE DeductionID = @ID)
	EXEC (@squery1)
	SET @ID = (SELECT min(DeductionID) FROM AccPayrollDeductions WHERE DeductionID > @ID)
END

SELECT * FROM ##TempPayroll
{where}
ORDER BY [Date Paid], [Staff Name]

SET NOCOUNT OFF
","0","","1","LRA-FUSION","0","0","fusion"
"40054","cv_ACC_Print_Cost_Estimate_CommentShow","","declare @DocID as int
Declare @CommentsBelow as bit
Declare @Currency as varchar(20)
Declare @ROE as float
set @DocID = {docid}
Set @CommentsBelow  =  (SELECT Top 1 isnull(Selected,0) from crmSetup where variable = 'CommentsBelow')
SET @Currency = {currency}
SET @ROE = {roe}

--Normal selection
/*SELECT  [Stock Code] as [CODE],[DESCRIPTION], 
Case when (isnull([Comments],'') <> '') and ([Comments] not like '<col-grey>') then ': ' + Char(10) + isnull([Comments],'') else '' end as [Description],
[COMMENTS] ,QTY,  [PRICE EX.],  [TOTAL EX.] */
--Normal selection with comments below
SELECT  [Stock Code] as [CODE],[DESCRIPTION], QTY,  [PRICE EX.],  [TOTAL EX.] 
--Lapp Kabel selection
--SELECT [Stock Code] as [PART NUMBER], [DESCRIPTION+SPEC] as [QUOTATION LINE ITEM DESCRIPTION AND DETAILS],[DeliveryTerms] as [DELIVERY TERMS], [COPPER WEIGHT],[TOTAL WEIGHT], QTY, [PRICE EX.] as [GROSS PRICE EX.],[DISCOUNT] as [DISC],[Nett] as [NETT PRICE],  [TOTAL EX. DISC] as [TOTAL EX.]

FROM    (

    --Select Main items
    SELECT convert(varchar,lineid) + 'M'  as [LineID],CED.GroupName as [Group],ProjectName as [Project],CED.StockCode as [Stock Code],
    CASE WHEN isnull(CED.Comments,'') <> '' AND  @CommentsBelow = 1 THEN CED.StockDescription + ':' + char(13) + CED.Comments ELSE CED.StockDescription END as [Description],
    CED.StockDescription + isnull(char(10) + STK.Specifications,'') as [Description+Spec], 
    Comments,Company as [Supplier],
    convert(varchar,cast((isnull(STK.Weight,0) /1000) * CED.Qty  as money),1) as [Total Weight],
    convert(varchar,Qty) as [Qty],convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
    CEM.Currency + ' ' + dbo.fnFormatNumber(CED.CostPriceEx ) as [Cost Ex.],
    isnull(@Currency,CEM.Currency) + ' ' + dbo.fnFormatNumber(PriceEx /@ROE ) as [Price Ex.],  
    isnull(@Currency,CEM.Currency) + ' ' + dbo.fnFormatNumber(PriceEx * qty /@ROE) as [Total Ex.],
    isnull(@Currency,CEM.Currency) + ' ' + dbo.fnFormatNumber(PriceEx * qty  * ((100 - isnull(discperc,0)) /100) /@ROE) as [Total Ex. Disc],
    isnull(@Currency,CEM.Currency) + ' ' + dbo.fnFormatNumber(PriceEx * ((100 - isnull(discperc,0)) /100) /@ROE ) as [Nett],
    SM.DeliveryTerms, 
    Rank, -1000 as [Rank2], rCED.[GroupRank],
    '' as [customer item number]
    FROM Cost_Estimate_Detail  CED
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON CED.ProjectID = P.projectID
    LEFT JOIN AccStock STK ON CED.StockID = STK.StockID
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT ShippingDocID, DeliveryTerms FROM Shipping_Master ) SM ON CED.ShippingDocID = SM.Shippingdocid
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    where isnull(ComponentOfLineID,0)  = 0
    AND CED.DocID = @DocID
 
    UNION ALL 

       SELECT distinct convert(varchar,lineid) + 'M'  as [LineID],
    DD.GroupNAme, '' as [Project],'' as [Stock Code], isnull(Specifications,'') as [Description],null,
     NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
    Rank , -999 as [Rank2] , rCED.[GroupRank], null
    FROM Cost_Estimate_Detail DD
    LEFT JOIN (SELECT DocID , ROE FROM Cost_Estimate_Master ) DM
    ON DD.DocID = DM.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON DD.GroupName = rCED.GroupName AND DD.DocID = rCED.DocID 
    Left Join (select Specifications ,StockID from AccStock) ACS ON ACS.StockID = DD.StockID  
    WHERE DD.DocID = @docid
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(specifications,''))) <> ''
    and  isnull(ComponentOfLineID,0)  = 0

    UNION ALL
    
    --Select component items
    SELECT convert(varchar,lineid) + 'C'  as [LineID], (SELECT Top 1 GroupName From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) as [Group],null as [Project], '-    ' + CED.StockCode as [Stock Code], '-    ' + CED.StockDescription as [Description],  '-    ' + CED.StockDescription as [Description+Spec], Comments,Company as [Supplier],
    convert(varchar,cast((isnull(STK.Weight,0) /1000) * CED.Qty as money),1) as [Total Weight],
    convert(varchar,Qty),convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
    isnull(@Currency,CEM.Currency) + ' ' + dbo.fnFormatNumber(CED.CostPriceEx / @ROE) as [Cost Ex.],
    '' as [Price Ex.],
    '' as [Total Ex.], 
    '' as [Total Ex. Disc], 
    '' as [Nett], 
    null as [DeliveryTerms],
     (SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2], rCED.[GroupRank], '' as [customer item number]
    FROM Cost_Estimate_Detail CED
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN AccStock STK ON CED.StockID = STK.StockID
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    where isnull(ComponentOfLineID,0)  > 0
    AND CED.DocID = @DocID
    AND isnull((select selected from crmSetup where Variable like 'PrintComponents'),0) = 1

    UNION ALL

    SELECT distinct convert(varchar,lineid) + 'C'  as [LineID],
    (SELECT Top 1 GroupName From Cost_Estimate_Detail Where LineID = DD.ComponentOfLineID), '' as [Project],'' as [Stock Code], '' as [Code],'-      ' + Comments as [Description],
    NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
    (SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = DD.ComponentOfLineID) ,Rank + 1 as [Rank2], rCED.[GroupRank], '<col-grey>' as [customer item number]
    FROM Cost_Estimate_Detail DD
    LEFT JOIN (SELECT DocID , ROE FROM Cost_Estimate_Master ) DM
    ON DD.DocID = DM.DocID 
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON DD.GroupName = rCED.GroupName AND DD.DocID = rCED.DocID
    WHERE DD.DocID = @docid
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
    and  isnull(ComponentOfLineID,0)  > 0

    UNION ALL

    --Select Groups
    SELECT Distinct null, isnull(CED.GroupName, 'Not Specified'), '<col-grey>', '<col-grey>' + '<B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>' ,  '<col-grey>','<col-grey>', '<col-grey>', '<col-grey>','<col-grey>',
    '<col-grey>',
    '<col-grey>', '<col-grey>', '<col-grey>', 
    '<col-grey><B>' + isnull(@Currency,CEM.Currency) + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty) / @ROE)  + '</B>' as [Total Ex.],
    '<col-grey><B>' + isnull(@Currency,CEM.Currency) + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) / @ROE )  + '</B>' as [Total Ex. Disc],
    '<col-grey><B>' + isnull(@Currency,CEM.Currency) + ' ' + dbo.fnFormatNumber(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) / @ROE )  + '</B>' as [Nett],
    '<col-grey>' as [DeliveryTerms],
    isnull(min(Rank),0),-2000, rCED.[GroupRank], '<col-grey>' as [customer item number]
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    WHERE CED.DocID = @DocID
    AND isnull(ComponentOfLineID,0)  = 0
    GROUP BY CED.GroupName,CEM.Currency , rCED.[GroupRank]
    
   

    UNION ALL
    
    --Select Summary info
    SELECT null,'<col-grey>', '<col-grey>', '<col-grey><B>SUMMARY:</B>', '<col-grey>',  '<col-grey>', '<col-grey>','<col-grey>','<col-grey>', '<col-grey>','<col-grey>', '<col-grey>', '<col-grey>','<col-grey>',  
    '<col-grey>','<col-grey>','<col-grey>',
    9999999999999998,9999999999999998,9999999999999998, '<col-grey>' as [customer item number]

    UNION ALL

    --Select Summary info
    SELECT Distinct null, '<col-grey>', '<col-grey>','<col-grey><B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>', '<col-grey>',  '<col-grey>','<col-grey>', '<col-grey>','<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>',
    '<col-grey><B>' + isnull(@Currency,CEM.Currency) + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty) / @ROE )  + '</B>' as [Total Ex.],
    '<col-grey><B>' + isnull(@Currency,CEM.Currency) + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty  * ((100 - isnull(discperc,0)) /100)) / @ROE)  + '</B>' as [Total Ex.],
    '<col-grey><B>' + isnull(@Currency,CEM.Currency) + ' ' + dbo.fnFormatNumber(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) / @ROE )  + '</B>' as [Nett],
    '<col-grey>',
    9999999999999999,9999999999999999,9999999999999999, '<col-grey>' as [customer item number]
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    WHERE CED.DocID = @DocID
    AND isnull(ComponentOfLineID,0)  = 0
    GROUP BY CED.GroupName,CEM.Currency, rCED.[GroupRank] 
    ) A 
--group by lineID,[Group],Rank,Rank2,[Stock Code],[DESCRIPTION+SPEC],DeliveryTerms,[COPPER WEIGHT],[TOTAL WEIGHT],QTY,[PRICE EX.],DISCOUNT,Nett,[TOTAL EX. DISC],GroupRank

ORDER BY [GroupRank] , Rank,Rank2 ","0","","1","LRA-FUSION","0","0","fusion"
"40055","qf_contacts_entityid","","select c.entitycontactid, 
ltrim(isnull(c.firstname,'')+' '+isnull(c.surname,'')) as [Contact],
e.Company
from entitycontact c
left join entity e on e.entityid = c.entityid
where isnull(c.firstname,'')+' '+isnull(c.surname,'') like '%<%replace%>%'
 and e.EntityID = %<entityid>%
order by ltrim(isnull(c.firstname,'')+' '+isnull(c.surname,'')), e.company

","0","","1","LRA-FUSION","0","0","fusion"
"40056","cv_developer_tasks_project","","SELECT 
	CAL.ClientActivityListID,
	LS.Value as [Status],
	CASE WHEN ISNULL(CAL.isCompleted,0) = 1 THEN 'Yes' ELSE 'No' END as [Completed],
	E.Company, 
	P.ProjectName as [Project],
	CAL.GeneralDescription as [Description],
	PR.PriorityType as [Priority],
	O.Owner,
	[Assigned To],
	Convert(varchar,DateIssued,111) + ' ' + Convert(varchar,DateIssued,108) as [Date Issued],
	Convert(varchar,DateDue,111) + ' ' + Convert(varchar,DateDue,108) as [Due Date],
	Convert(varchar,DateFollowUp,111) + ' ' + Convert(varchar,DateFollowUp,108) as [Follow-Up Date],
	Escalation,
	sum(isnull(CALI.EstimatedHours,0)) as [Est. Hrs.],
	(isnull(cast(compActCount as float),0) / isnull(cast(ActCount as float),1) ) * 100 as [Progress]
FROM ClientActivityList CAL
LEFT JOIN (SELECT ProjectID, EntityID, ProjectName FROM Projects) P
	ON CAL.ProjectID = P.ProjectID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
	ON P.EntityID = E.EntityID
LEFT JOIN (SELECT * FROM Priority) PR
	ON CAL.PriorityID = PR.PriorityID
LEFT JOIN (SELECT * FROM Lookup) LS
	ON CAL.StatusID = LS.LookupID
LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(Surname,'') As [Owner] FROM Users) O
	ON CAL.OwnerID= O.UserID
LEFT JOIN (SELECT * FROM ClientActivityListItem ) CALI
	ON CAL.ClientActivityListID = CALI.ClientActivityListID
LEFT JOIN Modules M ON M.ModuleID = CALI.ModuleID
LEFT JOIN (SELECT count(ClientActivityListItemID) as [ActCount],ClientActivityListID FROM ClientActivityListItem Group by ClientActivityListID) CAC
	ON CAL.ClientActivityListID = CAC.ClientActivityListID
LEFT JOIN (SELECT count(ClientActivityListItemID) as [CompActCount],ClientActivityListID FROM ClientActivityListItem WHERE isnull(IsComplete,0) = 1 Group by ClientActivityListID) CACC
	ON CAL.ClientActivityListID = CACC.ClientActivityListID
--Last person assigned
LEFT JOIN (SELECT ClientActivityListID, max(AssignedTo) as [AssignedTo], max(ClientActivityListID) as [Most] FROM ClientActivityListItem Group By ClientActivityListID ) CALIAss
	ON CALI.ClientActivityListID = CALIAss.ClientActivityListID
LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(Surname,'') As [Assigned To] FROM Users) AO
	ON CALIAss.AssignedTo= AO.UserID
{where}
GROUP BY 
CAL.ClientActivityListID,E.Company,P.ProjectName,PR.PriorityType,LS.Value,O.Owner,CAL.DateIssued,CAL.DateDue,CAL.DateFollowUp,CAL.Escalation,
(isnull(cast(compActCount as float),0) / isnull(cast(ActCount as float),1) ) * 100,
[Assigned To],CAL.GeneralDescription , CAL.isCompleted
","0","","1","LRA-FUSION","0","0","fusion"
"40057","cv_canvastypes_MOComms","","select m.MOCommid, m.[MOComm], isnull(em.MOCommid,0) as assigned
from MOComm m
left join (select MOCommid from canvasMOComm where CanvasID=<%CanvasID%>) em on m.MOCommid = em.MOCommid
order by m.[MOComm] desc
","0","","1","LRA-FUSION","0","0","fusion"
"40058","cv_canvastypes_contacttypes","","select ct.contacttypeid, ct.[contacttype], isnull(eg.contacttypeid,0) as assigned
from contacttypes ct
left join (select contacttypeid from canvastypes where CanvasID=<%CanvasID%>) eg on ct.contacttypeid = eg.contacttypeid
order by ct.[contacttype] desc","0","","1","LRA-FUSION","0","0","fusion"
"40059","cv_Loggin_report","","select 
ID,
S.Firstname,
S.Surname ,
CONVERT(VARCHAR(10), [Date], 111) as [Date Logged In],
CONVERT(VARCHAR(10), [Date], 108) as [Time Logged In]
from Loggin_report LR
Left Join Users U ON U.UserID = LR.UserID
Left Join Staff S ON U.StaffID = S.StaffID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40060","cv_ticket_summary","","SELECT 
	ISNULL([Ticket No],'') AS [{ticketno}],
	ISNULL([Date Captured],'') + ' ' + ISNULL([Time Captured],'') AS [{datecaptured}],
	ISNULL([Logged By],'') AS [{loggedby}],
	ISNULL([Assigned To],'') AS [{assignedto}],
	ISNULL([Company],'') AS [{client}],
	ISNULL([subcompany] , '') AS [{company}],
        ISNULL([subcontact],'') AS [{companycontact}],
	ISNULL([Call Type],'') AS [{type}],
	ISNULL([Current Status],'') AS [{status}],
	ISNULL([Severity],'') AS [{severity}],
	ISNULL([Problem Type],'') AS [{problemdetails}],
	ISNULL([Client Order Number],'') AS [{ClientPO}],
	ISNULL(Switchboard,'') AS [{Switchboard}],
	ISNULL([Dispatch Date/Time],'') AS [{Dispatch}],
	ISNULL([Arrival Time],'') AS [{Arrival}],
	ISNULL([Serial Number],'') AS [{serialnumber}],
	--[Problem Details],
	ISNULL([Contact],'') AS [{contact}],
	ISNULL([Contact],'') AS [{contact1}],
	ISNULL(Branch,'') AS [{Branch}],
	CASE WHEN ISNULL(isTicketLocation,0) = 1 THEN [TicketAddress] ELSE ISNULL([address],'') END AS [{address}],
	ISNULL(MachineType,'') AS [{machinetype}],
	ISNULL(Model,'')  AS [{model}],
	ISNULL(StockCode,'') AS [{stockcode}],
	ISNULL(DateCaptured,'') AS [{starttime}],
	ISNULL(DateCompleted,'') AS [{endtime}],
	ISNULL(tMessage,'') AS [{problemdetails2}],
	ISNULL(tResults,'') AS [{resolutiondetails}],
	ISNULL(Reference,'') AS [{Reference1}],
	ISNULL(Reference,'') AS [{Reference}],
	ISNULL([Account Number],'') AS [{accno}],
	ISNULL([Print date],'') AS [{Printdate}],
	ISNULL([Fax Number],'') AS [{fax}],
	ISNULL([EMail],'') AS [{email}],
	ISNULL([TicketType],'') AS [{tickettype}],
	ISNULL([Problem Type],'') AS [{problemtype}],
	ISNULL([ResolutionType],'') AS [{resolutiontype}],
	ISNULL([Division],'') AS [{division}],
	ISNULL([ReminderDateTime],'') AS [{reminderdatetime}],
	ISNULL([EstimatedCost],'') AS [{estimatedcost}],
	ISNULL((SELECT DATEDIFF(hour,DateCaptured,DateCompleted)),'') AS [{duration}],
	ISNULL([Supplier],'') AS [{supplier}],
	ISNULL([suppliercontact],'') AS [{suppliercontact}]
FROM (
Select
	LM.Value AS MachineType,
	LLM.Value AS Model,
	T.ticketID,
	tResults,
	tMessage,
	T.TicketID AS [Ticket No],
	Convert(Varchar,getdate(),111) AS [Print date],
	Convert(Varchar,DateCaptured,111) AS [Date Captured],
	Convert(Varchar,DateCaptured,108) AS [Time Captured],
	isnull(lb.Firstname,'') + ' ' + isnull(lb.Surname,'') AS [Logged By],
	isnull(u.Firstname,'') + ' ' + isnull(u.Surname,'') AS [Assigned To],
	E.Company,
        HE.Company AS [subcompany],
	(		 select ISNULL(FirstName,'') + ' ' + ISNULL(Surname,'') from EntityContact 
        where EntityContactID = (
            select 
                Top 1 EntityContactID 
            from TicketContacts tc
            where ticketID = T.ticketID  AND tc.IsHolding = 1
            )
        ) AS [subcontact],
	CallType AS [Call Type],
	LSeverity.Value AS [Severity],
	LStatus.Value AS [Current Status],
	--tStatus AS [Current Status],
	ProbType AS [Problem Type],
	convert(varchar,P.JobNo) + ' : ' + 'ProjectName' AS [Job],
	T.DateCaptured,
	T.DateCompleted,
	T.DispatchDate,
	T.ClientPO AS [Client Order Number],
	E.Switchboard,
	E.vendornumber AS [Branch],
	E.AccountNum AS [Branch Code],
	DispatchDate AS [Dispatch Date/Time],
	ArrivalDate AS [Arrival Time],
	s.StockCode,
	T.SerialNum AS [Serial Number],
	E.accountnum AS [Account Number],
	E.Fax AS [Fax Number],
	E.Email AS [EMail],
	LT.Value AS [TicketType],
	LResolutionType.Value AS [ResolutionType],
	LDivisions.Value AS [Division],
	ReminderDateTime AS [ReminderDateTime],
	EstimatedCost AS [EstimatedCost],
	ESupplier.Company AS [Supplier],
	(
	ISNULL((select top 1 
	COALESCE(Address1 + ', ','') + 
	COALESCE(Address2 + ', ','') + 
	COALESCE(Address3 + ', ','') + 
	COALESCE(City + ', ','') + 
	COALESCE(Region + ', ','') + 
	COALESCE(Code + ', ','') +
	COALESCE(Country + '','')
	FROM EntityAddress EA 
	WHERE EA.EntityID = E.EntityID 
	AND AddressType like '%physical%' AND IsDefault = 1),
	(SELECT Top 1 COALESCE(Address1 + ', ','') + COALESCE(Address2 + ', ','') + COALESCE(Address3 + ', ','') 
	+ COALESCE(City + ', ','') + COALESCE(Region + ', ','') + COALESCE(Code + '','')
	FROM EntityAddress EA 
	WHERE EA.EntityID = E.EntityID 
	AND AddressType like '%physical%'))
	) AS [address],
	(SELECT top 1 ISNULL(FirstName,'') + ' ' + ISNULL(Surname,'')FROM EntityContact WHERE EntityID = ESupplier.EntityID) AS [suppliercontact],
	(SELECT ISNULL(FirstName,'') + ' ' + ISNULL(Surname,'') FROM EntityContact WHERE EntityContactID = 
	(SELECT Top 1 EntityContactID FROM TicketContacts WHERE ticketID = T.ticketID)) AS [Contact],
	Reference,
	ISNULL(isTicketLocation,0) AS [isTicketLocation],
	ISNULL(TicketAddress,'') AS [TicketAddress]
FROM Tickets T
LEFT JOIN (SELECT EntityID,Company,Switchboard ,Fax ,Email ,AccountNum ,vendornumber FROM Entity ) E 
	ON E.EntityID = T.EntityID
LEFT JOIN (SELECT EntityID,Company,Switchboard ,Fax ,AccountNum ,vendornumber FROM Entity ) ESupplier 
	ON ESupplier.EntityID = T.SupplierID
LEFT JOIN (SELECT UserID,FirstName,Surname FROM Users ) LB 
	ON lb.UserID = T.LogByID 
LEFT JOIN (SELECT UserID,FirstName,Surname FROM Users ) U 
	ON u.UserID = T.UserID
LEFT JOIN (SELECT lookupid,value FROM lookup WHERE class LIKE 'StockType') LM 
	ON T.StockTypeID = LM.LookupID
LEFT JOIN (SELECT lookupid,value FROM lookup WHERE class LIKE 'divisions') LDivisions 
	ON T.DivID = LDivisions.LookupID
LEFT JOIN (SELECT lookupid,value FROM lookup WHERE class LIKE 'ResolutionType') LResolutionType 
	ON T.ResolutionType = LResolutionType.LookupID
LEFT JOIN (SELECT lookupid,value FROM lookup WHERE class LIKE 'TicketType') LT 
	ON T.TicketType = LT.LookupID
LEFT JOIN (SELECT lookupid,value FROM lookup WHERE class LIKE 'ticketseverity') LSeverity 
	ON T.SeverityID = LSeverity.LookupID
LEFT JOIN (SELECT lookupid,value FROM lookup WHERE class LIKE 'TicketStatus') LStatus 
	ON T.tStatus = LStatus.LookupID
LEFT JOIN (SELECT LinkLookupID,Value FROM LinkLookup WHERE class LIKE 'StockSubType') LLM 
	ON SubStockTypeID = LLM.LinkLookupID
LEFT JOIN (SELECT lookupid,value FROM lookup) LD 
	ON T.DivID = LD.LookupID
LEFT JOIN (SELECT StockID, StockCode,StockDescription FROM AccStock) S 
	ON S.StockID = T.StockID
LEFT JOIN (SELECT max(ProjectID) AS [JobNo], TicketID AS [TickID] FROM Projects GROUP BY TicketID) P 
	ON T.TicketID = P.TickID
LEFT JOIN (SELECT EntityID,Company FROM Entity)HE ON HE.EntityID = T.AddEntityID
LEFT JOIN (SELECT ProjectName, ProjectID FROM Projects) PN 
	ON P.JobNo = PN.ProjectID
LEFT JOIN (
SELECT 	
	COALESCE(Address1 + ', ','') + 	
	COALESCE(Address2 + ', ','') + 	
	COALESCE(Address3 + ', ','') + 	
	COALESCE(City + ', ','') + 	
	COALESCE(Region + ', ','') + 	
	COALESCE(Code + ', ','') +	
	COALESCE(Country + '','') AS [TicketAddress],
	isTicketLocation,TicketID
FROM TicketAddress where ISNULL(isTicketLocation,0) = 1) TA 
	ON TA.TicketID = T.TicketID
) A 
WHERE A.ticketID = {ticketID}","0","","1","LRA-FUSION","0","0","fusion"
"40061","cv_appt_summary","","SELECT 
	DATE AS [{datecaptured}],
	E.Company AS [{client}],
	ISNULL(S.Firstname,'')+ ' ' + ISNULL(S.Surname,'') AS [{AssignedTo}],
	ISNULL(A.[Subject],'') AS [{subject}],
	ISNULL(A.Location,'') AS [{location}],
	ISNULL(A.[Notes],'') AS [{notes}],
	ISNULL(Actions,'') AS [{report}],
    CONVERT(VARCHAR, A.[Date], 111) AS [{date}],
	CONVERT(VARCHAR, A.[Date], 108) AS [{time}],
	CONVERT (VARCHAR, GETDATE(),  111) AS [{datenow}]
FROM appointment A
LEFT JOIN Entity E ON E.EntityID = A.EntityID
LEFT JOIN Users U ON U.userID = A.ForUserID
LEFT JOIN Staff S ON S.StaffID = U.StaffID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40062","cv_SMSBatch_Man","","SELECT
	SB.SMSBatchID,
	E.Company,
	ISNULL(EC.Firstname, '') + ' ' + ISNULL(EC.Surname, '') as [Contact],
	EC.Cell
FROM SMSBatch SB
LEFT JOIN EntityContact EC ON EC.EntityContactID = SB.EntityContactID
LEFT JOIN Entity E ON E.EntityID = EC.EntityID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40063","qf_ContactsCells","","select 
	c.entitycontactid, 
	ltrim(isnull(c.firstname,'')+' '+isnull(c.surname,'')) as [Contact],
	e.Company, 
	C.Cell
from entitycontact c
left join entity e on e.entityid = c.entityid
where isnull(c.firstname,'')+' '+isnull(c.surname,'') like '%<%replace%>%'
order by ltrim(isnull(c.firstname,'')+' '+isnull(c.surname,'')), e.company","0","","1","LRA-FUSION","0","0","fusion"
"40064","cv_SMSPortal_Man","","SELECT 
	SMS.SMSID,
	E.Company,
	ISNULL(EC.FirstName,'') + ' ' + ISNULL(EC.Surname, '') as [Contact],
	CONVERT(VARCHAR, DateCreated, 111) as [Date],
	CONVERT(VARCHAR, DateCreated, 108) as [Time],
	CASE WHEN ISNULL(SMS.IsReply,0) = 0 THEN 'Sent' ELSE 
		Case WHEN ISNULL(SMS.IsRead,0) = 0 THEN 'Received [Unread]'
		ELSE 'Received' END
	END as [Message Direction],
	CASE WHEN SentBy = 0 THEN 
		'Retrieved from SMSPortal'
	ELSE
		ISNULL(U.Firstname, '') + ' ' + ISNULL(U.Surname, '') 
	END as [Sent By],
	SMS.[Message]
FROM EntityContactSMS SMS
LEFT JOIN EntityContact EC ON EC.EntityContactID = SMS.EntityContactID 
LEFT JOIN Entity E ON E.EntityID = EC.EntityID
LEFT JOIN Users U ON U.UserID = SMS.SentBy
LEFT JOIN EntityGroup EG on EG.EntityID = E.EntityID
{where}
{orderby}","0","","1","LRA-FUSION","0","0","fusion"
"40065","cv_Risk_Bill_Template_Man","","SELECT BillTemplateID, TemplateName as [Template], convert(varchar,Validfrom,111) as [Valid From],
convert(varchar,Validto,111) as [Valid To]
FROM Risk_Bill_Template
{where}
ORDER BY ValidFrom Desc","0","","1","LRA-FUSION","0","0","fusion"
"40066","cv_Print_Risk_quote","","SELECT 
	convert(nvarchar,getdate(),110) as [<date>],
	ClientName AS [<client>],
	isnull(EC.firstname,'') + ' ' + isnull(EC.Surname,'') AS [<requested>],
	isnull(ContactTel,'') AS [<tel>],
	isnull(ContactEmail,'') AS [<email>],
	isnull(QR.Address1,'')+' '+
	isnull(QR.Address2,'')+' '+
	isnull(QR.Address3,'')+' '+
	isnull(QR.City,'')+' '+
	isnull(QR.Code,'') AS [<address>],
	isnull(NatureOfBusines,'') AS [<nature>],
	isnull(UnitsNo,'') AS [<UnitsNo>],
	isnull(PurposeOfOccupancy,'') AS [<PurposeOfOccupancy>],
	CASE 
		WHEN ISNULL(LikelyToInclude,0) <> 0 
		THEN 'X' 
		ELSE '' 
	END as [<WY>],
	CASE 
		WHEN ISNULL(LikelyToInclude,0) = 0 
		THEN 'X' 
		ELSE '' 
	END as [<WN>],
	CASE 
		WHEN ISNULL(SpecialisedEquipent,0) <> 0 
		THEN 'X' 
		ELSE '' 
	END as [<ey>],
	CASE 
		WHEN ISNULL(SpecialisedEquipent,0) = 0 
		THEN 'X' 
		ELSE '' 
	END as [<eN>],
	isnull(SpecialisedEquipentDetails,'') as [<SpecialisedEquipentDetails>],
	CASE 
		WHEN ISNULL(LetRented,0) <> 0 
		THEN 'X' 
		ELSE '' 
	END as [<Ry>],
	CASE 
		WHEN ISNULL(LetRented,0) = 0 
		THEN 'X' 
		ELSE '' 
	END as [<RN>],
	isnull(TenantName,'') as [<TenantName>],
	CASE 
		WHEN ISNULL(ResidnceType,'') = 'Town/Cluster' 
		THEN 'X' 
		ELSE '' 
	END as [<C>],
	CASE 
		WHEN ISNULL(ResidnceType,'') = 'Complex/Townhouse' 
		THEN 'X' 
		ELSE '' 
	END as [<T>],
	CASE 
		WHEN ISNULL(ResidnceType,'') = 'Detached House' 
		THEN 'X' 
		ELSE '' 
	END as [<D>],
	CASE 
		WHEN ISNULL(ResidnceType,'') = 'Flat' 
		THEN 'X' 
		ELSE '' 
	END as [<F>],
	CASE 
		WHEN ISNULL(Valuation,'') = 'Restaurant' 
		THEN 'X' 
		ELSE '' 
	END as [<R>],
	CASE 
		WHEN ISNULL(Valuation,'') = 'Offices' 
		THEN 'X' 
		ELSE 
			CASE 
				WHEN ISNULL(Valuation,'') = 'Retail' 
				THEN 'X' 
				ELSE '' 
			END 
	END as [<O>],
	CASE 
		WHEN ISNULL(Valuation,'') = 'B&&B' 
		THEN 'X' 
		ELSE '' 
	END as [<B>],
	CASE 
		WHEN ISNULL(Valuation,'') = 'B&&B' 
		THEN 'X' 
		ELSE '' 
	END as [<BB>],
	CASE 
		WHEN ISNULL(Valuation,'') = 'Industrial/Factory' 
		THEN 'X' 
		ELSE '' 
	END as [<I>],
		CASE 
		WHEN ISNULL(OccupantNo,'') = '4 or Less' 
		THEN 'X' 
		ELSE '' 
	END as [<OL>],
	CASE 
		WHEN ISNULL(OccupantNo,'') = 'More Than 6' 
		THEN 'X' 
		ELSE '' 
	END as [<OM>],
	CASE 
		WHEN ISNULL(OccupantNo,'') = 'Between 4 to 6' 
		THEN 'X' 
		ELSE '' 
	END as [<OB>],
	CASE 
        WHEN ISNULL(bedroomsNo,'') = 'Up To 8' 
        THEN 'X' 
        ELSE '' 
    END as [<RU>],
        CASE 
        WHEN ISNULL(bedroomsNo,'') = '9 To 12' 
        THEN 'X' 
        ELSE '' 
    END as [<RT>],
    CASE 
        WHEN ISNULL(bedroomsNo,'') = 'More Than 12' 
        THEN 'X' 
        ELSE '' 
    END as [<RM>],
    CASE 
        WHEN ISNULL(BuildingSize,'') = 'Extra Large' 
        THEN 'X' 
        ELSE '' 
    END as [<DX>],
        CASE 
        WHEN ISNULL(BuildingSize,'') = 'Large' 
        THEN 'X' 
        ELSE '' 
    END as [<DL>],
    CASE 
        WHEN ISNULL(BuildingSize,'') = 'Small/Medium' 
        THEN 'X' 
        ELSE '' 
    END as [<DS>],
	ISNULL(NumberOfSeats,'') AS [<NumberOfSeats>],
	ISNULL(WorkStationsNo,'')  AS [<WorkStationsNo>],
	ISNULL(PurposeOfOccupancy,'')  AS [<PurposeOfOccupancy>],
	ISNULL(NoOfBuildings,'') AS [<NoOfBuildings>],
	ISNULL(KitchenSections,'') AS [<KitchenSections>],
	ISNULL(FunctionConferenceAmount,'') AS [<FunctionConferenceAmount>],
	ISNULL(CuisineType,'') AS [<CuisineType>],
	ISNULL(SqmOfBuildings,'') AS [<SqmOfBuildings>],
	ISNULL(HeightOfBuildings,'') AS [<HeightOfBuildings>],
	ISNULL(OccupantNo,'') AS [<OccupantNo>],
	ISNULL(BuildingSize,'') AS [<BuildingSize>],
	ISNULL(bedroomsNo,'') AS [<bedroomsNo>],
	CASE 
		WHEN ISNULL(Valuation,'') = 'B&&B' 
		THEN ISNULL(bedroomsNo,'')
		ELSE '' 
	END AS [<bbbedroomsNo>],
	ISNULL(TenantName,'') AS [<TenantName>],
	ISNULL(WhoReferred,'') AS [<WhoReferred>],
	ISNULL(SpecialInstructions,'') AS [<SpecialInstructions>],
	CASE 
		WHEN ISNULL(QuoteType,'') = 'Contents' 
		THEN 'X' 
		ELSE '' 
	END AS [<RC>],
	CASE 
		WHEN ISNULL(QuoteType,'') = 'Building' 
		THEN 'X' 
		ELSE '' 
	END AS [<RB>],
	CASE 
		WHEN ISNULL(QuoteType,'') = 'Contents' 
		THEN 'R '+ ' ' + ISNULL(CONVERT(VARCHAR,SumInsured),'')
		ELSE '' 
	END AS [<CSumInsured>],
	CASE 
		WHEN ISNULL(QuoteType,'') = 'Building' 
		THEN 'R '+ ' ' + iSNULL(CONVERT(VARCHAR,SumInsured),'') 
		ELSE '' 
	END AS [<BSumInsured>],
	CASE 
		WHEN ISNULL(PersonResponsibleName,'')+ ' '+ISNULL(PersonResponsibleName,'') = '' 
		THEN ISNULL(PersonResponsibleCompany,'')
		ELSE ISNULL(PersonResponsibleName,'')+ ' '+ISNULL(PersonResponsibleName,'')
	END AS [<PersonResponsible>],
	CASE 
		WHEN ISNULL(ResultOfClaim,0) <> 0 
		THEN 'X' 
		ELSE '' 
	END AS [<Cy>],
	CASE 
		WHEN ISNULL(ResultOfClaim,0) = 0 
		THEN 'X' 
		ELSE '' 
	END AS [<CN>]
FROM QuotationRequest QR
LEFT JOIN Entitycontact EC ON  EC.entitycontactID = QR.entitycontactID
Where ID = {ID}","0","","1","LRA-FUSION","0","0","fusion"
"40067","cv_orderform_print","","SELECT 
	O.OrderID AS [<orderNo>],
	ISNULL(EC.Title,'') + ' ' + ISNULL(EC.FirstName,'') + ' ' + ISNULL(EC.Surname,'')  AS [<client>],
	ISNULL(EA.Address1,'') + ' ' + ISNULL(EA.Address2,'') + ' ' + ISNULL(EA.Address3 ,'')  AS [<address1>],
	ISNULL(EA.City,'')  AS [<address2>],
	ISNULL(EA.Code,'')  AS [<address3>],
	ISNULL(vendorNumber,'') AS [<clientnNo>],
	ISNULL(EC.Phone1,'') AS [<phone1>],
	ISNULL(EC.HomePhone,'') AS [<phone2>],
	ISNULL(EC.Fax,'') AS [<fax>],
	ISNULL(EC.Cell,'') AS [<cell>],
	ISNULL(EC.Email,'') AS [<email>],
	ISNULL(EI.Company,'') AS [<insurer>],
	ISNULL(EB.Company,'') AS [<broker>],
	ISNULL(ECRC.FirstName,'') + ' ' + ISNULL(ECRC.Surname,'')  AS [<requestedby>],
	convert(varchar,O.DateAdded,111) as [<dateadded>],
	'R ' + Convert(nvarchar,dbo.fnFormatNumber(isnull(siBefore,0))) as [<sibefore>],
	ISNULL(SS.FirstName,'') + ' ' + ISNULL(SS.Surname,'')  AS [<surveyor>],
	ISNULL(O.SpecialInstructions,'') as [<instructions>],
	ISNULL(EC.Additional3,'') AS [<ponumber>],
	case 
	when O.BrokerPay = 1 
		then '***BROKER IS PAYING***'  
		when O.ClientPay = 1 
		then '***CLIENT IS PAYING***'
		else ''
end as[<paying>],
case 
	when O.ClientAdvised = 1 
		then '**** CLIENT HAS BEEN  ADVISED ****' + char(13)
		else ''
end as [<beenadvised>],
case 
	when O.ClaimPostLoss = 1 
		then 'Claim' + char(13)
		else ''
end as [<claim>],
case 
	when O.policyRenewal = 1 
		then 'Policy Renewal' + char(13)
		else ''
end as [<policy>],
case 
	when O.NewBusiness = 1 
		then 'New Business' + char(13)
		else ''
end as [<newbis>],
case 
	when O.ClientRequest = 1 
		then 'Client Request' + char(13)
		else ''
end as [<req>],
	dbo.ORDERTEMPLATECOLLECTION (O.OrderID) as [<valuationtypes>]
FROM OrderForm O
LEFT JOIN EntityContact EC 
	ON O.ClientID = EC.EntityContactID
LEFT JOIN (SELECT EntityID,vendorNumber FROM Entity) E 
	ON EC.EntityID = E.EntityID
LEFT JOIN EntityAddress EA 
	ON EA.EntityAddressID = O.EntityAddressID
LEFT JOIN (SELECT Company,EntityID FROM Entity) EI
	ON EI.EntityID = O.UnderWriterID
LEFT JOIN (SELECT Company,EntityID FROM Entity) EB 
	ON EB.EntityID = O.BrokerID
LEFT JOIN EntityContact ECRC 
	ON O.RequestedByContact = ECRC.EntityContactID
LEFT JOIN (select Firstname,Surname,StaffID from staff) SS
	ON O.SurveyorID = SS.StaffID
WHERE O.orderID = {OrderID}","0","","1","LRA-FUSION","0","0","fusion"
"40068","cv_Surveyor_print","","--cv_Surveyor_print

select
	ISNULL(E.company ,'')as [<Client>],
	CONVERT(varchar,ISNULL(S.AppointmentTime ,''),108) as [<apptTime>],
	ISNULL(S.CoOpReason ,'') as [<CoOpReason>],
	ISNULL(S.HomeMaintenance ,'') as [<HomeMaintenance>],
	ISNULL(S.CommentsDetails ,'') as [<CommentsDetails>],
	ISNULL(S.SurveyWhom ,'')as [<SurveyWhom>],
	ISNULL(S.Actions ,'') as [<Actions>],
	ISNULL(S.KMTravelled ,'') as [<KMTravelled>],
	ISNULL(US.Firstname, '') + ' ' + ISNULL(US.Surname, '')  as [<Surveyor>],
	ISNULL(U.Firstname, '') + ' ' + ISNULL(U.Surname, '') as [<Supervisor>],
	CASE 
		WHEN ISNULL(isDebitOrder,0) <> 0 
		THEN 'X' 
		ELSE '' 
	END AS [{D}],
	CASE 
		WHEN ISNULL(isDebitOrder,0) = 0 
		THEN 'X' 
		ELSE '' 
	END AS [{C}],
	CASE 
		WHEN ISNULL(YouOnTime,0) <> 0 
		THEN 'X' 
		ELSE '' 
	END AS [<yesT>],
	CASE 
		WHEN ISNULL(YouOnTime,0) = 0
		THEN 'X' 
		ELSE '' 
	END AS [<noT>],
	CASE 
		WHEN ISNULL(ClientOnTime,0) <> 0 
		THEN 'X' 
		ELSE '' 
	END AS [<yesCT>],
	CASE 
		WHEN ISNULL(ClientOnTime,0) = 0
		THEN 'X' 
		ELSE '' 
	END AS [<noCT>],
	CASE 
		WHEN ISNULL(CoOperative,0) <> 0 
		THEN 'X' 
		ELSE '' 
	END AS [<yesCO>],
	CASE 
		WHEN ISNULL(CoOperative,0) = 0
		THEN 'X' 
		ELSE '' 
	END AS [<noCO>],
	CASE 
		WHEN ISNULL(S.Comments,0) <> 0 
		THEN 'X' 
		ELSE '' 
	END AS [<yesC>],
	CASE 
		WHEN ISNULL(S.Comments,0) = 0
		THEN 'X' 
		ELSE '' 
	END AS [<noC>]
from Risk_Surveyor S
LEFT JOIN entity E ON E.entityID = S.entityID
LEFT JOIN users US ON US.userID = SurveyorID
LEFT JOIN users U ON U.userID = SupervisorID
where RiskSurveyorID = {RiskSurveyorID}
","0","","1","LRA-FUSION","0","0","fusion"
"40069","cv_Risk_Bill_Template_Detail","","SELECT BillDetailID,STK.StockCode as [Code], STK.StockDescription as [Description],
Convert(Varchar,Cast(isnull(MinValue,0) as Money),1) as [Min. Value],
Convert(Varchar,Cast(isnull(BreakPointValue,0) as Money),1) as [Breakpoint Value],
Convert(Varchar,Cast(isnull(MaxValue,0) as Money),1) as [Max. Value]
FROM Risk_Bill_Item RBI
LEFT JOIN (SELECT stockID, StockCode, StockDescription FROM AccStock) STK
on RBI.StockID = STK.StockID
WHERE BillTemplateID = {billtemplateid}
ORDER BY BillDetailID","0","","1","LRA-FUSION","0","0","fusion"
"40070","cv_Risk_Sureyor","","SELECT 
	RS.RiskSurveyorID,
	E.Company,
	ISNULL(EC.Firstname, '') + ' ' + ISNULL(EC.Surname, '') as [Client Name],
	Convert(VARCHAR, RS.AppointmentTime, 108) as [Appointment Time],
	ISNULL(U.Firstname, '') + ' ' + ISNULL(U.Surname, '') as [Surveyor],
	ISNULL(US.Firstname, '') + ' ' + ISNULL(US.Surname, '') as [Supervisor]
From Risk_Surveyor RS
LEFT JOIN Entity E ON E.EntityID = RS.EntityID
LEFT JOIN EntityCOntact EC ON EC.EntityContactID = RS.EntityCOntactID
LEFT JOIN users U ON U.userID = RS.SurveyorID
LEFT JOIN users US ON US.userID = RS.SupervisorID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40071","cv_assessments_excel_report","","DECLARE @RiskID INT
DECLARE @SectionID INT
DECLARE @CategoryID INT
DECLARE @Section varchar(500)
DECLARE @AssesementType varchar(500)
DECLARE @Risk CURSOR
DECLARE @Category CURSOR

truncate table temp_print_assessment

SET @RiskID = {riskid}


SET @AssesementType = (SELECT AssessmentTypeName FROM Risk_Assessment_Master WHERE RiskAssessmentID = @RiskID)


insert into temp_print_assessment (tempcol1,tempcol2,tempcol3,tempcol4,tempcol5,tempcol6,tempcol7,tempcol8,tempcol9)
select 'Assesement Type',@AssesementType,'','','','','','',''

union all

select '','','','','','','','',''

union all

select 'Assesment Details','','','','','','','',''

union all

select '','','','','','','','',''

SET @Risk = CURSOR FAST_FORWARD FOR SELECT RiskAssessmentSectionID FROM Risk_Assessment_Section WHERE RiskAssessmentID = @RiskID

OPEN @Risk

FETCH NEXT FROM @Risk INTO @SectionID

WHILE @@FETCH_STATUS = 0 

BEGIN 
set @Section = (SELECT SectionName FROM Risk_Assessment_Section WHERE RiskAssessmentSectionID = @SectionID)

insert into temp_print_assessment (tempcol1,tempcol2,tempcol3,tempcol4,tempcol5,tempcol6,tempcol7,tempcol8,tempcol9)
select @Section,'Category','Question','Answer','Description','QTY','Price','Model',''

union all

select '','','','','','','','',''

      SET @Category = CURSOR FAST_FORWARD FOR
      SELECT RiskAssessmentCategoryID FROM Risk_Assessment_Category WHERE RiskAssessmentSectionID = @SectionID
      
      OPEN @Category 
      
      FETCH NEXT FROM @Category INTO @CategoryID
      
      WHILE @@FETCH_STATUS = 0 
      BEGIN 
            insert into temp_print_assessment (tempcol1,tempcol2,tempcol3,tempcol4,tempcol5,tempcol6,tempcol7,tempcol8,tempcol9)
            SELECT 
                  --RAS.SectionName,
                 '',
                 ISNULL( RAC.CategoryName,''),
                 ISNULL(RAI.ItemPrompt,''),
                 ISNULL(RAI.SelectedAnswer,''),
                 ISNULL(RAI.Description,''),
                 ISNULL(RAI.QTY,''),
                LEFT('R ' + CONVERT(VARCHAR, CAST(RAI.Price AS MONEY), 1), LEN('R '+ CONVERT(VARCHAR, CAST(RAI.Price AS MONEY), 1)) - 3) as price ,
                 ISNULL(RAI.MODEL,''),
                 ''
            FROM Risk_Assessment_Section RAS
            LEFT JOIN Risk_Assessment_Category RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
            LEFT JOIN Risk_Assessment_Item RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
            WHERE RAI.RiskAssessmentCategoryID = @CategoryID
            
            UNION ALL 
            
            SELECT '', '', '', '','','','','',''
                        
            FETCH NEXT FROM @Category INTO @CategoryID
      END
      CLOSE @Category 
      DEALLOCATE @Category
      
      FETCH NEXT FROM @Risk INTO @SectionID
END

CLOSE @Risk
DEALLOCATE @Risk
","0","","1","LRA-FUSION","0","0","fusion"
"40072","cv_Risk_Bill_Report","","Select 
	[Doc No.], 
	[Type],
	[Billing Template],
	[Status], 
	[Survey Date],
	[Client],
	Title,
	[Surname], 
	[Firstname],	
	[Assessment Number], 
	[Policy Number],
	[Quantifier],
	[Requested by],
	[Insure],   
	[Broker],  
	[SI Before],
	[Sum Insured],
	[Assessment Value],
	--[Negotiated Amt.],
	[Km],
	[Admin Amount] AS [Admin Amount],
	[Base Amount] AS [Base Amount],
	[NegAdmin] AS [Negotiated Admin Amount],
	[NegBase] AS [Negotiated Base Amount],
	CASE WHEN [NegAdmin] <= 0 THEN [Admin Amount] ELSE [NegAdmin] END +  CASE WHEN [NegBase] <= 0 THEN [Base Amount] ELSE [NegBase] END as [Total Amount],
	[Invoice No.],
	[Invoiced Amount]
	from (

SELECT 
	RAM.RiskAssessmentID, 
	RAM.RiskAssessmentID as [Doc No.], 
	RT.TemplateName as [Type],
	RBT.TemplateName as [Billing Template],
	LS.Value as [Status], 
	Convert(varchar,RAM.SurveyDate,111) as [Survey Date],
	E.Company as [Client],
	EC.Title,
	EC.[Surname], 
	EC.[Firstname],	
	convert(varchar(7),Date, 120) + '/' +   SUBSTRING('0000000', 1,(len('0000000')-len(number))) +   
	 convert(varchar,number) + '/'+RAN.Prefix As [Assessment Number], 
	 Ext as [Policy Number],
	S.[Surveyor] as [Quantifier],
	ISNULL(ER.Company,'') AS [Requested by],
	ISNULL(EI.Company,'') AS [Insure],   
	ISNULL(EB.Company,'') AS [Broker],  
	 dbo.fnFormatNumber(ISNULL(O.sibefore,0)) AS [SI Before],
	  dbo.fnFormatNumber(ISNULL(ContentsSumInsured,0)) AS [Sum Insured],
	Convert(varchar,isnull(RAM.TotalValue,0),1) as [Assessment Value],  
	--Convert(varchar,isnull(RAM.NegotiatedAmount,0),1) as [Negotiated Amt.],  
	Totalmileage as [Km],
	SUM(CAST (
	CASE 
	WHEN isnull(RBIAF.HasBreakPoint,0) = 0 
	THEN 
		--No Breakpoint
		isnull(RBIAF.MinValue ,0)
	ELSE 
		--Has breakpoint
		CASE WHEN isnull(RAM.TotalValue,0) < isnull(RBIAF.BreakPointValue,0) 
		THEN
			--Value less than breakpoint
			isnull(RBIAF.MinValue ,0)	
		ELSE
			--Value more than breakpoint
			CASE WHEN isnull(RBIAF.BreakPointType,0) =1 
			THEN
				--Increasing at a ratio
				CASE WHEN isnull(RBIAF.MinValue ,0)	+ (((isnull(RAM.TotalValue,0) - isnull(RBIAF.BreakPointValue,0)) / isnull(RBIAF.AfterBreakPointPer,1)) * isnull(RBIAF.AfterBreakPointRate,0)) > isnull(RBIAF.MaxValue,0)
				THEN
					isnull(RBIAF.MaxValue,0)
				ELSE
					isnull(RBIAF.MinValue ,0)	+ (((isnull(RAM.TotalValue,0) - isnull(RBIAF.BreakPointValue,0)) / isnull(RBIAF.AfterBreakPointPer,1)) * isnull(RBIAF.AfterBreakPointRate,0))
				END
			ELSE
				--Specific set price 
				CASE WHEN isnull(RBIAF.SetValue ,0) > isnull(RBIAF.MaxValue,0)
				THEN
					isnull(RBIAF.MaxValue,0)
				ELSE
					isnull(RBIAF.SetValue ,0)
				END
			END
		END
	END
	AS Money)) as [Admin Amount],
	SUM(CAST (
	CASE 
	WHEN isnull(RBIBF.HasBreakPoint,0) = 0 
	THEN 
		--No Breakpoint
		isnull(RBIBF.MinValue ,0)
	ELSE 
		--Has breakpoint
		CASE WHEN isnull(RAM.TotalValue,0) < isnull(RBIBF.BreakPointValue,0) 
		THEN
			--Value less than breakpoint
			isnull(RBIBF.MinValue ,0)	
		ELSE
			--Value more than breakpoint
			CASE WHEN isnull(RBIBF.BreakPointType,0) =1 
			THEN
				--Increasing at a ratio
				CASE WHEN isnull(RBIBF.MinValue ,0)	+ (((isnull(RAM.TotalValue,0) - isnull(RBIBF.BreakPointValue,0)) / isnull(RBIBF.AfterBreakPointPer,1)) * isnull(RBIBF.AfterBreakPointRate,0)) > isnull(RBIAF.MaxValue,0)
				THEN
					isnull(RBIBF.MaxValue,0)
				ELSE
					isnull(RBIBF.MinValue ,0)	+ (((isnull(RAM.TotalValue,0) - isnull(RBIBF.BreakPointValue,0)) / isnull(RBIBF.AfterBreakPointPer,1)) * isnull(RBIBF.AfterBreakPointRate,0))
				END
			ELSE
				--Specific set price 
				CASE WHEN isnull(RBIBF.SetValue ,0) > isnull(RBIBF.MaxValue,0)
				THEN
					isnull(RBIBF.MaxValue,0)
				ELSE
					isnull(RBIBF.SetValue ,0)
				END
			END
		END
	END
	AS Money)) as [Base Amount],
	DM.DocNo as [Invoice No.],
	Convert(varchar,Cast(DD.Invoiced as money),1) as [Invoiced Amount],
	ISNULL(RAM.NegotiatedBaseFee,0) AS [NegBase],
	ISNULL(RAM.NegotiatedAdminFee,0) AS [NegAdmin]
FROM Risk_Assessment_Master RAM
LEFT JOIN  Risk_AssessmentNo RAN 
	ON RAN.RiskAssessmentID = RAM.RiskAssessmentID  
LEFT JOIN (SELECT * FROM Risk_Assessment) RA
	ON RAM.AssessmentID = RA.AssessmentID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
	ON RA.Entityid = E.EntityID
LEFT JOIN (SELECT isnull(Firstname,'') as [Firstname], isnull(Surname,'') as [Surname],Title, EntityContactID,Ext FROM EntityContact) EC
	ON RA.EntityContactID = EC.EntityContactID
LEFT JOIN (SELECT * FROM Risk_Bill_Template) RBT
	ON RAM.BillTemplateID = RBT.BillTemplateID
LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Surveyor] FROM Staff ) S
	ON RAM.SurveyorID = S.StaffID
LEFT JOIN (SELECT * FROM Lookup where class = 'AssessmentStatus') LS
	ON RAM.StatusID = LS.LookupID
LEFT JOIN (SELECT RBI.* FROM Risk_Bill_Item RBI
					LEFT JOIN AccSTOCK AC ON AC.StockID = RBI.StockID
					WHERE AC.StockDescription LIKE '% (Admin Fee)%'  ) RBIAF
	ON RAM.BillTemplateID = RBIAF.BillTemplateID
	LEFT JOIN (SELECT RBI.* FROM Risk_Bill_Item RBI
					LEFT JOIN AccSTOCK AC ON AC.StockID = RBI.StockID
					WHERE AC.StockDescription LIKE '% (Base Fee)%'  ) RBIBF
	ON RAM.BillTemplateID = RBIBF.BillTemplateID
LEFT JOIN (SELECT DocID, DocNo FROM DEBTOR_MASTER where DocType = 'Invoice') DM
	ON RAM.InvoiceDocID = DM.DocID
LEFT JOIN (SELECT DocID, sum(isnull(Qty,0) * isnull(PriceEx,0)) as [Invoiced] FROM DEBTOR_DETAIL GROUP BY DocID) DD
	ON DM.DocID = DD.DocID
LEFT JOIN (SELECT Company,EntityID FROM Entity) ER
	ON ER.EntityID = RAM.RequestedBy 
LEFT JOIN (SELECT Company,EntityID FROM Entity) EI 
	ON EI.EntityID = RAM.InsurerID  
LEFT JOIN (SELECT Company,EntityID FROM Entity) EB 
	ON EB.EntityID = RAM.BrokerID 
LEFT JOIN OrderForm O 
	ON RAM.OrderID = O.OrderID  
LEFT JOIN Risk_Template RT ON RT.RiskTemplateID = RAM.AssessmentTypeID
{where}
GROUP BY RAM.RiskAssessmentID,RAM.AssessmentTypeName,RBT.TemplateName,LS.Value,RAM.SurveyDate,E.Company,S.Surveyor,RAM.TotalValue,DM.DocNo,DD.Invoiced,EC.Title,
	EC.[Surname], 
	EC.[Firstname],
	[Date],
	number,
	RAN.Prefix,
	Ext,
	ER.Company,
	EB.Company,
	EI.Company,
	O.sibefore,
	RAM.Totalmileage,
	RT.TemplateName,
	O.ContentsSumInsured,
	--RAM.NegotiatedAmount,
	RAM.NegotiatedBaseFee,
	RAM.NegotiatedAdminFee
	) X
ORDER BY X.[Surname]
--{having}","0","","1","LRA-FUSION","0","0","fusion"
"40073","cv_Populate_Machine_Type","","select DISTINCT 
	LP.LinkLookupID
	,LP.value
from linklookup LP
left Join (select LookupID,Class,value from Lookup ) L
on LP.LinkedTo = L.LookupID
LEFT JOIN (SELECT StockID,StockDescription, StockType FROM AccStock) A 
ON A.StockType = l.lookupID
where L.Class like 'StockType' 
order by lp.value","0","","1","LRA-FUSION","0","0","fusion"
"40074","cv_Check_Retainer","","SELECT top 1 LineID FROM COST_ESTIMATE_DETAIL CED
LEFT JOIN (SELECT StockID, StockType FROM AccStock) A ON A.StockID = CED.StockID
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'StockType') L ON L.LookupID = A.StockType
WHERE DocID = {docid} AND L.Value LIKE 'Retainer'","0","","1","LRA-FUSION","0","0","fusion"
"40075","cv_Timesheet_Report","","SELECT DM.DOCID,
e.accountnum AS Account,
 e.Company,dm.DocStatus AS [Invoice Status],
dm.DateCreated AS [Invoice Date],
dbo.fnformatnumber(SUM(dd.PriceEx * dd.Qty))   AS [Expected Ex. Vat],
dbo.fnformatnumber(SUM(dd.PriceEx * dd.Qty)) AS [Invoiced Ex. Vat],
dbo.fnformatnumber(SUM((dd.PriceEx * dd.Qty) * (DM.TAX / 100)))     AS [Invoiced VAT],
dbo.fnformatnumber(SUM((dd.PriceEx * dd.Qty) * ((DM.TAX / 100) + 1)))  AS [Invoiced Incl. VAT]

 FROM debtor_master dm 
LEFT JOIN entity e ON dm.entityid = e.entityid
LEFT JOIN debtor_detail dd  ON dm.docid = dd.docid
left join lookup l on l.lookupid = dm.divisionid and l.Class = 'Divisions'

{where}

GROUP BY e.Accountnum,e.company,dm.DateCreated,dm.DateCompleted,dm.DocStatus
,dm.divisionid,l.value,dm.DocID,dm.docno

Order by e.Company","0","","1","LRA-FUSION","0","0","fusion"
"40076","cv_SetTimesheetBilled","","Update t
Set t.Billed = 1 
FROM Timesheet T

left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
left join Devappointment dappt on dappt.DevApptID = t.DevApptID
left join lookup l on l.lookupid = dappt.TASKTYPEID 
LEFT JOIN (
SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
) MR ON MR.ModuleID = modules.ModuleID
LEFT JOIN 
(
SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Consultant],StaffID FROM Users) U 
ON U.StaffID = MR.ConsultantID
 {where} 
 ","0","","1","LRA-FUSION","0","0","fusion"
"40077","cv_Risk_Bill_Line_Items","","SELECT RiskAssessmentID, 
STK.StockID, STK.StockCode, STK.StockDescription,
E.EntityID, RA.EntityContactID, isnull(E.TaxTypeID,(SELECT top 1 TaxTypeID FROM AccTaxType where isdefault=1)) as [TaxTypeID],RAM.NegotiatedAmount,
(CAST (
CASE 
WHEN isnull(RBI.HasBreakPoint,0) = 0 
THEN 
	--No Breakpoint
	isnull(RBI.MinValue ,0)
ELSE 
	--Has breakpoint
	CASE WHEN isnull(RAM.TotalValue,0) < isnull(BreakPointValue,0) 
	THEN
		--Value less than breakpoint
		isnull(RBI.MinValue ,0)	
	ELSE
		--Value more than breakpoint
		CASE WHEN isnull(BreakPointType,0) =1 
		THEN
			--Increasing at a ratio
			CASE WHEN isnull(RBI.MinValue ,0)	+ (((isnull(RAM.TotalValue,0) - isnull(BreakPointValue,0)) / isnull(AfterBreakPointPer,1)) * isnull(AfterBreakPointRate,0)) > isnull(RBI.MaxValue,0)
			THEN
				isnull(RBI.MaxValue,0)
			ELSE
				isnull(RBI.MinValue ,0)	+ (((isnull(RAM.TotalValue,0) - isnull(BreakPointValue,0)) / isnull(AfterBreakPointPer,1)) * isnull(AfterBreakPointRate,0))
			END
		ELSE
			--Specific set price 
			CASE WHEN isnull(RBI.SetValue ,0) > isnull(RBI.MaxValue,0)
			THEN
				isnull(RBI.MaxValue,0)
			ELSE
				isnull(RBI.SetValue ,0)
			END
		END
	END
END
AS Money)) as [PriceEx]
FROM Risk_Assessment_Master RAM
LEFT JOIN (SELECT * FROM Risk_Assessment) RA
	ON RAM.AssessmentID = RA.AssessmentID
LEFT JOIN (SELECT EntityID, Company,Currency, TaxTypeID FROM Entity) E
	ON RA.Entityid = E.EntityID
LEFT JOIN (SELECT * FROM Risk_Bill_Template) RBT
	ON RAM.BillTemplateID = RBT.BillTemplateID
LEFT JOIN (SELECT * FROM Risk_Bill_Item ) RBI
	ON RAM.BillTemplateID = RBI.BillTemplateID
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK
	ON RBI.StockID = STK.StockID
WHERE STK.StockID is not null and isnull(RAM.InvoiceDocID,0) = 0
AND RAM.RiskAssessmentID = {raid}","0","","1","LRA-FUSION","0","0","fusion"
"40078","qf_CompanyContacts",""," SELECT TOP 50 	
 EC.EntityContactID,
 E.Company,
 ISNULL(EC.FirstName, '') + ' ' + ISNULL(EC.Surname, '') as [Client Name] 
 FROM EntityContact EC 
 LEFT JOIN Entity E ON E.EntityID = EC.EntityID 
 WHERE ISNULL(EC.IsSupplier,0) = 0  
 AND (E.Company like '%<%replace%>%' or
 ISNULL(EC.FirstName, '') + ' ' + ISNULL(EC.Surname, '') like '%<%replace%>%')","0","","1","LRA-FUSION","0","0","fusion"
"40079","cv_Risk_quote","","select
*
From(
Select
ID, 
ClientName as [Client Name],
vendornumber as [Policy Number],
FirstName+' '+Surname as [Requested by],
QR.Address1+' '+QR.Address2+' '+QR.Address3+' '+QR.City+' '+QR.Code as [Address],
QR.DateModified as [Last Updated date]
from QuotationRequest QR
Left Join Entity E On E.EntityID = QR.EntityID
Left Join EntityContact EC ON EC.EntityContactID = QR.EntityContactID) A
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40080","cv_SLA_Man","","SET ANSI_WARNINGS OFF
SET NOCOUNT ON

DECLARE @StartDate as datetime
DECLARE @EndDate as datetime
DECLARE @CurrentDate as datetime
SET @StartDate = '{startdate}'
SET @EndDate = '{enddate}'
SET @CurrentDate = convert(varchar,year(@StartDate)) + '/' + convert(varchar,month(@Startdate)) + '/' + '15'



IF OBJECT_ID(N'tempdb..#Dates', N'U') IS NOT NULL 
BEGIN
    DROP TABLE #Dates;
END

CREATE TABLE #Dates
(Period Datetime)

WHILE @CurrentDate < @EndDate
BEGIN
    INSERT INTO #Dates
    SELECT convert(varchar,@CurrentDate,111)
    SET @CurrentDate = dateadd(m,1,@CurrentDate)
END


IF OBJECT_ID(N'tempdb..#SLA', N'U') IS NOT NULL 
BEGIN
    DROP TABLE #SLA;
END

CREATE TABLE #SLA
(SLAID Int,
IsAllProjects Bit,
EntityID Int,
HoursExpireAfter Int,
Period Datetime,
SLAResourceTypeID Int,
StartDate DateTime,
EndDate DateTime,
HoursPerMonth float,
Hrs float,
AdjHrs float,
HrsRemaining float,
SLADescription Varchar(250),
ProjectID int
)


--Create dates in range
WHILE @CurrentDate < @EndDate
BEGIN
    INSERT INTO #Dates
    SELECT convert(varchar,@CurrentDate,111)
    SET @CurrentDate = dateadd(m,1,@CurrentDate)
END

--Actual SLAs
INSERT INTO #SLA
SELECT S.SLAID, S.IsAllProjects, S.Entityid,   
S.HoursExpireAfter,
D.Period,
S.SLAResourceTypeID,
S.Startdate,
S.EndDate,
HoursPerMonth,
sum(round(DateDiff(n,DA.[Date],DA.EndDate) / 60.00,2))  as [Hrs], 
sum(round(cast(DateDiff(n,DA.[Date],DA.EndDate)as float) * (isnull(DA.StaffCurrentRate,100.00)/100.00) / 60.00, 2))  as [AdjHrs],
0 as [HrsRemaining],SLADescription, null as [ProjectID]
FROM SLA S
LEFT JOIN #Dates D  on D.Period between S.StartDate AND S.EndDate
LEFT JOIN (SELECT * FROM SLAProject) SP ON S.SLAID  = SP.SLAID
LEFT JOIN (SELECT * FROM SLATaskType) ST ON S.SLAID = ST.TaskTypeID
LEFT JOIN (SELECT * FROM DevAppointment) DA
    ON S.EntityID = DA.EntityID
    AND (year(DA.[Date]) = year(D.Period) AND month(DA.[Date]) = month(D.Period))
    AND (SP.ProjectID = DA.ProjectID OR isnull(S.IsAllProjects,0) = 1)
    AND (ST.TaskTypeID = DA.TaskTypeID OR isnull(S.IsAllTaskTypes,0) = 1)
WHERE D.Period is not null
Group by 
	S.SLAID
	, S.EntityID
	, D.Period
	, S.StartDate
	, S.EndDate
	, S.HoursPerMonth
	,S.SLAResourceTypeID
	, S.HoursExpireAfter
	,S.IsAllProjects
	,S.SLADescription
ORDER BY D.Period

--Virtual SLAs created for all other timesheets
INSERT INTO #SLA
SELECT Distinct
0 as [SLAID], 
1 as [IsAllProjects], 
DA.Entityid,   
0 as [HoursExpireAfter],
D.Period,
0 as [SLAResourceTypeID],
@Startdate,
@EndDate,
0 as [HoursPerMonth],
sum(round(DateDiff(n,DA.[Date],DA.EndDate) / 60.00,2))  - isnull(SLAHrs.Hrs,0) as [Hrs], 
sum(round(cast(DateDiff(n,DA.[Date],DA.EndDate)as float) * (isnull(DA.StaffCurrentRate,100.00)/100.00) / 60.00, 2))  - isnull(SLAHrs.AdjHrs,0)   as [AdjHrs],
0 as [HrsRemaining],
'[None]' as [SLADescription],
DA.ProjectID
FROM DevAppointment DA
LEFT JOIN #Dates D  on year(DA.[Date]) = year(D.Period) AND Month(DA.[Date]) = Month(D.Period)
LEFT JOIN (SELECT EntityID, Period, sum(isnull(Hrs,0)) as [Hrs], sum(isnull(AdjHrs,0)) as [AdjHrs] FROM #SLA GROUP BY EntityID, Period) SLAHrs
ON DA.EntityID = SLAHrs.EntityID AND D.Period = SLAHrs.Period
WHERE D.Period is not null
AND DA.[Date] between @StartDate and @Enddate
Group by DA.EntityID, D.Period,SLAHrs.Hrs,SLAHrs.AdjHrs,DA.ProjectID
HAVING sum(round(DateDiff(n,DA.[Date],DA.EndDate) / 60.00,2))  - isnull(SLAHrs.Hrs,0) <> 0
ORDER BY D.Period


SET ANSI_WARNINGS ON
SELECT 
convert(varchar,S1.SLAID) + '#' + convert(varchar(50), newid()) as [SLAID], 
E.Company as [Client],
convert(Varchar,year(S1.Period)) + '/' + convert(Varchar,Month(S1.Period)) as [Month],
LRT.Value as [Resource Type], 
S1.HoursExpireAfter as [Months to Carry-over],
SLADescription as [Description],
convert(varchar,S1.StartDate,111) as [SLA Start],
convert(varchar,S1.EndDate,111) as [SLA End],
S1.HoursPerMonth as [Purchased Hrs],
S1.Hrs as [Captured Hrs],
S1.AdjHrs as [Adjusted Hrs],
S1.HoursPerMonth - S1.AdjHrs as [Hrs Not Used],
sum(isnull(S2.RemHrs,0)) [Hrs Available]
FROM #SLA S1
LEFT JOIN (SELECT SLAID, Period,HoursPerMonth - AdjHrs  as [RemHrs]  FROM #SLA) S2
    ON S1.SLAID = S2.SLAID AND S2.Period between dateadd(M, - isnull(S1.HoursExpireAfter,0) +1, S1.Period) and  S1.Period
LEFT JOIN (SELECT entityID, Company FROM Entity) E 
    ON S1.Entityid = E.EntityId
LEFT JOIN (SELECT * FROM Lookup where Class like 'SLAResourceType') LRT
    ON S1.SLAResourceTypeID = LRT.Lookupid
LEFT JOIN (SELECT * FROM SLAProject) SP
    ON S1.SLAID = SP.SLAID
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON SP.ProjectID = P.ProjectID
    
{where}
GROUP BY S1.SLAID, E.Company, S1.Period, S1.HoursExpireAfter,S1.StartDate, S1.EndDate,LRT.Value, S1.HoursPermonth,S1.Hrs, S1.AdjHrs, SLADescription
Order by  e.Company, s1.Period
    
SET NOCOUNT OFF


","0","","1","LRA-FUSION","0","0","fusion"
"40081","cv_Insert_Machine_Address","","
INSERT INTO MachineAddress (
MachineID,
AddressType,
Address1,
Address2,
Address3,
City,
Region,
Code,
Country,
[State],
TempID)
SELECT 
{MachineID},
AddressType,
Address1,
Address2,
Address3,
City,
Region,
Code,
Country,
[State],
TempID
FROM EntityAddress
WHERE EntityAddressID = {AddressID}","0","","1","LRA-FUSION","0","0","fusion"
"40082","cv_assessment_Options","","SELECT
	RA.AssessmentID,
	isnull(convert(varchar,orderid),'Not created from an order') as [Order Number],
	E.Company as [Client],
	ISNULL(EC.Firstname, '') + ' ' + ISNULL(EC.Surname, '') as [Contact],
	Convert(Varchar, RA.DateCreated, 111) as [Date Created],
	RA.HomeTel as [Home],
	RA.WorkTel as [Work],
	RA.CellTel as [Cell],
	RA.Email
FROM Risk_Assessment RA
LEFT JOIN Entity E ON E.EntityID = RA.EntityID
LEFT JOIN EntityContact EC ON EC.EntityContactID = RA.EntityContactID
LEFT JOIN Entity EB1 ON EB1.EntityID = RA.DomValBrokerID
LEFT JOIN Entity EB2 ON EB2.EntityID = RA.VehBrokerID
LEFT JOIN Entity IN1 ON IN1.EntityID = RA.DomValInsurerID
LEFT JOIN Entity IN2 ON In2.EntityID = RA.VehInsurerID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40083","cv_Acc_Stock_Find","","DECLARE @UserID as int
SET @UserID = {userid}

SELECT Distinct Top 500
A.[ID], [Type], [Sub Type], [Code], [Description], [Price Category]
,[Unit Cost Price], [Unit Selling Price], [Barcode], [Supplier],[Supplier's Product Code]
, [Length], [Width], [Height], [Weight] ,[Additional 1],[Additional 2],[Additional 3],[Additional 4],[Additional 5],[Additional 6]
FROM (
	SELECT convert(varchar,STK.StockID) + '#' + convert(varchar,PC.Lookupid ) + '#' + convert(varchar(50),newid()) as [ID],
	ST.Value as [Type], SST.Value as [Sub Type], STK.StockCode as [Code], 
	STK.StockDescription as [Description],
	PC.Value as [Price Category],
	isnull(dbo.fnFormatNumber(SP.CostPriceEx / isnull(STK.SoldbyToPurchasedByRatio,1)),'None') as [Unit Cost Price],
	isnull(dbo.fnFormatNumber(SP.SellingPriceEx),'None') as [Unit Selling Price],
	Barcode as [Barcode],E.Company as [Supplier],
	PC.Lookupid as [PriceCategoryID],
	ISNULL(IsAccountCode,0) as [IsGLCode],SP.SupplierID, SP.SupplierStockCode as [Supplier's Product Code],
	isnull(STK.IsRentable,0) as [IsRentable],
	STK.Length,
	STK.Width,
	STK.Height,
	STK.[Weight],
	isnull(STK.Specifications,'') + ' ' + isnull(ExtraSpecifications,'') as [Specifications],
	
	STK.Additional1 as [Additional 1],
	STK.Additional2 as [Additional 2],
	STK.Additional3 as [Additional 3],
	STK.Additional4 as [Additional 4],
	[Additional 5],
	[Additional 6]
	
	
	FROM AccStock STK
	LEFT JOIN (SELECT * FROM Lookup where class like 'StockType') ST
	ON STK.StockType = ST.Lookupid
	LEFT JOIN (SELECT * FROM LinkLookup where class like 'StockSubType') SST
	ON STK.SubTypeID = SST.LinkLookupID
	CROSS JOIN (SELECT * FROM Lookup where class = 'PriceCategory') PC
	LEFT JOIN (SELECT * FROM AccStockPrice 
				Where getdate() between ValidFrom and ValidTo 
				and isnull(IsContract,0) = 0
				and divisionid in (SELECT DivisionID FROM UserDivisions where userid = @userID)) SP
	ON STK.StockID = SP.StockID AND PC.LookupID = SP.PriceCategoryID
	LEFT JOIN (SELECT EntityID, Company FROM Entity) E
	ON SP.SupplierID = E.Entityid
	
	LEFT JOIN (SELECT LookupID, Value as [Additional 5] FROM Lookup WHERE Class LIKE 'STKAdditional5') LAD5 ON LAD5.LookupID = STK.Additional5
	LEFT JOIN (SELECT LookupID, Value as [Additional 6] FROM Lookup WHERE Class LIKE 'STKAdditional6') LAD6 ON LAD6.LookupID = STK.Additional6
	
	WHERE isnull(IsHidden,0) = 0

	UNION ALL

	SELECT 
	convert(varchar,- GLCodeID) + '#0' as [ID] ,
	'GL Code' as [Type],
	GLC.GLType as [Sub Type], 
	convert(varchar,GLCode) as [Code], 
	LJ.[GL Group]  as [Description], 
	'' as [Price Category],'None' as [Unit Cost Price], 'None' as [Unit Selling Price], '' as [Barcode], '' as [Supplier],
	0 as [PriceCategoryID],
	1 as [IsGLCode], 0 as [supplierID], Null as [Supplier's Product Code],
	0 as [IsRentable],
	null as [Lenth],
	null as [Width],
	null as [Height],
	null as [Weight],
	null as [Specifications],
	
	null as [Additional 1],
	null as [Additional 2],
	null as [Additional 3],
	null as [Additional 4],
	null as [Additional 5],
	null as [Additional 6]
	
	FROM AccGLCode GLC
	LEFT JOIN (
		SELECT LookupID, Upper(Value) as [GL Group] 
		FROM Lookup 
		where class like 'JournalType' 
	) LJ
	ON GLC.GLCategoryID = LJ.Lookupid
	WHERE GLC.GLCategoryID >0
	and (divisionid in (SELECT DivisionID FROM UserDivisions where userid = @userID) OR DivisionID = 0)
) A
{where}
ORDER By [Code], [Description], [Price Category]","0","","1","LRA-FUSION","0","0","fusion"
"40084","cv_Acc_Stock_Sub_Type_Lookup","","SELECT LinkLookupID, Value FROM (
	SELECT LinkLookupID, Value,LinkedTo FROM LinkLookup where class ='StockSubType'
	UNION ALL 
	SELECT -1, 'ASSET', -1
	UNION ALL 
	SELECT -2, 'LIABILITY', -1
	UNION ALL 
	SELECT -3, 'INCOME', -1
	UNION ALL 
	SELECT -4, 'OTHER INCOME', -1
	UNION ALL 
	SELECT -5, 'EXPENSE', -1
	UNION ALL 
	SELECT -6, 'CAPITAL', -1
	UNION ALL 
	SELECT -7, 'COST OF SALES', -1
) A
{where}
Order by Value","0","","1","LRA-FUSION","0","0","fusion"
"40085","cv_Acc_Stock_Availability_Bak","","Declare @Date as datetime
set @Date = '{date}'

SELECT
	convert(varchar,Stk.StockID) + '#' + isnull(convert(varchar,C.ContainerID),'0') + '#' + convert(varchar,isnull(SCL.[Length],0)) as [ID]  ,
	LLLL.Value as [Container], 
	STK.StockCode as [Code], 
	Stk.StockDescription as [Description],
	L.Value as [Unit], 
	SCL.[Length] as [Length],
	CASE When isnull(STK.IsSplittable,0) = 1 THEN dbo.fnFormatNumber((sum(isnull(SC.QtyStores,0)  - /*isnull(qtySO,0)  -*/ isnull(qtyForManuf,0) - isnull(SplitInput,0))) / isnull(SCL.[Length],1)) ELSE '' END as [Lengths Available],
	--dbo.fnFormatNumber(sum(isnull(SC.QtyStores,0))) as [Total In Stores] ,
	dbo.fnFormatNumber(isnull(SC.QtyStores,0)) as [Total In Stores] ,
	--dbo.fnFormatNumber(sum(isnull(qtySO,0))) as [On Sales Order],
	dbo.fnFormatNumber(sum(isnull(qtyForManuf,0)) + sum(isnull(SplitInput,0))) as [Required For Manufacture],
	--dbo.fnFormatNumber(sum(isnull(SC.QtyStores,0)  - /*isnull(qtySO,0)  -*/ isnull(qtyForManuf,0) - isnull(SplitInput,0))) as [Available],
	dbo.fnFormatNumber(isnull(SC.QtyStores,0)  - /*isnull(qtySO,0)  -*/ isnull(qtyForManuf,0) - isnull(SplitInput,0)) as [Available],
	dbo.fnFormatNumber(sum(isnull(qtyPO,0))) as [On Purchase Order],
	dbo.fnFormatNumber(sum(isnull(qtyUnderManuf,0)) + sum(isnull(SplitOutput,0))) as [Under Manufacture],
	isnull(convert(Varchar,min(PO.ETA),111),'') as [Next Arrival]
FROM AccStock STK
Cross Join (SELECT LookupID from Lookup where class like 'Divisions') Div
Cross Join (SELECT LinkLookupID as [ContainerID] , [LinkedTo] as [DivID] FROM LinkLookup where class = 'StockContainer') C
--Unique list of lengths by Container
LEFT JOIN ( SELECT Distinct * FROM (SELECT StockID, ContainerID, isnull([Length],0) as [Length] FROM AccStockControl
			UNION ALL 
			SELECT StockID, ContainerID, isnull([Length],0) FROM AccStock_Split_Detail) A) SCL
ON STK.StockID = SCL.StockID  AND C.ContainerID = SCL.ContainerID
--In Stores
LEFT JOIN (SELECT StockID, sum(qty * Ratio) as [QtyStores],DivisionID,ContainerID, [Length] FROM AccStockControl where Adjustdate <= @Date  group by StockID,DivisionID, ContainerID, [Length]) SC
ON STK.StockID = SC.StockID AND C.ContainerID = SC.ContainerID AND isnull(SCL.[Length],0) = isnull(SC.[Length],0)
--On Purchase Order
LEFT JOIN (SELECT CD.StockID, sum(CD.Qty * SoldByToPurchasedByRatio) as [QtyPO], min(DateCompleted) as [ETA],
	CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END AS [DivisionID],
	CD.ContainerID, SoldByToPurchasedByRatio as [Length] 
	from CREDITOR_DETAIL CD 
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID,Deliverydate FROM CREDITOR_MASTER) CM
        ON CD.DocID = CM.DocID
        LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock) Stk
        ON CD.StockID = Stk.StockID 
        where DocType = 'Purchase Order' AND isnull(Datecreated, @Date) <= @Date AND isnull(Deliverydate, @Date)  >= @Date  
        Group By CD.StockID, CD.ContainerID, CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END,SoldByToPurchasedByRatio) PO
ON Stk.StockID = PO.StockID  AND Div.LookupID = PO.DivisionID AND C.ContainerID = PO.ContainerID AND isnull(SCL.[Length],0) = isnull(PO.[Length],0)
/*--On Sales Order
LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtySO],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
	DD.ContainerID
	from DEBTOR_DETAIL DD
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER) DM
        ON DD.DocID = DM.DocID
        where DocType = 'Invoice' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
        Group By DD.StockID, DD.ContainerID, CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) SO
ON Stk.StockID = SO.StockID  AND Div.LookupID = SO.DivisionID AND SO.ContainerID = C.ContainerID */
--Required For Manufacture
LEFT JOIN (SELECT MD.StockID, Sum(MD.Qty * M.Qty) as [QtyForManuf],DivisionID,MD.ContainerID FROM AccManufacture_Detail MD 
	LEFT JOIN AccManufacture M ON MD.DocID = M.DocID
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date 
	Group by  MD.StockID,DivisionID,MD.ContainerID  )Manuf
ON Stk.StockID = Manuf.StockID  AND Div.LookupID = Manuf.DivisionID AND Manuf.ContainerID = SC.ContainerID 
--Under Manufacture
LEFT JOIN (SELECT M.StockID, Sum(M.Qty) as [QtyUnderManuf],DivisionID,ContainerID  FROM AccManufacture M
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
	GROUP By M.StockID,DivisionID,ContainerID ) UManuf
ON Stk.StockID = UManuf.StockID  AND Div.LookupID = uManuf.DivisionID AND SC.ContainerID = UManuf.ContainerID 
--Split Stock Manufacturing
LEFT JOIN (SELECT SD.StockID, LL.LinkedTo as [DivID],SD.ContainerID, 
	sum(Case when isnull(SD.IsInput,0) = 1 THEN Qty * [Length] ELSE 0 END) as [SplitInput],
	sum(Case when isnull(SD.IsInput,0) = 0 THEN Qty * [Length] ELSE 0 END) as [SplitOutput],
	[Length]
	FROM ACCStock_Split_Master SM
	LEFT JOIN (SELECT * FROM AccStock_Split_Detail) SD ON SM.DocID = SD.DocID
	LEFT JOIN LinkLookup LL ON SD.ContainerID = LL.LinkLookupID
	WHERE SM.DocStatus <> 'Completed' AND SM.DateCreated <= @Date
	Group by SD.StockID, LL.LinkedTo, SD.ContainerID, SD.[Length])  SS
ON STK.StockID = SS.StockID and Div.LookupID = SS.DivID AND C.ContainerID = SS.ContainerID AND isnull(SCL.[Length],0) =  isnull(SS.[Length],0)
LEFT JOIN Lookup L on  STK.SoldBy = L.LookupID 
LEFT JOIN LinkLookup LLLL on C.ContainerID  = LLLL.Linklookupid 
{where}
Group by convert(varchar,Stk.StockID) + '#' + isnull(convert(varchar,C.ContainerID),'0') + '#' + convert(varchar,isnull(SCL.[Length],0)), 
LLLL.Value ,SCL.[Length], STK.StockCode,STK.StockDescription,L.Value,STK.IsSplittable, SC.QtyStores, qtyForManuf, SS.SplitInput
Having isnull(SC.QtyStores,0) <> 0
ORDER BY Stk.StockDescription, SCL.[Length] desc, LLLL.Value ","0","","1","LRA-FUSION","0","0","fusion"
"40086","cv_Acc_Dependant_Items_Component","","DECLARE @LineID as integer
SET @LineID = {lineid}

INSERT INTO {inserttable} (DocID, StockID, StockCode, StockDescription, Qty, PriceCategoryID, CostPriceEx, PriceEx, DiscPerc, 
TaxTypeID, Tax, isMarginBased,MarkupPerc,WastePerc, ContainerID, ComponentOfLineID, 
[Rank], SupplierID, ProjectID, DivisionID,ContainerToID)


SELECT DD.DocID, STK.StockID, STK.StockCode, STK.StockDescription,D.DepSellingQty, SP.PriceCategoryID, 
isnull(SP.CostPriceEx,0) / STK.SoldByToPurchasedByRatio, isnull(SP.SellingPriceEx,0), 0 as [DiscPerc],
DD.TaxTypeID, DD.Tax, SP.IsMarginBased, SP.Markup, isnull(D.WastagePerc,0), DD.ContainerID, DD.LineID, 
DD.Rank + D.AccStock_DepID - (SELECT min(AccStock_DepID) FROM AccStock_Dep WHERE PriStockID = D.PriStockID) + 1  as [Rank] ,
SP.SupplierID, DD.ProjectID, DD.DivisionID,DD.ContainerToID
FROM AccStock_Dep D 
LEFT JOIN AccStock STK 
	ON D.DepStockID = STK.StockID 
LEFT JOIN (SELECT * FROM AccStockPrice where getdate() between ValidFrom and ValidTo) SP
	ON STK.StockID = SP.StockID AND D.PriceCategoryID =  SP.PriceCategoryID
CROSS JOIN (SELECT Top 1 * FROM {inserttable}  where LineID = @LineID) DD
Where D.PriStockID = DD.StockID
ORDER BY D.AccSTOCK_DepID
","0","","1","LRA-FUSION","0","0","fusion"
"40087","cv_Acc_Stock_Price_Reset","","UPDATE Cost_Estimate_Detail
SET [CostPriceEx] = Case when isnull(SP.IsForexDependant,0) = 1 then Forexdeptotal ELSE SP.CostPriceEx END ,
[PriceEx] = SP.SellingPriceEx,  
IsMarginBased = SP.IsMarginBased,
[MarkupPerc] = SP.Markup
FROM Cost_Estimate_Detail CED
LEFT JOIN (SELECT * FROM AccStockPrice where getdate() between validfrom and validto) SP
	ON CED.StockID = SP.StockID AND CED.PriceCategoryID = SP.PriceCategoryID
Where CED.DocID = {docid}
AND CED.StockID > 0 
AND isnull(SP.StockPriceID,0) > 0","0","","1","LRA-FUSION","0","0","fusion"
"40088","cv_Acc_Debtor_Quote_Details","","declare @DocID as int
set @DocID = {docid}

SELECT LineID, [Group], [Stock Code] as [Code], [Description], [Comments], Qty, Discount, [Price Ex.], [Price Incl.],[Total Incl.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1) ) as [Total Incl.],
	Rank, -1000 as [Rank2], 0 as [IsComponent]
	FROM DEBTOR_DETAIL  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	
	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1)) as [Total Incl.], 
	(SELECT Top 1 Rank From DEBTOR_DETAIL Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2], 1 as [IsComponent]
	FROM DEBTOR_DETAIL CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND DocID =  @DocID
	) A
{where}
ORDER BY  Rank,Rank2,LineID
","0","","1","LRA-FUSION","0","0","fusion"
"40089","cv_Acc_Calc_Component_Cost","","DECLARE @DocID as integer
SET @DocID = {docid}

UPDATE {tablename}
SET CostPriceEx = LC,
PriceEx = LC * CASE WHEN (isnull(DM.MarkupPerc,0) /100 + 1) < 1 then 1 ELSE (isnull(DM.MarkupPerc,0) /100 + 1) * (isnull(DM.WastePerc,0) /100 + 1) END
FROM {tablename} DM
LEFT JOIN (SELECT isnull(ComponentOfLineID,0) as [LineID], Sum(isnull(CostPriceEx,0) * isnull(qty,0))  as [LC] FROM  {tablename} WHERE DocID = @Docid Group by ComponentOfLineID) DD
ON DM.LineID = DD.LineID
WHERE DocID = @DocID
AND isnull(UseLandedCost,0) = 1

","0","","1","LRA-FUSION","0","0","fusion"
"40090","cv_ImportCompanies","","
insert into lookup(value,class,IsAllDiv)
select distinct [source],'LeadFrom',1 from [_CompanyImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'LeadFrom') L 
ON L.Value = cimp.[source]
WHERE l.LookupID IS NULL AND ISNULL([source],'') <> ''
   

insert into lookup(value,class,IsAllDiv)
select distinct category,'category',1 from [_CompanyImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'category') L
ON L.Value = cimp.category
WHERE l.LookupID IS NULL AND ISNULL(category,'') <> ''


insert into lookup(value,class,IsAllDiv)
select distinct businesscategory,'buscat',1 from [_CompanyImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'buscat') L
ON L.Value = cimp.businesscategory
WHERE l.LookupID IS NULL AND ISNULL(businesscategory,'') <> ''


insert into lookup(value,class,IsAllDiv)
select distinct [type],'type',1 from [_CompanyImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'type') L
ON L.Value = cimp.[type]
WHERE l.LookupID IS NULL AND ISNULL([type],'') <> ''

insert into linklookup (Value,	class,	LinkedTo)
select Distinct
Subtype
,'SubType'
,L.LookupID
from _CompanyImport CP
left Join Lookup L on CP.[Type]=L.Value and Class='Type'
where isnull(CP.SUbtype,'')<>'' AND  SubType NOT IN (sELECT vALUE FROM LINKLOOKUP )

insert into lookup(value,class,IsAllDiv)
select distinct [ABCField],'abc',1 from [_CompanyImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'abc') L
ON L.Value = cimp.[ABCField]
WHERE l.LookupID IS NULL AND ISNULL([ABCField],'') <> ''


insert into lookup(value,class,IsAllDiv)
select distinct [Industry],'canvasindustry',1 from [_CompanyImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'canvasindustry') L
ON L.Value = cimp.[Industry]
WHERE l.LookupID IS NULL AND ISNULL([Industry],'') <> ''


insert into lookup(value,class,IsAllDiv)
select distinct [Division],'divisions',1 from [_CompanyImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'divisions') L
ON L.Value = cimp.[Division]
WHERE l.LookupID IS NULL AND ISNULL([Division],'') <> ''


insert into lookup(value,class,IsAllDiv)
select distinct [Groups],'group',1 from [_CompanyImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'group') L
ON L.Value = cimp.[Groups]
WHERE l.LookupID IS NULL AND ISNULL([Groups],'') <> ''




INSERT INTO [Entity]
          (
          sourceid,
          --AlternateCompanyID,
          entitycategoryid,
          entitytypeid,
          buscatid,
          salesconsid,
          company,
          legalname,
          accountnum,
          vendornumber,
          email,
          switchboard,
          fax,
          website,
          vatnum,
          vatexemptnum,
          IndustryID,
          abccatid,
          compregnum,
          creditcardname,
          CreditCardNumber,
          bankbranchname,
          bankbranchcode,
          debitorder,
          entitysubtypeid
          )
     Select Distinct
                l4.lookupid,
               -- e2.entityid,
                l3.lookupid,
                l2.LookupID,
                l.Lookupid,
                s.Staffid,
                cimp.company,
                cimp.tradingas,
                cimp.accno,
                cimp.vendorno,
                cimp.email,
                cimp.switchboard,
                cimp.fax,
                cimp.url,
                cimp.vatno,
                cimp.vatexemptno,
                l6.LookupID,
                l7.Lookupid,
                cimp.RegistrationNo,
		bankname,
		AccountNum,
		branchname,
		branchcode,
		Convert(money,debitorder),
		l8.LinkLookupID
                                                                
from [_CompanyImport] cimp
left join (SELECT EntityID, Company FROM entity WITH (NOLOCK)) e on 
cimp.Company = e.Company
left join (SELECT StaffID, Firstname, Surname FROM staff WITH (NOLOCK)) s on
IsNull(s.FirstName,'') + ' ' + IsNull(s.Surname,' ') = cimp.Consultant
left join lookup l WITH (NOLOCK) on
l.Value = cimp.Businesscategory and l.Class = 'buscat'
left join lookup l2 WITH (NOLOCK) on
l2.Value = cimp.Type and l2.Class = 'type'     
left join lookup l3 WITH (NOLOCK) on
l3.Value = cimp.Category and l3.Class = 'category' 
left join lookup l4 WITH (NOLOCK) on
l4.Value = cimp.Source and l4.Class = 'LeadFrom' 
left join lookup l6 WITH (NOLOCK) on
l6.Value = cimp.Industry and l6.Class = 'canvasindustry' 
left join lookup l7 WITH (NOLOCK) on
l7.Value = cimp.ABCField and l7.Class = 'abc' 
left join (SELECT EntityID, Company FROM entity WITH (NOLOCK)) e2 on
e2.Company = cimp.[HoldingCo] 
Left Join LinkLookup l8 on l8.Value =Cimp.Subtype and L8.LinkedTo=l2.LookupID AND  L8.Class = 'Subtype'

where e.EntityID is null 
      
   Insert into [entity] (company)
select distinct [holdingco] from _CompanyImport cimp WITH (NOLOCK)
LEFT JOIN (SELECT EntityID, Company FROM Entity WITH (NOLOCK)) E ON E.Company = cimp.[holdingco]
WHERE E.EntityID IS NULL AND ISNULL([holdingco],'') <> ''
      
      
      -- update holding
      
      UPDATE Entity
SET AlternateCompanyID = t1.EntityID
FROM Entity t1
INNER JOIN _CompanyImport t2 ON t1.Company = t2.Company
WHERE ISNULL([holdingco],'') <> ''

  --1. update entitycontact
 --2.     
Insert Into EntityAddress
(
	entityid,
	addresstype,
	address1,
	address2,
	address3,
	City,
	Region,
	Code,
	Country

)
select distinct
	e.entityid,
	'Physical',
	cimp.address1 ,
	cimp.address2,
	cimp.address3,
	cimp.City
	,cimp.Province,
	cimp.Code,
	cimp.Country
from [_CompanyImport] cimp
left join (SELECT EntityID, Company FROM entity  WITH (NOLOCK)) e on 
cimp.Company = e.Company
LEFT JOIN (SELECT 
	EntityAddressID,
	EntityID,
	AddressType,
	Address1,
	Address2,
	Address3,
	City,
	Region,
	Code,
	Country,
	State,
	TempID
	FROM EntityAddress WITH (NOLOCK)
) ED 
ON 
	ISNULL(ED.Address1,'') + '' + 
	ISNULL(ED.Address2,'') + '' + 
	ISNULL(ED.Address3,'') + '' + 
	ISNULL(ED.AddressType,'') = ISNULL(cimp.address1,'') + '' + 
	ISNULL(cimp.address2,'') + '' + 
	ISNULL(cimp.address3,'') + 'Physical'
AND ED.EntityID = E.EntityID
where ED.EntityAddressID IS NULL 
and isnull(cimp.address1,'') +  isnull(cimp.address2,'') +  isnull(cimp.address3,'') + isnull(cimp.City,'') + isnull(cimp.Province,'') +  isnull(cimp.Code,'') + isnull(cimp.Country,'')  <>''
and e.entityid is not null  
       
Insert Into EntityAddress
(
	entityid,
	addresstype,
	address1,
	address2,
	address3,
	City,
	Region,
	Code,
	Country
)
select distinct
	e.entityid,
	'Postal',
	cimp.poaddress1,
	cimp.poaddress2,
	cimp.poaddress3,
	cimp.poCity,
	cimp.POProvince,
	cimp.POCode
	,cimp.POCountry
from [_CompanyImport] cimp
left join (SELECT EntityID, Company FROM entity  WITH (NOLOCK)) e on 
cimp.Company = e.Company
LEFT JOIN (SELECT 
	EntityAddressID,
	EntityID,
	AddressType,
	Address1,
	Address2,
	Address3,
	City,
	Region,
	Code,
	Country,
	State,
	TempID
	FROM EntityAddress WITH (NOLOCK)
) ED 
ON 
	ISNULL(ED.Address1,'') + '' + 
	ISNULL(ED.Address2,'') + '' + 
	ISNULL(ED.Address3,'') + '' + 
	ISNULL(ED.AddressType,'') = ISNULL(cimp.poaddress1,'') + '' + 
	ISNULL(cimp.poaddress2,'') + '' + 
	ISNULL(cimp.poaddress3,'') + 'Postal'
AND ED.EntityID = E.EntityID
where  ED.EntityAddressID IS NULL
and Isnull(cimp.poaddress1,'') +  Isnull(cimp.poaddress2,'') + Isnull(cimp.poaddress3,'') +  Isnull(cimp.poCity,'') + Isnull(cimp.POProvince,'') +  Isnull(cimp.POCode,'') + Isnull(cimp.POCountry,'') <>''
and e.entityid is not null  
 
 
 --insert into Entity Groups
INSERT INTO [EntityGroup]
   (
   [EntityID]
   ,[GroupID]
   )
select DISTINCT
	E.EntityID,
	G.LookupID
from [_CompanyImport] Cimp
Left Join (SELECT EntityID, Company FROM Entity WITH (NOLOCK)) E
on Cimp.Company = E.Company
Left Join Lookup G WITH (NOLOCK)
on G.Value=Cimp.Groups and G.Class = 'group' 
LEFT JOIN (
	SELECT 
	EntityGroupID,
	EntityID,
	GroupID 
	FROM [EntityGroup] WITH (NOLOCK)
) EG ON EG.EntityID = E.EntityID AND EG.GroupID = G.LookupID
where isnull(Cimp.Groups,'') <> '' 
AND EG.EntityGroupID IS NULL


-- insert into Entity Division
INSERT INTO [EntityDivision]
	(
	[EntityID]
	,[DivisionID]
	)
select DISTINCT
	E.EntityID,
	G.LookupID
from [_CompanyImport] Cimp
Left Join (SELECT EntityID, Company FROM Entity WITH (NOLOCK)) E
on Cimp.Company = E.Company
Left Join Lookup G WITH (NOLOCK)  
on G.Value=Cimp.Division and G.Class = 'divisions' 
LEFT JOIN (
	SELECT 
		EntityDivisionID,
		EntityID,
		DivisionID
	FROM [EntityDivision] WITH (NOLOCK)
) ED ON ED.EntityID = E.EntityID AND ED.DivisionID = G.LookupID
where isnull(Cimp.Division,'') <> '' 
AND ED.EntityDivisionID IS NULL

-- insert into

DECLARE @Event_ID int


DECLARE my_cursor CURSOR FOR
SELECT LookupID FROM LookUp
WHERE Class ='Divisions'

OPEN my_cursor

FETCH NEXT FROM my_cursor
INTO @Event_ID

WHILE @@FETCH_STATUS = 0
BEGIN
--cv_ImportCompanies

DECLARE @LookUp_ID int


DECLARE my_cursors CURSOR FOR
SELECT LookupID FROM LookUp



OPEN my_cursors

FETCH NEXT FROM my_cursors
INTO @LookUp_ID

WHILE @@FETCH_STATUS = 0
BEGIN



INSERT INTO LookupDivision (DivisionID,LookupID)

    VALUES (@Event_ID, 
    
    @LookUp_ID)
    
       FETCH NEXT FROM my_cursors
    INTO @LookUp_ID
END

CLOSE my_cursors
DEALLOCATE my_cursors

    FETCH NEXT FROM my_cursor
    INTO @Event_ID
END

CLOSE my_cursor
DEALLOCATE my_cursor
","0","","1","LRA-FUSION","0","0","fusion"
"40091","cv_ImportContacts","","--cv_ImportContacts

insert into lookup(value,class)
select distinct  abc,'abc' from _ContactImport ci WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'abc') L 
ON L.Value = ci.abc
WHERE l.lookupID IS NULL AND ISNULL(abc,'') <> ''

insert into lookup(value,class)
select distinct  [Title],'Title' from _ContactImport ci WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Title') L 
ON L.Value = ci.[Title]
WHERE l.lookupID IS NULL AND ISNULL([Title],'') <> ''

---------------------------------------------------------------------------------------
insert into lookup(value,class)
select distinct  Additional5,'Additional1' from _ContactImport ci WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Additional1') L 
ON L.Value = ci.Additional5
WHERE l.lookupID IS NULL AND ISNULL(Additional5,'') <> ''

insert into lookup(value,class)
select distinct  Additional6,'Additional2' from _ContactImport ci WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Additional2') L 
ON L.Value = ci.Additional6
WHERE l.lookupID IS NULL AND ISNULL(Additional6,'') <> ''

insert into lookup(value,class)
select distinct  Additional7,'Additional3' from _ContactImport ci WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Additional3') L 
ON L.Value = ci.Additional7
WHERE l.lookupID IS NULL AND ISNULL(Additional7,'') <> ''

insert into lookup(value,class)
select distinct  Additional8,'Additional4' from _ContactImport ci WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Additional4') L 
ON L.Value = ci.Additional8
WHERE l.lookupID IS NULL AND ISNULL(Additional8,'') <> ''

----------------------------------------------------------------------------------------

insert into lookup(value,class)
select distinct Industry,'category' from [_ContactImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'category') L 
ON L.Value = cimp.Industry
WHERE l.lookupID IS NULL AND ISNULL(Industry,'') <> ''

insert into lookup(value,class)
select distinct [type],'type' from [_ContactImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'type') L 
ON L.Value = cimp.[type]
WHERE l.lookupID IS NULL AND ISNULL([type],'') <> ''

insert into lookup(value,class)
select distinct department,'department' from [_ContactImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'department') L 
ON L.Value = cimp.department
WHERE l.lookupID IS NULL AND ISNULL(department,'') <> ''

insert into lookup(value,class)
select distinct Industry, 'canvasindustry' from [_ContactImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'canvasindustry') L 
ON L.Value = cimp.Industry
WHERE l.lookupID IS NULL AND ISNULL(Industry,'') <> ''

insert into lookup(value,class)
select distinct BusCat, 'buscat' from [_ContactImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'buscat') L 
ON L.Value = cimp.BusCat
WHERE l.lookupID IS NULL AND ISNULL(BusCat,'') <> ''

insert into lookup(value,class)
select distinct accounttype, 'accounttype' from [_ContactImport] cimp WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'accounttype') L 
ON L.Value = cimp.accounttype
WHERE l.lookupID IS NULL AND ISNULL(accounttype,'') <> ''

-- insert sub type
insert into linklookup(value,class,LinkedTo)
select distinct SubType, 'SubType',L.LookupID from [_ContactImport] cimp WITH (NOLOCK)
Left Join(select * from  LookUp WITH (NOLOCK) where class = 'Type') L on 
L.Value = cimp.[Type]
LEFT JOIN (
	SELECT 
	LinkLookupID,
	Value,
	class,
	LinkedTo,
	Comments,
	LocationID,
	InActive
	FROM linklookup WITH (NOLOCK)
	WHERE Class LIKE 'SubType'
) ll ON ll.Value = cimp.SubType
AND ll.LinkedTo = L.LookupID
where ll.LinkLookupID IS NULL 
and isnull(SubType,'') <> ''
AND L.LookupID IS NOT NULL

insert into entity (company)
select distinct cimp.company from _ContactImport cimp
LEFT JOIN (
	SELECT 
		EntityID
		, Company 
	FROM Entity WITH (NOLOCK)
) E ON E.Company = cimp.Company
where E.EntityID IS NULL AND ISNULL(cimp.company,'') <> ''

insert into  entitycontact
(              
	entityid,
    entitytypeid,
    departmentid,
    jobtitle,
    salesconsid,
    firstname,
    surname,
    homephone,
    fax,
    cell,
    phone1,
    title,
    initials,
    sendsms,
    sendemail,
    email,
    entitysubtypeid,
    IndustryID,
    buscatid,
    AdditionalID5,
    AdditionalID6,
    AdditionalID7,
    AdditionalID8,
    Additional1,
	Additional2,
	Additional3,
	Additional4,
	accounttypeid,
	ABCCatID,
	EntityCategoryID,
        IDNumber,
        BirthDate,
AnniversaryDate
)

select distinct
        e.EntityID,
        l2.lookupid,
        l.LookupID,
        ci.jobtitle,
        s.staffid,
        ci.firstname,
        ci.surname,
        ci.homephone,
        ci.directfaxno,
        ci.cell,
        ci.directtelno,
        ci.title,
        ci.initials,
        ci.sendsms,
        ci.sendemail,
        ci.email,
        LT.LinkLookupID,
        LI.lookupid,
        lBc.LookupID,
        
        LA1.Lookupid,
        LA2.Lookupid,
        LA3.Lookupid,
        LA4.Lookupid,
        Additional1,
        Additional2,
        Additional3,
        Additional4,
        LAC.LookupID,
        LABC.LookupID,
        LC.LookupID,
        ci.IDNumber,
        ci.Birthday,
        ci.Annivesary
from _ContactImport ci
left join (
	SELECT 
		EntityID
		, Company 
	FROM entity WITH (NOLOCK)
) e
on e.COmpany = ci.Company
left join (
	SELECT 
		StaffID
		, Firstname
		, Surname 
	FROM staff WITH (NOLOCK)
) s
on ISNULL(s.FirstName,'') + ' ' + ISNULL(s.surname,'') = ci.Consultant 
left join lookup l WITH (NOLOCK)
on l.Value = ci.Department and l.class = 'Department'
left join lookup l2 WITH (NOLOCK) on
l2.Value = ci.Type and l2.Class = 'type'  
left join linklookup LT WITH (NOLOCK) on 
l2.LookupID = LT.LinkedTo and LT.Class = 'Subtype'
and LT.value = Ci.Subtype
left join lookup lBc WITH (NOLOCK) on
lBc.Value = ci.BusCat and lBc.Class = 'buscat' 
left join lookup LI WITH (NOLOCK) on
LI.Value = ci.Industry and LI.Class = 'canvasindustry' 
LEFT JOIN (
	SELECT 
		EntityContactID
		, EntityID
		, Firstname
		, Surname 
	FROM EntityContact WITH (NOLOCK)
) EC
ON EC.EntityID = E.EntityID AND EC.Firstname = ci.Firstname and ec.surname = ci.surname

left join lookup LA1 WITH (NOLOCK) on
LA1.Value = ci.Additional5 and LA1.Class = 'Additional1' 
left join lookup LA2 WITH (NOLOCK) on
LA2.Value = ci.Additional6 and LA2.Class = 'Additional2' 
left join lookup LA3 WITH (NOLOCK) on
LA3.Value = ci.Additional7 and LA3.Class = 'Additional3' 
left join lookup LA4 WITH (NOLOCK) on
LA4.Value = ci.Additional8 and LA4.Class = 'Additional4' 
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'accounttype') LAC 
ON LAC.Value = ci.accounttype
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'category') LC 
ON LC.Value = ci.Industry
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'abc') LABC 
ON LABC.Value = ci.abc

where  IsNull(ci.firstname,'') + ' ' +  isnull(ci.surname ,'')<> ''
AND EC.EntityContactID IS NULL





Insert Into EntityAddress
(	
	EntityID
	,addresstype
	,address1
	,address2
	,address3
	,City
	,Region
	,Code
	,Country
	,tempid
)
select
	E.EntityID
	,'Physical'
	,cimp.address1
	,cimp.address2
	,cimp.address3
	,cimp.City
	,cimp.Province
	,cimp.Code
	,cimp.Country
	,EC.entitycontactid
from [_ContactImport] cimp
LEFT JOIN (
	SELECT 
		EntityID
		, Company 
	FROM Entity WITH (NOLOCK)
) E 
ON E.Company = cimp.Company
left join (
	SELECT 
		EntityContactID
		, EntityID
		, Firstname
		, Surname 
	FROM entitycontact WITH (NOLOCK)
) EC 
on cimp.FirstName = EC.FirstName 
AND cimp.Surname = EC.Surname 
AND EC.EntityID = E.EntityID
left join (
	SELECT 
		EntityAddressID,
		EntityID,
		AddressType,
		Address1,
		Address2,
		Address3,
		City,
		Region,
		Code,
		Country,
		State,
		TempID
	FROM entityaddress  WITH (NOLOCK)
	WHERE AddressType LIKE 'Physical'
) ead 
on 

ead.address1 = cimp.address1 
and ead.address2 = cimp.address2 
and ead.address3 = cimp.address3
AND ead.EntityID = E.EntityID
where ead.entityaddressid is null 
AND 
ISNULL(cimp.address1,'') + '' + 
ISNULL(cimp.address2,'') + '' + 
ISNULL(cimp.address3,'') + '' + 
ISNULL(cimp.City,'') + '' + 
ISNULL(cimp.Province,'') + '' + 
ISNULL(cimp.Code,'') + '' + 
ISNULL(cimp.Country,'') <> ''


UPDATE
ec
SET
ec.physicaladdrid = ead.entityaddressid
FROM
entitycontact ec
INNER JOIN
(SELECT * FROM entityaddress WHERE AddressType LIKE '%physical%') ead
ON
ec.entitycontactid = ead.tempid

  
 ------------------postal

 
 
Insert Into EntityAddress
(	
	EntityID
	,addresstype
	,address1
	,address2
	,address3
	,City
	,Region
	,Code
	,Country
	,tempid
)
select
	E.EntityID
	,'Postal'
	,cimp.poaddress1
	,cimp.poaddress2
	,cimp.poaddress3
	,cimp.poCity
	,cimp.poProvince
	,cimp.poCode
	,cimp.poCountry
	,EC.entitycontactid
from [_ContactImport] cimp
LEFT JOIN (
	SELECT 
		EntityID
		, Company 
	FROM Entity WITH (NOLOCK)
) E 
ON E.Company = cimp.Company
left join (
	SELECT 
		EntityContactID
		, EntityID
		, Firstname
		, Surname 
	FROM entitycontact WITH (NOLOCK)
) EC 
on cimp.FirstName = EC.FirstName 
AND cimp.Surname = EC.Surname 
AND EC.EntityID = E.EntityID
left join (
	SELECT 
		EntityAddressID,
		EntityID,
		AddressType,
		Address1,
		Address2,
		Address3,
		City,
		Region,
		Code,
		Country,
		State,
		TempID
	FROM entityaddress WITH (NOLOCK) 
	WHERE AddressType LIKE 'Postal'
) ead 
on 
ead.address1 = cimp.poaddress1 
and ead.address2 = cimp.poaddress2 
and ead.address3 = cimp.poaddress3
AND ead.EntityID = E.EntityID
where ead.entityaddressid is null 
AND 
ISNULL(cimp.poaddress1,'') + '' + 
ISNULL(cimp.poaddress2,'') + '' + 
ISNULL(cimp.poaddress3,'') + '' + 
ISNULL(cimp.poCity,'') + '' + 
ISNULL(cimp.poProvince,'') + '' + 
ISNULL(cimp.poCode,'') + '' + 
ISNULL(cimp.poCountry,'') <> ''




UPDATE
ec
SET
ec.postaladdrid = ead.entityaddressid
FROM
entitycontact ec
INNER JOIN
(SELECT * FROM entityaddress WHERE AddressType LIKE '%postal%')  ead
ON
ec.entitycontactid = ead.tempid


DELETE FROM LookupDivision
INSERT INTO LookupDivision (LookupID, DivisionID)
SELECT L.LookupID, LD.LookupID FROM Lookup L
LEFT JOIN (SELECT LookupID FROM Lookup WHERE Class LIKE 'divisions') LD ON 1 = 1

--DECLARE @Event_ID int

--DECLARE my_cursor CURSOR FOR
--SELECT LookupID FROM LookUp
--WHERE Class ='Divisions'

--OPEN my_cursor

--FETCH NEXT FROM my_cursor
--INTO @Event_ID

--WHILE @@FETCH_STATUS = 0
--BEGIN


--DECLARE @LookUp_ID int


--DECLARE my_cursors CURSOR FOR
--SELECT LookupID FROM LookUp



--OPEN my_cursors

--FETCH NEXT FROM my_cursors
--INTO @LookUp_ID

--WHILE @@FETCH_STATUS = 0
--BEGIN



--INSERT INTO LookupDivision (DivisionID,LookupID)

--    VALUES (@Event_ID, 
    
--    @LookUp_ID)
    
--       FETCH NEXT FROM my_cursors
--    INTO @LookUp_ID
--END

--CLOSE my_cursors
--DEALLOCATE my_cursors

--    FETCH NEXT FROM my_cursor
--    INTO @Event_ID
--END

--CLOSE my_cursor
--DEALLOCATE my_cursor

--DELETE FROM lookupDivision WHERE LookupID IN (
--	SELECT L.LookupID FROM Lookup L WITH (NOLOCK) 
--)
","0","","1","LRA-FUSION","0","0","fusion"
"40092","cv_ImportSuppliers","","insert into lookup(value,class)
select distinct [source],'source' from [_SupplierImport] cimp
where [source] not in
(select distinct value from lookup where class = 'source')
and isnull([source],'') <> ''            


insert into lookup(value,class)
select distinct ABC,'supplierabc' from [_SupplierImport] cimp
where ABC not in
(select distinct value from lookup where class = 'supplierabc')
and isnull(ABC,'') <> ''            


insert into lookup(value,class,isalldiv)
select distinct [Category],'suppliercategory',1 from
_SupplierImport cimp
where [Category] not in
(select distinct value from lookup where class = 'suppliercategory')
and isnull([Category],'') <> ''

insert into LookupDivision (LookupID,DivisionID)
select distinct  l2.Lookupid,l.LookupID 
from Lookup l,_SupplierImport ci
left join lookup l2 on
l2.Value = ci.[Category] and l2.Class = 'suppliercategory'
left join LookupDivision ld on
ld.LookupID = l2.LookupID 
where
isnull([Category],'') <> ''
and l.Class = 'Divisions'
and ld.LookupID is  null

insert into lookup(value,class,isalldiv)
select distinct [Type],'suppliertype',1 from
_SupplierImport cimp
where [Type] not in
(select distinct value from lookup where class = 'suppliertype')
and isnull([Type],'') <> ''

insert into LookupDivision (LookupID,DivisionID)
select distinct  l2.Lookupid,l.LookupID 
from Lookup l,_SupplierImport ci
left join lookup l2 on
l2.Value = ci.[Type] and l2.Class = 'suppliertype'
left join LookupDivision ld on
ld.LookupID = l2.LookupID 
where
isnull([Type],'') <> ''
and l.Class = 'Divisions'
and ld.LookupID is  null

insert into lookup(value,class,isalldiv)
select distinct BusinessCategory,'supplierbuscat',1 from
_SupplierImport cimp
where BusinessCategory not in
(select distinct value from lookup where class = 'supplierbuscat')
and isnull(BusinessCategory,'') <> ''

insert into LookupDivision (LookupID,DivisionID)
select distinct  l2.Lookupid,l.LookupID 
from Lookup l,_SupplierImport ci
left join lookup l2 on
l2.Value = ci.[BusinessCategory] and l2.Class = 'supplierbuscat'
left join LookupDivision ld on
ld.LookupID = l2.LookupID 
where
isnull([businesscategory],'') <> ''
and l.Class = 'Divisions'
and ld.LookupID is  null

                 insert into lookup(value,class)
     select distinct category,'category' from [_SupplierImport] cimp
     where category not in(select distinct value from lookup where class = 'category')
     and isnull(category,'') <> ''

     insert into lookup(value,class)
     select distinct businesscategory,'buscat' from [_SupplierImport] cimp
     where businesscategory not in(select distinct value from lookup where class = 'buscat')
     and isnull(businesscategory,'') <> ''

     insert into lookup(value,class)
     select distinct [type],'type' from [_SupplierImport] cimp
     where [type] not in(select distinct value from lookup where class = 'type')
     and isnull([type],'') <> ''

Insert into [entity] (company,issupplier)
select distinct [holdingco],'1' from _SupplierImport
where holdingco not in (select distinct [company] from entity )
and holdingco <> ''

INSERT INTO [Entity]
(
	issupplier
	,sourceid
	,AlternateCompanyID
	,entitycategoryid
	,entitytypeid
	,buscatid
	,salesconsid
	,company
	,legalname
	,accountnum
	,vendornumber
	,email
	,switchboard
	,fax
	,url
	,vatnum
	,vatexemptnum
	,compregnum
	,ABCCatID
	,CreditCardName
	,BankBranchName
	,BankBranchCode
	,CreditCardNumber
)
Select 
	1
	,l4.lookupid
	,e2.entityid
	,l3.lookupid
	,l5.LookupID
	,l.Lookupid
	,s.Staffid
	,cimp.company
	,cimp.TradingAs
	,cimp.accno
	,cimp.vendorno
	,cimp.email
	,cimp.switchboard
	,cimp.fax
	,cimp.url
	,cimp.vatno
	,cimp.vatexemptno
	,cimp.RegistrationNo
	,l6.LookupID
	,cimp.BankName
	,cimp.BranchName
	,cimp.BranchCode
	,cimp.BankAccountNum
from [_SupplierImport] cimp
left join entity e on 
cimp.Company = e.Company
left join staff s on
s.FirstName + ' ' + s.Surname = cimp.Consultant

left join lookup l on
l.Value = cimp.Businesscategory and l.Class = 'supplierbuscat'
left join lookup l2 on
l2.Value = cimp.Type and l2.Class = 'type'     

left join lookup l3 on
l3.Value = cimp.Category and l3.Class = 'suppliercategory' 
left join lookup l4 on
l4.Value = cimp.Source and l4.Class = 'source' 
left join lookup l5 on
l5.value = cimp.Type and l5.Class = 'suppliertype'
left join lookup l6 on
l6.value = cimp.ABC and l6.Class = 'supplierabc'
left join entity e2 on
e2.Company = cimp.[HoldingCo]    
where e.EntityID is null
 
      
  --1. update entitycontact
  --2.     
      
 Insert Into EntityAddress
 (entityid,addresstype,address1,address2,address3,City,Region,Code,Country)
 select
 e.entityid,'Physical',cimp.address1,cimp.address2,cimp.address3,cimp.City,cimp.Province,cimp.Code,cimp.Country
 from [_SupplierImport] cimp
     left join entity e on 
      cimp.Company = e.Company
      left join entityaddress ead on
       ead.EntityID = e.EntityID and ead.Addresstype like '%Physical%'
       where ead.entityid is null and (
    ISNULL(cimp.address1,'') <> '' 
   )
       
       
        Insert Into EntityAddress
 (entityid,addresstype,address1,address2,address3,City,Region,Code,Country)
 select
 e.entityid,'Postal',cimp.poaddress1,cimp.poaddress2,cimp.poaddress3,cimp.poCity,cimp.POProvince,cimp.POCode,cimp.POCountry
 from [_SupplierImport] cimp
     left join entity e on 
      cimp.Company = e.Company
      left join entityaddress ead on
       ead.EntityID = e.EntityID and ead.addresstype like '%Postal%'
       where ead.entityid is null and (
    ISNULL(cimp.poaddress1,'') <> ''
   )




DECLARE @Event_ID int


DECLARE my_cursor CURSOR FOR
SELECT LookupID FROM LookUp
WHERE Class ='Divisions'

OPEN my_cursor

FETCH NEXT FROM my_cursor
INTO @Event_ID

WHILE @@FETCH_STATUS = 0
BEGIN
--cv_ImportCompanies

DECLARE @LookUp_ID int


DECLARE my_cursors CURSOR FOR
SELECT LookupID FROM LookUp



OPEN my_cursors

FETCH NEXT FROM my_cursors
INTO @LookUp_ID

WHILE @@FETCH_STATUS = 0
BEGIN



INSERT INTO LookupDivision (DivisionID,LookupID)

    VALUES (@Event_ID, 
    
    @LookUp_ID)
    
       FETCH NEXT FROM my_cursors
    INTO @LookUp_ID
END

CLOSE my_cursors
DEALLOCATE my_cursors

    FETCH NEXT FROM my_cursor
    INTO @Event_ID
END

CLOSE my_cursor
DEALLOCATE my_cursor","0","","1","LRA-FUSION","0","0","fusion"
"40093","cv_ImportSupplierContacts","","insert into lookup(value,class)
select distinct  [Title],'jobtitle' from _SupplierContactImport ci
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'jobtitle') L
ON l.Value = ci.[Title]
WHERE l.lookupid is null and ISNULL([Title],'') <> ''


insert into lookup(value,class,isalldiv)
select distinct  [type],'suppliertype',1 from _SupplierContactImport ci
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'suppliertype') L
ON l.Value = ci.[type]
WHERE l.lookupid is null and ISNULL([type],'') <> ''


insert into LookupDivision (LookupID,DivisionID)
select distinct  
	l2.Lookupid,l.LookupID 
from Lookup l,_SupplierContactImport ci
left join lookup l2 on
l2.Value = ci.[type] and l2.Class = 'suppliertype'
left join LookupDivision ld on
ld.LookupID = l2.LookupID 
where
isnull([type],'') <> ''
and l.Class = 'Divisions'
and ld.LookupID is  null

  
insert into lookup(value,class)
select distinct [type],'type' from [_SupplierContactImport] ci
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'type') L
ON l.Value = ci.[type]
WHERE l.lookupid is null and ISNULL([type],'') <> ''





insert into lookup(value,class)
select distinct department,'department' from [_SupplierContactImport] ci
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'department') L
ON l.Value = ci.department
WHERE l.lookupid is null and ISNULL(department,'') <> ''


insert into entity (company,issupplier)
select distinct LTRIM(RTRIM(ci.Company)),1 from _SupplierContactImport  ci 
LEFT JOIN (SELECT EntityID, Company FROM Entity WHERE issupplier = 1) E 
ON RTRIM(LTRIM(E.Company)) = LTRIM(RTRIM(ci.Company))
where E.EntityID IS NULL AND
LTRIM(RTRIM(ci.Company)) <> '' 

insert into  entitycontact(
	issupplier
	,entityid
	,entitycategoryid
	,departmentid
	,jobtitle
	,salesconsid
	,firstname
	,surname
	,homephone
	,fax
	,cell
	,phone1
	,title
	,initials
	,sendsms
	,sendemail
	,email
	,department
	,entitytypeid
	--,tempid
	,owninguserid
)
select DISTINCT
	1
	,e.EntityID
	,l2.lookupid
	,l.LookupID
	,ci.jobtitle
	,s.staffid
	,ci.firstname
	,ci.surname
	,ci.homephone
	,ci.directfaxno
	,ci.cell
	,ci.directtelno
	,ci.title
	,ci.initials
	,ci.sendsms
	,ci.sendemail
	,ci.email
	,ci.department
	,l3.LookupID 
	--,ci.ID
	,0
from _SupplierContactImport ci
left join (
	SELECT 
		EntityID
		, Company 
	FROM entity 
	WHERE Issupplier = 1
) e
on e.COmpany = ci.Company 
left join (
	SELECT 
		EntityContactID
		, Firstname
		, Surname
		, EntityID 
	FROM entitycontact 
	WHERE issupplier = 1
) ec
on ec.Firstname = ci.Firstname 
and ec.Surname = ci.Surname 
AND EC.EntityID = E.EntityID
left join (SELECT StaffID, Firstname, Surname FROM staff) s
on IsNull(s.FirstName,'') + ' ' + IsNull(s.surname,'') = ci.Consultant 
left join lookup l
on l.Value = ci.Department    
and l.class = 'Department'
left join lookup l2 on
l2.Value = ci.Type 
and l2.Class = 'type'    
left join Lookup l3 
on l3.Value = ci.Type 
and l3.Class = 'suppliertype'
where ec.Entitycontactid is null
and IsNull(ci.firstname,'') + ISNULL(ci.Surname,'') <> ''




Insert Into EntityAddress(
	EntityID
	,addresstype
	,address1
	,address2
	,address3
	,City
	,Region
	,Code
	,Country
	,tempid
)
select distinct
	E.EntityID
	,'Physical'
	,cimp.address1
	,cimp.address2
	,cimp.address3
	,cimp.City
	,cimp.Province
	,cimp.Code
	,cimp.Country
	,EC.EntityContactID
from [_SupplierContactImport] cimp
LEFT JOIN (
	SELECT 
		EntityID
		, Company 
	FROM Entity WHERE Issupplier = 1
) E
ON RTRIM(LTRIM(E.Company)) = LTRIM(RTRIM(cimp.Company))
left join (
	SELECT 
		EntityContactID
		, EntityID
		, Firstname
		, Surname 
	FROM entitycontact 
	WHERE issupplier = 1
) EC 
on cimp.FirstName = ec.FirstName 
AND cimp.Surname = EC.Surname
AND EC.EntityID = E.EntityID
left join (
	SELECT 
		EntityAddressID,
		EntityID,
		AddressType,
		Address1,
		Address2,
		Address3,
		City,
		Region,
		Code,
		Country,
		State,
		TempID
	FROM entityaddress
	WHERE AddressType LIKE 'Physical'
) ead 
on ead.address1 = cimp.address1 
and ead.address2 = cimp.address2 
and ead.address3 = cimp.address3
AND ead.EntityID = E.EntityID

where ead.entityaddressid is null
and (
ISNULL(cimp.address1,'') <> '' and ISNULL(cimp.address2,'') <> '' and ISNULL(cimp.address3,'') <> ''
)
 


 UPDATE
 ec
 SET
 ec.physicaladdrid = ead.entityaddressid
 FROM
 entitycontact ec
 INNER JOIN
 entityaddress ead
 ON
 ec.EntityContactID = ead.tempid
 and ead.AddressType = 'Physical'
 and ec.PhysicalAddrID is null
 
  
 ------------------postal
 
 
 
Insert Into EntityAddress(
	EntityID
	,addresstype
	,address1
	,address2
	,address3
	,City
	,Region
	,Code
	,Country
	,tempid
)
select distinct
	E.EntityID
	,'Postal'
	,cimp.poaddress1
	,cimp.poaddress2
	,cimp.poaddress3
	,cimp.poCity
	,cimp.poProvince
	,cimp.poCode
	,cimp.poCountry
	,EC.EntityContactID
from [_SupplierContactImport] cimp
LEFT JOIN (
	SELECT 
		EntityID
		, Company 
	FROM Entity 
	WHERE Issupplier = 1
) E ON 
LTRIM(RTRIM(E.Company)) = LTRIM(RTRIM(cimp.Company))

left join (
	SELECT 
		EntityContactID
		, EntityID
		, Firstname
		, Surname 
	FROM entitycontact
) EC on 
cimp.FirstName = EC.FirstName 
and cimp.Surname = EC.Surname 
AND EC.EntityID = E.EntityID
left join (
	SELECT 
		EntityAddressID,
		EntityID,
		AddressType,
		Address1,
		Address2,
		Address3,
		City,
		Region,
		Code,
		Country,
		State,
		TempID
	FROM entityaddress
	WHERE AddressType LIKE 'Postal'
) ead 
on ead.address1 = cimp.poaddress1 
and ead.address2 = cimp.poaddress2 
and ead.address3 = cimp.poaddress3
AND ead.EntityID = E.EntityID
where ead.entityaddressid is null
and (
ISNULL(cimp.poaddress1,'') <> '' 
and ISNULL(cimp.poaddress2,'') <> '' 
and ISNULL(cimp.poaddress3,'') <> ''
)


 UPDATE
 ec
 SET
 ec.postaladdrid = ead.entityaddressid
 FROM
 entitycontact ec
 INNER JOIN
 entityaddress ead
 ON
 ec.EntityContactID = ead.tempid
 and ead.AddressType = 'Postal'
and ec.PostalAddrID is null
","0","","1","LRA-FUSION","0","0","fusion"
"40094","cv_importResourcesbk","","--cv_importResources
INSERT INTO Lookup (Value, Class)
SELECT Distinct DefaultGroupName, 'quoteGroup' FROM _ResourceImport A WITH (NOLOCK)
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'quoteGroup'
) L ON L.Value = A.DefaultGroupName
WHERE L.LookupID IS NULL AND ISNULL(A.DefaultGroupName,'') <> ''


INSERT INTO AccTaxType (TaxTypeName,TaxPercentage)
SELECT TaxType,CAST(TaxPerc as decimal(12,2)) FROM _ResourceImport A WITH (NOLOCK)
LEFT JOIN (SELECT TaxTypeID, TaxTypeName FROM AccTaxType) AT 
ON A.TaxType = AT.TaxTypeName
WHERE AT.TaxTypeID IS NULL AND ISNULL(A.TaxType,'') <> ''

 
insert into Lookup (value,class,info)
select distinct 
	[ResourceType]
	,'StockType'
	,'Resource' 
from _ResourceImport A WITH (NOLOCK)
LEFT JOIN  lookup cl WITH (NOLOCK) 
ON A.[ResourceType] = cl.Value    
AND cl.class = 'StockType'
WHERE CL.LookupID is null
and ISNULL([ResourceType],'') <> ''
 
insert into entity (company,issupplier)
select distinct 
	preferredsupplier
	,1 
from _Resourceimport RI WITH (NOLOCK) 
LEFT JOIN (
	SELECT 
		EntityID
		, Company
		, issupplier 
	FROM Entity WITH (NOLOCK)  
	WHERE ISNULL(issupplier,0) = 1
) E 
ON E.Company = RI.preferredsupplier
WHERE E.EntityID IS NULL AND ISNULL(preferredsupplier,'') <> ''

  
insert into  linklookup (value,class,linkedto)
select distinct 
	[ResourceSubType]
	,'stocksubtype'
	,l.LookupID 
from _ResourceImport simp WITH (NOLOCK)
left join  Lookup l WITH (NOLOCK) on
l.Value = simp.[ResourceType]   
and l.Class = 'StockType'
left join  linklookup ll WITH (NOLOCK) on
ll.Value = [ResourceSubType]   
and ll.class = 'stocksubtype'
where ll.LinkLookupID  is null  
and [ResourceSubType] is not null
and ISNULL([ResourceSubType],'') <> '' 
AND l.LookupID  IS NOT NULL
 
 
INSERT INTO Lookup (Value, Class)
SELECT 
	GLGroup
	, 'JournalType'  
FROM _ResourceImport simp WITH (NOLOCK) 
LEFT JOIN (
	SELECT 
		LookupID
		,Value 
		,'JournalType' as Class
	FROM Lookup WITH (NOLOCK) 
	where class like 'JournalType' 
	 
	UNION ALL

	SELECT -1, 'ACCOUNTS RECEIVABLE','JournalType' 

	UNION ALL

	SELECT -2, 'OUTPUT VAT CONTROL','JournalType'  

	UNION ALL

	SELECT -3, 'COST OF SALES' ,'JournalType' 

	UNION ALL

	SELECT -4, 'INVENTORY' ,'JournalType' 

	UNION ALL

	SELECT -5, 'INPUT VAT CONTROL' ,'JournalType' 

	UNION ALL

	SELECT -6, 'BANK' ,'JournalType' 

	UNION ALL

	SELECT -8, 'FOREIGN EXCHANGE' ,'JournalType' 

	UNION ALL

	SELECT -9, 'ACCOUNTS PAYABLE' ,'JournalType' 

	UNION ALL

	SELECT -10, 'UN-RECEIVED INVENTORY' ,'JournalType' 

	UNION ALL

	SELECT -11, 'PREPAID EXPENSE' ,'JournalType' 

	UNION ALL

	SELECT -12, 'CAPITAL' ,'JournalType' 

	UNION ALL

	SELECT -13, 'INVENTORY EXPENSE' ,'JournalType' 

	UNION ALL

	SELECT -14, 'CAPITAL INPUT VAT CONTROL' ,'JournalType' 

	UNION ALL

	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' ,'JournalType' 

	UNION ALL

	SELECT -16, 'DISCOUNT ALLOWED' ,'JournalType' 

	UNION ALL

	SELECT -17, 'DISCOUNT RECEIVED' ,'JournalType' 

	UNION ALL

	SELECT -18, 'OPENING BALANCE' ,'JournalType' 
) LJ 
ON LJ.Value = simp.GLGroup	 
WHERE LJ.LookupID IS NULL 
AND ISNULL(simp.GLGroup,'') <> ''
and LJ.Class = 'JournalType'

INSERT INTO lookup (Value, Class)
SELECT distinct 
	soldin
	, 'buysellunits' 
FROM _ResourceImport simp WITH (NOLOCK) 
left join lookup l3 WITH (NOLOCK) on
l3.value = simp.soldin 
and l3.class = 'buysellunits'
WHERE l3.LookupID IS NULL 
AND ISNULL(soldin,'') <> ''
 
INSERT INTO lookup (Value, Class)
SELECT distinct 
	purchasedin
	, 'buysellunits' 
FROM _ResourceImport simp WITH (NOLOCK) 
left join lookup l4 WITH (NOLOCK) on
l4.value = simp.purchasedin 
and l4.class = 'buysellunits'
WHERE l4.LookupID IS NULL 
AND ISNULL(purchasedin,'') <> ''
 
insert into accstock (
	extraspecifications
	,brochurepath
	,stockcode
	,stockdescription
	,StockType 
	,SubTypeID
	,IsTangible
	,soldbytopurchasedbyratio
	,ReOrderLevel
	,LeadTime
	,Warranty
	,JournalID 
	,SoldBy
	,PurchasedBy
	,requiresscanning
	,istaxpayment
	,ispipeline
	,barcode
	,specifications
	,quoteGroupID
	,TaxTypeID
	,DateCreated
	,DateModified
        ,Fulfillment
        ,StockValuationMethod
,ReportCategory
)
 
 
select DISTINCT
	simp.extraspecifications
	,simp.brochurepath

	,code
	,description
	,l.LookupID
	,ll.LinkLookupID
	--,bulkcostpriceexvat
	,simp.istangible
	,soldinpurchasedinratio
	,stockreorderlevel
	,reorderleadtime
	,warrantyperiod
	,l2.LookupID as GL
	,l3.lookupid
	,l4.lookupid
	--,entityid
	,simp.requiresserialnumber
	,simp.isvatexempt
	,ShowInSalesPipeline
	,simp.barcode
	,simp.comments
	,LQ.Lookupid
	,AT.TaxTypeID
	,GETDATE()
	,GETDATE()
        ,Fulfillment
        ,Valuation
,ReportCategory
from _ResourceImport simp WITH (NOLOCK) 
left join  lookup l WITH (NOLOCK) on 
l.Value = simp.[ResourceType]    
and l.Class = 'StockType'
left join  linklookup ll WITH (NOLOCK) on
ll.Value = simp.[ResourceSubType ]    
and ll.class = 'stocksubtype'
and ll.LinkedTo = l.LookupID 
left join (SELECT StockID, StockCode FROM accstock WITH (NOLOCK)) acc on 
acc.StockCode = simp.Code  
left join (
	SELECT  distinct 
		LookupID
		,Value 
		,Class
	FROM Lookup WITH (NOLOCK) 
	where class like 'JournalType' 

	UNION ALL

	SELECT -1, 'ACCOUNTS RECEIVABLE', 'JournalType'

	UNION ALL

	SELECT -2, 'OUTPUT VAT CONTROL' , 'JournalType'

	UNION ALL

	SELECT -3, 'COST OF SALES' , 'JournalType'

	UNION ALL

	SELECT -4, 'INVENTORY' , 'JournalType'

	UNION ALL

	SELECT -5, 'INPUT VAT CONTROL' , 'JournalType'

	UNION ALL

	SELECT -6, 'BANK' , 'JournalType'

	UNION ALL

	SELECT -8, 'FOREIGN EXCHANGE' , 'JournalType'

	UNION ALL

	SELECT -9, 'ACCOUNTS PAYABLE' , 'JournalType'

	UNION ALL

	SELECT -10, 'UN-RECEIVED INVENTORY' , 'JournalType'

	UNION ALL

	SELECT -11, 'PREPAID EXPENSE' , 'JournalType'

	UNION ALL

	SELECT -12, 'CAPITAL' , 'JournalType'

	UNION ALL

	SELECT -13, 'INVENTORY EXPENSE' , 'JournalType'

	UNION ALL

	SELECT -14, 'CAPITAL INPUT VAT CONTROL' , 'JournalType'

	UNION ALL

	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' , 'JournalType'

	UNION ALL

	SELECT -16, 'DISCOUNT ALLOWED' , 'JournalType'

	UNION ALL

	SELECT -17, 'DISCOUNT RECEIVED' , 'JournalType'

	UNION ALL

	SELECT -18, 'OPENING BALANCE' , 'JournalType'
) l2 on
l2.Value = simp.GLGroup 
and l2.Class = 'JournalType'
left join lookup l3 WITH (NOLOCK) on
l3.value = simp.soldin and l3.class = 'buysellunits'
left join lookup l4 WITH (NOLOCK) on
l4.value = simp.purchasedin and l4.class = 'buysellunits'
left join (SELECT EntityID,Company FROM entity WITH (NOLOCK) WHERE ISNULL(Issupplier,0) = 1) e 
on e.Company = simp.PreferredSupplier and simp.PreferredSupplier <> ''
left join exchangerates ex WITH (NOLOCK) on
ex.Currency = simp.ForexCurrency
left join exchangerates ex2 WITH (NOLOCK) on
ex2.Currency = simp.ConvertBackUsing
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'quoteGroup'
) LQ 
ON LQ.Value = simp.DefaultGroupName
LEFT JOIN (SELECT TaxTypeID, TaxTypeName FROM AccTaxType) AT 
ON simp.TaxType = AT.TaxTypeName
 where  acc.StockID is null 
 
 
INSERT INTO Lookup (Value, Class)
SELECT distinct 
	Division
	,'Divisions' 
FROM _resourceimport simp WITH (NOLOCK)
LEFT JOIN (
SELECT * FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Divisions'
) LD ON LD.Value = simp.Division
WHERE LD.LookupID IS NULL 
AND ISNULL(Division,'') <> ''
 
 
insert into linklookup (value,class,LinkedTo)
select distinct 
	container
	,'StockContainer'
	,LD.LookupID 
from 
_ResourceImport RI WITH (NOLOCK)
LEFT JOIN (
	SELECT 
		LookupID
		,Value 
	FROM Lookup WITH (NOLOCK) 
	WHERE Class LIKE 'Divisions'
) LD 
ON LD.Value = RI.Division
LEFT JOIN (SELECT * FROM linklookup WHERE Class LIKE 'StockContainer'
) LL ON LL.Value = RI.container AND LL.LinkedTo = LD.LookupID
where LL.LinkLookupID IS NULL 
and ISNULL(container,'') <> '' AND LD.LookupID IS NOT NULL



insert into accstockcontainer(
	stockid
	,containerid
)
select DISTINCT 
	ac.stockid
	,linklookupid
from _resourceimport impr 
left join
(
	SELECT 
		StockID
		, StockCode 
	FROM accstock
) ac on
impr.Code = ac.StockCode
left join (
SELECT 
	LinkLookupID,
	Value,
	class,
	LinkedTo,
	Comments,
	LocationID,
	IsActive
FROM linklookup
WHERE Class  = 'StockContainer'
) l 
on l.Value = impr.Container
LEFT JOIN (
	SELECT 
		StockContainerID,
		StockID,
		ContainerID
	FROM accstockcontainer
) SC ON SC.StockID = AC.StockID AND SC.ContainerID = l.LinkLookupID 
WHERE SC.StockContainerID IS NULL AND AC.StockID IS NOT NULL AND l.LinkLookupID IS NOT NULL
AND ISNULL(impr.Container,'') <> ''


-- update accstock set markup = sellingpriceex/costpriceex
--update accstock set forexdeptotal =  (sellingpriceex / markup ) where isforexdependant = 1  

","0","","1","LRA-FUSION","0","0","fusion"
"40095","cv_importleads","","--cv_importleads
Insert into lookup (Value,Class)
select distinct Division,'Divisions' from 
_leadimport IL WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Divisions') L
ON L.Value = IL.Division
WHERE l.LookupID IS NULL AND ISNULL(Division,'') <> ''

Insert into lookup (Value,Class)
select distinct Position,'JobTitle' from 
_leadimport IL WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'JobTitle') L
ON L.Value = IL.Position
WHERE l.LookupID IS NULL AND ISNULL(Position,'') <> ''

Insert into lookup (Value,Class)
select distinct Industry,'canvasindustry' from 
_leadimport IL WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'canvasindustry') L
ON L.Value = IL.Industry
WHERE l.LookupID IS NULL AND ISNULL(Industry,'') <> ''

Insert into lookup (Value,Class)
select distinct category,'category' from 
_leadimport IL WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'category') L
ON L.Value = IL.category
WHERE l.LookupID IS NULL AND ISNULL(category,'') <> ''

Insert into lookup (Value,Class)
select distinct Status,'Leadstatus' from 
_leadimport IL WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Leadstatus') L
ON L.Value = IL.Status
WHERE l.LookupID IS NULL AND ISNULL(Status,'') <> ''

Insert into lookup (Value,Class)
select distinct [NextAction],'Leadnextaction' from 
_leadimport IL WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Leadnextaction') L
ON L.Value = IL.[NextAction]
WHERE l.LookupID IS NULL AND ISNULL([NextAction],'') <> ''

Insert into lookup (Value,Class)
select distinct [LeadFrom],'Leadfrom' from 
_leadimport IL WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Leadfrom') L
ON L.Value = IL.[LeadFrom]
WHERE l.LookupID IS NULL AND ISNULL([LeadFrom],'') <> ''
  

Insert into lookup (Value,Class)
select distinct department,'department' from 
_leadimport IL WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'department') L
ON L.Value = IL.department
WHERE l.LookupID IS NULL AND ISNULL(department,'') <> ''  

Insert into lookup (Value,Class)
select distinct Dealtype,'Dealtype' from 
_leadimport IL WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Dealtype') L
ON L.Value = IL.Dealtype
WHERE l.LookupID IS NULL AND ISNULL(Dealtype,'') <> ''  


Insert into lookup (Value,Class)
select distinct Probability,'PipelineProbability' from 
_leadimport IL WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'PipelineProbability') L
ON L.Value = IL.Probability
WHERE l.LookupID IS NULL AND ISNULL(Probability,'') <> ''  
  

  
Insert into  lead  
(	company
	,NextActionID
	,LeadStatus
	,LeadFromID
	,RegionID
	,PositionID
	,DivisionID
	,SubSalesConsultantID
	,agentid
	,firstname
	,lastname
	,phone1
	,phone2
	,Cell
	,email
	,nextdate
	,lastdate
	,IndustryID
	,CategoryID
	,DepartmentID
	,DealTypeID
	,Possibilty
	,CommPerc1
	,CommPerc2
	,Amount
	,ReoccurringAmount
	,Website
)

select   
	DISTINCT 
	IL.company
	,lna.LookupID
	,ls.LookupID 
	,lf.LookupID leadfrom
	,lr.LookupID 
	,lPosition.LookupID Position
	,lDiv.lookupID Division
	,u.Userid
	,u2.UserID
	,il.[firstname]
	,il.[surname]
	,il.[phone1]
	,il.[phone2]
	,IL.[cell]
	,IL.email
	,[nextcontactdate]
	,[lastcontactdate]
	,lind.LookupID
	,lcat.lookupID
	,ldep.lookupID
	,ldt.lookupID
	,lpp.lookupID
	,CASE ISNUMERIC(IL.Commission) WHEN 1 THEN CAST(IL.Commission AS MONEY) ELSE 0 END
	,CASE ISNUMERIC(IL.SubCommission) WHEN 1 THEN CAST(IL.SubCommission AS MONEY) ELSE 0 END
	,CASE ISNUMERIC(IL.InitialAmount) WHEN 1 THEN CAST(IL.InitialAmount AS MONEY) ELSE 0 END
	,CASE ISNUMERIC(IL.ReoccurringAmt) WHEN 1 THEN CAST(IL.ReoccurringAmt AS MONEY) ELSE 0 END
	,IL.Website
 from _leadimport IL WITH (NOLOCK)
left join (
	SELECT 
		LeadID
		, Firstname
		, Lastname
		, Company 
	FROM lead WITH (NOLOCK)
) L 
on IL.Company = L.Company 
and L.FirstName = IL.[FirstName] 
and L.Lastname = IL.[surname]
Left join lookup lDiv WITH (NOLOCK) 
on lDiv.Value = IL.Division and lDiv.Class = 'Divisions'
Left join lookup lPosition WITH (NOLOCK) 
on lPosition.Value = IL.Position and lPosition.Class = 'Jobtitle'
Left join lookup lr WITH (NOLOCK) 
on lr.Value = IL.Region and lr.Class = 'Regions'
Left join lookup lf WITH (NOLOCK) 
on lf.Value = IL.[LeadFrom] and lf.Class = 'LeadFrom'
Left join lookup ls WITH (NOLOCK) 
on ls.Value = IL.Status and ls.Class = 'LeadStatus'
Left join lookup lna WITH (NOLOCK) 
on lna.Value = IL.[NextAction] and lna.Class = 'LeadNextAction'
Left join lookup lind WITH (NOLOCK) 
on lind.Value = IL.[Industry] and lind.Class = 'canvasindustry'
Left join lookup lcat WITH (NOLOCK) 
on lcat.Value = IL.category and lcat.Class = 'category'
Left join lookup ldep WITH (NOLOCK) 
on ldep.Value = IL.department and ldep.Class = 'department'
Left join lookup ldt WITH (NOLOCK) 
on ldt.Value = IL.Dealtype and ldt.Class = 'Dealtype'
Left join lookup lpp WITH (NOLOCK) 
on lpp.Value = IL.Probability and lpp.Class = 'PipelineProbability'
left JOIN (SELECT UserID, Firstname, surname FROM users WITH (NOLOCK) ) u 
ON (ISNULL(u.FirstName,'') + ' ' + ISNULL(u.Surname,'')) = il.SalesConsultant
left JOIN (SELECT UserID, Firstname, surname FROM users WITH (NOLOCK) ) u2 
ON (ISNULL(u2.FirstName,'') + ' ' + ISNULL(u2.Surname,'')) = il.SubConsultant
where L.LeadID is NULL

insert into leadcontacts (
	leadid
	,firstname
	,surname
	,phone1
	,cell
	,email
)
select  DISTINCT 
	L.LeadID
	,il.[firstname]
	,il.[surname]
	,il.[phone1]
	,IL.[cell]
	,IL.email 
from _leadimport il
left join  (
	SELECT 
		LeadID
		, Company
		, Firstname
		, Lastname 
	FROM lead WITH (NOLOCK)
) L 
on l.Company = IL.COmpany 
and L.Firstname = IL.[firstname] 
and l.LastName = IL.[Surname]
left join (
SELECT
	LeadContactID,
	LeadID,
	FirstName,
	Surname,
	Phone1,
	Cell,
	Email
FROM leadcontacts WITH (NOLOCK)) lc 
on lc.LeadID = L.leadid 
AND lc.Firstname = il.Firstname 
AND lc.Surname = il.[surname]
where lc.LeadID is null and L.Leadid is not null ","0","","1","LRA-FUSION","0","0","fusion"
"40096","cv_ImportCanvas","","--cv_ImportCanvas
insert into Lookup (Value, Class)
SELECT distinct Division, 'Divisions' FROM _canvasimport ci
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'Divisions') L
ON L.Value = ci.Division 
WHERE L.LookupID IS NULL AND ISNULL(ci.Division,'') <> ''

insert into Lookup (Value, Class)
SELECT distinct POsition, 'JobTitle' FROM _canvasimport ci
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'JobTitle') L
ON L.Value = ci.POsition 
WHERE L.LookupID IS NULL AND ISNULL(ci.POsition,'') <> ''

insert into Lookup (Value, Class)
SELECT distinct INdustry, 'canvasindustry' FROM _canvasimport ci
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'canvasindustry') L
ON L.Value = ci.INdustry 
WHERE L.LookupID IS NULL AND ISNULL(ci.INdustry,'') <> ''


insert into Lookup (Value, Class)
SELECT distinct NextAction, 'leadnextaction' FROM _canvasimport ci
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'leadnextaction') L
ON L.Value = ci.NextAction 
WHERE L.LookupID IS NULL AND ISNULL(ci.NextAction,'') <> ''

insert into Lookup (Value, Class)
SELECT [Status], 'leadstatus' FROM _canvasimport ci
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'leadstatus') L
ON L.Value = ci.[Status] 
WHERE L.LookupID IS NULL AND ISNULL(ci.[Status],'') <> ''




INSERT INTO canvas (
    Agentid
    ,DivisionID
    ,Company
    ,Contact
    ,ContactNo
    ,Email
    ,PositionID
    ,IndustryID
    ,NextActionID
    ,NextContactDate
    ,[Status] 
    ,DateCreated 
    ,CreatedBy 
)
SELECT DISTINCT 
    u.Userid
    ,l.LookupID
    ,RTRIM(LTRIM(cimp.Company))
    ,RTRIM(LTRIM(cimp.Contact))
    ,RTRIM(LTRIM(cimp.ContactNo))
    ,RTRIM(LTRIM(cimp.Email))
    ,l2.LookupID 
    ,l3.LookupID
    ,l4.lookupid
    ,CONVERT(DATETIME,cimp.NextContactDate)
    ,l5.lookupid
   ,CONVERT(DATETIME,cimp.DateCreated) 
   ,cb.userID
FROM _canvasimport cimp WITH (NOLOCK)
LEFT JOIN (SELECT UserID, Firstname, Surname FROM dbo.Users WITH (NOLOCK)) u  
ON ISNULL(u.FirstName,'') + ' ' + ISNULL(u.Surname,'') = cimp.Agent
LEFT JOIN (SELECT UserID, Firstname, Surname FROM dbo.Users WITH (NOLOCK)) CB  
ON ISNULL(CB.FirstName,'') + ' ' + ISNULL(CB.Surname,'') = cimp.CreatedBy
LEFT JOIN lookup l WITH (NOLOCK)
ON l.Value = cimp.Division AND l.Class = 'Divisions'
LEFT JOIN lookup l2 WITH (NOLOCK)
ON l2.value = cimp.POsition AND l2.Class = 'JobTitle'
LEFT JOIN lookup l3 WITH (NOLOCK)
ON l3.value = cimp.INdustry AND l3.Class = 'canvasindustry'
LEFT JOIN lookup l4 WITH (NOLOCK)
ON l4.value = cimp.NextAction AND l4.class = 'leadnextaction'
LEFT JOIN lookup l5 WITH (NOLOCK)
ON l5.value = cimp.Status AND l5.class = 'leadstatus'
LEFT JOIN (SELECT CanvasID,Company,Contact FROM canvas WITH (NOLOCK)) c 
ON (RTRIM(LTRIM(c.Company)) = RTRIM(LTRIM(cimp.Company)) AND RTRIM(LTRIM(c.Contact)) = RTRIM(LTRIM(c.Contact)))
WHERE c.CanvasID IS NULL
 
","0","","1","LRA-FUSION","0","0","fusion"
"40097","cv_Acc_Check_Over_Dispatched","","SELECT DD.StockId, DD.StockCode, Sum(isnull(DD.Qty,0)) as [Dispatched], Invoiced 
FROM DEBTOR_MASTER DM  
LEFT JOIN (SELECT StockId, Qty,DocID, StockCode FROM DEBTOR_DETAIL) DD  
ON DM.DocID = DD.DocID  
LEFT JOIN (	SELECT DocID, StockID, Sum(isnull(DDc.Qty,0) *isnull(DDm.Qty,1)) as [Invoiced] 
			FROM DEBTOR_DETAIL DDc
			LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL)  DDm
			ON isnull(DDc.ComponentOfLineID,0) = DDm.LineID
			Group By StockID, DocID) DDI  
ON DM.PreviousDocID = DDI.DocID AND DD.StockID = DDI.StockID  
where PreviousDocID = {previousdocid} AND DM.DocType = 'Dispatch Note'
GROUP BY DD.StockID, Invoiced, DD.StockCode  
Having Invoiced < Sum(IsNull(DD.Qty, 0)) ","0","","1","LRA-FUSION","0","0","fusion"
"40098","qf_ProjectAsset","","SELECT
	AA.AssetID,
	STK.StockDescription as [Description],
        AA.SerialNo as [Serial],
        AA.Notes,
	Convert(VARCHAR, CAST(AA.Cost as MONEY),1) as [Cost]
FROM AccAsset AA
LEFT JOIN AccStock STK ON STK.StockID = AA.StockID
WHERE (ISNULL(STK.StockDescription,'') like '%<%replace%>%' or (isnull(AA.SerialNo,'') like '%<%replace%>%' ))
--{and}
","0","","1","LRA-FUSION","0","0","fusion"
"40099","cv_Project_Asset","","SELECT
	PA.ProjectAssetID,
	STK.StockDescription as [Asset Code],
	AA.SerialNo as [S/N],
	CONVERT(VARCHAR, PA.StartDate, 111) as [Date Out],
	CONVERT(VARCHAR, PA.EndDate, 111) as [Date In],
	Convert(VARCHAR, CAST(AA.Cost as MONEY),1) as [Cost],
	LL.Value as [Container]
FROM ProjectAsset PA WITH(NOLOCK)
LEFT JOIN AccAsset AA WITH(NOLOCK) ON AA.AssetID = PA.AssetID
LEFT JOIN AccStock STK WITH(NOLOCK) ON STK.StockID = AA.StockID
LEFT JOIN LinkLookup LL WITH(NOLOCK) ON LL.LinkLookupID =  PA.ContainerID
WHERE PA.ProjectID = {projectid} 
","0","","1","LRA-FUSION","0","0","fusion"
"40100","cv_Customise_LookupClass_Port","","INSERT INTO Lookup (
Class,
Value,
IsAllDiv,
TempID,
Colour,
info,
value2,
Hierarchy
)
SELECT DISTINCT
'{DstClass}',
L1.Value,
L1.IsAllDiv,
L1.TempID,
L1.Colour,
L1.info,
L1.value2,
L1.Hierarchy
FROM Lookup L1
LEFT JOIN lookup L2 ON L2.Value = L1.Value AND L2.Class = '{DstClass}'
WHERE L1.Class LIKE '{srcClass}' AND L2.LookupID IS NULL","0","","1","LRA-FUSION","0","0","fusion"
"40101","cv_Customise_Lookup_Users","","INSERT INTO Lookup(Class, Value)
SELECT '{DstClass}', ISNULL(U.Firstname,'') + ' ' + ISNULL(U.Surname,'') FROM Users U
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE '{DstClass}') L 
ON L.Value = ISNULL(U.Firstname,'') + ' ' + ISNULL(U.Surname,'')
WHERE L.LookupID IS NULL AND ISNULL(U.Firstname,'') + '' + ISNULL(U.Surname,'') <> ''
AND U.UserID IN ({sUserIDs})","0","","1","LRA-FUSION","0","0","fusion"
"40102","cv_Customise_Lookup_Staff","","INSERT INTO Lookup(Class, Value)
SELECT '{DstClass}', ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'') FROM Staff S
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE '{DstClass}') L 
ON L.Value = ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'')
WHERE L.LookupID IS NULL AND ISNULL(S.Firstname,'') + '' + ISNULL(S.Surname,'') <> ''
AND S.StaffID IN ({sStaffIDs})","0","","1","LRA-FUSION","0","0","fusion"
"40103","cv_pop_ReportDocForms","","SELECT
	FormID,
	FormName
FROM 
(
	SELECT 1 as [FormID], 'Company Details' as [FormName]

	UNION ALL 

		SELECT 2,'Company Contacts Details'

	UNION ALL 

		SELECT 3,'Debtors Control'

	UNION ALL 

		SELECT 4,'Project Management'

	UNION ALL 

		SELECT 5,'Lead Details'

	UNION ALL 

		SELECT 6,'Activity Report'

	UNION ALL 

		SELECT 7,'Ticket Details'

	UNION ALL 

		SELECT 8,'Job Details'

	UNION ALL 

		SELECT 9,'Sales Pipeline'

	UNION ALL 

		SELECT 10,'Creditors Control'
) X","0","","1","LRA-FUSION","0","0","fusion"
"40104","cv_pop_ReportDocForms2","","select * from (
SELECT 
	FormName as [Form Name],
	Name as [Document Name],
	[Path],
	Userlevel as [Userlevel],
ISNULL(S.Firstname, '') + ' ' + ISNULL(S.Surname, '') as [Added by] 
FROM entitydocument ED
LEFT JOIN (	
	SELECT 1 as [FormID], 'Company Details' as [FormName]

	UNION ALL 

	SELECT 2,'Company Contacts Details'
UNION ALL 

	SELECT 3,'Debtors Control'
	
) X ON X.[FormID] = ED.[FormID]
LEFT JOIN Staff S ON S.StaffID = ED.StaffID
LEFT JOIN BlockedDocUsers BU ON EntityDocumentID = DocID
LEFT JOIN UserLevel UL ON UL.UserLevelID = BU.UserLevelID
where isnull(ED.isReportDoc,0) = 1 
) A
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40105","cv_ReportingDoc_man","","select 
    Distinct
    [ID],
    FormName as [Form Name],
    A.[Description] as [Report Name],
    Name as [Document Name],
    [Path],
    Addedby as [Added by]  
from (
SELECT 
    EntityDocumentID as [ID],
    FormName,
    ED. [Description],
    Name,
    [Path],
ISNULL(S.Firstname, '') + ' ' + ISNULL(S.Surname, '') as [Addedby] 
FROM entitydocument ED
LEFT JOIN (
	SELECT 1 as [FormID], 'Company Details' as [FormName]

	UNION ALL 

		SELECT 2,'Company Contacts Details'

	UNION ALL 

		SELECT 3,'Debtors Control'

	UNION ALL 

		SELECT 4,'Project Management'

	UNION ALL 

		SELECT 5,'Lead Details'

	UNION ALL 

		SELECT 6,'Activity Report'

	UNION ALL 

		SELECT 7,'Ticket Details'

	UNION ALL 

		SELECT 8,'Job Details'

	UNION ALL 

		SELECT 9,'Sales Pipeline'

	UNION ALL 

		SELECT 10,'Creditors Control'
) X ON X.[FormID] = ED.[FormID]
LEFT JOIN Staff S ON S.StaffID = ED.StaffID
where isnull(ED.isReportDoc,0) = 1 
) A
LEFT JOIN BlockedDocUsers BU ON [ID] = DocID
LEFT JOIN UserLevel UL ON UL.UserLevelID = BU.UserLevelID
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"40106","cv_Acc_Scan_Get_Line","","SELECT Top 1 DD.LineID FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType FROM DEBTOR_MASTER) DM
ON DD.docID = DM.DocID
LEFT JOIN (SELECT DocID, DocType, LineID, sum(abs(Qty * Ratio)) as [QtyScanned] FROM AccStockControl Group By LineID, DocID, DocType) SC
ON DD.LineID = SC.LineID  AND DD.DocID = SC.DocID AND DM.DocType = SC.DocType
where DD.docid = {docid}
AND DD.stockid =  {stockid}
AND DD.Qty - isnull([QtyScanned],0) > 0","0","","1","LRA-FUSION","0","0","fusion"
"40107","cv_all_Activities_Combo","","--Activity Report Manager
SELECT top 100 Percent
	[id]
        ,' ' AS [ ]
	,u.username as [Added By]
	,ISNULL(e.Company, L.Company) as [Company]
	,CASE WHEN ISNULL(A.leadID,0) = 0 then 
	CASE WHEN isnull(ec.firstname, '') + ' ' + isnull(ec.surname, '')  = ' ' then
		'No Client Selected' 
	else
		isnull(ec.firstname, '') + ' ' + isnull(ec.surname, '')
	end 
	else
		CASE WHEN ISNULL(L.Firstname,'') + ' ' + ISNULL(L.Lastname, '') = ' ' then
		'No Client Selected' 
	else
		ISNULL(L.Firstname,'') + ' ' + ISNULL(L.Lastname, '') 
	end 
	end as [Client]
	,Type as [Activity Type]
	,[Reference Number]
	,isnull(assignedTo,'') as [Assigned To]
	,isnull([desc],' ') as [Description],Convert(Varchar,[date],111) + ' ' + Convert(Varchar,        [date],108) as [Activity Date]
	,Priority
	,[Visit Report]
	,[Percentage Complete]
	,[Action Date]
	,[Next Action Date]
	,  [Action Type]
	,[Client Relationship]
	, [Action Outcome]
	,[Form Name]
	,[Changed From ]
	, [Changed To]
	,[Date Changed]
	,[Call Direction]
	,[Ticket Start Time]
	,[Ticket End Time]
	,[Actual Start Time]
	,[Actual End Time]
FROM (
    --Actions
	select 
		'ac' + cast(activityid as varchar) as 'ID'
		,entitycontactid as 'ContactID'
		,AddedByID as 'UserID'
		,'Action' AS 'Type'
		,u.username as 'AssignedTo'
		, Substring(Comments,1,200) as 'Desc'
		,dateadded as 'Date'
		,activity.DivID
		,'' as ""Priority""
		,case (lu.value) when 'Complete' then '100 %' else '0 %' end as [Percentage Complete]
		,'' as [Visit Report]
		,Entityid as [Entityid],
		0  as [leadID]
		,DateAction as [Action Date]
		,DateNextAction as [Next Action Date]
		, l.Value As [Action Type] 
		,cast(activityid as varchar) as 'Reference Number'
		,'' as [Client Relationship]
		,isnull(LG.Value,'') as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,'' as [Call Direction] 
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]  
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
	from activity
	LEFT JOIN Lookup lu on activityoutcomeid = lu.lookupid
	LEFT JOIN users u on u.userid = activity.userid
	LEFT JOIN Lookup l on ActivityTypeID = l.LookupID  
	LEFT JOIN Lookup LG on ActivityOutcomeID = LG.LookupID
       
  union all
    
    --Appointments
	select 
		'ap' + cast(appointmentid as varchar) as [ID]
		,AC.EntityContactID as [ContactID]
		,createUserID as 'UserID'
		,'Appointment' AS [Type]
		,Case when foruserid = 0 then 'Unassigned' else u.username end as 'AssignedTo'
		,subject as [Desc]
		,[date] as [Date]
		,0 as DivID
		, '' as ""Priority""
		,Case WHEN isnull(Held,0) = 1 OR isnull(NotHeld,0) =1 then '100 %' ELSE '0 %' END  as [Percentage Complete]
		,Actions as [Visit Report]
		,A.Entityid as [Entityid],
		0  as [leadID]
		,null as [Action Date]
		,NULL as [Next Action Date]
		, '' As [Action Type]
		,cast(appointmentid as varchar) as 'Reference Number'
		,Isnull(CR.value,'') as [Client Relationship]
		,'' as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,'' as [Call Direction]
		,isnull(A.ActualStartDate, '') as [Actual Start Time] 
		,isnull(A.ActualEndDate, '') as [Actual End Time]  
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
	from appointment A
	LEFT JOIN users u on u.userid = A.foruserid
	LEFT JOIN (SELECT Max(EntityContactID) as [EntityContactID], ApptID FROM AppointmentContacts Group by ApptID) AC ON A.AppointmentID = AC.Apptid
	Left Join Lookup CR on CR.LookupID = A.ClientRelID
	WHERE  isnull(NotHeld,0) = 0
    
    union all

    --Reminders
	select 
		'tr' + cast(taskreminder.taskreminderid as varchar) as 'ID'
		,entitycontactid as 'ContactID'
		,ownerID as 'UserID'
		,'Task Reminder' AS 'Type'
		,dbo.GetTaskAssignedUsers('tr' + cast(taskreminder.taskreminderid as varchar)) as 'AssignedTo'
		,isnull(TaskName,' ') + '  -  ' + isnull(additionalinfo, ' ') as 'Desc'
		,taskdate as 'Date'
		,taskreminder.DivID
		,isnull(lu.[value],'') as ""Priority""
		,case (select count(*) from actions a where a.taskreminderid = taskreminder.taskreminderid) 
		when 0 then convert(varchar, percentageid) + ' %' 
		else convert(varchar, (Select AVG(PercentageID) from actions a where a.taskreminderid = taskreminder.taskreminderid)) + ' %' 
		end as [Percentage Complete]
		,'' as [Visit Report] 
		,null as [Entityid],
		0  as [leadID]
		,null as [Action Date]
		,NULL as [Next Action Date]
		, '' As [Action Type]
		,cast(taskreminder.taskreminderid as varchar) as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,'' as [Call Direction] 
		,'' as [Actual Start Time] 
		,'' as [Actual End Time] 
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
	from taskreminder
	LEFT JOIN lookup lu on lu.lookupid = taskreminder.priorityid

    union all

	--Calls
	select 
		[ID],ContactID,UserID,[Type],AssignedTo,[Description],[Date],DivID,Priority,[Percentage Complete],[Visit Report],[EntityID],
		[leadID],[Action Date],[Next Action Date],'' As [Action Type],[Reference Number],[Client Relationship],'' as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,CallDirection as [Call Direction]  
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
    from
    (
	select 
		'CL' + cast(calllogid as varchar) as 'ID'
		,entitycontactid as 'ContactID'
		,callcreatorid as 'UserID'
		,case isnull(advCall, 0) when 0 then 'Call' else 'Advanced Call' end  as 'Type'
		,u.username as 'AssignedTo'
		,CallDescription as 'Description'
		,calldate as 'Date'
		,DivID, '' as ""Priority""
		,case when isnull(iscomplete,0) = 0  then '0 %' else '100 %' END as [Percentage Complete]
		,'' as [Visit Report]
		,null as [Entityid],
		leadID  as [leadID] 
		,null as [Action Date]
		,NULL as [Next Action Date]
		, '' As [Action Type]
		,isnull(RefNo,'') as  'Reference Number'
		--(SELECT TOP 1 CustValue FROM CRMSetup WHERE [Description] LIKE 'Function' AND Variable LIKE 'CallIdPrefix') + '' + cast(calllogid as varchar) as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,CallDirection  
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
	from calllog
	LEFT JOIN users u on u.userid = calllog.userid
		
		UNION ALL
		
	select 
		'CC' + cast(calllogid as varchar) as 'ID'
		,0 as 'ContactID'
		,callcreatorid as 'UserID'
		,'Call'  as 'Type'
		,u.username as 'AssignedTo'
		,CallDescription as 'Description'
		,calldate as 'Date'
		,DivID, '' as ""Priority""
		,case when isnull(iscomplete,0) = 0  then '0 %' else '100 %' END as [Percentage Complete]
		,'' as [Visit Report]
		,canvas.EntityID as [Entityid],
		0  as [leadID] 
		,null as [Action Date]
		,NULL as [Next Action Date]
		, '' As [Action Type]
		,(SELECT TOP 1 CustValue FROM CRMSetup WHERE [Description] LIKE 'Function' AND Variable LIKE 'CallIdPrefix') + '' + cast(calllogid as varchar) as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,CallDirection  
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
	from canvascalllog
	left join canvas
	on canvas.CanvasID = canvascalllog.CanvasID 
	LEFT JOIN users u on u.userid = canvascalllog.userid
    )Y
 
    union all

    --Sub Tasks
	select 
		'at' + cast(actionid as varchar) as 'ID'
		,entitycontactid as 'ContactID'
		,ownerID as 'UserID','Sub Task' AS 'Type'
		--,dbo.GetTaskAssignedUsers('at' + cast(actionid as varchar)) as 'AssignedTo'
		, isnull(US.Firstname,'')+ ' ' + isnull(US.SUrname,'') as 'AssignedTo'
		,comments as 'Desc'
		,taskdate as 'Date'
		,t.DivID
		,isnull(lu.[value],'') as ""Priority""
		,convert(varchar, a.percentageid) + ' %' as [Percentage Complete]
		,'' as [Visit Report]
		,null as [Entityid],
		0  as [leadID] 
		,null as [Action Date]
		,nextactiondate as [Next Action Date]
		, '' As [Action Type]
		,cast(actionid as varchar) as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,'' as [Call Direction]     
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
	from actions a
	INNER JOIN taskreminder t ON t.taskreminderid = a.taskreminderid
	LEFT JOIN lookup lu on lu.lookupid = a.priorityid
	Left Join Users US on US.UseriD =a.AssignedTo
    
    union all

    --tasks 
	select 
		Distinct 
		'pk' + cast(CALI.ClientActivityListItemID as varchar) as 'ID'
		,null as 'ContactID'
		,IssuedByID as 'UserID'
		,'Project Task'  as 'Type'
		,[Owner] as 'AssignedTo'
		,Substring(CALI.Description,1,200)    as 'Description'
		,DateIssued as 'Date'
		,P.DivID
		,PR.PriorityType as ""Priority""
		,convert(varchar,(isnull(cast(compActCount as float),0) / isnull(cast(ActCount as float),1) ) * 100)+ ' %' as [Percentage Complete]
		,'' as [Visit Report]
		,P.EntityID as [Entityid],
		0  as [leadID] 
		,null as [Action Date]
		,DateFollowUp as [Next Action Date]
		, '' As [Action Type]
		,cast(CALI.ClientActivityListItemID as varchar) as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,'' as [Call Direction]   
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
	FROM ClientActivityList CAL
	LEFT JOIN (SELECT ProjectID, EntityID, ProjectName,DivID FROM Projects) P
	ON CAL.ProjectID = P.ProjectID
	LEFT JOIN (SELECT EntityID, Company FROM Entity) E
	ON P.EntityID = E.EntityID
	LEFT JOIN (SELECT * FROM Priority) PR
	ON CAL.PriorityID = PR.PriorityID
	LEFT JOIN (SELECT * FROM Lookup) LS
	ON CAL.StatusID = LS.LookupID
	LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(Surname,'') As [Owner] FROM Users) O
	ON CAL.OwnerID= O.UserID
	LEFT JOIN (SELECT * FROM ClientActivityListItem ) CALI
	ON CAL.ClientActivityListID = CALI.ClientActivityListID
	LEFT JOIN (SELECT count(ClientActivityListItemID) as [ActCount],ClientActivityListID 
	FROM ClientActivityListItem Group by ClientActivityListID) CAC
	ON CAL.ClientActivityListID = CAC.ClientActivityListID
	LEFT JOIN (SELECT count(ClientActivityListItemID) as [CompActCount],
	ClientActivityListID FROM ClientActivityListItem WHERE isnull(IsComplete,0) = 1 
	Group by ClientActivityListID) CACC
	ON CAL.ClientActivityListID = CACC.ClientActivityListID
	--Last person assigned
	LEFT JOIN (SELECT ClientActivityListID, max(AssignedTo) as [AssignedTo], max(ClientActivityListID) as [Most] FROM ClientActivityListItem Group By ClientActivityListID ) CALIAss
	ON CALI.ClientActivityListID = CALIAss.ClientActivityListID
	LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(Surname,'') As [Assigned To] FROM Users) AO
	ON CALIAss.AssignedTo= AO.UserID
	where CALI.ClientActivityListItemID is not null

    union all

    --tickets
	select 
		'tk' + cast(t.ticketID as varchar) as 'ID'
		,TC2.EntityContactID as 'ContactID'
		,T.logbyID as 'UserID'
		,'Ticket' as 'Type'
		,u.username as 'AssignedTo'
		,tMessage as 'Description'
		,DateCaptured as 'Date'
		,DivID
		,Severity as ""Priority""
		,case when isnull(iscomplete,0) = 0  then '0 %' else '100 %' END as [Percentage Complete]
		,'' as [Visit Report]
		,EntityID as [Entityid],
		0  as [leadID] 
		,null as [Action Date]
		,NULL as [Next Action Date]
		, '' As [Action Type]
		, cast(t.ticketID as varchar) as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,'' as [Call Direction]
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]
		,DateCaptured as [Ticket Start Time] 
		,DateCompleted as [Ticket End Time]   
	from tickets T
	LEFT JOIN users u on u.userid = T.userid
	LEFT JOIN (SELECT TicketID, Max(TicketContID) as [TicketContID] FROM TicketContacts GROUP by TicketID ) TC	ON T.TicketID = TC.TicketID
	LEFT JOIN (SELECT TicketContID, EntityContactID FROM TicketContacts ) TC2 ON TC.TicketContID = TC2.TicketContID
    
    
    UNION ALL
    
    
	SELECT 
		'EM' + CAST(EmailLogID AS VARCHAR) as 'ID'
		,EmailRcptID as 'ContactID'
		,SendById as 'UserID'
		,'Email' as 'Type'
		,Users.username as 'AssignedTo'
		,EmailSubject as 'Description'
		,EmailTime as 'Date'
		,NULL as 'DivID'
		,NULL as 'Priority'
		,'100 %' as [Percentage Complete]
		,EmailStatus as [Visit Report]
		,entity.EntityID,
		0  as [leadID]
		,null as [Action Date]
		,NULL as [Next Action Date]
		, '' As [Action Type]
		,CAST(EmailLogID AS VARCHAR) as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,'' as [Call Direction]
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]     
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
	from EmailLog
	left join Entitycontact on entitycontact.entitycontactid = Emaillog.EmailRcptID
	left join entity on entitycontact.entityid = entity.entityid
	left join Users on EmailLog.SendById = Users.UserID
    
    UNION ALL
    
	SELECT 
		'SM' + CAST(SMS.SMSID AS VARCHAR) as 'ID'
		,SMS.EntityContactID  as 'ContactID'
		,SMS.SentBy as 'UserID'
		,'SMS' as 'Type'
		,U.Username as 'AssignedTo'
		,SMS.[Message] as 'Description'
		,SMS.DateCreated as 'Date'
		,NULL as 'DivID'
		,NULL as 'Priority'
		,CASE SMS.[Sent] WHEN 1 Then '100 %' ELSE '0 %' END AS [Percentage Complete]
		,NULL as [Visit Report]
		,E.EntityID,
		0  as [leadID]
		,null as [Action Date]
		,NULL as [Next Action Date]
		, '' As [Action Type]
		, CAST(SMS.SMSID AS VARCHAR) as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,'' as [Call Direction]
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]     
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
	FROM EntityContactSMS SMS
	LEFT JOIN EntityContact EC ON EC.EntityContactID = SMS.EntityContactID 
	LEFT JOIN Entity E ON E.EntityID = EC.EntityID
	LEFT JOIN Users U ON U.UserID = SMS.SentBy
	WHERE (ISNULL(SMS.IsStaff, 0) = 0) 
	
	UNION ALL
	
	SELECT [ID]
		, [ContactID]
		, [UserID]
		,[Type]
		,[AssignedTo]
		,[Description]
		,[Date]
		,[DivID]
		,[Priority]
		,[Percentage Complete]
		,[Visit Report]
		,[EntityID],
		[leadID]
		,[Action Date]
		,[Next Action Date]
		,[Action Type]
		,[Reference Number]
		,[Client Relationship]
		,[Action Outcome]
		,[Form Name]
		,[Changed From ]
		, [Changed To]
		,[Date Changed]
		,[Call Direction]
		,'' as [Actual Start Time] 
		,'' as [Actual End Time] 
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
		FROM (

SELECT 
		'NO' + CAST(n.noteid AS VARCHAR) as 'ID'
		, n.entitycontactid  as 'ContactID'
		, n.createbyid  as 'UserID'
		,'Note' as 'Type'
		,u.Username as  'AssignedTo'
		,n.[description] as 'Description'
		,[date] as 'Date'
		,DivID as 'DivID'
		,'' as 'Priority'
		,'100 %' as [Percentage Complete]
		,'' as [Visit Report]
		,E.EntityID,
		0  as [leadID]
		,null as [Action Date]
		,NULL as [Next Action Date]
		, '' As [Action Type]
		,CAST(n.noteid AS VARCHAR) as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,'' as [Call Direction]
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]     
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
	FROM notes n
	LEFT JOIN entitycontact ec on ec.entitycontactid = n.entitycontactid
	LEFT JOIN lookup nt ON nt.lookupid = n.notetypeid
	LEFT JOIN lookup d ON d.lookupid = n.divid
	LEFT JOIN users u ON u.userid = n.createbyid
	LEFT JOIN users m ON m.userid = n.modifiedbyid
	Left JOIN entity e ON e.entityid = n.entityid
	
	UNION ALL
	
	SELECT 
		'LN' + CAST(LN.leadNoteID AS VARCHAR) as 'ID'
		, 0  as 'ContactID'
		, LN.createbyid  as 'UserID'
		,'Note' as 'Type'
		,u.Username as  'AssignedTo'
		,LN.[description] as 'Description'
		,[date] as 'Date'
		,DivID as 'DivID'
		,'' as 'Priority'
		,'100 %' as [Percentage Complete]
		,'' as [Visit Report]
		,0 AS [EntityID],
		LN.LeadID  as [leadID]
		,null as [Action Date]
		,NULL as [Next Action Date]
		, '' As [Action Type]
		,CAST(LN.leadNoteID AS VARCHAR) as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		, '' as [Form Name]
		, '' as [Changed From ]
		,  '' as [Changed To]
		, Null  as [Date Changed]
		,'' as [Call Direction]
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]   
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]      
	FROM LeadNotes LN
	LEFT JOIN lookup nt ON nt.lookupid = LN.notetypeid
	LEFT JOIN lookup d ON d.lookupid = LN.divid
	LEFT JOIN users u ON u.userid = LN.createbyid
	LEFT JOIN users m ON m.userid = LN.modifiedbyid
) YN
	
	UNION ALL
	
	SELECT 
		'BC' + CAST(BC.IDBuscat AS VARCHAR) as 'ID'
		, ''  as 'ContactID'
		, BC.ChangedBy  as 'UserID'
		,'Business Category' as 'Type'
		,'' as  'AssignedTo'
		,''as 'Description'
		,'' as 'Date'
		,'' as 'DivID'
		,NULL as 'Priority'
		,'' as [Percentage Complete]
		,NULL as [Visit Report]
		,'' as 'EntityID',
		'' as [leadID]
		,null as [Action Date]
		,NULL as [Next Action Date]
		, '' As [Action Type]
		,'' as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		,BC.Formname as [Form Name]
		,isnull(BCC.Value,'') as [Changed From ]
		,isnull(BCN.Value,'') as [Changed To]
		,BC.Datechanged as [Date Changed]
		,'' as [Call Direction]
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]   
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]    
	FROM BusinessCategoryHistory BC
	LEFT JOIN lookup BCC ON BCC.lookupid = BC.ChangedFrom
	LEFT JOIN lookup BCN ON BCN.lookupid = BC.ChangedTo
	LEFT JOIN users u ON u.userid = BC.ChangedBy
		
	UNION ALL
	
	
	SELECT 
		'MC'+  CAST(MA.MarketingAssignID as VARCHAR) as 'ID'
		,MA.EntityContactID as 'ContactID'
		,MA.AssignedByID as 'UserID'
		,'Marketing Campaign' as 'Type'
		,[AssignedTo] as  'AssignedTo'
		,MD.CampaignName as 'Description'
		,MA.AssignDate as 'Date'
		,'' as 'DivID'
		,NULL as 'Priority'
		,'' as [Percentage Complete]
		,NULL as [Visit Report]
		,EC.EntityID as 'EntityID',
		'' as [leadID]
		,null as [Action Date]
		,NULL as [Next Action Date]
		, '' As [Action Type]
		,'' as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		,'' as [Form Name]
		,'' as [Changed From ]
		,'' as [Changed To]
		,'' as [Date Changed]
		,'' as [Call Direction]
		,'' as [Actual Start Time] 
		,'' as [Actual End Time]   
		,'1900/01/01 00:00:00' as [Ticket Start Time] 
		,'1900/01/01 00:00:00' as [Ticket End Time]   
	FROM MarketingAssigned MA
	LEFT JOIN (
		SELECT * FROM MarketingDetails
	) MD ON MD.MarketingID = MA.MarketingID
	LEFT JOIN (
		SELECT * FROM EntityContact
	) EC ON EC.EntityContactID = MA.EntityContactID
	LEFT JOIN (
		SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [AssignedTo] FROM Users
	) U ON U.UserID = MA.AssignedByID 
		


) A
LEFT JOIN (Select UserID,Username From  users) u on u.userid = a.userid
LEFT JOIN (Select EntityContactId,EntityId,firstname,surname FROM entitycontact) ec 
on ec.entitycontactid = a.contactid
LEFT JOIN (Select LeadID,firstname,Lastname, Company FROM lead) L 
on L.leadID = a.leadID
LEFT JOIN (SELECT Entityid, Company FROM entity) e on isnull(ec.entityid,A.EntityID) = e.entityid
LEFT JOIN lookup Div ON a.divid = div.lookupid
 <%where%>

order by a.[Date] Desc
","0","","1","LRA-FUSION","0","0","fusion"
"40108","cv_ReportingDoc_Viewer","","select 
	Distinct
        [ID],
	A.[Description] as [Report Name]
from (
SELECT 
	EntityDocumentID as [ID],
	ED.[Description],
	FormName,
	Name,
	[Path],
ISNULL(S.Firstname, '') + ' ' + ISNULL(S.Surname, '') as [Addedby] 
FROM entitydocument ED
LEFT JOIN (
	SELECT 1 as [FormID], 'Company Details' as [FormName]

	UNION ALL 

		SELECT 2,'Company Contacts Details'

	UNION ALL 

		SELECT 3,'Debtors Control'

	UNION ALL 

		SELECT 4,'Project Management'

	UNION ALL 

		SELECT 5,'Lead Details'

	UNION ALL 

		SELECT 6,'Activity Report'

	UNION ALL 

		SELECT 7,'Ticket Details'

	UNION ALL 

		SELECT 8,'Job Details'

	UNION ALL 

		SELECT 9,'Sales Pipeline'
		
	UNION ALL 

		SELECT 10,'Creditors Control'
) X ON X.[FormID] = ED.[FormID]
LEFT JOIN Staff S ON S.StaffID = ED.StaffID
where isnull(ED.isReportDoc,0) = 1 
) A
LEFT JOIN BlockedDocUsers BU ON [ID] = DocID
LEFT JOIN UserLevel UL ON UL.UserLevelID = BU.UserLevelID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40109","cv_All_Activity_Combo_Setlistview","","--Activity Report Manager

SELECT top 0 [id],
	[id]
	,u.username as [Added By]
	,e.Company
	,case isnull(ec.firstname, ' ') + ' ' + isnull(ec.surname, ' ') when '' 
		then 'No Client Selected' 
		else isnull(ec.firstname, ' ') + ' ' + isnull(ec.surname, ' ') 
	end as [Client]
	,Type as [Activity Type]
	,isnull(assignedTo,'') as [Assigned To]
	,isnull([desc],' ') as [Description]
	,Convert(Varchar,[date],111) as [Activity Date]
	,Convert(Varchar,[date],108) as [Activity Time]
	,Priority
	,[Visit Report]
	,[Percentage Complete]
FROM (
    --Actions
    select 
		'ac' + cast(activityid as varchar) as 'ID'
		,entitycontactid as 'ContactID'
		,AddedByID as 'UserID'
		,'Action' AS 'Type'
		,u.username as 'AssignedTo'
		, Comments as 'Desc'
		,dateadded as 'Date'
		,activity.DivID
		,'' as ""Priority""
		,case (lu.value) when 'Complete' then '100 %' else '0 %' end as [Percentage Complete]
		,'' as [Visit Report]
		,Entityid as [Entityid] 
    from activity
    LEFT JOIN Lookup lu on activityoutcomeid = lu.lookupid
    LEFT JOIN users u on u.userid = activity.userid

    union all
    
    --Appointments
    select 
		'ap' + cast(appointmentid as varchar) as [ID]
		,AC.EntityContactID as [ContactID]
		,createUserID as 'UserID'
		,'Appointment' AS [Type]
		,Case when foruserid = 0 then 'Unassigned' else u.username end as 'AssignedTo'
		,subject as [Desc]
		,[date] as [Date]
		,0 as DivID
		, '' as ""Priority""
		,Case WHEN isnull(Held,0) = 1 OR isnull(NotHeld,0) =1 then '100 %' ELSE '0 %' END  as [Percentage Complete]
		,Actions as [Visit Report]
		,A.Entityid as [Entityid]
    from appointment A
    LEFT JOIN users u on u.userid = A.foruserid
    LEFT JOIN (SELECT Max(EntityContactID) as [EntityContactID], ApptID FROM AppointmentContacts Group by ApptID) AC ON A.AppointmentID = AC.Apptid
    WHERE  isnull(NotHeld,0) = 0
    
    union all

    --Reminders
    select 
		'tr' + cast(taskreminder.taskreminderid as varchar) as 'ID'
		,entitycontactid as 'ContactID'
		,ownerID as 'UserID'
		,'Task Reminder' AS 'Type'
		,dbo.GetTaskAssignedUsers('tr' + cast(taskreminder.taskreminderid as varchar)) as 'AssignedTo'
		,isnull(TaskName,' ') + '  -  ' + isnull(additionalinfo, ' ') as 'Desc'
		,taskdate as 'Date'
		,taskreminder.DivID
		,isnull(lu.[value],'') as ""Priority""
		,case (select count(*) from actions a where a.taskreminderid = taskreminder.taskreminderid) 
		when 0 then convert(varchar, percentageid) + ' %' 
		else convert(varchar, (Select AVG(PercentageID) from actions a where a.taskreminderid = taskreminder.taskreminderid)) + ' %' 
		end as [Percentage Complete]
		,'' as [Visit Report] 
		,null as [Entityid]
    from taskreminder
    LEFT JOIN lookup lu on lu.lookupid = taskreminder.priorityid

    union all

    --Calls
    select 
		'cl' + cast(calllogid as varchar) as 'ID'
		,entitycontactid as 'ContactID'
		,callcreatorid as 'UserID'
		,case isnull(advCall, 0) when 0 then 'Call' else 'Advanced Call' end  as 'Type'
		,u.username as 'AssignedTo'
		,CallDescription as 'Description'
		,calldate as 'Date'
		,DivID, '' as ""Priority""
		,case when isnull(iscomplete,0) = 0  then '0 %' else '100 %' END as [Percentage Complete]
		,'' as [Visit Report]
		,null as [Entityid] 
	from calllog
    LEFT JOIN users u on u.userid = calllog.userid

    union all

    --Sub Tasks
    select 
		'at' + cast(actionid as varchar) as 'ID'
		,entitycontactid as 'ContactID'
		,ownerID as 'UserID','Sub Task' AS 'Type'
		,dbo.GetTaskAssignedUsers('at' + cast(actionid as varchar)) as 'AssignedTo'
		,comments as 'Desc'
		,taskdate as 'Date'
		,t.DivID
		,isnull(lu.[value],'') as ""Priority""
		,convert(varchar, a.percentageid) + ' %' as [Percentage Complete]
		,'' as [Visit Report]
		,null as [Entityid] 
	from actions a
    INNER JOIN taskreminder t ON t.taskreminderid = a.taskreminderid
    LEFT JOIN lookup lu on lu.lookupid = a.priorityid
    
    union all

    --tasks 
    select 
		Distinct 
		'pk' + cast(CALI.ClientActivityListItemID as varchar) as 'ID'
		,null as 'ContactID'
		,IssuedByID as 'UserID'
		,'Project Task'  as 'Type'
		,[Owner] as 'AssignedTo'
		,CALI.Description    as 'Description'
		,DateIssued as 'Date'
		,P.DivID
		,PR.PriorityType as ""Priority""
		,convert(varchar,(isnull(cast(compActCount as float),0) / isnull(cast(ActCount as float),1) ) * 100)+ ' %' as [Percentage Complete]
		,'' as [Visit Report]
		,P.EntityID as [Entityid] 
    FROM ClientActivityList CAL
    LEFT JOIN (SELECT ProjectID, EntityID, ProjectName,DivID FROM Projects) P
    ON CAL.ProjectID = P.ProjectID
    LEFT JOIN (SELECT EntityID, Company FROM Entity) E
    ON P.EntityID = E.EntityID
    LEFT JOIN (SELECT * FROM Priority) PR
    ON CAL.PriorityID = PR.PriorityID
    LEFT JOIN (SELECT * FROM Lookup) LS
    ON CAL.StatusID = LS.LookupID
    LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(Surname,'') As [Owner] FROM Users) O
    ON CAL.OwnerID= O.UserID
    LEFT JOIN (SELECT * FROM ClientActivityListItem ) CALI
    ON CAL.ClientActivityListID = CALI.ClientActivityListID
    LEFT JOIN (SELECT count(ClientActivityListItemID) as [ActCount],ClientActivityListID 
    FROM ClientActivityListItem Group by ClientActivityListID) CAC
    ON CAL.ClientActivityListID = CAC.ClientActivityListID
    LEFT JOIN (SELECT count(ClientActivityListItemID) as [CompActCount],
    ClientActivityListID FROM ClientActivityListItem WHERE isnull(IsComplete,0) = 1 
    Group by ClientActivityListID) CACC
    ON CAL.ClientActivityListID = CACC.ClientActivityListID
    --Last person assigned
    LEFT JOIN (SELECT ClientActivityListID, max(AssignedTo) as [AssignedTo], max(ClientActivityListID) as [Most] FROM ClientActivityListItem Group By ClientActivityListID ) CALIAss
    ON CALI.ClientActivityListID = CALIAss.ClientActivityListID
    LEFT JOIN (SELECT userID, isnull(firstname,'') + ' ' + isnull(Surname,'') As [Assigned To] FROM Users) AO
    ON CALIAss.AssignedTo= AO.UserID
    where CALI.ClientActivityListItemID is not null

    union all

    --tickets
    select 
		'tk' + cast(ticketID as varchar) as 'ID'
		,'' as 'ContactID'
		,T.logbyID as 'UserID'
		,'Ticket' as 'Type'
		,u.username as 'AssignedTo'
		,tMessage as 'Description'
		,DateCaptured as 'Date'
		,DivID
		,Severity as ""Priority""
		,case when isnull(iscomplete,0) = 0  then '0 %' else '100 %' END as [Percentage Complete]
		,'' as [Visit Report]
		,EntityID as [Entityid] 
    from tickets T
    LEFT JOIN users u on u.userid = T.userid
    
    
    UNION ALL
    
    
    SELECT 'EM' + CAST(EmailLogID AS VARCHAR) as 'ID'
    ,EmailRcptID as 'ContactID'
    ,SendById as 'UserID'
    ,'Email' as 'Type'
    ,Users.username as 'AssignedTo'
    ,EmailSubject as 'Description'
    ,EmailTime as 'Date'
    ,NULL as 'DivID'
    ,NULL as 'Priority'
    ,'100 %' as [Percentage Complete]
    ,EmailStatus as [Visit Report]
    ,entity.EntityID
    from EmailLog
	left join Entitycontact on entitycontact.entitycontactid = Emaillog.EmailRcptID
	left join entity on entitycontact.entityid = entity.entityid
	left join Users on EmailLog.SendById = Users.UserID
    
    UNION ALL
    
    SELECT 
		'SM' + CAST(SMS.SMSID AS VARCHAR) as 'ID'
		,SMS.EntityContactID  as 'ContactID'
		,SMS.SentBy as 'UserID'
		,'SMS' as 'Type'
		,U.Username as 'AssignedTo'
		,SMS.[Message] as 'Description'
		,SMS.DateCreated as 'Date'
		,NULL as 'DivID'
		,NULL as 'Priority'
		,CASE SMS.[Sent] WHEN 1 Then '100 %' ELSE '0 %' END AS [Percentage Complete]
		,NULL as [Visit Report]
		,E.EntityID
    FROM EntityContactSMS SMS
	LEFT JOIN EntityContact EC ON EC.EntityContactID = SMS.EntityContactID 
	LEFT JOIN Entity E ON E.EntityID = EC.EntityID
	LEFT JOIN Users U ON U.UserID = SMS.SentBy
	WHERE (ISNULL(SMS.IsStaff, 0) = 0) 
	
	UNION ALL
	
	SELECT 
		'NO' + CAST(n.noteid AS VARCHAR) as 'ID'
		, n.entitycontactid  as 'ContactID'
		, n.createbyid  as 'UserID'
		,'Note' as 'Type'
		,u.Username as  'AssignedTo'
		,n.[description] as 'Description'
		,[date] as 'Date'
		,DivID as 'DivID'
		,NULL as 'Priority'
		,'100 %' as [Percentage Complete]
		,NULL as [Visit Report]
		,E.EntityID
	FROM notes n
	LEFT JOIN entitycontact ec on ec.entitycontactid = n.entitycontactid
	LEFT JOIN lookup nt ON nt.lookupid = n.notetypeid
	LEFT JOIN lookup d ON d.lookupid = n.divid
	LEFT JOIN users u ON u.userid = n.createbyid
	LEFT JOIN users m ON m.userid = n.modifiedbyid
	Left JOIN entity e ON e.entityid = ec.entityid

) A
LEFT JOIN (Select UserID,Username From  users) u on u.userid = a.userid
LEFT JOIN (Select EntityContactId,EntityId,firstname,surname FROM entitycontact) ec 
on ec.entitycontactid = a.contactid
LEFT JOIN (SELECT Entityid, Company FROM entity) e on isnull(ec.entityid,A.EntityID) = e.entityid
LEFT JOIN lookup Div ON a.divid = div.lookupid
 

order by a.[Date] Desc














----Notes
--SELECT 
--	noteid
--	,e.Company
--	,isnull(ec.firstname,'') + ' ' + isnull(ec.surname,'')  as Contact
--	,nt.value as [Note Type]
--	,n.[description] As [Note Description]
--	,n.notes As Notes
--	,d.value as Division
--	,convert(varchar,[date],103) as [Date]
--	,Subject,u.username as [Created By]
--	,m.username as [Modified By] 
--FROM notes n
--LEFT JOIN entitycontact ec on ec.entitycontactid = n.entitycontactid
--LEFT JOIN lookup nt ON nt.lookupid = n.notetypeid
--LEFT JOIN lookup d ON d.lookupid = n.divid
--LEFT JOIN users u ON u.userid = n.createbyid
--LEFT JOIN users m ON m.userid = n.modifiedbyid
--Left JOIN entity e ON e.entityid = ec.entityid
-- WHERE  (n.divid = 12795)








----SMS
--SELECT 
--	SMSID
--	,[Company]
--	,[Contact]
--	,[Message]
--	,[Date]
--	,[Message Direction]
--	,[Sent By] 
--FROM (
--	SELECT 
--		SMS.SMSID
--		,E.Company
--		,ISNULL(EC.FirstName,'') + ' ' + ISNULL(EC.Surname, '') as [Contact]
--		,SMS.[Message]
--		,DateCreated as [Date]
--		,CASE WHEN ISNULL(SMS.IsReply,0) = 0 THEN 'Sent' ELSE 'Received' END as [Message Direction]
--		,CASE WHEN SentBy = 0 THEN 'Retrived from SMSPortal' 
--		ELSE ISNULL(U.Firstname, '') + ' ' + ISNULL(U.Surname, '') END as [Sent By]
--	FROM EntityContactSMS SMS
--	LEFT JOIN EntityContact EC ON EC.EntityContactID = SMS.EntityContactID 
--	LEFT JOIN Entity E ON E.EntityID = EC.EntityID
--	LEFT JOIN Users U ON U.UserID = SMS.SentBy
--	WHERE (ISNULL(SMS.IsStaff, 0) = 0) 
--) X ORDER BY X.[Date]




----Email
--Select 
--	EmailLogID
--	,[EmailLogID]
--	,[Sent By]
--	,[Company]
--	,[Contact]
--	,[Email Address]
--	,[Telephone]
--	,[Date]
--	,[Subject]
--	,[Status]
--	,[Response] 
--from (
--	select 
--		EmailLogID
--		,isnull(Users.Firstname + ' ','') + isnull(Users.Surname,'') as 'Sent By'
--		,Entity.Company
--		,case isnull(dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Firstname, EntityContact.Surname), '') 
--		when '' 
--		then 'No Contact Selected' 
--		else dbo.EntityContactName(EntityContact.Title, EntityContact.Initials, EntityContact.Firstname, EntityContact.Surname) 
--		end	as Contact
--		,EmailLog.EmailAddr as 'Email Address'
--		,isnull(Phone1,isnull(phone2,isnull(phone3,isnull(Cell,'None Found')))) as 'Telephone'
--		,convert(varchar(11),Emailtime) as [Date]
--		,EmailSubject as [Subject]
--		,EmailStatus as 'Status'
--		,'Response' = Case EmailLog.Response when 1 then 'Yes' else 'No' end
--	from EmailLog
--	left join Entitycontact on entitycontact.entitycontactid = Emaillog.EmailRcptID
--	left join entity on entitycontact.entityid = entity.entityid
--	left join Users on EmailLog.SendById = Users.UserID
--) X","0","","1","LRA-FUSION","0","0","fusion"
"40110","cv_TimeSheetBilling","","SELECT 
	Approved,
	OutofSpec,
	NeedInvoice
FROM ClientActivityListItem CALI
LEFT JOIN ClientActivityList CAL ON CAL.ClientActivityListID = CALI.ClientActivityListID 
WHERE CALI.ModuleID = {moduleid}","0","","1","LRA-FUSION","0","0","fusion"
"40111","cv_Acc_Creditor_Doc_Details","","
declare @DocID as int
set @DocID = {docid}

SELECT LineID, [Group],Project, [Stock Code] as [Code], [Description], [Comments], [For Client], Qty, Discount, [Price Ex.], [Price Incl.],[Total Incl.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments, Company as [For Client],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1) ) as [Total Incl.],
	Rank, -1000 as [Rank2]
	FROM CREDITOR_DETAIL  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.ClientID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where DocID =  @DocID
	
	) A
ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"40112","CV_Attendees","","Select U.UserID,isnull(U.FirstName,'')+' '+isnull(U.Surname,'') as Names
From Users U
Left Join Attendees A on U.UserID=A.UserID
Where AppID={Where}","0","","1","LRA-FUSION","0","0","fusion"
"40113","cv_Options_Button_Adv","","--cv_Options_Button_Adv
SELECT 
Case [Variable]
WHEN 'OptBtnNew' THEN  'New'
WHEN 'OptBtnLogCall' THEN  'Log Call'
WHEN 'OptBtnLogCallAdv' THEN  'Log Call [Advanced]'
WHEN 'OptBtnAct' THEN  'Create Action'
WHEN 'OptBtnTask' THEN  'Create Task'
WHEN 'OptBtnAppt' THEN  'Create Appointment'
WHEN 'OptBtnEmail' THEN  'Send Email'
WHEN 'OptBtnSSMS' THEN 'Send SMS'
WHEN 'OptBtnUpdCompany' THEN  'Quick-update Company'
WHEN 'OptBtnUpdContact' THEN  'Quick-update Contact'
WHEN 'OptBtnQuote' THEN  'Create Quote'
WHEN 'OptBtnSalesOrder' THEN  'Create Sales Order'
WHEN 'OptBtnInvoice' THEN  'Create Invoice'
WHEN 'OptBtnLeads' THEN  'Add to Leads'
WHEN 'OptBtnSP' THEN  'Add to Sales Pipeline'
WHEN 'OptBtnTicket' THEN  'Create Ticket'
WHEN 'OptBtnJob' THEN  'Create Job'
WHEN 'OptBtnNotes' THEN  'Export Notes'
WHEN 'OptBtnMerge' THEN  'Merge'
WHEN 'OptBtnDWork' THEN  'Dial Work'
WHEN 'OptBtnDHome' THEN  'Dial Home'
WHEN 'OptBtnDCell' THEN  'Dial Cell'
WHEN 'OptBtnConvert' THEN  'Convert'
WHEN 'OptBtnCreateRequisition' THEN  'Create Requisition'
End as [ListName]
FROM CRMSetupOptions where isnull([Selected],0) = 1
{where}
ORDER BY OptionSetupID ","0","","1","LRA-FUSION","0","0","fusion"
"40114","cv_SerialNumber_rpt","","SELECT SC.StockControlID, LDiv.Value as [Division],
STK.StockCode as [Code], STK.StockDescription as [Description],
SC.SerialNumber as [S/N] ,Convert(varchar,AdjustDate,111) as [Date Adjusted], LLC.Value as [Container],
Case WHEN SC.Qty < 0 THEN 'Out' ELSE 'In' END as [Direction],
SC.DocType as [Adjusting Doc. Type],
Isnull(DM.DocNo, isnull(CM.DocNo, isnull(EM.DocNo, SC.DocID))) as [Adjusting Doc. No.],
E.AccountNum as [Account],
E.Company as [Client/Supplier]
FROM AccStockControl SC
LEFT JOIN (SELECT StockID , StockCode, StockDescription FROM AccStock) STK
	ON SC.StockID = STK.StockID
LEFT JOIN LinkLookup LLC
	ON SC.ContainerID = LLC.LinkLookupID
LEFT JOIN Lookup LDiv
	ON SC.DivisionID = LDiv.LookupID
LEFT JOIN (SELECT DocID, EntityID, DocNo FROM DEBTOR_MASTER) DM
	ON SC.DocID = DM.DocID AND SC.DocType IN ('Credit Note','Dispatch Note', 'Invoice')
LEFT JOIN (SELECT DocID, EntityID, DocNo FROM CREDITOR_MASTER) CM
	ON SC.DocID = CM.DocID AND SC.DocType IN ('Goods Received Note')
LEFT JOIN (SELECT DocID, ClientID, SupplierID, DocNo FROM Expenditure_Master) EM
	ON SC.DocID = EM.DocID AND SC.DocType IN ('Stock Transfer', 'Stock Disbursement', 'Stock Purchase')
LEFT JOIN (SELECT EntityID, Company, AccountNum FROM Entity) E
	ON isnull(DM.EntityID, isnull(CM.EntityID, isnull(EM.ClientID, isnull(EM.SupplierID,0)))) = E.EntityID
WHERE isnull(SC.SerialNumber,'') <> ''
{where}
ORDER BY STK.StockCode, SC.SerialNumber




","0","","1","LRA-FUSION","0","0","fusion"
"40115","cv_Contact_Search_with_company_Schuttebkj","","select EntityContactID, 
[Contact ID], Company,
[Business Category], 
SalesConsultant, 
Title,Initials , 
Firstname, 
Surname, Phone1, Phone2, HomePhone, 
Cell, Fax, Email,Department,[Job Title], 
[Industry],[Type],[Sub Type],[Created Date],[Created By],
[Last Call],[Last Appointment], [Last Modified Date],
[Modified By],Country,Region,City,
[Addition 5],[Addition 6],[Addition 7],
[Addition 8], [Addition 2],[Addition 4],
[Addition 3],[Addition 1]
from

(select 
 SC.SalesConsultant,c.Category,Gr.[Group],AccT.AccType,D.Division,ec.EntityContactID,t.Type as [Type], ec.EntityContactID as [Contact ID],AlternateContactID, 
 e.Company, ec.Title ,ec.Initials, ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, 
 ec.Phone3, ec.HomePhone, ec.Cell, ec.Fax, ec.Email, Birthdate,Ext,Department,jobtitle,Spouse,
 AsstTitle,AsstName,AsstPhone,AsstExt,eapy.Address1,eapy.Address2,eapy.Address3,eapy.City,eapy.State,eapy.Code,eapy.Region,
 eapy.Country,SendEmail,SendSMS,ec.AccountNum,ls1.value As [Ext. Sales Consultant],
 right('0'+datename(dd,ec.dateadded),2)+'/'+right('0'+cast(datepart(m,ec.dateadded) as nvarchar), 2)+'/'+datename(yyyy,ec.dateadded) as [Created Date], 
 u.username as [Created by],
 right('0'+datename(dd,ec.datemodified),2)+'/'+right('0'+cast(datepart(m,ec.datemodified) as nvarchar), 2)+'/'+datename(yyyy,ec.datemodified) as [Last Modified Date],
 OutlookID, uu.username as [Modified By],
 (SELECT TOP 1 CONVERT(VARCHAR, CAST(CallDate as DATETIME),103) FROM CallLog WHERE ISNULL(AdvCall,0) = 1 AND EntityContactID = ec.EntityContactID ORDER BY CallDate DESC) as [Last Call],
 (SELECT TOP 1 CONVERT(VARCHAR, CAST([Date] as DATETIME), 103) FROM Appointment a 
		LEFT JOIN AppointmentContacts ac on ac.apptID = a.AppointmentID
		WHERE ac.EntityContactID = ec.EntityContactID ORDER BY [Date] DESC) as [Last Appointment]
from entitycontact as ec
/*left join entity e on e.entityid = ec.entityid
left join entitycontactgroup g on ec.entitycontactid = g.entitycontactid
left join (select lookupid as typeid, value as type from lookup where class like 'type') t on ec.entitytypeid = t.typeid
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c on ec.entitycategoryid = c.categoryid
left join (select lookupid as SourceTypeID, value as SourceType from lookup where class like 'Source Type') s on ec.ContTypeID = s.SourceTypeID
left join (select lookupid as InterestID, value as Interest from lookup where class like 'Interest') i on ec.InterestID = i.InterestID
left join (select lookupid as PositionID, value as Position from lookup where class like 'Position') p on ec.PositionID = p.PositionID
left join users u on ec.entitycontactcreatorid = u.userid
left join users uu on ec.EntityContactUpdaterID = uu.userid
left join entitycontactdivision ed on ed.entitycontactid = ec.entitycontactid
left join entityaddress eapo on eapo.entityaddressid = ec.postaladdrid
left join entityaddress eapy on eapy.entityaddressid = ec.physicaladdrid*/
left join (select lookupid as AccTypeID, value as AccType from lookup where class like 'accounttype') AccT
 on ec.accounttypeid = AccT.AccTypeID
left join (Select lookupid, value from lookup) ls1 on ls1.lookupid = EC.SalesConsID

left join entity e
 on e.entityid = ec.entityid 
left join entitycontactgroup g 
 on ec.entitycontactid = g.entitycontactid 
left join (select lookupid as groupid, value as [Group] from lookup where class like 'group') Gr
 on g.groupid = Gr.groupid 
left join (select lookupid as SalesConsid, value as SalesConsultant from lookup where class like 'salescons') SC
 on ec.salesconsid = SC.SalesConsid 
left join (select lookupid as typeid, value as type from lookup where class like 'type') t
 on ec.entitytypeid = t.typeid 
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c
 on ec.entitycategoryid = c.categoryid 
left join (select lookupid as SourceTypeID, value as SourceType from lookup where class like 'Source Type') s
 on ec.ContTypeID = s.SourceTypeID 
left join (select lookupid as InterestID, value as Interest from lookup where class like 'Interest') i
 on ec.InterestID = i.InterestID 
left join (select lookupid as PositionID, value as Position from lookup where class like 'Position') p
 on ec.PositionID = p.PositionID 
left join users u
 on ec.entitycontactcreatorid = u.userid 
left join users uu on ec.EntityContactUpdaterID = uu.userid 
left join entitycontactdivision ed
 on ed.entitycontactid = ec.entitycontactid 
left join (select lookupid as DivisionID, value as Division from lookup where class like 'Divisions') D
 on ed.DivisionID = D.DivisionID 
left join entityaddress eapo
 on eapo.entityaddressid = ec.postaladdrid 
left join entityaddress eapy
 on eapy.entityaddressid = ec.physicaladdrid
left join EntityContactTypes ect
 on ec.entitycontactid = ect.entitycontactid
left join entityContactMOComm ecmc
 on ec.entitycontactid = ecmc.entitycontactid
{duplicate_section}
<%where%>
 GROUP BY jobtitle,ec.EntityContactID, ec.AlternatecontactID, e.Company, ec.Title,ec.Initials , ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, 
	ec.Phone3, ec.HomePhone, ec.Cell, ec.Fax, ec.Email, ec.Birthdate, ec.Ext, ec.Department, ec.Spouse, ec.AsstTitle, ec.AsstName, ec.AsstPhone, ec.AsstExt, 
        ec.Address1, ec.Address2, ec.Address3, ec.City, ec.State, ec.Code, ec.Region, ec.Country, ec.Province, ec.SendEmail, ec.SendSMS, ec.AccountNum, 
	ec.DateAdded, ec.DateModified, OutlookID,
	ec.address1,ec.address2,ec.address3,ec.city,ec.region,ec.code,ec.country,
	ec.sendemail,ec.sendsms,ec.sendpost,
	ec.dateadded,u.username,ec.datemodified,uu.username,eapy.Address1,eapy.Address2,
	eapy.Address3,eapy.City,eapy.State,eapy.Code,eapy.Region,eapy.Country,SC.SalesConsultant,c.Category,Gr.[Group],AccT.AccType,D.Division,t.Type,ls1.value) aa
{orderby}","0","","1","LRA-FUSION","0","0","fusion"
"40116","cv_ImportResourcePrices","","--cv_ImportResourcePrices
INSERT INTO Lookup (Value, Class)
SELECT 
    DISTINCT 
    PriceCategory
    , 'PriceCategory' 
FROM _ResourceImport RI WITH(NOLOCK)
LEFT JOIN (
    SELECT 
        Lookupid
        , Value 
    FROM Lookup  WITH(NOLOCK) 
    where class like 'PriceCategory'
) L ON L.Value = RI.PriceCategory
WHERE l.LookupID IS NULL AND ISNULL(RI.PriceCategory,'') <> ''

INSERT INTO AccStockPrice
(
	StockId,
	DivisionId,
	CostPriceEx,
	SellingPriceEx,
	MinSellingPriceEx,
	CostPriceExBuffer,
	RentalPriceEx,
	IsMarginBased,
	Markup,
	IsForExDependant,
	ExchangeRateID,
	ForExMultiplier,
	ForexBasePrice,
	ConvertExchangeRateID,
	ForexDepTotal,
	PriceFromDocTotals,
	CalcPriceUsing,
	CalcPriceUsingPerc,
	UseLandedCost,
	LastUpdated,
	PriceCategoryID,
	ValidFrom,
	ValidTo,
	SupplierID,
	IsContract,
	SupplierStockCode,
	WastePerc
)

SELECT DISTINCT
    A.StockID
    ,LD.LookupID
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(bulkcostpriceexvat) = 1 THEN BulkCostPriceExVat ELSE '0' END ) as CostPrice
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(UnitSellingPriceExVat) = 1 THEN UnitSellingPriceExVat ELSE '0' END) as UnitSellingPriceExVat
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(MinUnitSellingPrice) = 1 THEN MinUnitSellingPrice ELSE '0' END) as MinUnitSellingPrice
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.CostPriceBuffer) = 1 THEN RI.CostPriceBuffer ELSE '0' END) as CostPriceBuffer
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.RentalPriceEx) = 1 THEN RI.RentalPriceEx ELSE '0' END) as RentalPriceEx
    --,CONVERT(BIT, CASE WHEN ISNULL(RI.MarkUP,'') <> '' Then 0 ELSE 1 END) as MarkupBased 
    ,IsMarginBased   as MarkupBased 
    ,CONVERT(FLOAT, ISNULL(RI.MarkUP,Margin)) as MarkupField
    ,CostDependsOnForex --BIT
    ,ex.ExchangeRateID
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.ForExMultiplier) = 1 THEN RI.ForExMultiplier ELSE '0' END) as ForExMultiplier
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.ForexBasePrice) = 1 THEN RI.ForexBasePrice ELSE '0' END) as ForexBasePrice
    ,ex2.ExchangeRateID
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.ForexDepTotal) = 1 THEN RI.ForexDepTotal ELSE '0' END) as ForexDepTotal
    ,RI.PriceFromDocTotals --BIT
    ,(CASE RI.CalcPriceUsing 
        WHEN 'All Items'
        THEN 0
        WHEN 'Tangible Items'
        THEN 1
        WHEN 'Intangible Items'
        THEN 2
        WHEN 'Manufactured Items'
        THEN 3
        END
    )
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.CalcPriceUsingPerc) = 1 THEN RI.CalcPriceUsingPerc ELSE '0' END) as CalcPriceUsingPerc
    ,RI.uselandedcost--BIT
    ,CASE WHEN ISNULL(RI.LastUpdated, '') = '' THEN GETDATE() ELSE CONVERT(DATETIME, RI.LastUpdated) END as LastUpdated
    ,LPC.LookupID
    ,RI.ValidFrom
    ,RI.ValidTo
    ,E.EntityID
    ,RI.IsContract--BIT
    ,RI.SupplierProductCode
     ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.wastage) = 1 THEN RI.wastage ELSE '0' END) as Wastage
FROM _ResourceImport RI  WITH(NOLOCK)
LEFT JOIN (
    SELECT 
        StockID
        , StockCode 
    FROM AccStock WITH(NOLOCK)
) A ON A.StockCode = RI.Code
LEFT JOIN (
    SELECT StockID,StockPriceId FROM AccStockPrice WITH(NOLOCK)
) ASP ON ASP.StockID = A.StockID
LEFT JOIN (
    SELECT 
        LookupID
        , Value 
    FROM Lookup WITH (NOLOCK) 
    WHERE Class LIKE 'divisions'
) LD ON LD.Value = RI.Division
left join exchangerates ex WITH (NOLOCK) on
ex.Currency = RI.ForexCurrency
left join exchangerates ex2 WITH (NOLOCK) on
ex2.Currency = RI.ConvertBackUsing
LEFT JOIN (
    SELECT 
        Lookupid
        , Value 
    FROM Lookup WITH(NOLOCK) 
    where class like 'PriceCategory'
) LPC
ON LPC.Value = RI.PriceCategory
LEFT JOIN (
    SELECT 
        EntityID
        , Company 
        , IsSupplier
    FROM Entity WITH(NOLOCK) 
WHERE IsSupplier = 1 

) E 
ON E.Company = RI.PreferredSupplier
WHERE

ASP.StockPriceId IS NULL AND
RI.Code IS NOT NULL
AND ISNULL(A.StockID,0) <> 0","0","","1","LRA-FUSION","0","0","fusion"
"40117","cv_Contact_Search_with_company_Schutte233","","select Distinct
EntityContactID, [Contact ID], Company,[Business Category], SalesConsultant, Title,Initials ,
 Firstname, Surname, Phone1, Phone2, HomePhone, Cell, Fax, Email,Department,[Job Title], 
 [Industry],[Type],[Sub Type],[Created Date],[Created By],[Last Call],[Last Appointment], 
 [Last Modified Date],[Modified By],Country,Region,City,[Addition 5],
[Addition 6],[Addition 7],[Addition 8], [Addition 2],[Addition 4],[Addition 3],[Addition 1] 


 from

(select 
 SC.SalesConsultant,c.Category,Gr.[Group],AccT.AccType,D.Division,ec.EntityContactID,t.Type as [Type],STB.[Sub Type]as [Sub Type], ec.EntityContactID as [Contact ID],AlternateContactID, 
 e.Company, ec.Title ,ec.Initials, ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, [Addition 5],[Addition 6],[Addition 7],[Addition 8] ,
 ec.Phone3, ec.HomePhone, ec.Cell, ec.Fax, ec.Email, Birthdate,Ext,lbdep.Department as [Department],jobtitle as [Job Title],lbind.[Industry] as [Industry],Spouse,
 AsstTitle,AsstName,AsstPhone,AsstExt,eapy.Address1,eapy.Address2,eapy.Address3,eapy.City,eapy.State,eapy.Code,eapy.Region,
 eapy.Country,SendEmail,SendSMS,ec.AccountNum,ls1.value As [Ext. Sales Consultant],[Business Category],
 right('0'+datename(dd,ec.dateadded),2)+'/'+right('0'+cast(datepart(m,ec.dateadded) as nvarchar), 2)+'/'+datename(yyyy,ec.dateadded) as [Created Date], 
 u.username as [Created by],EC.Additional1 as [Addition 1],EC.Additional3 as [Addition 3],EC.Additional4 as [Addition 4],EC.Additional2 as [Addition 2],
 right('0'+datename(dd,ec.datemodified),2)+'/'+right('0'+cast(datepart(m,ec.datemodified) as nvarchar), 2)+'/'+datename(yyyy,ec.datemodified) as [Last Modified Date],
 OutlookID, uu.username as [Modified By],
 (SELECT TOP 1 CONVERT(VARCHAR, CAST(CallDate as DATETIME),103) FROM CallLog WHERE ISNULL(AdvCall,0) = 1 AND EntityContactID = ec.EntityContactID ORDER BY CallDate DESC) as [Last Call],
 (SELECT TOP 1 CONVERT(VARCHAR, CAST([Date] as DATETIME), 103) FROM Appointment a 
		LEFT JOIN AppointmentContacts ac on ac.apptID = a.AppointmentID
		WHERE ac.EntityContactID = ec.EntityContactID ORDER BY [Date] DESC) as [Last Appointment]
from entitycontact as ec
/*left join entity e on e.entityid = ec.entityid
left join entitycontactgroup g on ec.entitycontactid = g.entitycontactid
left join (select lookupid as typeid, value as type from lookup where class like 'type') t on ec.entitytypeid = t.typeid
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c on ec.entitycategoryid = c.categoryid
left join (select lookupid as SourceTypeID, value as SourceType from lookup where class like 'Source Type') s on ec.ContTypeID = s.SourceTypeID
left join (select lookupid as InterestID, value as Interest from lookup where class like 'Interest') i on ec.InterestID = i.InterestID
left join (select lookupid as PositionID, value as Position from lookup where class like 'Position') p on ec.PositionID = p.PositionID
left join users u on ec.entitycontactcreatorid = u.userid
left join users uu on ec.EntityContactUpdaterID = uu.userid
left join entitycontactdivision ed on ed.entitycontactid = ec.entitycontactid
left join entityaddress eapo on eapo.entityaddressid = ec.postaladdrid
left join entityaddress eapy on eapy.entityaddressid = ec.physicaladdrid*/
left join (select lookupid as AccTypeID, value as AccType from lookup where class like 'accounttype') AccT
 on ec.accounttypeid = AccT.AccTypeID
left join (Select lookupid, value from lookup) ls1 on ls1.lookupid = EC.SalesConsID

left join entity e
 on e.entityid = ec.entityid 
left join entitycontactgroup g 
 on ec.entitycontactid = g.entitycontactid 
left join (select lookupid as groupid, value as [Group] from lookup where class like 'group') Gr
 on g.groupid = Gr.groupid 
left join (select lookupid as SalesConsid, value as SalesConsultant from lookup where class like 'salescons') SC
 on ec.salesconsid = SC.SalesConsid 
left join (select lookupid as typeid, value as type from lookup where class like 'type') t
 on ec.entitytypeid = t.typeid 
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c
 on ec.entitycategoryid = c.categoryid 
left join (select lookupid as SourceTypeID, value as SourceType from lookup where class like 'Source Type') s
 on ec.ContTypeID = s.SourceTypeID 
left join (select lookupid as InterestID, value as Interest from lookup where class like 'Interest') i
 on ec.InterestID = i.InterestID 
left join (select lookupid as PositionID, value as Position from lookup where class like 'Position') p
 on ec.PositionID = p.PositionID 
left join users u
 on ec.entitycontactcreatorid = u.userid 
left join users uu on ec.EntityContactUpdaterID = uu.userid 
left join entitycontactdivision ed
 on ed.entitycontactid = ec.entitycontactid 
left join (select lookupid as DivisionID, value as Division from lookup where class like 'Divisions') D
 on ed.DivisionID = D.DivisionID 
left join entityaddress eapo
 on eapo.entityaddressid = ec.postaladdrid 
left join entityaddress eapy
 on eapy.entityaddressid = ec.physicaladdrid
left join EntityContactTypes ect
 on ec.entitycontactid = ect.entitycontactid
left join entityContactMOComm ecmc
 on ec.entitycontactid = ecmc.entitycontactid
left join (select lookupid,value as [Business Category] from lookup ) lbcat
	on lbcat.lookupid = ec.buscatid
	left join (select lookupid,value as [Department] from lookup ) lbdep
on lbdep.lookupid = ec.DepartmentID
left join (select lookupid,value as [Industry] from lookup ) lbind
on lbind.lookupid = ec.IndustryID
left join (select LinkLookupID,value as [Sub Type] from linklookup ) STB
on STB.LinkLookupID = ec.entitysubtypeid
  left join (select lookupid,value as [Addition 5] from lookup ) lbAD1
on lbAD1.lookupid = ec.AdditionalID5
left join (select lookupid,value as [Addition 6] from lookup ) lbAD2
on lbAD2.lookupid = ec.AdditionalID6
left join (select lookupid,value as [Addition 7] from lookup ) lbAD3
on lbAD3.lookupid = ec.AdditionalID7
left join (select lookupid,value as [Addition 8] from lookup ) lbAD4
on lbAD4.lookupid = ec.AdditionalID8
--{duplicate_section}
<%where%>
 GROUP BY jobtitle,ec.EntityContactID, ec.AlternatecontactID, e.Company, ec.Title,ec.Initials , ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, 
	ec.Phone3, ec.HomePhone, ec.Cell, ec.Fax, ec.Email, ec.Birthdate, ec.Ext, ec.Department, ec.Spouse, ec.AsstTitle, ec.AsstName, ec.AsstPhone, ec.AsstExt, 
        ec.Address1, ec.Address2, ec.Address3, ec.City, ec.State, ec.Code, ec.Region, ec.Country, ec.Province, ec.SendEmail, ec.SendSMS, ec.AccountNum, 
	ec.DateAdded, ec.DateModified, OutlookID,lbdep.Department,lbind.[Industry],STB.[Sub Type],
	ec.address1,ec.address2,ec.address3,ec.city,ec.region,ec.code,ec.country,
	ec.sendemail,ec.sendsms,ec.sendpost,EC.Additional2,EC.Additional3,EC.Additional4 ,[Addition 5],[Addition 5],[Addition 6],[Addition 7],[Addition 8] ,EC.Additional1,
	ec.dateadded,u.username,ec.datemodified,uu.username,eapy.Address1,eapy.Address2,
	eapy.Address3,eapy.City,eapy.State,eapy.Code,eapy.Region,eapy.Country,SC.SalesConsultant,c.Category,Gr.[Group],AccT.AccType,D.Division,t.Type,ls1.value,[Business Category]) aa
--{orderby}","0","","1","LRA-FUSION","0","0","fusion"
"40118","qf_Forms","","select
top 50 [FormID],
[Caption] + ' (' + [FormName] + ')' as [Form] 
FROM [Forms] 
where ([Caption] like '%<%replace%>%' OR [FormName] like  '%<%replace%>%')
ORDER By Caption","0","","1","LRA-FUSION","0","0","fusion"
"40119","cv_acc_Stock_Split_Inputs","","SELECT LineId, STK.StockCode as [Code], STK.StockDescription as [Description], LL.Value as [From Container], 
Length as [Length To Use]
FROM AccStock_Split_Detail SD
LEFT JOIN (SELECT StockId, StockCode, StockDescription FROM AccStock) STK ON SD.StockID =STK.StockID
LEFT JOIN (SELECT * FROM LinkLookup) LL ON SD.ContainerID = LL.LinkLookupID
WHERE isnull(IsInput,0) = 1
AND DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40120","cv_acc_Stock_Split_Man","","
SELECT Distinct SM.DocID, SM.DocID as [Doc. No.], convert(varchar,DateCreated,111) as [Created],  
U.[Created By], S.[Assigned To],
DocStatus as [Status], 
convert(varchar,Datecompleted,111) + ' ' + convert(varchar,Datecompleted,108) as [Manufacture Date]
FROM AccStock_split_Master SM
LEFT JOIN (SELECT * FROM AccStock_split_detail) SD
ON SM.DocID = SD.DocID
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM accStock) STK
ON SD.StockID = STK.StockID
LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Assigned To] FROM Staff ) S
ON SM.StaffID = S.StaffID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Created By] FROM Users ) U
ON SM.CreatedBy = U.UserID
{where}
ORDER BY SM.DocID Desc


","0","","1","LRA-FUSION","0","0","fusion"
"40121","cv_acc_Stock_Split_Outputs","","SELECT LineId, STK.StockCode as [Code], STK.StockDescription as [Description], LL.Value as [To Container], 
Length as [Required Length], Qty as [No. Of Lengths]
FROM AccStock_Split_Detail SD
LEFT JOIN (SELECT StockId, StockCode, StockDescription FROM AccStock) STK ON SD.StockID =STK.StockID
LEFT JOIN (SELECT * FROM LinkLookup) LL ON SD.ContainerID = LL.LinkLookupID
WHERE isnull(IsInput,0) = 0
AND DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40122","cv_acc_Stock_Split_Process","","DECLARE @DocID as Integer
SET @DocID = {docid}

DELETE FROM AccStockControl where DocType = 'Stock Split' and DocID = @DocID

INSERT INTO AccStockControl (Stockid, docID, DocType, AdjustDate, Qty, PurchasedBy, SoldBy, Ratio, DivisionID, ContainerID, [Length] )
SELECT SSD.StockID, SSD.DocID, 'Stock Split',  SSM.DateCompleted, 
CASE when isnull(SSD.IsInput,0) = 1 THEN -1 ELSE 1 END * SSD.[Length] /STK.SoldByToPurchasedByRatio , 
STK.PurchasedBy, STK.SoldBy, STK.SoldByToPurchasedByRatio,
LL.LinkedTo as [Division], SSD.ContainerID, SSD.[Length]  
From AccSTOCK_SPLIT_DETAIL SSD
LEFT JOIN (SELECT * FROM AccSTOCK_SPLIT_MASTER ) SSM 
	ON SSD.DocID = SSM.DocID
LEFT JOIN (SELECT * FROM AccStock) STK
	ON SSD.StockID = STK.StockID
LEFT JOIN (SELECT * FROM LinkLookup) LL 
	ON SSD.ContainerID = LL.LinkLookupID
where 
SSD.DocID = @DocID

","0","","1","LRA-FUSION","0","0","fusion"
"40123","cv_staff_export","","select
 staffid,Initials,firstname as [First Name],Surname,Ext,Tel,Cell,Email,
	CASE ISNULL(isActive,0) WHEN 0 THEN 'No' ELSE 'Yes' END AS [Active]
,PeriodFrom As [Plan Period From]
,PeriodTo As [Plan Period To]
,l2.Value As Position
,l.Value As [User Division]
from staff
left join lookup l on l.lookupid = staff.departmentid
left join lookup l2 on l2.Lookupid = staff.position
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40124","cv_Address_Links","","SELECT
	AL.AddressLinkID,
	C.Value as [Country],
	R.Value as [Province / Region],
	CI.Value as [Area / City],
	isnull(CO.Value,AL.Code) as [Code]
FROM AddressLink AL
LEFT JOIN Lookup C ON C.LookupID = AL.CountryID
LEFT JOIN Lookup R ON R.LookupID = AL.RegionID
LEFT JOIN Lookup CI ON CI.LookupID = AL.CityID
LEFT JOIN Lookup CO ON CO.LookupID = AL.CodeID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40125","cv_Acc_Credit_Offset_Supplier","","select DM.DocID, DocNo as [Doc. No.], 
dbo.fnFormatNumber(DD.Credit ) as [Credit Value] ,  
dbo.fnFormatNumber((DD.Credit) - isnull(used,0)) as [Credit Available]
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT sum(PriceEx * qty * ((100 - isnull(DiscPerc,0))/100) * (isnull(Tax,0)/100 + 1) ) as [Credit], DocID FROM CREDITOR_DETAIL Group By DocID) DD
ON DM.DocID = DD.DocID
LEFT JOIN (SELECT PaymentDocID, sum(PaymentPortion) as [Used]  FROM CREDITOR_PAYMENT Group by PaymentDocID) DP
ON DM.DocID = DP.PaymentDocID
WHERE 
(DOCType like 'Credit Note' OR DocType Like 'Supplier Credit Note')
AND Isnull(PreviousDocID, 0 ) = 0
AND DD.Credit - isnull(used,0) > 0
{where}
ORDER BY DocNo","0","","1","LRA-FUSION","0","0","fusion"
"40126","cv_Insert_Project_Containers","","INSERT INTO projectcontainers (ProjectID,ContainerID)

SELECT distinct {ProjectID},CED.ContainerID FROM Cost_Estimate_Detail CED
LEFT JOIN (SELECT * FROM projectcontainers) PC
ON PC.ContainerID = CED.ContainerID AND PC.ProjectID = {ProjectID}
WHERE PC.ProjectContainerID IS NULL
AND  CED.ContainerID is not null","0","","1","LRA-FUSION","0","0","fusion"
"40127","cv_Get_Entity_Tax","","SELECT ATT.TaxTypeID,ISNULL(ATT.TaxPercentage,0) as [VAT], ER.* FROM Entity E
Left Join ExchangeRates ER 
ON isnull(E.Currency,(SELECT Top 1 ExchangeRateID FROM ExchangeRates where isDefault = 1)) = ER.ExchangeRateID
LEFT JOIN (
SELECT 
	* 
From AccTaxType
) ATT ON ATT.TaxTypeID = E.TaxTypeID
WHERE E.EntityID = {EntityID} AND ATT.TaxTypeID IS NOT NULL","0","","1","LRA-FUSION","0","0","fusion"
"40128","cv_Project_GL_Adjustments","","SELECT LineID, LDiv.Value as [Division],
isnull(convert(varchar,GLC.GLCode),'') + ' - ' + isnull([GL Category],'') as [GL],
RC.Value as [Report Category],
Convert(varchar,AdjustDate,111) as [Adjustment Date],
Convert(varchar,cast(Debit as money),1) as [Debit], 
Convert(varchar,cast(Credit as money),1) as [Credit],
LAD.Notes as [Ref],
isnull(STK.StockDescription + ' - ','') + isnull(A.SerialNo,'') as [Asset]
FROM (
	SELECT convert(Varchar,LineID) + '#GL' as [LineID], DocID, DivisionID, GLCodeID, AdjustDate, Debit, Credit, Notes,ProjectID, AssetID, ReportCategoryID 
	FROM LEDGER_ADJUST_DETAIL
	UNION ALL 
	SELECT convert(Varchar,LineID) + '#CT' as [LineID], DocID, DivisionID, GLCodeID, DatePaid, Case when TotalIncl > 0 THEN isnull(TotalIncl,0) / (isnull(VatPerc,0) /100 + 1) ELSE 0  END, Case when TotalIncl < 0 THEN isnull(TotalIncl,0) / (isnull(VatPerc,0) /100 + 1) ELSE 0  END, RefNo,ProjectID, AssetID, ReportCategoryID 
	FROM CASH_TRANSACTION_DETAIL
) LAD
LEFT JOIN AccGLCode GLC ON LAD.GLCodeID = GLC.GLCodeID
LEFT JOIN Lookup LDiv on LAD.DivisionID = LDiv.LookupID
LEFT JOIN Lookup RC on LAD.ReportCategoryID = RC.LookupID
LEFT JOIN (SELECT ProjectID, ProjectName,EntityID From Projects) P ON LAD.ProjectID = P.ProjectID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E ON P.EntityID = E.EntityID
LEFT JOIN (SELECT AssetID, StockID, SerialNo FROM AccAsset) A ON LAD.AssetID = A.AssetID
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) STK ON A.StockID = STK.StockID
LEFT JOIN ({gllookup}) LD ON GLC.GLCategoryId = LD.lookupid
--LEFT JOIN (SELECT LookupID, Value as [GL Category] FROM Lookup) LD ON GLC.GLCategoryId = LD.lookupid
WHERE LAD.ProjectID = {projectid}
ORDER BY LineID Desc



","0","","1","LRA-FUSION","0","0","fusion"
"40129","cv_Customise_OrderType","","SELECT 1 as [ID] , 'Web' as [Value]

UNION ALL

SELECT 2 as [ID] , 'Manual' as [Value]","0","","1","LRA-FUSION","0","0","fusion"
"40130","cv_PublicHoliday_Create","","DECLARE @Desc VARCHAR(255)
DECLARE @Date DATETIME
DECLARE @CompanyOpen BIT
DECLARE @ThisYear BIT
DECLARE @WeekDay VARCHAR(255)
DECLARE @PubID INT
DECLARE @YearDiff INT
DECLARE @Year INT
DECLARE @CountryID INT

DECLARE @Line CURSOR

SET @Year = {year}
SET @PubID = 0
SET @YearDiff = @Year - 1

SET @Line = CURSOR FAST_FORWARD FOR
	SELECT 
		A.[Description],
		A.[Date],
		A.[WeekDay],
		A.CompanyOpen,
		A.ThisYearOnly,
		A.CountryID
	FROM (
		SELECT
			[Description],
			DATEADD(YEAR, 1, [Date]) as [Date],
			CASE WHEN MONTH([Date]) = 12 AND DAY([Date]) = 25 THEN 'Xmas Day' ELSE
			DATENAME(WEEKDAY,DATEADD(YEAR, 1, [Date])) END as [WeekDay],
			CompanyOpen,
			0 as [ThisYearOnly],
			CountryID
		FROM PublicHoliday 
		WHERE YEAR(Date) = @YearDiff
		AND ISNULL(thisYear,0) = 0
		
		UNION ALL
		
		SELECT
			'Good Friday',
			DATEADD(DAY, -2, dbo.fn_GetEasterSunday(@Year)) as [Date],
			'Friday',
			0,
			1,
			CountryID
		FROM PublicHoliday 
		WHERE YEAR(Date) = @YearDiff
		AND [Description] = 'Good Friday'
			
		UNION ALL
		
		SELECT
			[Description],
			DATEADD(DAY, 1, dbo.fn_GetEasterSunday(@Year)) as [Date],
			'Monday',
			0,
			1,
			CountryID
		FROM PublicHoliday 
		WHERE YEAR(Date) = @YearDiff
		AND ([Description] = 'Family Day' OR [Description] = 'Easter Monday')
	) A
	LEFT JOIN PublicHoliday PH
		ON PH.CountryID = A.CountryID
		AND PH.[Date] = A.[Date]	
		AND PH.CompanyOpen = A.CompanyOpen
		AND PH.thisYear = A.ThisYearOnly
	WHERE PH.PublicHolidayID IS NULL	
	ORDER BY A.[Date]
	
OPEN @Line

FETCH NEXT FROM @Line INTO @Desc, @Date, @WeekDay, @CompanyOpen, @ThisYear, @CountryID 

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @PubID = ISNULL((SELECT PublicHolidayID FROM PublicHoliday WHERE LOWER([Description]) = LOWER(@Desc) AND [Date] = @Date AND CountryID = @CountryID), 0)
	
	IF @PubID = 0 
	BEGIN
		INSERT INTO PublicHoliday ([Description], [Date], CompanyOpen, thisYear, CountryID)
		SELECT @Desc, @Date, @CompanyOpen, @ThisYear, @CountryID
		
		IF @WeekDay = 'Sunday'
		BEGIN
			INSERT INTO PublicHoliday ([Description], [Date], CompanyOpen, thisYear, CountryID)
			SELECT 'Public Holiday', DATEADD(DAY, 1, @Date), @CompanyOpen, 1,@CountryID 
		END
		
	END
	
	FETCH NEXT FROM @Line INTO @Desc, @Date, @WeekDay, @CompanyOpen, @ThisYear,@CountryID 
END

CLOSE @Line
DEALLOCATE @Line ","0","","1","LRA-FUSION","0","0","fusion"
"40131","cv_PublicHoliday_Man","","SELECT 
	publicholidayID,
	L.Value as [Country] ,
	[Description], 
	'Company Opened'=CASE ISNULL(companyopen,0)  WHEN 0 THEN 'No' ELSE 'Yes' END, 
	'This Year Only'=CASE ISNULL(thisYear,0)  WHEN 0 THEN 'No' ELSE 'Yes' END ,
	CONVERT(VARCHAR, [Date], 111) as [Date]
FROM publicholiday P
LEFT JOIN lookup L On L.LookupID = P.CountryID 
{where}
ORDER BY L.Value,[date] ASC","0","","1","LRA-FUSION","0","0","fusion"
"40132","cv_PublicHolidays","","DECLARE @Year INT
SET @Year = {year}
SELECT 
	description, 
	Year(Date) as year,
	Month(Date) as month,
	Day(Date) as day 
FROM publicholiday 
WHERE YEAR(date) = @Year 
","0","","1","LRA-FUSION","0","0","fusion"
"40133","cv_StockTypePrefix","","SELECT l.lookupID,l.Value as [Stock Type], Prefix  FROM Lookup L
LEFT JOIN (SELECT * FROM AccStockTypePrefix) ASTP
ON L.LookupID = ASTP.StockTypeID
WHERE L.Class LIKE 'StockType'","0","","1","LRA-FUSION","0","0","fusion"
"40134","cv_StockSubTypePrefix","","SELECT ll.LinkLookupID,LL.Value, Prefix FROM LinkLookup ll
LEFT JOIN (SELECT * FROM AccStockSubTypePrefix) ASSTP
ON LL.LinkLookupID = ASSTP.StockSubTypeID
WHERE Class LIKE 'StockSubType'","0","","1","LRA-FUSION","0","0","fusion"
"40135","qf_Waypoint_Search","","SELECT TOP 50 EntityContactID, E.Company, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,''),Waypoint FROM EntityContact EC
LEFT JOIN (SELECT EntityID, Company FROM Entity) E ON E.EntityID = EC.EntityID
LEFT JOIN (
	SELECT 
		EntityAddressID,
		EntityID,
		CASE ISNULL(Address1,'') WHEN '' THEN '' ELSE Address1 + ' , ' END
		+ CASE ISNULL(Address2,'') WHEN '' THEN '' ELSE Address2 + ' , ' END
		+ CASE ISNULL(Address3,'') WHEN '' THEN '' ELSE Address3 + ' , ' END
		+ CASE ISNULL(City,'') WHEN '' THEN '' ELSE City + ' , ' END
		+ CASE ISNULL(Region,'') WHEN '' THEN '' ELSE Region + ' , ' END
		+ CASE ISNULL(Country,'') WHEN '' THEN '' ELSE Country END
		As Waypoint
		
	FROM EntityAddress 
	WHERE AddressType LIKE '%physical%'
) ED ON ED.EntityAddressID = EC.PhysicalAddrID
WHERE Waypoint is not null
AND ((E.Company like '%<%replace%>%') or (ISNULL(EC.Firstname,'') + ' ' + ISNULL(EC.Surname,'') like '%<%replace%>%')) 
 <%where%>","0","","1","LRA-FUSION","0","0","fusion"
"40136","cv_Route_Waypoints","","SELECT RouteID, Waypoint, ISNULL(S.PreferredRoute,RouteCode) as [Route Code], E.Company, Contact, S.NumCopies as QTY FROM RoutePlanner RP
LEFT JOIN (
	SELECT 
		EntityAddressID,
		
		CASE ISNULL(Address1,'') WHEN '' THEN '' ELSE Address1 + ' , ' END
		+ CASE ISNULL(Address2,'') WHEN '' THEN '' ELSE Address2 + ' , ' END
		+ CASE ISNULL(Address3,'') WHEN '' THEN '' ELSE Address3 + ' , ' END
		+ CASE ISNULL(City,'') WHEN '' THEN '' ELSE City + ' , ' END
		+ CASE ISNULL(Region,'') WHEN '' THEN '' ELSE Region + ' , ' END
		+ CASE ISNULL(Country,'') WHEN '' THEN '' ELSE Country END
		As Waypoint
		
	FROM EntityAddress 
	WHERE AddressType LIKE '%physical%'
) ED ON ED.EntityAddressID = RP.WaypointID
LEFT JOIN (SELECT EntityID,EntityContactID, PhysicalAddrID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as Contact FROM EntityContact) EC
ON EC.EntityContactID = RP.EntityContactID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E 
ON E.EntityID = EC.EntityID
LEFT JOIN (
	SELECT * FROM Subscriptions
) S ON S.SubscriptionID = RP.SubscriptionID

 {where}
ORDER BY WRank
","0","","1","LRA-FUSION","0","0","fusion"
"40137","cv_Get_Waypoint","","SELECT top 1
	CASE ISNULL(Address1,'') WHEN '' THEN '' ELSE Address1 + ' , ' END
	+ CASE ISNULL(Address2,'') WHEN '' THEN '' ELSE Address2 + ' , ' END
	+ CASE ISNULL(Address3,'') WHEN '' THEN '' ELSE Address3 + ' , ' END
	+ CASE ISNULL(City,'') WHEN '' THEN '' ELSE City + ' , ' END
	+ CASE ISNULL(Region,'') WHEN '' THEN '' ELSE Region + ' , ' END
	+ CASE ISNULL(Country,'') WHEN '' THEN '' ELSE Country END
	As Waypoint
FROM  EntityAddress WHERE EntityAddressID =  {EntityAddressID}","0","","1","LRA-FUSION","0","0","fusion"
"40138","cv_User_Share","","SELECT CASE ISNULL(US.UserID,0) WHEN 0 Then 0 ELSE 1 End as Assigned, U.UserID FROM Users U
LEFT JOIN User_Share US ON US.UserID = U.USerID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40139","cv_user_shares","","Select DISTINCT 
userid, isnull(firstname,'') + ' ' + isnull(surname,'') as [Name],
(SELECT COUNT(*) FROM user_share WHERE UserID = {userid} and SecondaryUserID = U.UserID) as [Tick]
from users U 
LEFT JOIN (SELECT StaffID, isSalesConsultant,isActive FROM Staff) S ON S.StaffID like U.StaffID 
WHERE ISNULL(S.isSalesConsultant,0) like 1 AND ISNULL(S.isActive,0) like 1 
order by isnull(firstname,'') + ' ' + isnull(surname,'') DESC","0","","1","LRA-FUSION","0","0","fusion"
"40140","cv_Populate_Users","","--cv_Populate_Users
DECLARE @UserID INT 
SET @UserID = {UserID}

SELECT DISTINCT 
	U.UserID,
	U.[Name],
	CASE WHEN CRM.Selected = 1 THEN
		CASE WHEN U.UserID = @UserID THEN @UserID ELSE 0 END
	Else
		0
	END as [assigned]
	--CASE U.UserID WHEN @UserID THEN U.UserID ELSE ISNULL(US.SecondaryUserID,0) END as assigned
FROM (
	SELECT 
		UserID
		,ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Name]
		,StaffID
	FROM Users
) U
LEFT JOIN (SELECT StaffID, isSalesConsultant,isProjectManager,isTicketManager,isJobManager,isActive FROM Staff) S ON S.StaffID = U.StaffID 
LEFT JOIN (SELECT SecondaryUserID FROM User_Share WHERE UserID = @UserID) US ON US.SecondaryUserID = U.UserID
LEFT JOIN (SELECT * FROM UserDivisions) UD ON UD.UserID = U.UserID
LEFT JOIN CRMSetup CRM ON CRM.[Description] = 'Entity' AND CRM.Variable = 'SearchCurrentUser'
{where}
ORDER BY U.[Name] Desc","0","","1","LRA-FUSION","0","0","fusion"
"40141","cv_DivisionAddress","","select 

DivisionAddressID,
LD.Value as Division,
Address1,
Address2,
Address3,
City,
Region,
Code,
Country

from divisionaddress DA
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'divisions') LD
ON LD.LookupID = DA.DivisionID","0","","1","LRA-FUSION","0","0","fusion"
"40142","cv_GetDivAddress","","SELECT Top 1
ISNULL(Address1,'') + ' ' +
ISNULL(Address2,'') + ' ' +
ISNULL(Address3,'') + ' ' +
ISNULL(City,'') + ' ' +
ISNULL(Region,'') + ' ' +
ISNULL(Code,'') + ' ' +
ISNULL(Country,'') + ' ' +
ISNULL(State,'')
FROM DivisionAddress WHERE DivisionID = {DivID}","0","","1","LRA-FUSION","0","0","fusion"
"40143","cv_sales_pop_contactman","","DECLARE @UserID INT 
SET @UserID = {UserID}
SELECT DISTINCT 
	s.StaffID
	,s.Name as [Name],
	CASE WHEN CRM.Selected = 1 THEN
		CASE WHEN U.UserID = @UserID THEN @UserID ELSE 0 END
	Else
		0
	END as [assigned]
	--,CASE U.UserID WHEN {UserID} THEN U.UserID ELSE ISNULL(US.SecondaryUserID,0) END as assigned
FROM (
	SELECT 
		UserID
		,ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Name]
		,StaffID
	FROM Users
) U
LEFT JOIN (SELECT StaffID, isSalesConsultant,isProjectManager,isTicketManager,isJobManager,isActive,ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [name] FROM Staff) S ON S.StaffID = U.StaffID 
LEFT JOIN (SELECT SecondaryUserID FROM User_Share WHERE UserID = @UserID) US ON US.SecondaryUserID = U.UserID
LEFT JOIN (SELECT * FROM UserDivisions) UD ON UD.UserID = U.UserID
LEFT JOIN CRMSetup CRM ON CRM.[Description] = 'Entity' AND CRM.Variable = 'SearchCurrentUser'
{where}

ORDER BY S.[Name] Desc

","0","","1","LRA-FUSION","0","0","fusion"
"40144","cv_Acc_Billing_Detail","","
declare @DocID as int
set @DocID = {docid}

SELECT LineID, [Group],Project, [Stock Code] as [Code], [Description], [Comments], [Supplier], Qty, Discount, [Cost Ex.], [Price Ex.], [Price Incl.],[Total Incl.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1) ) as [Total Incl.],
	Rank, -1000 as [Rank2]
	FROM BILLING_DETAIL  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	
	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1)) as [Total Incl.], 
	(SELECT Top 1 Rank From BILLING_DETAIL Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2]
	FROM BILLING_DETAIL CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND DocID =  @DocID
	) A
ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"40145","cv_DeliverySchedule_Man","","SELECT 
	[DocID],
	[DocID] as [Invoice number],
	[Invoice Date],
	[Client Order Number],
	[Princple],
	convert(varchar,[Loginet %]) +  ' %' as [Loginet %],
	convert(varchar,[Contractors  %]) +  ' %' as [Contractors  %],
	[Store],
	[Distribution Area],
	[Warehouse],
	[Delivery date],
	[Vehicle No],
	[POD],
	[Return],
	x.Currency,
	x.ROE,
	CASE WHEN x.iston = 0 THEN
		 ISNULL(CONVERT(NVARCHAR,CAST([Invoice Value] AS DECIMAL(12,2))),'0.00') 
	ELSE 
		 ISNULL(CONVERT(NVARCHAR,CAST([TonTotal] AS DECIMAL(12,2))),'0.00') + ' Tons'
	END AS [Invoice Value] ,
	
	ISNULL(CONVERT(NVARCHAR,[Loginet Amount]),'0.00')  AS [Loginet Amount],	
	ISNULL(CONVERT(NVARCHAR,[Contractors Amount]),'0.00')  AS [Contractors Amount],
	ISNULL(CONVERT(NVARCHAR,[Loginet Amount] - [Contractors Amount]),'0.00')  AS [Gross Amount]
	
 FROM (
SELECT DISTINCT
	DM.DocID as [DocID],
	ISNULL(tonnageValueID,0) AS [isTon],
	[TonTotal] as [TonTotal],
	CONVERT(VARCHAR,DateCompleted,111) AS [Invoice Date],
	ClientPO AS [Client Order Number],
	CASE WHEN UPPER(DM.Country) = 'LOCAL' THEN
		CAST((ISNULL(CAST(CASE ISNUMERIC(REPLACE(LABC.Value,'%','')) WHEN 1 THEN REPLACE(LABC.Value,'%','') ELSE 0 END AS MONEY),0))
		AS DECIMAL(12,2)) 
	WHEN UPPER(DM.Country) = 'NATIONAL' THEN 
		CAST((ISNULL(CAST(CASE ISNUMERIC(REPLACE(LEC.Value,'%','')) WHEN 1 THEN REPLACE(LEC.Value,'%','') ELSE 0 END AS Money),0))
		AS DECIMAL(12,2)) 
	ELSE
	'00.00'
	END AS [Loginet %],
		CASE WHEN UPPER(DM.Country) = 'LOCAL' THEN
		CAST((ISNULL(CAST(CASE ISNUMERIC(REPLACE(LV.Value,'%','')) WHEN 1 THEN REPLACE(LV.Value,'%','') ELSE 0 END AS MONEY),0))
		AS DECIMAL(12,2)) 
	WHEN UPPER(DM.Country) = 'NATIONAL' THEN 
		CAST((ISNULL(CAST(CASE ISNUMERIC(REPLACE(LCV.Value,'%','')) WHEN 1 THEN REPLACE(LCV.Value,'%','') ELSE 0 END AS Money),0))
		AS DECIMAL(12,2)) 
	ELSE
	'00.00'
	END AS [Contractors  %],
	UPPER(DM.Country) AS [Distribution Area],
	E.Company AS [Princple],
	DM.[Address] AS [Store],
	LC.Value AS [Warehouse],
	CONVERT(VARCHAR,DS.DeliveryDate,111)  AS [Delivery date],
	LG.Value AS [Vehicle No],
	CASE POD WHEN 1 Then 'Yes' ELSE 'No' END AS [POD],
	Case isReturn WHEN 1 Then 'Yes' ELSE 'No' END AS [Return],
	ISNULL(dd.[Weight],0) AS [Invoice Weight],
	ISNULL([InvoiceTotal],0) - Discount AS [Invoice Value],
	--CAST(
	--	(case 
	--		when 
	--			isnull(tonnageValueID,0) <> 0 
	--		then 
	--			(([InvoiceTotal]- Discount) * cast(T.value as money)) 
	--		else 
	--			([InvoiceTotal]- Discount)
	--	* 
	--	(
	--		(ISNULL(CAST(CASE ISNUMERIC(replace(DM.code,'%','')) WHEN 1 THEN replace(DM.code,'%','') ELSE 0 END as Money),0) / 100)
	--	)  end)
	--as DECIMAL(12,2))  as
	CASE WHEN UPPER(DM.Country) = 'LOCAL' THEN
		CAST(
			(CASE 
				WHEN 
					ISNULL(tonnageValueID,0) <> 0 
				THEN 
					(([TonTotal]) * CAST(T.value AS MONEY)) 
				ELSE 
					([InvoiceTotal]- Discount) 
			* 
			(
				(ISNULL(CAST(CASE ISNUMERIC(REPLACE(LABC.Value,'%','')) WHEN 1 THEN REPLACE(LABC.Value,'%','') ELSE 0 END AS MONEY),0) / 100)
			 ) END)
		as DECIMAL(12,2)) 
		when upper(DM.Country) = 'NATIONAL' then 
		CAST(
			(CASE 
				WHEN 
					ISNULL(tonnageValueID,0) <> 0 
				THEN 
					(([TonTotal]) * CAST(T.value AS MONEY)) 
				ELSE 
					([InvoiceTotal]- Discount) 
			* 
			(
				(ISNULL(CAST(CASE ISNUMERIC(REPLACE(LEC.Value,'%','')) WHEN 1 THEN REPLACE(LEC.Value,'%','') ELSE 0 END AS MONEY),0) / 100)
			) END
					)
		AS DECIMAL(12,2)) 
		--end
	ELSE
		'00.00'
	END AS [Loginet Amount],	
	CASE WHEN ISNULL(EG.EntityID,0) > 0  THEN 
		CASE WHEN ISNULL(ConAmount,0) = 0 THEN
		CASE WHEN UPPER(DM.Country) = 'LOCAL' THEN
		CAST(
			(CASE 
				WHEN 
					ISNULL(tonnageValueID,0) <> 0 
				THEN 
					(([TonTotal]) * CAST(T.value AS MONEY)) 
				ELSE 
					([InvoiceTotal]- Discount) END) 
			* 
			(
				(ISNULL(CAST(CASE ISNUMERIC(REPLACE(LV.Value,'%','')) WHEN 1 THEN REPLACE(LV.Value,'%','') ELSE 0 END AS MONEY),0) / 100)
			) 
		AS DECIMAL(12,2)) 
		WHEN UPPER(DM.Country) = 'NATIONAL' THEN 
		CAST(
			(CASE 
				WHEN 
					ISNULL(tonnageValueID,0) <> 0 
				THEN 
					(([TonTotal]) * CAST(T.value AS MONEY)) 
				ELSE 
					([InvoiceTotal]- Discount) END
					)
			* 
			(
				(ISNULL(CAST(CASE ISNUMERIC(REPLACE(LCV.Value,'%','')) WHEN 1 THEN REPLACE(LCV.Value,'%','') ELSE 0 END AS MONEY),0) / 100)
			) 
		AS DECIMAL(12,2)) 
		END
	ELSE
		ConAmount
	END
	ELSE
		'00.00'
	END AS [Contractors Amount],
	DM.Currency,
	DM.ROE
FROM Debtor_Master DM
LEFT JOIN (
	SELECT 
		DocID
		,CAST(SUM((PriceEx * Qty )) AS DECIMAL(12,2)) AS [InvoiceTotal] 
		,SUM(Weight) AS [Weight]
		 ,SUM(PriceEx * Qty * (ISNULL(discperc,0))/100) AS [Discount]
		,CAST(SUM((PriceEx)) AS DECIMAL(12,2)) AS [TonTotal] 
	FROM Debtor_Detail DD
	LEFT JOIN accstock AC ON DD.StockID = AC.StockID
	GROUP BY DocID
) DD ON DD.DocID = DM.DocID
LEFT JOIN (
	SELECT 
		EntityID,
		Company, 
		EntityCategoryID,
		ABCCatID 
	FROM Entity
) E ON E.EntityID = DM.EntityID 
LEFT JOIN (
	SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'abc'
) LABC ON LABC.LookupID = E.ABCCatID
LEFT JOIN (
	SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'category'
) LEC ON LEC.LookupID = E.EntityCategoryID
LEFT JOIN (
	SELECT 
		* 
	FROM DeliverySchedule
) DS ON DS.DocID = DM.DocID
LEFT JOIN (
	SELECT * FROM Lookup
) T ON T.LookupID = DS.tonnageValueID
LEFT JOIN (
	SELECT * FROM Lookup WHERE Class LIKE 'group'
) LG ON LG.LookupID = DS.VehicleNoID
LEFT JOIN entityGroup EG ON DS.VehicleNoID = EG.GroupID
LEFT JOIN (
	SELECT LinkLookupID, Value,class FROM LinkLookup WHERE Class LIKE 'StockContainer'
) LC ON LC.LinkLookupID = DS.WarehouseID
LEFT JOIN (
	SELECT 
		EntityID, 
		buscatid, 
		entitytypeid 
	FROM Entity
) ES ON ES.EntityID = DM.Courier
LEFT JOIN (
	SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'supplierbuscat'
) LV ON LV.LookupID = ES.BuscatID
LEFT JOIN (
	SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'suppliertype'
) LCV ON LCV.LookupID = ES.entitytypeid
WHERE DocType = 'Invoice' AND DocStatus = 'Completed' {where}
) X","0","","1","LRA-FUSION","0","0","fusion"
"40146","cv_DeliverySchedule_Batch","","SELECT DISTINCT 
	{select}
FROM Debtor_Master DM

LEFT JOIN (
	SELECT 
		EntityID
		,Company 
	FROM Entity WITH(NOLOCK)
) E ON E.EntityID = DM.EntityID 
LEFT JOIN (
	SELECT 
		DelScheduleID,
		DocID,
		WarehouseID,
		DeliveryDate,
		VehicleNoID,
		POD,
		isReturn,
		Comments,
		isBatched 
	FROM DeliverySchedule WITH(NOLOCK)
) DS ON DS.DocID = DM.DocID
LEFT JOIN (
	SELECT 
		LookupID
		, Value 
	FROM Lookup WITH(NOLOCK)
	WHERE Class LIKE 'group'
) LG ON LG.LookupID = DS.VehicleNoID
LEFT JOIN (
	SELECT 
		LinkLookupID
		,Value
		,class 
	FROM LinkLookup WITH(NOLOCK)
	WHERE Class LIKE 'StockContainer'
) LC ON LC.LinkLookupID = DS.WarehouseID
LEFT JOIN (
	SELECT 
		EntityID
		, buscatid
		, entitytypeid 
	FROM Entity WITH(NOLOCK)
) ES ON ES.EntityID = DM.Courier
LEFT JOIN (
	SELECT 
		LookupID
		, Value 
	FROM Lookup WITH(NOLOCK)
	WHERE Class LIKE 'supplierbuscat'
) LV ON LV.LookupID = ES.BuscatID
LEFT JOIN (
	SELECT 
		LookupID
		, Value 
	FROM Lookup WITH(NOLOCK)
	WHERE Class LIKE 'suppliertype'
) LCV ON LCV.LookupID = ES.entitytypeid
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"40147","cv_DeliverySchedule_BatchLines","","SELECT 
    A.StockID
    , A.StockCode
    , A.StockDescription
    , DD.QTY,
    CAST(
        CostPriceEx 
        * 
        (
            (ISNULL(CAST(CASE ISNUMERIC(replace(DM.code,'%','')) WHEN 1 THEN replace(DM.code,'%','') ELSE 0 END as Money),0) / 100)
        ) 
    as DECIMAL(12,2))  as CostPriceEx, 
    CAST(
        PriceEx 
        * 
        (
            (ISNULL(CAST(CASE ISNUMERIC(replace(DM.code,'%','')) WHEN 1 THEN replace(DM.code,'%','') ELSE 0 END as Money),0) / 100)
        ) 
    as DECIMAL(12,2))  as PriceEx
    --,ISNULL(CASE DM.Code 
    --WHEN 'LD' THEN 
    --    DD.CostPriceEx * (ISNULL(CAST(CASE ISNUMERIC(LV.Value) WHEN 1 THEN LV.Value ELSE 0 END as Money),0) / 100) 
    --WHEN 'ND' THEN
    --    DD.CostPriceEx * (ISNULL(CAST(CASE ISNUMERIC(LCV.Value) WHEN 1 THEN LCV.Value ELSE 0 END as Money),0) / 100) 
    --END,0) as CostPriceEx
    
    --,ISNULL(CASE DM.Code 
    --WHEN 'LD' THEN 
    --    DD.PriceEx * (ISNULL(CAST(CASE ISNUMERIC(LV.Value) WHEN 1 THEN LV.Value ELSE 0 END as Money),0) / 100) 
    --WHEN 'ND' THEN
    --    DD.PriceEx * (ISNULL(CAST(CASE ISNUMERIC(LCV.Value) WHEN 1 THEN LCV.Value ELSE 0 END as Money),0) / 100) 
    --END,0) as PriceEx
    
    , DM.DivisionID
    , DD.PriceCategoryID
    , DD.TaxTypeID
    , DD.Tax
FROM DeliverySchedule DS
LEFT JOIN (
    SELECT 
        * 
    FROM Debtor_Master
) DM 
ON DM.DocID = DS.DocID
LEFT JOIN (
    SELECT 
        * 
    FROM Debtor_Detail
) DD 
ON DD.DocID = DM.DocID
LEFT JOIN (
    SELECT 
        * 
    FROM Entity
) E 
ON E.EntityID = DM.EntityID
LEFT JOIN (
    SELECT * FROM AccStock
) A 
ON A.StockID = DD.StockID
LEFT JOIN (
    SELECT 
        EntityID
        , buscatid
        , entitytypeid 
    FROM Entity WITH(NOLOCK)
) ES ON ES.EntityID = DM.Courier
LEFT JOIN (
    SELECT 
        LookupID
        , Value 
    FROM Lookup WITH(NOLOCK)
    WHERE Class LIKE 'supplierbuscat'
) LV ON LV.LookupID = ES.BuscatID
LEFT JOIN (
    SELECT 
        LookupID
        , Value 
    FROM Lookup WITH(NOLOCK)
    WHERE Class LIKE 'suppliertype'
) LCV ON LCV.LookupID = ES.entitytypeid
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"40148","cv_Acc_Freight_Get_QuoteSum","","SELECT sum(Qty * isnull(CostPriceEx,0)) as [BaseCostPriceEx], 
Sum(isnull(weight,0) * Qty / 1000) as [Weight], 
Sum(isnull(PriceEx,0) * Qty)  as [BaseSellingPrice]
FROM Cost_Estimate_Detail CED
LEFT JOIN (SELECT StockID, Weight FROM AccStock) STK
ON CED.StockID = STK.StockID
Where 
isnull(UseLandedCost,0) = 0
AND DocID = {docid}


","0","","1","LRA-FUSION","0","0","fusion"
"40149","cv_Acc_Cost_Estimate_Details_Project","","
declare @ProjectID as int
SET @ProjectID = {projectid}

SELECT LineID,[Doc. No.], [Group],Project, [Stock Code] as [Code], [Description], [Comments], [Supplier], Qty, Discount, [Cost Ex.], [Price Ex.], [Price Incl.],[Total Incl.] 
FROM	(
	--Select Main items
	SELECT 
		convert(varchar,CED.Docid) + '#' + convert(varchar,lineid) + 'M'  as [LineID]
		,left('00000000', 8- len(CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END)) + convert(varchar,CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END) as [Doc. No.]
		,GroupName as [Group]
		,ProjectName as [Project]
		,StockCode as [Stock Code]
		,StockDescription as [Description]
		,Comments
		,Company as [Supplier]
		,Qty
		,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount]
		,dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.]
		,dbo.fnFormatNumber(PriceEx ) as [Price Ex.]
		,dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.]
		,dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1) ) as [Total Incl.]
		,Rank
		,-1000 as [Rank2]
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (
		SELECT 
			DocID
			,PreviousDocID
			,RevisedToDoc
			,Revision
			,DocStatus
			,ProjectID 
		FROM Cost_Estimate_Master
	) CEM
	ON CED.DocID  = CEM.DocID
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND isnull(CEM.RevisedToDoc,0) = 0
	AND CEM.DocStatus <> 'Rejected'
	AND isnull(CED.ProjectID, CEM.ProjectID) =  @ProjectID
	AND CEM.DocID NOT IN (SELECT DocID FROM ProjectBudgetQuotes WHERE ProjectID = @ProjectID)
	
	UNION ALL
	
	--Select component items
	SELECT 
		convert(varchar,CED.Docid) + '#' + convert(varchar,lineid) + 'C'  as [LineID]
		,left('00000000', 8- len(CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END)) + convert(varchar,CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END) as [Doc. No.]
		,Null as [Group]
		,null as [Project]
		,'-    ' + StockCode as [Stock Code]
		,'-    ' + StockDescription as [Description]
		, Comments
		,Company as [Supplier]
		,Qty
		,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount]
		,dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.]
		,dbo.fnFormatNumber(PriceEx ) as [Price Ex.]
		,dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.]
		,dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1)) as [Total Incl.]
		,(SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) 
		,Rank as [Rank2]
	FROM Cost_Estimate_Detail CED
	LEFT JOIN (
		SELECT 
			DocID
			, PreviousDocID
			, RevisedToDoc
			, Revision
			, DocStatus
			, ProjectID 
		FROM Cost_Estimate_Master
	) CEM
	ON CED.DocID  = CEM.DocID
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND isnull(CEM.RevisedToDoc,0) = 0
	AND CEM.DocStatus <> 'Rejected'
	AND isnull(CED.ProjectID, CEM.ProjectID) =  @ProjectID
	AND CEM.DocID NOT IN (SELECT DocID FROM ProjectBudgetQuotes WHERE ProjectID = @ProjectID)
	) A
	{where}
ORDER BY  [Doc. No.],Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"40150","cv_Subscription_Man","","SELECT distinct
	S.SubscriptionID
,S.SubscriptionID as [ID]
	,Company
	,isnull([Contact],'Reception Copies')as [Contact]
	,[Publisher] as [Publication]
	,[Status]
	,[Reader Type]
	,[Delivery Method]
	,[Delivery Area]
	,LC.[Country]
	--,RP.RouteCode as [Route]
	,S.PreferredRoute as [Preferred Route]
	,CASE S.isBackOrder WHEN 1 Then 'Yes' Else 'No' End as [Back Order]
	,BackOrderDate as [Back Order Date]
	,BackOrderQTY as [Back Order Qty]
	,StartDate as [Start Date]
	,EndDate as [End Date]
	,Stacopies as [Standard Copies]
	,NumCopies as [Number Of Copies]
	,[Payment Type]
	,CAST(ISNULL(Rate,0) AS DECIMAL(12,2)) as Rate
	,ISNULL(EDO.Address1,'') as [Postal Address 1]
	,ISNULL(EDO.Address2,'') as [Postal Address 2]
	,ISNULL(EDO.Address3,'') as [Postal Address 3]
	,ISNULL(EDO.City,'') as [Postal City]
	,ISNULL(EDO.Region,'') as [Postal Region]
	,ISNULL(EDO.Code,'') as [Postal Code]
	,ISNULL(EDO.Country,'') as [Postal Country]
	,ISNULL(EPO.Address1,'') as [Physical Address 1]
	,ISNULL(EPO.Address2,'') as [Physical Address 2]
	,ISNULL(EPO.Address3,'') as [Physical Address 3]
	,ISNULL(EPO.City,'') as [Physical City]
	,ISNULL(EPO.Region,'') as [Physical Region]
	,ISNULL(EPO.Code,'') as [Physical Code]
	,ISNULL(EPO.Country,'') as [Physical Country]
FROM Subscriptions S
LEFT JOIN (
	SELECT EntityID, Company FROM Entity
) E ON E.EntityID = S.EntityID
LEFT JOIN (
	SELECT EntityContactID,EntityID, isnull(ISNULL(Firstname,'') + ' ' + ISNULL(Surname,''),'Reception Copies') as [Contact],PhysicalAddrID,PostalAddrID FROM EntityContact
) EC ON EC.EntityContactID = S.EntityContactID
LEFT JOIN (
	SELECT LookupID, value as [Status] FROM Lookup WHERE Class LIKE 'SubStatus'
) LS ON LS.LookupID = S.SubStatusID
LEFT JOIN (
	SELECT LookupID, Value as [Reader Type] FROM Lookup WHERE Class LIKE 'ReaderType'
) LR ON LR.LookupID = S.ReaderTypeID
LEFT JOIN (
	SELECT LookupID, Value as [Delivery Method] FROM Lookup WHERE Class LIKE 'DeliveryMethod'
) LD ON LD.lookupID = S.DeliveryMethodID
LEFT JOIN (
	SELECT LookupID, Value as [Payment Type] FROM Lookup WHERE Class LIKE 'PaymentType'
) LPT ON LPT.lookupID = S.PaymentTypeID
LEFT JOIN (
	select lookupid, value as [Delivery Area] from lookup where class like 'Delivery Area'
) LA ON LA.LookupID = S.DeliveryAreaID
LEFT JOIN (
	select lookupid, value as [Country] from lookup where class like 'country' 
) LC ON LC.LookupID = S.CountryID
LEFT JOIN (
	select LookupID, Value as [Publisher] FROM Lookup WHERE Class LIKE 'Publisher' 
) LP ON LP.LookupID = S.PublisherID
LEFT JOIN (
	SELECT * FROM Routeplanner
) RP ON RP.SubscriptionID = S.SubscriptionID
Left Join [SubscriptionSelectedMonths] SM on SM.[SubscriptionID]=S.[SubscriptionID]
left join EntityAddress EPO on EPO.EntityAddressID=EC.PhysicalAddrID and EPO.AddressType like 'Physical%'
left join EntityAddress EDO on EDO.EntityAddressID=EC.PostalAddrID and EDO.AddressType like 'Pos%'
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40151","cv_Populate_Subscription_Months","","SELECT 
	M.MonthID,
	M.[Month],
	(SELECT COUNT(*) FROM SubscriptionSelectedMonths WHERE SubscriptionID = {where} AND MonthID = M.MonthID) as [Ticked]
FROM SubscriptionMonth M
ORDER BY M.MonthID","0","","1","LRA-FUSION","0","0","fusion"
"40152","cv_Subscription_History","","SELECT 
	SH.SubscriptionHistoryID
	,E.Company
	,EC.Contact
	,LR.Value as [Reader Type]
	,CASE ISNULL(isBackOrder,0) WHEN 0 Then 'No' ELSE 'Yes' END as [Backorder]
	,CONVERT(VARCHAR,BackOrderDate,111) as [Backorder Date]
	,BackOrderQTY as [Backorder QTY]
	,LDM.Value as [Delivery Method] 
	,CONVERT(VARCHAR,StartDate,111) as [Start Date]
	,CONVERT(VARCHAR,EndDate,111) as [End Date]
	,LSS.Value as [Status] 
	,NumCopies as [Num Copies]
	,LDA.Value as [Delivery Area]
	,LDC.Value as [Country]
	,LP.value as [Publisher]
	,[Payment Type]
	,Rate
	,[Created By]
	,CONVERT(VARCHAR,DateCreated,111) as [Date Created]
	,[Modified By]
	,SH.DateModified as [Date Modified]
	
	,ISNULL(Max(Case SSMH.MonthID When 1 Then 'Yes' END),'No')  AS [Jan]
	,ISNULL(Max(Case SSMH.MonthID When 2 Then 'Yes' END),'No')  AS [Feb]
	,ISNULL(Max(Case SSMH.MonthID When 3 Then 'Yes' END),'No')  AS [Mar]
	,ISNULL(Max(Case SSMH.MonthID When 4 Then 'Yes' END),'No')  AS [Apr]
	,ISNULL(Max(Case SSMH.MonthID When 5 Then 'Yes' END),'No')  AS [May]
	,ISNULL(Max(Case SSMH.MonthID When 6 Then 'Yes' END),'No')  AS [Jun]
	,ISNULL(Max(Case SSMH.MonthID When 7 Then 'Yes' END),'No')  AS [Jul]
	,ISNULL(Max(Case SSMH.MonthID When 8 Then 'Yes' END),'No')  AS [Aug]
	,ISNULL(Max(Case SSMH.MonthID When 9 Then 'Yes' END),'No')  AS [Sep]
	,ISNULL(Max(Case SSMH.MonthID When 10 Then 'Yes' END),'No')  AS [Oct]
	,ISNULL(Max(Case SSMH.MonthID When 11 Then 'Yes' END),'No')  AS [Nov]
	,ISNULL(Max(Case SSMH.MonthID When 12 Then 'Yes' END),'No')  AS [Dec]
	
	

	
FROM SubscriptionsHistory SH WITH(NOLOCK)
LEFT JOIN (SELECT EntityID, Company FROM Entity WITH(NOLOCK)) E
ON E.EntityID = SH.EntityID
LEFT JOIN (SELECT EntityContactID, EntityID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Contact] FROM EntityContact WITH(NOLOCK)) EC
ON EC.EntityContactID = SH.EntityContactID 
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH(NOLOCK) WHERE Class LIKE 'ReaderType') LR
ON LR.LookupID = SH.ReaderTypeID
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH(NOLOCK) WHERE Class LIKE 'DeliveryMethod') LDM
ON LDM.LookupID = SH.DeliveryMethodID
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH(NOLOCK) WHERE Class LIKE 'SubStatus') LSS
ON LSS.LookupID = SH.SubStatusID
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH(NOLOCK) WHERE Class LIKE 'city') LDA
ON LDA.LookupID = SH.DeliveryAreaID
LEFT JOIN (select lookupid, value from lookup WITH(NOLOCK) where class like 'country') LDC
ON LDC.LookupID = SH.CountryID
LEFT JOIN (select LookupID, Value FROM Lookup WITH(NOLOCK) WHERE Class LIKE 'Publisher') LP
ON LP.LookupID = SH.PublisherID
LEFT JOIN (SELECT userID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Created By] FROM Users WITH(NOLOCK)) UC
ON UC.UserID = SH.CreatedByID
LEFT JOIN (SELECT userID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Modified By] FROM Users WITH(NOLOCK)) UM
ON UM.UserID = SH.ModifiedByID
LEFT JOIN (select LookupID, Value as [Payment Type] FROM Lookup WITH(NOLOCK) WHERE Class LIKE 'PaymentType') LPT
ON LPT.LookupID = SH.PaymentTypeID
LEFT JOIN (
	SELECT * FROM SubsSelectedMonthsHist
) SSMH ON SSMH.SubscriptionHistoryID = SH.SubscriptionHistoryID
{WHERE}

GROUP BY SH.SubscriptionHistoryID,E.Company,EC.Contact,LR.Value,SH.isBackOrder,SH.BackOrderDate,SH.BackOrderQTY,LDM.Value
,SH.StartDate,SH.EndDate,LSS.Value,SH.NumCopies,LDA.Value,LDC.Value,LP.value,LPT.[Payment Type],SH.Rate
,UC.[Created By],SH.DateCreated,UM.[Modified By],SH.DateModified","0","","1","LRA-FUSION","0","0","fusion"
"40153","cv_Leave_Carried","","DECLARE @CycStart as datetime
DECLARE @CycEnd as datetime
DECLARE @DateCounter as datetime 
DECLARE @StaffID as int

DECLARE @FamStudCycStart as datetime
SET @FamStudCycStart = '2011/01/01'
SET @CycEnd = '{cycend}'
SET @DateCounter = @CycStart
SET @StaffID = <%StaffID%>


SET NOCOUNT ON

/********** added for carry over total**************/
Declare @Date as DateTime
Declare @CheckDate as DateTime
Declare @OBDate as DateTime
Declare @AnnualLeaveDuePA as Decimal(12,8)
Declare @AnnOpeningBalance as Decimal(12,8)

Declare @AnnualLeaveDue as Decimal(12,8)

Set @OBDate = (Select Convert(Varchar,year(isnull(LeaveOBDate,DateEmployed)))+Substring(replace(Convert(Varchar,CycleStart,111),'/','-'),5,7) from staff s where StaffID = @StaffID)
set @AnnOpeningBalance = Convert(Decimal(12,8),(Select LeaveOB from staff s where StaffID = @StaffID))
Set @AnnualLeaveDuePA = <%LeavePA%>

SET @CycStart = @OBDate
SET @DateCounter = @CycStart


Declare @LeaveAccum Table (ID int identity(1,1),DateAdded DateTime,OrgAmount Decimal(12,8),Amount Decimal(12,8),LeaveFromNextCycle Decimal(12,8))

set @Date = DateAdd(yyyy,-1,@OBDate)
while @Date <= @CycEnd
Begin
    insert into @LeaveAccum
    Select @Date,case when @Date = DateAdd(yyyy,-1,@OBDate) then @AnnOpeningBalance else @AnnualLeaveDuePA end,case when @Date = DateAdd(yyyy,-1,@OBDate) then @AnnOpeningBalance else @AnnualLeaveDuePA end,0
    Set @Date = DateAdd(yyyy,1,@Date)
End

/********** **************************************/


--Get Data Into temp table

declare @WorkDays table(
  DayInCycle datetime ,
  isWorkDay int,
  isHoliday int,
  OnLeave float,
  LeavePeriod int,
  LeaveType int,
  LeaveAccumID Int
)

DELETE FROM @WorkDays
--Gets a list of all the days in this cycle
WHILE  @DateCounter < @CycEnd
Begin
    INSERT INTO @WorkDays 
    SELECT @DateCounter, Case when datepart(dw,@DateCounter) in ({workingdaysofweek}) then 1 else 0 END as [WorkDay],0 as [Holiday], 0 ,0,0,0
    SET @DateCounter = dateadd(d, 1, @DateCounter)
End

--marks off holidays
------update @WorkDays
------Set isWorkDay = 0, isHoliday = 1 
------FROM @WorkDays WD 
------Inner JOIN  PublicHoliday PH on month(WD.DayinCycle) = month(PH.[Date]) AND  day(WD.DayinCycle) = day(PH.[Date])
--------Extra where clause for this year only
------AND  Year(WD.DayinCycle) = Year(case when isnull(ph.thisYear,0)=1 then PH.[Date] else WD.DayinCycle end)
update @WorkDays
	Set isWorkDay = 0, isHoliday = 1 
FROM (
	SELECT 
		PH.[Date]
	FROM PublicHoliday PH
	LEFT JOIN Lookup L ON L.LookupID = PH.CountryID
	LEFT JOIN Staff S ON S.CountryID = L.Value	
	WHERE PH.[Date] Between @CycStart AND @CycEnd
	AND S.StaffID = @StaffID
) Z 
WHERE DayInCycle = Z.[Date]


--marks off days on leave
SET @DateCounter = @CycStart
While @DateCounter < @CycEnd
BEGIN
    UPDATE @WorkDays
    Set OnLeave = CASE WHEN LP.LeavePeriod like '%half%' then 0.5 else 1 end ,LeavePeriod = B.PeriodTypeID, LeaveType =B.LeaveTypeID
    FROM @WorkDays WD 
    Inner JOIN
    (SELECT @DateCounter as [LeaveDate],LeaveTypeID,PeriodTypeID FROM (
        SELECT 
        CASE WHEN L.StartDate < @CycStart then @CycStart ELSE L.Startdate end as [Startdate],
        CASE WHEN L.EndDate > @CycEnd then @CycEnd ELSE L.EndDate end as [Enddate],
        LeaveTypeID,PeriodTypeID
        FROM Leave L
        where ((L.startdate between case when LeaveTypeID in (12,15) then @FamStudCycStart else @CycStart end AND @CycEnd) 
                OR (L.Enddate between case when LeaveTypeID in (12,15) then @FamStudCycStart else @CycStart end AND @CycEnd) 
                OR (L.startdate <= case when LeaveTypeID in (12,15) then @FamStudCycStart else @CycStart end AND L.Enddate >= @CycEnd)
              )
        AND isnull(IsGranted,0) = 1
        AND UserID = @StaffID
    ) A
    WHERE @DateCounter >= A.Startdate AND @DateCounter <= A.EndDate ) B
    ON WD.DayInCycle = LeaveDate 
    LEFT JOIN LeavePeriod LP ON B.PeriodTypeID = LeavePeriodID
    WHERE WD.isHoliday = 0 and isWorkDay=1

	Update @LeaveAccum Set Amount = Amount- CASE WHEN LP.LeavePeriod like '%half%' then 0.5 else 1 end,LeaveFromNextCycle = case when Dateadd(m,12,LC.DateAdded) < @DateCounter then LeaveFromNextCycle+ CASE WHEN LP.LeavePeriod like '%half%' then 0.5 else 1 end else LeaveFromNextCycle end
	FROM @WorkDays WD 
	LEFT JOIN LeavePeriod LP ON LP.LeavePeriodID = WD.LeavePeriod
	left join LeaveProfileDetails LPD on LPD.LeavedefaultID = (Select top 1 LeaveProfileID from Staff where StaffId = @StaffID)
	left join @LeaveAccum LC on LC.[ID] 
	=
	isnull(
			(
			Select top 1 [Id] 
			from @LeaveAccum LA
			where @DateCounter < DateAdd(m,12+MaxAccumMonths,DateAdded ) 
			and isnull(LA.Amount,0) > 0 and dateAdded < '<%CycStart%>'
			order by [ID]
			),
			(
			Select Max([Id]) 
			from @LeaveAccum LA
			where @DateCounter < DateAdd(m,12+MaxAccumMonths,DateAdded ) 
			and dateAdded < '<%CycStart%>'
			)
		)
    WHERE Dayincycle = @DateCounter and WD.isHoliday = 0 and isWorkDay=1 and WD.LeaveType = 9 and [ID] = LC.[ID]

    SET @DateCounter = dateadd(d, 1, @DateCounter)


END
--Select * from @WorkDays


SET NOCOUNT OFF


Select 
	[ID],
	DateAdded,
	OrgAmount,
	(CASE WHEN ISNULL(Amount,0) < 0 THEN (Amount * -1) ELSE Amount END) - 
	(case 
		when - Amount > LeaveFromNextCycle then 
			isnull((Select LeaveFromNextCycle from @LeaveAccum where [ID] = LA.[ID]-1),0) 
		else 
			0 
	 end) as [amount],
	LeaveFromNextCycle
from @LeaveAccum  LA 
where dateAdded < '<%CycStart%>' 
order by [ID] desc","0","","1","LRA-FUSION","0","0","fusion"
"40154","cv_Acc_Stock_Availability","","--cv_Acc_Stock_Availability
SELECT 
--newID() as [ID], 

'C-' + CAST(LL.LinkLookupID AS VARCHAR) + '-S-' + CAST(STK.StockID AS VARCHAR) as ID,
LL.Value as [Container],
STK.StockCode as [Code], 
STK.StockDescription as [Description],
LU.Value as [Unit],
dbo.fnFormatNumber(isnull([Qty In Container],0)) as [Qty In Container],
dbo.fnFormatNumber(isnull(SO.Qty,0)) as [On S.O.],
dbo.fnFormatNumber(isnull(MC.Qty,0)) as [For Manufacturing], 
dbo.fnFormatNumber((isnull(PO.Qty,0) - isnull(GRN.Qty,0)) * SoldByToPurchasedByRatio)  as [On P.O.],
dbo.fnFormatNumber(isnull(MO.Qty,0)) as [Being Manufactured],
dbo.fnFormatNumber(isnull([Qty In Container],0) --In Container
-
(isnull(SO.Qty,0) - isnull(DN.Qty,0)) --On S.O. & Required
-
isnull(MC.Qty,0)) --For Manufacturing 
as [Available]
FROM AccStock STK
LEFT JOIN (SELECT * FROM Lookup) LU
ON STK.SoldBy = LU.LookupID
CROSS JOIN (SELECT * FROM LinkLookup where class ='StockContainer') LL 
LEFT JOIN (SELECT StockID,ContainerID, sum(Qty * Ratio) as [Qty In Container] FROM AccStockControl Group by StockID,ContainerID) SC
ON STK.StockID = SC.StockID AND LL.LinkLookupID = SC.ContainerID
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
			LEFT JOIN (SELECT DOCID, DocType FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
			ON DD.DocID = DM.DocID
			LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*{table}*/) DDM
			ON DD.ComponentOfLineID = DDM.LineID
			WHERE DM.DocType in ('Sales Order', 'Quote')
			Group by StockID, ContainerID ) SO
ON STK.StockID = SO.StockID AND LL.LinkLookupID = SO.ContainerID	
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
			LEFT JOIN (SELECT DOCID, DocType FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
			ON DD.DocID = DM.DocID
			LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*{table}*/) DDM
			ON isnull(DD.ComponentOfLineID,0) = DDM.LineID
			WHERE DM.DocType = 'Dispatch Note'
			Group by StockID, ContainerID ) DN
ON STK.StockID = DN.StockID AND LL.LinkLookupID = DN.ContainerID	
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
			LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
			ON CD.DocID = CM.DocID
			WHERE CM.DocType = 'Purchase Order'
			Group by StockID, ContainerID ) PO
ON STK.StockID = PO.StockID AND LL.LinkLookupID = PO.ContainerID	
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
			LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
			ON CD.DocID = CM.DocID
			WHERE CM.DocType = 'Goods Received Note'
			Group by StockID, ContainerID ) GRN
ON STK.StockID = GRN.StockID AND LL.LinkLookupID = GRN.ContainerID	
LEFT JOIN (SELECT MD.StockID, MD.ContainerID, Sum(MD.Qty) as [Qty] FROM AccMANUFACTURE_DETAIL MD
			LEFT JOIN (SELECT DocID, IsComplete FROM AccMANUFACTURE) MM
			ON MD.DocID = MM.DocID
			WHERE isnull(MM.IsComplete,0) = 0 
			Group by MD.StockID, MD.ContainerID) MC
ON STK.StockID = MC.StockID AND LL.LinkLookupID = MC.ContainerID
LEFT JOIN (SELECT MO.StockID, MO.ContainerID, sum(MO.Qty) as [Qty] FROM AccMANUFACTURE_Output MO
			LEFT JOIN (SELECT DocID, IsComplete FROM AccMANUFACTURE) MM
			ON MO.DocID = MM.DocID
			WHERE isnull(MM.IsComplete,0) = 0 
			Group by MO.StockID, MO.ContainerID) MO
ON STK.StockID = MO.StockID AND LL.LinkLookupID = MO.ContainerID
{where}
ORDER BY STK.StockCode,LL.Value
","0","","1","LRA-FUSION","0","0","fusion"
"40155","cv_Acc_Cost_Estimate_SumedTotalCal","","DECLARE @CalcPriceUsingPerc FLOAT
SET @CalcPriceUsingPerc = {calc}
SET @CalcPriceUsingPerc = (@CalcPriceUsingPerc / 100)

SELECT 
	(SUM(Z.CostPriceEx) * @CalcPriceUsingPerc)  as [CostPriceEx],
	(SUM(Z.PriceEx) * @CalcPriceUsingPerc) as [PriceEx]
FROM (
	SELECT
		(CostPriceEx * QTY) - (CostPriceEx - (CostPriceEx * (DiscPerc / 100)) * QTY) as [CostPriceEx],
		(PriceEx * QTY) - (PriceEx - (PriceEx * (DiscPerc / 100)) * QTY) as [PriceEx]
	FROM COST_ESTIMATE_DETAIL CED
	LEFT JOIN AccStock STK ON STK.StockID = CED.StockID 
	WHERE DOCID = {docid} 
	AND CED.StockID <> {stockid}
	{and}
) Z","0","","1","LRA-FUSION","0","0","fusion"
"40156","cv_Populate_Users_UseStaffID","","--cv_Populate_Users
DECLARE @UserID INT 
SET @UserID = {UserID}

SELECT DISTINCT 
	U.StaffID,
	U.[Name],
	CASE WHEN CRM.Selected = 1 THEN
		CASE WHEN U.UserID = @UserID THEN @UserID ELSE 0 END
	Else
		0
	END as [assigned]
	--CASE U.UserID WHEN @UserID THEN U.UserID ELSE ISNULL(US.SecondaryUserID,0) END as assigned
FROM (
	SELECT 
		UserID
		,ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Name]
		,StaffID
	FROM Users
) U
LEFT JOIN (SELECT StaffID, isSalesConsultant,isProjectManager,isTicketManager,isJobManager,isActive FROM Staff) S ON S.StaffID = U.StaffID 
LEFT JOIN (SELECT SecondaryUserID FROM User_Share WHERE UserID = @UserID) US ON US.SecondaryUserID = U.UserID
LEFT JOIN (SELECT * FROM UserDivisions) UD ON UD.UserID = U.UserID
LEFT JOIN CRMSetup CRM ON CRM.[Description] = 'Entity' AND CRM.Variable = 'SearchCurrentUser'
{where}
ORDER BY U.[Name] Desc","0","","1","LRA-FUSION","0","0","fusion"
"40157","qf_LeadContacts","","SELECT
	LeadContactID as [ID],
	ISNULL(Firstname, '') + ' ' + ISNULL(Surname, '') as [Name]
FROM LeadContacts 
WHERE LeadID = {lead}
ORDER BY ISNULL(Firstname, '') + ' ' + ISNULL(Surname, '')","0","","1","LRA-FUSION","0","0","fusion"
"40158","cv_Lead_ConvertCalls","","UPDATE CallLog 
	SET EntityContactID = Z.EntityContactID
FROM (

SELECT 
	CL.CallLogID,
	EC.EntityContactID
FROM CallLog CL
LEFT JOIN LeadContacts LC ON LC.LeadContactID = CL.LeadContactID 
LEFT JOIN EntityContact EC ON EC.Firstname = LC.Firstname AND EC.Surname = LC.Surname 
	AND EC.EntityID = {entityid}
WHERE CL.LeadID = {leadid}

) Z
WHERE Calllog.CallLogID = Z.CallLogID","0","","1","LRA-FUSION","0","0","fusion"
"40159","cv_AddressLink_Import","","INSERT INTO Lookup (Class, Value)

SELECT DISTINCT 
	'country' as Class,
	Country as Value 
FROM _AddressLInk AL 
LEFT JOIN Lookup L ON L.Value = AL.Country AND L.Class = 'country'
WHERE L.LookupID is null
AND AL.Country is not null

UNION ALL

SELECT DISTINCT 
	'regions',
	Region FROM _AddressLink AL 
LEFT JOIN Lookup L ON L.Value = AL.Region AND L.Class = 'regions'
WHERE L.LookupID is null
AND AL.Region is not null

UNION ALL 

SELECT DISTINCT 
	'City',
	City 
FROM _AddressLink AL 
LEFT JOIN Lookup L ON L.Value = AL.City AND L.Class = 'City'
WHERE L.LookupID is null
AND AL.City is not null


TRUNCATE TABLE AddressLink


INSERT INTO AddressLink (CountryID, RegionID, CityID, Code)
SELECT
	LCo.LookupID,
	LRe.LookupID,
	LCi.LookupID,
	AL.Code 	
FROM _AddressLink AL
LEFT JOIN Lookup LCo ON LCo.Value = AL.Country AND LCo.Class = 'country'
LEFT JOIN Lookup LRe ON LRe.Value = AL.Region AND LRe.Class = 'regions'
LEFT JOIN Lookup LCi ON LCi.Value = AL.City AND LCi.Class = 'city'","0","","1","LRA-FUSION","0","0","fusion"
"40160","cv_Create_Timesheet","","select 

	ISNULL(FName,'') + ' : ' + ISNULL([Description],'') as Notes
	,ChangeTypeID
	,Reason
	,AssignedTo
	,CALI.ModuleID
	,CAL.ProjectID
	,P.EntityID
        ,CAL.GeneralDescription
from ClientActivityListItem  CALI
LEFT JOIN (
	select 
		ClientActivityListID
		,ClientActivityID
		,DateIssued
		,DateDue
		,DateFollowUp
		,PriorityID
		,StatusID
		,Completed
		,ActivityType
		,OwnerID
		,IssuedByID
		,LinkedActivityID
		,ListNotes
		,ProjectID
		,StartTime
		,EndTime
		,PercCompleted
		,LinkedTasks
		,ActivityTypeID
		,ModuleID
		,Escalation
		,EscalationInterval1
		,EscalationInterval2
		,EscalationInterval3
		,EscalationInterval4
		,EscalationInterval5
		,cr
		,[sent]
		,DailySent
		,EstHours
		,CreatedBy
		,IsApproved
		,GeneralDescription
		,Approved
		,outofspec
		,NeedInvoice
		,isCompleted
		,HasAction
	from clientactivitylist 

) CAL
ON CAL.ClientActivityListID = CALI.ClientActivityListID
LEFT JOIN (
	SELECT 
		ProjectID
		, EntityID 
	FROM Projects
) P ON P.ProjectID = CAL.ProjectID
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"40161","cv_Acc_RPT_JobReconTimesheets","","SET NOCOUNT ON 

DECLARE @ProjectID as int
DECLARE @Period as datetime
DECLARE @EndDate as datetime
DECLARE @Script as varchar(8000)
DECLARE @TSID as int
SET @ProjectID = {projectid}
SET @EndDate = '{enddate}'
SET @Period = (SELECT isnull(Min([Date]), getdate()) FROM DevAppointment WHERE ProjectID = @ProjectID)


IF OBJECT_ID('tempdb..#TS') IS NOT NULL
    DROP TABLE #TS
    
CREATE TABLE #TS
(
UserID Int,
ModuleID Int,
Employee Varchar(200),
Designation Varchar(100),
Module Varchar(300),
Rate Money
)

--Add users into report
INSERT INTO #TS(UserID,ModuleID,Employee, Designation)
SELECT distinct DA.ForUserID, -1 ,[Employee], Position
FROM DevAppointment DA
LEFT JOIN (SELECT UserID, Isnull(Firstname,'') +  ' ' + isnull(Surname,'') as [Employee], Position FROM Users) U
ON DA.ForUserID = U.UserID
where DA.ProjectID = @ProjectID
AND DA.[Date] <= @EndDate
ORDER BY Employee

--Add modules into report
INSERT INTO #TS(UserID,ModuleID,Module,Rate)
SELECT distinct DA.ForUserID, DA.ModuleID, M.ModuleName,isnull(Rate,0)
FROM DevAppointment DA
LEFT JOIN (SELECT ModuleID, ModuleName FROM Modules) M
ON DA.ModuleID = M.ModuleID
LEFT JOIN (SELECT ModuleID, ProjectID, U.UserID, max(RateAmount) as [Rate] FROM RateCardAmount RCA LEFT JOIN (SELECT UserID,StaffID FROM Users) U ON RCA.ConsultantID = U.StaffID  Group by ModuleID, ProjectID, U.UserID) R
ON DA.ProjectID = R.ProjectID AND DA.ModuleID = R.ModuleID AND DA.ForUserID = R.UserID
where DA.ProjectID = @ProjectID
AND DA.[Date] <= @EndDate
ORDER BY ForUserID, DA.ModuleID

--Create the months spanning the project
WHILE dateadd(d, - day(@Period) -1 ,@Period) < @EndDate
BEGIN
	SET @Script = ' ALTER TABLE [#TS] ADD [' + convert(varchar, Year(@Period)) + '/' + convert(varchar, Month(@Period)) + '] float'
	EXECUTE (@Script)
	SET @Script = ' UPDATE [#TS] SET [' + convert(varchar, Year(@Period)) + '/' + convert(varchar, Month(@Period)) + '] = 0 WHERE ModuleID <> -1'
	EXECUTE (@Script)
	SET @Period = (SELECT dateadd(M,1,@Period))
END

ALTER TABLE [#TS] ADD [Total Hrs] Float
ALTER TABLE [#TS] ADD [Total Value] Money

--Start populating individual months
SET @TSID = (SELECT Min(DevApptID) FROM DevAppointment where ProjectID = @ProjectID)
WHILE @TSID <= (SELECT MAX(DevApptID) FROM DevAppointment where ProjectID = (@ProjectID) AND [Date] <= @EndDate)
BEGIN
	SET @Script = (SELECT 'UPDATE #TS SET [' + convert(varchar, Year([Date])) + '/' + convert(varchar, Month([Date])) + '] = [' + convert(varchar, Year([Date])) + '/' + convert(varchar, Month([Date])) + '] +  ' + convert(varchar,round(datediff(n,[Date],Enddate) / 60.00,2)) + ', [Total Hrs] = isnull([Total Hrs],0) + '+ convert(varchar,round(datediff(n,[Date],Enddate) / 60.00,2)) + ' WHERE ModuleID = ' + Convert(varchar,ModuleID) + ' AND UserID = ' +  Convert(varchar,ForUserID)   FROM DevAppointment WHERE  DevApptID =   @TSID)
	EXEC (@Script)
	SET @TSID = (SELECT Min(DevApptID) FROM DevAppointment where ProjectID = @ProjectID AND DevApptID > @TSID)
END

SET @Script = 'UPDATE #TS SET [Total Hrs] = isnull([Total Hrs],0), [Total Value] = round(isnull(Rate,0) * isnull([Total Hrs],0),2) where moduleid <> -1'
EXEC (@Script)

SET NOCOUNT OFF

SELECT * FROM #TS
ORDER By UserID, ModuleID



","0","","1","LRA-FUSION","0","0","fusion"
"40162","CV_Inventory_Bronchure","","select BrochureID
,[FileName] as [Description]
,BrochurePath as [Path]
From  AccStockBrochure 
where StockID={where}","0","","1","LRA-FUSION","0","0","fusion"
"40163","cv_Insert_new_modules ","","declare @ProjectID as int

set @projectID = {projectID}

insert into modules (
	ProjectID,
	ModuleName,
	EstHours,
	ActHours,
	EntityContactID,
	ModuleNotes,
	EntityID,
	StartDate,
	EndDate,
	CurrentRate,
	DiscountRate,
	Progress,
	[Status],
	CopiedFromModuleID,
	CalculatedHours,
	IsActive
	)
Select 
	@projectID as  [ProjectID],
	ModuleName,
	EstHours,
	ActHours,
	(select EntityContactID from projects where projectID = @projectID) as  EntityContactID,
	ModuleNotes,
	(select EntityID from projects where projectID = @projectID ) as  EntityID,
	StartDate,
	EndDate,
	CurrentRate,
	DiscountRate,
	Progress,
	[Status],
	CopiedFromModuleID,
	CalculatedHours,
	IsActive
from modules 
where ModuleID = {moduleID}","0","","1","LRA-FUSION","0","0","fusion"
"40164","cv_Acc_Print_DebtorPOS_TillHeader","","SELECT Top 1
isnull(EH.LegalName,E.Legalname) as [<legalname>],
Case When isnull(DM.UseEC,0) = 0 then isnull(EH.Company,E.Company) ELSE EC.Contact END as [<client>],
Case When isnull(DM.UseEC,0) = 0 then isnull(EH.Company,E.Company) ELSE EC.Contact END as [<client1>],
isnull(E.Switchboard,'') as [<Telephone>]	,
isnull(E.Fax,'') as [<fax>],
EAC.Address1 as [<address11>],
EAC.Address2 as [<address12>],
EAC.Address3 as [<address13>],
EAC.Address1 as [<address1>],
EAC.Address2 as [<address2>],
EAC.Address3 as [<address3>],
EAC.Region as [<region>],
EAC.Code as [<address4>],
EAC.city as [<address5>],
isnull(EAP.Address1,EAC.Address1) as [<Daddress1>],
isnull(EAP.Address2,EAC.Address2) as [<Daddress2>],
isnull(EAP.Address3,EAC.Address3) as [<Daddress3>],
isnull(EAP.Code,EAC.Code) as [<Daddress4>],
isnull(EAP.city,EAC.city) as [<Daddress5>],
isnull(E.compregnum,'') as [<cregno>],
isnull(E.VATnum,'') as [<cvat>],
CASE WHEN isnull(EA.Address1,'') <> '' THEN isnull(EA.Address1,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Address2,'') <> '' THEN isnull(EA.Address2,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Address3,'') <> '' THEN isnull(EA.Address3,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.City,'') <> '' THEN isnull(EA.City,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Country,'') <> '' THEN isnull(EA.Country,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Code,'') <> '' THEN isnull(EA.Code,'') ELSE '' END as [<address>],
u.[Consultant] as [<consultant>],
DM.ClientPo as [<refno>],
DM.ClientPo as [<refno1>],
Case when isnull(DM.UseEC,0) = 0 then isnull(isnull(EH.Accountnum, EH.entityid),isnull(E.AccountNum, E.EntityID)) ELSE isnull(EC.Accountnum, EC.EntitycontactID) END as [<accounts>],
Case when isnull(DM.UseEC,0) = 0 then isnull(isnull(EH.Accountnum, EH.entityid),isnull(E.AccountNum, E.EntityID)) ELSE isnull(EC.Accountnum, EC.EntitycontactID) END as [<account>],
isnull(EH.VatNum,E.VatNum) as [<clientvat>],
isnull(EH.CompRegNum,E.CompRegNum) as [<clientreg>],
Case when Att.Entitycontactid is not null then Att.[Attention] ELSE
    Case when ECP.Entitycontactid is not null then ECP.[ProjContact] ELSE 
        Case when isnull(DM.UseEC,0) = 0 then AEC.[AccountContact] ELSE EC.Contact END
    END
END as [<contact1>],
Att.Cell as [<Cell>],
Case when Att.Entitycontactid is not null then Att.[Attention] ELSE
    Case when ECP.Entitycontactid is not null then ECP.[ProjContact] ELSE 
        Case when isnull(DM.UseEC,0) = 0 then AEC.[AccountContact] ELSE EC.Contact END
    END
END as [<contact>],
P.ProjectID as [<projectno>],
P.ProjectName as [<projectname>],
convert(varchar,isnull(DM.DateCompleted, getdate()),103) as [<docdate>],
GETDATE() as [<printdate>],
Case when Doctype = 'Invoice' and DocStatus = 'Open' then 'PROFORMA INVOICE' WHEN Doctype = 'Invoice' and DocStatus <> 'Open' THEN 'TAX INVOICE' ELSe DocType END as [<doctype>],
Case when Doctype = 'Invoice' and DocStatus = 'Open' then 'Proforma Invoice' WHEN Doctype = 'Invoice' and DocStatus <> 'Open' THEN 'Tax Invoice' ELSe DocType END as [<doctype>],
isnull(DS.Prefix,'') + ' ' + convert(varchar,DM.DocNo) as [<docno>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalEx / isnull(DM.ROE,1)) as [<totalex>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.Discount / isnull(DM.ROE,1)) as [<discount>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl / isnull(DM.ROE,1)) as [<totalincl>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl / isnull(DM.ROE,1)) as [<totalincl>],
DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) ) as [<totalvat>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalexDiscIncl / isnull(DM.ROE,1)) as [<totalinclexdisc>],
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
DM.memo as [<notes>],
DS.Terms as [<terms>],
DS.Banking as [<banking>],
DS.Footer as [<footer>],
DS.ContactDetails as [<contactdetails>],
Case when isnull(DM.UseEC,0) = 0 then 
    (SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = (SELECT Top 1 agnetID FROM EntityContact where entitycontactID = E.InvoiceTo))
ELSE
    (SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = Ec.agnetID)
END as [<agent>],
isnull(DR.RuleName, 'Standard') as [<documentrule>],
DV.Division as [<division>],
DV.Division as [<division>],
--EC.Phone1 as [<phone>]
Att.Phone1 as [<phone>],
LPT.value as [<paymentterms>],
MDS.Serialno as [<serial>],
MDS.Licenceno   as [<Licence>],
MDS.CDNo    as [<CDNO>],
MDS.CostCentre  as [<cost>],
MDS.Valuesettings as [<value>], 
MDS.TownDie as [<Towndie>],
isnull(DS.URL,'') as [<URL>],
LJ.VAlue as [<model>],
convert(varchar,getdate(),106) as [<todays>],

CASE (DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) WHEN 0
THEN '0.00 @ 0%'
ELSE DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) ) + ' @ ' + dbo.fnFormatNumber(DM.Tax)
END as [<vatsummary>],
UC.[User] as [<user>]
	
FROM DEBTOR_MASTER DM
LEFT JOIN (
SELECT 
	Sum(PriceEx * qty) as [TotalEx]
	, sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount]
	, sum(PriceEx * Qty * (1 - (isnull(Discperc,0) / 100)) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl]
	, sum(PriceEx * Qty * (isnull(Tax,0) /100 + 1) ) as [TotalexDiscIncl]
	, DocID 
FROM DEBTOR_DETAIL 
WHERE isnull(ComponentOfLineID,0) = 0 Group By DocID
) DD
ON DM.DocID = DD.DocID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention],Accountnum,AgnetID,phone1,cell FROM EntityContact) Att
ON DM.AttentionOf = Att.EntityContactID 
LEFT JOIN (SELECT EntityID, Company,LegalName ,VATNum,AccountNum,InvoiceTo,CompRegNum,AlternateCompanyID,PaymentTerms,Switchboard,Fax From Entity) E
ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN Lookup LPT ON E.PaymentTerms = LPT.LookupID
LEFT JOIN (SELECT EntityID, Company,LegalName ,VATNum,AccountNum,InvoiceTo,CompRegNum,AlternateCompanyID From Entity) EH
ON E.AlternateCompanyID = EH.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact],Accountnum,AgnetID,Phone1 FROM EntityContact) EC
ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact],Accountnum,phone1 FROM EntityContact) AEC
ON isnull(EH.InvoiceTo,E.InvoiceTo) = AEc.EntityContactID 
LEFT JOIN (SELECT ProjectID, EntityContactID, ProjectName FROM Projects) P
ON DM.ProjectID = P.ProjectID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [ProjContact] FROM EntityContact) ECP
ON P.EntityContactID  = ECP.EntityContactID 
LEFT JOIN (SELECT userid, isnull(firstname,'')+ ' ' + isnull(surname,'') as [Consultant] From users) u
ON DM.SalesRepID = u.userid
LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
ON DM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%postal%') EA
ON isnull(EH.Entityid, E.EntityID) = EA.Entityid
LEFT JOIN (SELECT * FROM AccDocRules) DR
ON DM.RuleID = DR.DocRulesID
LEFT JOIN (SELECT lookupID,Value as Division FROM Lookup) DV ON DV.LookupID = DM.DivisionID
Left Join Machinedetails MDS on MDS.EntityID = E.EntityID
Left Join LinkLookup LJ  on MDS.ModelTypeID= LJ.LinkLookupID
Left Join (select * from Entityaddress where Addresstype like '%physical Address%')EAC 
ON isnull(EH.Entityid, E.EntityID) = EAC.Entityid
Left Join (select * from Entityaddress where Addresstype like '%Delivery Address%')EAP 
ON isnull(EH.Entityid, E.EntityID) = EAP.Entityid
LEFT JOIN (
	SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [User] FROM Users 
) UC ON UC.UserID = DM.CreatedBy
WHERE DM.DocID = {docid}

","0","","1","LRA-FUSION","0","0","fusion"
"40165","cv_Acc_Print_DebtorPOS_TillContent","","Declare @DocID As INT
SET @DocID = {docid}

SELECT Code, [Description], [Total] FROM (
SELECT
      DD.LineID
      ,DD.StockCode as [Code]
      ,DD.StockDescription as [Description]
      , '' as [Total]
      , 1 as [Rank]
FROM Debtor_Master DM
LEFT JOIN (
      SELECT 
            LineID
            ,DocID
            ,StockCode
            ,StockDescription
            ,QTY
            ,PriceEx
            ,Discperc
            ,Tax 
      FROM Debtor_Detail
) DD ON DD.DocID = DM.DocID
Where DD.Docid = @DocID

UNION ALL

SELECT 
      DD.LineID
      
      ,'QTY - ' + dbo.fnFormatNumber(DD.QTY) as [QTY] 
      ,' R' + CONVERT(VARCHAR,CAST(DD.PriceEx * (isnull(DD.Tax,0) /100 + 1) as MONEY),1)  as [Cost (Inc.)]
      ,' = R' + CONVERT(VARCHAR,CAST(DD.PriceEx * DD.Qty * (isnull(DD.Tax,0) /100 + 1) as MONEY),1)  as [Cost (Inc.)]
      , 2 as [Rank]
FROM Debtor_Master DM
LEFT JOIN (
SELECT LineID,DocID, StockCode, StockDescription, QTY, PriceEx, Discperc, Tax FROM Debtor_Detail
) DD ON DD.DocID = DM.DocID
Where DD.Docid = @DocID

UNION ALL

SELECT LineID, '' AS Code, '' as Descr, '' as [Total], 3 as [Rank] FROM debtor_Detail WHERE DocID = @DocID



) X

GROUP BY  LineID,Rank,[Code],[Description], [Total]
ORDER BY X.LineID, Rank
","0","","1","LRA-FUSION","0","0","fusion"
"40166","cv_Acc_Print_DebtorPOS_TillHeaderPay","","SELECT Top 1
isnull(EH.LegalName,E.Legalname) as [<legalname>],
Case When isnull(DM.UseEC,0) = 0 then isnull(EH.Company,E.Company) ELSE EC.Contact END as [<client>],
Case When isnull(DM.UseEC,0) = 0 then isnull(EH.Company,E.Company) ELSE EC.Contact END as [<client1>],
isnull(E.Switchboard,'') as [<Telephone>]	,
isnull(E.Fax,'') as [<fax>],
EAC.Address1 as [<address11>],
EAC.Address2 as [<address12>],
EAC.Address3 as [<address13>],
EAC.Address1 as [<address1>],
EAC.Address2 as [<address2>],
EAC.Address3 as [<address3>],
EAC.Region as [<region>],
EAC.Code as [<address4>],
EAC.city as [<address5>],
isnull(EAP.Address1,EAC.Address1) as [<Daddress1>],
isnull(EAP.Address2,EAC.Address2) as [<Daddress2>],
isnull(EAP.Address3,EAC.Address3) as [<Daddress3>],
isnull(EAP.Code,EAC.Code) as [<Daddress4>],
isnull(EAP.city,EAC.city) as [<Daddress5>],
isnull(E.compregnum,'') as [<cregno>],
isnull(E.VATnum,'') as [<cvat>],
CASE WHEN isnull(EA.Address1,'') <> '' THEN isnull(EA.Address1,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Address2,'') <> '' THEN isnull(EA.Address2,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Address3,'') <> '' THEN isnull(EA.Address3,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.City,'') <> '' THEN isnull(EA.City,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Country,'') <> '' THEN isnull(EA.Country,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Code,'') <> '' THEN isnull(EA.Code,'') ELSE '' END as [<address>],
u.[Consultant] as [<consultant>],
DM.ClientPo as [<refno>],
DM.ClientPo as [<refno1>],
Case when isnull(DM.UseEC,0) = 0 then isnull(isnull(EH.Accountnum, EH.entityid),isnull(E.AccountNum, E.EntityID)) ELSE isnull(EC.Accountnum, EC.EntitycontactID) END as [<accounts>],
Case when isnull(DM.UseEC,0) = 0 then isnull(isnull(EH.Accountnum, EH.entityid),isnull(E.AccountNum, E.EntityID)) ELSE isnull(EC.Accountnum, EC.EntitycontactID) END as [<account>],
isnull(EH.VatNum,E.VatNum) as [<clientvat>],
isnull(EH.CompRegNum,E.CompRegNum) as [<clientreg>],
Case when Att.Entitycontactid is not null then Att.[Attention] ELSE
    Case when ECP.Entitycontactid is not null then ECP.[ProjContact] ELSE 
        Case when isnull(DM.UseEC,0) = 0 then AEC.[AccountContact] ELSE EC.Contact END
    END
END as [<contact1>],
Att.Cell as [<Cell>],
Case when Att.Entitycontactid is not null then Att.[Attention] ELSE
    Case when ECP.Entitycontactid is not null then ECP.[ProjContact] ELSE 
        Case when isnull(DM.UseEC,0) = 0 then AEC.[AccountContact] ELSE EC.Contact END
    END
END as [<contact>],
P.ProjectID as [<projectno>],
P.ProjectName as [<projectname>],
convert(varchar,isnull(DM.DateCompleted, getdate()),103) as [<docdate>],
GETDATE() as [<printdate>],
Case when Doctype = 'Invoice' and DocStatus = 'Open' then 'PROFORMA INVOICE' WHEN Doctype = 'Invoice' and DocStatus <> 'Open' THEN 'TAX INVOICE' ELSe DocType END as [<doctype>],
Case when Doctype = 'Invoice' and DocStatus = 'Open' then 'Proforma Invoice' WHEN Doctype = 'Invoice' and DocStatus <> 'Open' THEN 'Tax Invoice' ELSe DocType END as [<doctype>],
isnull(DS.Prefix,'') + ' ' + convert(varchar,DM.DocNo) as [<docno>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalEx / isnull(DM.ROE,1)) as [<totalex>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.Discount / isnull(DM.ROE,1)) as [<discount>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl / isnull(DM.ROE,1)) as [<totalincl>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl / isnull(DM.ROE,1)) as [<totalincl>],
DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) ) as [<totalvat>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalexDiscIncl / isnull(DM.ROE,1)) as [<totalinclexdisc>],
DM.Currency + ' ' + dbo.fnFormatNumber({paymentamount} + {change}) as [<payment>],
DM.Currency + ' ' + dbo.fnFormatNumber({change}) as [<change>],
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
DM.memo as [<notes>],
DS.Terms as [<terms>],
DS.Banking as [<banking>],
DS.Footer as [<footer>],
DS.ContactDetails as [<contactdetails>],
Case when isnull(DM.UseEC,0) = 0 then 
    (SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = (SELECT Top 1 agnetID FROM EntityContact where entitycontactID = E.InvoiceTo))
ELSE
    (SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = Ec.agnetID)
END as [<agent>],
isnull(DR.RuleName, 'Standard') as [<documentrule>],
DV.Division as [<division>],
DV.Division as [<division>],
--EC.Phone1 as [<phone>]
Att.Phone1 as [<phone>],
LPT.value as [<paymentterms>],
MDS.Serialno as [<serial>],
MDS.Licenceno   as [<Licence>],
MDS.CDNo    as [<CDNO>],
MDS.CostCentre  as [<cost>],
MDS.Valuesettings as [<value>], 
MDS.TownDie as [<Towndie>],
isnull(DS.URL,'') as [<URL>],
LJ.VAlue as [<model>],
convert(varchar,getdate(),106) as [<todays>],

CASE (DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) WHEN 0
THEN '0.00 @ 0%'
ELSE DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) ) + ' @ ' + dbo.fnFormatNumber(DM.Tax)
END as [<vatsummary>],
UC.[User] as [<user>]
	
FROM DEBTOR_MASTER DM
LEFT JOIN (
SELECT 
	Sum(PriceEx * qty) as [TotalEx]
	, sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount]
	, sum(PriceEx * Qty * (1 - (isnull(Discperc,0) / 100)) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl]
	, sum(PriceEx * Qty * (isnull(Tax,0) /100 + 1) ) as [TotalexDiscIncl]
	, DocID 
FROM DEBTOR_DETAIL 
WHERE isnull(ComponentOfLineID,0) = 0 Group By DocID
) DD
ON DM.DocID = DD.DocID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention],Accountnum,AgnetID,phone1,cell FROM EntityContact) Att
ON DM.AttentionOf = Att.EntityContactID 
LEFT JOIN (SELECT EntityID, Company,LegalName ,VATNum,AccountNum,InvoiceTo,CompRegNum,AlternateCompanyID,PaymentTerms,Switchboard,Fax From Entity) E
ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN Lookup LPT ON E.PaymentTerms = LPT.LookupID
LEFT JOIN (SELECT EntityID, Company,LegalName ,VATNum,AccountNum,InvoiceTo,CompRegNum,AlternateCompanyID From Entity) EH
ON E.AlternateCompanyID = EH.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact],Accountnum,AgnetID,Phone1 FROM EntityContact) EC
ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact],Accountnum,phone1 FROM EntityContact) AEC
ON isnull(EH.InvoiceTo,E.InvoiceTo) = AEc.EntityContactID 
LEFT JOIN (SELECT ProjectID, EntityContactID, ProjectName FROM Projects) P
ON DM.ProjectID = P.ProjectID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [ProjContact] FROM EntityContact) ECP
ON P.EntityContactID  = ECP.EntityContactID 
LEFT JOIN (SELECT userid, isnull(firstname,'')+ ' ' + isnull(surname,'') as [Consultant] From users) u
ON DM.SalesRepID = u.userid
LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
ON DM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%postal%') EA
ON isnull(EH.Entityid, E.EntityID) = EA.Entityid
LEFT JOIN (SELECT * FROM AccDocRules) DR
ON DM.RuleID = DR.DocRulesID
LEFT JOIN (SELECT lookupID,Value as Division FROM Lookup) DV ON DV.LookupID = DM.DivisionID
Left Join Machinedetails MDS on MDS.EntityID = E.EntityID
Left Join LinkLookup LJ  on MDS.ModelTypeID= LJ.LinkLookupID
Left Join (select * from Entityaddress where Addresstype like '%physical Address%')EAC 
ON isnull(EH.Entityid, E.EntityID) = EAC.Entityid
Left Join (select * from Entityaddress where Addresstype like '%Delivery Address%')EAP 
ON isnull(EH.Entityid, E.EntityID) = EAP.Entityid
LEFT JOIN (
	SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [User] FROM Users 
) UC ON UC.UserID = DM.CreatedBy
WHERE DM.DocID = {docid}

","0","","1","LRA-FUSION","0","0","fusion"
"40167","cv_accStock_ControlMan_Bak","","Declare @Date as datetime
set @Date = '{date}'



SELECT 
Stk.StockID ,
LL.Value as [Type], 
LLL.Value as [Sub Type] ,
Stk.StockCode as [Code], 
Stk.StockDescription as [Description],
L.Value as [Unit], 
dbo.fnFormatNumber(sum(isnull(SC.QtyStores,0) * Isnull(STK.Weight,0) / 1000)) as [Total Weight (KG)] ,
dbo.fnFormatNumber(sum(isnull(SC.QtyStores,0))) as [Total In Stores] ,
dbo.fnFormatNumber(sum(isnull(qtySO,0))) as [On Sales Order],
dbo.fnFormatNumber(sum(isnull(qtyForManuf,0)) + sum(isnull(SplitInput,0))) as [Required For Manufacture],
dbo.fnFormatNumber(sum(isnull(SC.QtyStores,0)  - isnull(qtySO,0)  - isnull(qtyForManuf,0) - isnull(SplitInput,0))) as [Available],
dbo.fnFormatNumber(sum(isnull(qtyPO,0))) as [On Purchase Order],
dbo.fnFormatNumber(sum(isnull(qtyUnderManuf,0)) + sum(isnull(SplitOutput,0))) as [Under Manufacture],
isnull(Stk.LeadTime,0) as [Lead Time (Hrs)],
isnull(convert(Varchar,min(PO.ETA),111),'') as [Next Arrival],
stk.ReOrderLevel as [Re-Order Level],
stk.FulFillment as [Fulfillment Level],
CASE WHEN round(sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0)) + sum(isnull(SplitOutput,0)),4) + isnull(stk.FulFillment - stk.ReOrderLevel,0) > 0 then
	CASE WHEN cast(isnull(stk.FulFillment - stk.ReOrderLevel,0) - round(sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0))  + sum(isnull(SplitOutput,0)),4) as money) < 0 then
		'0.00'
	ELSE
		convert(Varchar,cast(isnull(stk.FulFillment - stk.ReOrderLevel,0) - round(sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0)) + sum(isnull(SplitOutput,0)),4) as money),1)
	END
ELSE
	convert(varchar,Abs(cast(round(sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0)) + sum(isnull(SplitOutput,0)),4) as money)),1)
END  as [Recommended Qty For Purchase]
FROM AccStock STK
Cross Join (SELECT LookupID from Lookup where class like 'Divisions') Div
--In Stores
LEFT JOIN (SELECT StockID, sum(qty * Ratio ) as [QtyStores],DivisionID FROM AccStockControl where Adjustdate <= @Date  group by StockID,DivisionID) SC
ON STK.StockID = SC.StockID AND Div.LookupID = SC.DivisionID
--On Purchase Order
LEFT JOIN (SELECT CD.StockID, sum(CD.Qty * SoldByToPurchasedByRatio) as [QtyPO], min(DateCompleted) as [ETA],
	CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END AS [DivisionID]
	from CREDITOR_DETAIL CD 
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID,Deliverydate FROM CREDITOR_MASTER) CM
        ON CD.DocID = CM.DocID
        LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock) Stk
        ON CD.StockID = Stk.StockID 
		where DocType = 'Purchase Order' AND CONVERT(VARCHAR,isnull(Datecreated, @Date),111) <= CONVERT(VARCHAR,@Date,111) AND CONVERT(VARCHAR,isnull(Deliverydate, @Date),111)  >= CONVERT(VARCHAR,@Date,111)
        --where DocType = 'Purchase Order' AND isnull(Datecreated, @Date) <= @Date AND isnull(Deliverydate, @Date)  >= @Date  
        Group By CD.StockID,CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END) PO
ON Stk.StockID = PO.StockID  AND Div.LookupID = PO.DivisionID
--On Sales Order
LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtySO],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID]
	from DEBTOR_DETAIL DD
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER) DM
        ON DD.DocID = DM.DocID
        where DocType = 'Invoice' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
        Group By DD.StockID,CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) SO
ON Stk.StockID = SO.StockID  AND Div.LookupID = SO.DivisionID
--Required For Manufacture
LEFT JOIN (SELECT MD.StockID, Sum(MD.Qty * M.Qty) as [QtyForManuf],DivisionID FROM AccManufacture_Detail MD 
	LEFT JOIN AccManufacture M ON MD.DocID = M.DocID
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date 
	Group by  MD.StockID,DivisionID )Manuf
ON Stk.StockID = Manuf.StockID  AND Div.LookupID = Manuf.DivisionID
--Under Manufacture
LEFT JOIN (SELECT M.StockID, Sum(M.Qty) as [QtyUnderManuf],DivisionID FROM AccManufacture M
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
	GROUP By M.StockID,DivisionID) UManuf
ON Stk.StockID = UManuf.StockID  AND Div.LookupID = uManuf.DivisionID
--Split Stock Manufacturing
LEFT JOIN (SELECT SD.StockID, LL.LinkedTo as [DivID],
	sum(Case when isnull(SD.IsInput,0) = 1 THEN Qty * Length ELSE 0 END) as [SplitInput],
	sum(Case when isnull(SD.IsInput,0) = 0 THEN Qty * Length ELSE 0 END) as [SplitOutput]
	FROM ACCStock_Split_Master SM
	LEFT JOIN (SELECT * FROM AccStock_Split_Detail) SD ON SM.DocID = SD.DocID
	LEFT JOIN LinkLookup LL ON SD.ContainerID = LL.LinkLookupID
	WHERE SM.DocStatus <> 'Completed' AND SM.DateCreated <= @Date
	Group by SD.StockID, LL.LinkedTo)  SS
ON STK.StockID = SS.StockID and Div.LookupID = SS.DivID
LEFT JOIN Lookup L on  STK.SoldBy = L.LookupID 
LEFT JOIN Lookup LL on STK.StockType = LL.LookupID
LEFT JOIN LinkLookup LLL on STK.SubTypeID = LLL.Linklookupid 
{where}
Group by STK.StockId, LL.Value, LLL.Value, STK.StockCode,STK.StockDescription,L.Value,STK.LeadTime,stk.ReOrderLevel, stk.FulFillment
ORDER BY LL.Value, Stk.StockDescription","0","","1","LRA-FUSION","0","0","fusion"
"40168","cv_Acc_GetOutstandingGRN","","SELECT sum(isnull(qty,0)) - (isnull([QTYGRN],0))   as [QtyOutstanding] FROM Creditor_DETAIL DD
left join (
	SELECT 
		sum(qty) as [QTYGRN]
		, PreviousDocID
		,Dm.Docstatus 
	from Creditor_DETAIL 
        LEFT JOIN (SELECT DocID, PreviousDocID,DocStatus FROM Creditor_MASTER   {where doctype} )DM 
    ON Creditor_DETAIL.DocID = DM.DocID group by PreviousDocID, Docstatus ) DD2
ON  DD.DocID = DD2.PreviousDocid
WHERE DD.DOCID = {docid}
group by [QTYGRN]
","0","","1","LRA-FUSION","0","0","fusion"
"40169","CV_TicketNotes","","select Subject,Description,Notes from notes 
where TicketID = {where}","0","","1","LRA-FUSION","0","0","fusion"
"40170","CV_Invoice_picking_Slip","","{select} (
	SELECT 
	DD.GroupName as [Group],
	DD.StockCode as [Code],
	DD.StockDescription as [Description], 
	DD.Comments,
	Qty, LSB.Value as [UOM],
	LL.Value as [From],
	'   ' as [Picked By],
	'   ' as [Qty Picked],
	'   ' as [Qty Needed],
'   ' as [Signature]
	FROM DEBTOR_DETAIL DD
	LEFT JOIN (SELECT StockID , IsTangible, SoldBy FROM AccStock) STK
		ON DD.StockID = STK.StockID
	LEFT JOIN Lookup LSB
		ON STK.SoldBy = LSB.LookupID
	LEFT JOIN LinkLookup LL
		ON DD.ContainerID = LL.LinkLookupID
	where  
	Isnull(STK.IsTangible,0) = 1
	AND DD.LineID in ({lines})
) A","0","","1","LRA-FUSION","0","0","fusion"
"40171","cv_Acc_Expenditure_Man","","SELECT 
Convert(Varchar,DM.DocID) + '#' + DocType as [DocID], DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
 left('00000000', 8- len(PODOC.DocNo)) + convert(varchar,PODOC.DocNo) as [PO Doc. No.],
LD.Value as [Division], E.AccountNum as [Account], E.Company as [Client],
DM.SupplierName as [Supplier],DM.ClientPO as [Ref.],P.ProjectName  as [Project],
isnull(A.SerialNo + ' - ','') + AStk.StockDescription  as [Asset],
DM.StockCode as [Stock Code],
DM.StockDescription as [Description],
DM.Qty,
convert(varchar,DM.DateCreated,111) as [Created], 
convert(varchar,DM.DateCompleted,111) as [Doc. Date], 
DM.DocStatus as [Status],
UC.[Created By],
UA.[Authorised By],
LCF.Value as [From Container],
LCT.Value as [To Container],
DM.Currency, convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
dbo.fnFormatNumber(isnull(CostPriceEx,0) * qty) as [Total Est. Cost],
dbo.fnFormatNumber(isnull(CostPriceEx,0) * Qty)  as [Total Ex. VAT],
dbo.fnFormatNumber(isnull(CostPriceEx,0) * Qty * (isnull(Tax,0) /100 + 1) - (isnull(CostPriceEx,0) * Qty ))  as [Total VAT],
dbo.fnFormatNumber(isnull(CostPriceEx,0) * Qty * (isnull(Tax,0) /100 + 1))  as [Total Incl. VAT]

FROM EXPENDITURE_MASTER DM
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LD
	ON DM.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, AccountNum, Company FROM Entity) E
	ON DM.ClientID = E.EntityID
LEFT JOIN (SELECT EntityID, AccountNum, Company FROM Entity) ES
	ON DM.SupplierID = ES.EntityID
LEFT JOIN (SELECT ProjectID, ProjectName  FROM Projects) P
	ON DM.ProjectID = P.ProjectID
LEFT JOIN (SELECT AssetID, SerialNo, StockID FROM AccAsset) A
	ON DM.AssetID = A.AssetID
LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) AStk
	ON A.StockID = AStk.StockID
LEFT JOIN (SELECT userID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Created By] FROM Users) UC
	ON DM.CreatedBy = UC.UserID
LEFT JOIN (SELECT userID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Authorised By] FROM Users) UA
	ON DM.CreatedBy = UA.UserID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LCT
	ON DM.ToContainerID = LCT.LinkLookupID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LCF
	ON DM.FromContainerID = LCF.LinkLookupID
LEFT JOIN (SELECT DocID, DocNo FROM CREDITOR_MASTER ) PODOC
	ON DM.PODocID = PODOC.DocID
{where}
ORDER BY DocID Desc","0","","1","LRA-FUSION","0","0","fusion"
"40172","cv_Acc_Liquidity_Forecast","","SET NOCOUNT ON

Declare @FromDate as datetime
Declare @ToDate as datetime
Declare @Counter as datetime
Set @FromDate =  '{fromdate}'
Set @ToDate = '{todate}'
Set @Counter = @FromDate

IF OBJECT_ID(N'tempdb..#CashFlow', N'U') IS NOT NULL 
BEGIN
    DROP TABLE #CashFlow;
END

CREATE TABLE #CashFlow
(
[Year] int,
[Month] int,
[Date] varchar(10),
[Company] Varchar(4000),
[Type] Varchar(200),
[Ref.] Varchar(200),
[DivisionID] int,
[Week 1 Est.] float,
[Week 1] float,
[Week 2 Est.] float,
[Week 2] float,
[Week 3 Est.] float,
[Week 3] float,
[Week 4 Est.] float,
[Week 4] float,
[Week 5 Est.] float,
[Week 5] float,
[Transaction Type] varchar(10),
[Rank] int,
[LiquidityID] int
)


WHILE @Counter <= @ToDate
BEGIN
	--Heading Lines
	INSERT INTO #CashFlow ([Year],[Month], [Date], [Company], [Type],[Transaction Type], [Rank])
	
	SELECT year(@Counter), month(@Counter), convert(varchar,@Counter,111), 
	CASE MONTH(@Counter) 
		WHEN 1 THEN 'JANUARY '
		WHEN 2 THEN 'FEBRUARY '
		WHEN 3 THEN 'MARCH '
		WHEN 4 THEN 'APRIL '
		WHEN 5 THEN 'MAY '
		WHEN 6 THEN 'JUNE '
		WHEN 7 THEN 'JULY '
		WHEN 8 THEN 'AUGUST '
		WHEN 9 THEN 'SEPTEMBER '
		WHEN 10 THEN 'OCTOBER '
		WHEN 11 THEN 'NOVEMEBER '
		WHEN 12 THEN 'DECEMBER '
	END  + convert(varchar,year(@Counter))   as [Company],
	'DISBURSALS' as [Type],'Disbursal', 0 as [Rank]
	
	UNION ALL

	SELECT year(@Counter), month(@Counter), convert(varchar,@Counter,111), 
	CASE MONTH(@Counter) 
		WHEN 1 THEN 'JANUARY '
		WHEN 2 THEN 'FEBRUARY '
		WHEN 3 THEN 'MARCH '
		WHEN 4 THEN 'APRIL '
		WHEN 5 THEN 'MAY '
		WHEN 6 THEN 'JUNE '
		WHEN 7 THEN 'JULY '
		WHEN 8 THEN 'AUGUST '
		WHEN 9 THEN 'SEPTEMBER '
		WHEN 10 THEN 'OCTOBER '
		WHEN 11 THEN 'NOVEMEBER '
		WHEN 12 THEN 'DECEMBER '
	END  + convert(varchar,year(@Counter))   as [Company],
	'RECEIPTS' as [Type],'Receipt', 10 as [Rank]
	
	UNION ALL 
	
	--Total Lines
	SELECT year(@Counter), month(@Counter), convert(varchar,@Counter,111), 
	CASE MONTH(@Counter) 
		WHEN 1 THEN 'JANUARY '
		WHEN 2 THEN 'FEBRUARY '
		WHEN 3 THEN 'MARCH '
		WHEN 4 THEN 'APRIL '
		WHEN 5 THEN 'MAY '
		WHEN 6 THEN 'JUNE '
		WHEN 7 THEN 'JULY '
		WHEN 8 THEN 'AUGUST '
		WHEN 9 THEN 'SEPTEMBER '
		WHEN 10 THEN 'OCTOBER '
		WHEN 11 THEN 'NOVEMEBER '
		WHEN 12 THEN 'DECEMBER '
	END  + convert(varchar,year(@Counter)) as [Company],
	'TOTAL DISBURSALS:' as [Type],'Disbursal',	2 as [Rank]
	
	UNION ALL 
	
	SELECT year(@Counter), month(@Counter), convert(varchar,@Counter,111), 
	CASE MONTH(@Counter) 
		WHEN 1 THEN 'JANUARY '
		WHEN 2 THEN 'FEBRUARY '
		WHEN 3 THEN 'MARCH '
		WHEN 4 THEN 'APRIL '
		WHEN 5 THEN 'MAY '
		WHEN 6 THEN 'JUNE '
		WHEN 7 THEN 'JULY '
		WHEN 8 THEN 'AUGUST '
		WHEN 9 THEN 'SEPTEMBER '
		WHEN 10 THEN 'OCTOBER '
		WHEN 11 THEN 'NOVEMEBER '
		WHEN 12 THEN 'DECEMBER '
	END  + convert(varchar,year(@Counter)) as [Company],
	'TOTAL RECEIPTS:' as [Type],'Receipt',	12 as [Rank]
		
	UNION ALL 
	
	SELECT year(@Counter), month(@Counter), convert(varchar,@Counter,111), 
	CASE MONTH(@Counter) 
		WHEN 1 THEN 'JANUARY '
		WHEN 2 THEN 'FEBRUARY '
		WHEN 3 THEN 'MARCH '
		WHEN 4 THEN 'APRIL '
		WHEN 5 THEN 'MAY '
		WHEN 6 THEN 'JUNE '
		WHEN 7 THEN 'JULY '
		WHEN 8 THEN 'AUGUST '
		WHEN 9 THEN 'SEPTEMBER '
		WHEN 10 THEN 'OCTOBER '
		WHEN 11 THEN 'NOVEMEBER '
		WHEN 12 THEN 'DECEMBER '
	END  + convert(varchar,year(@Counter)) as [Company],
	'RECEIPTS - DISBURSALS:' as [Type],'Total',	13 as [Rank]
	
	
	SET @Counter = dateadd(m,1, @Counter) 
END


INSERT INTO #CashFlow ([Year],[Month],[Date],[Company],[Type],[Ref.],[DivisionID],
[Week 1], [Week 2],[Week 3],[Week 4],[Week 5],
[Transaction Type],[Rank])
SELECT 
Year(DateCompleted) as [Year],
Month(DateCompleted) as [Month],
convert(varchar,DateCompleted,111),
Company,
upper(L.Value) as [Type], 
isnull(ClientPo,''),
DivisionID, 
CASE WHEN Day(DateCompleted) between 1 and 7 THEN abs(isnull(Received,0)) ELSE 0 END as [Week1],
CASE WHEN Day(DateCompleted) between 8 and 14 THEN abs(isnull(Received,0)) ELSE 0 END as [Week2],
CASE WHEN Day(DateCompleted) between 15 and 21 THEN abs(isnull(Received,0)) ELSE 0 END as [Week3],
CASE WHEN Day(DateCompleted) between 22 and 28 THEN abs(isnull(Received,0)) ELSE 0 END as [Week4],
CASE WHEN Day(DateCompleted) between 28 and 31 THEN abs(isnull(Received,0)) ELSE 0 END as [Week5],
CASE WHEN isnull(Received,0) < 0 THEN 'Disbursal' ELSE 'Receipt' END as [Type],
CASE WHEN isnull(Received,0) < 0 THEN 1 ELSE 11 END as [Rank]
FROM    (
    --Payment Receipts
    SELECT  DM.DocID, DateCompleted,DocNo , DocType,ClientPo,Company,e.accountnum as [Acc No],BankAccountID, isnull(DP.Received, 0) as [Received],DM.DivisionID, -1 as [JournalID]  FROM DEBTOR_MASTER DM
    LEFT JOIN (SELECT PaymentDocID, sum(isnull(PaymentPortion,0)) as [Received] FROM DEBTOR_PAYMENT Group by PaymentDocID) DP
    ON DM.DocID = DP.PaymentDocID
    LEFT JOIN (SELECT Entityid, Company,accountnum FROM Entity) E
    ON DM.Entityid = E.Entityid
    WHERE DM.DocType = 'Payment Receipt' AND isnull(isreversed,0) = 0 and DocStatus = 'Completed'
    AND DateCompleted BETWEEN @FromDate and @ToDate

    UNION ALL
    
    --Supplier Payments
    SELECT  DM.DocID, DateCompleted,DocNo , DocType,ClientPo,Company,e.accountnum as [Acc No],BankAccountID, - isnull(DP.Received, 0) as [Received],DM.DivisionID, -9 as [JournalID] FROM CREDITOR_MASTER DM
    LEFT JOIN (SELECT PaymentDocID, sum(isnull(PaymentPortion,0)) as [Received] FROM CREDITOR_PAYMENT
    NT Group by PaymentDocID) DP
    ON DM.DocID = DP.PaymentDocID
    LEFT JOIN (SELECT Entityid, Company,accountnum FROM Entity) E
    ON DM.Entityid = E.Entityid
    WHERE DM.DocType = 'Supplier Payment' AND isnull(isreversed,0) = 0 and DocStatus = 'Completed'
    AND DateCompleted BETWEEN @FromDate and @ToDate

    UNION ALL
    
    --Expense Payments
    SELECT AccExpenseClaimID as [DocID], DatePaid, AccExpenseClaimID, 'Expense', PaymentRef, [Company],null, FromAccount, - Paid,AE.DivisionID, STK.JournalID FROM AccExpenseClaim EC
    LEFT JOIN (SELECT ExpenseClaimID, Stockid, sum(isnull(TotalInc,0)) as [Paid],DivisionID FROM ACCEXPENSES Group By ExpenseClaimID,DivisionID,StockID) AE
    ON EC.AccExpenseClaimID = AE.ExpenseClaimID
    LEFT JOIN (SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Company] FROM Staff) ST
    ON EC.IncurredBy = ST.StaffID
    LEFT JOIN (SELECT StockID, JournalID FROM ACCStock) STK
    ON AE.StockID = STK.StockID 
    WHERE DocStatus = 'Completed'
    AND DatePaid BETWEEN @FromDate and @ToDate
    
    UNION ALL

	--Ledger adjustments
    SELECT LAD.LineID AS [DocID], AdjustDate,LAM.DocID, 'General Journal Entry', LAD.Notes, BA.AccName as [Company], isnull(convert(varchar,GLCode),BA.AccountNo) as [Acc No], Ba.BankAccountID , isnull(Debit,0) - isnull(Credit,0),  GLC.DivisionID, GLCategoryID
    FROM Ledger_Adjust_Master LAM
    LEFT JOIN Ledger_Adjust_Detail LAD ON LAM.DocID = LAD.DocID
    LEFT JOIN (SELECT * FROM accBankAccount) BA ON LAD.GLCodeID = BA.GLCodeID
    LEFT JOIN (SELECT GLCodeID, DivisionID,GLCode, GLCategoryID FROM AccGlCode) GLC ON LAD.GlCodeID = GLC.GLCodeID
    WHERE BA.GLCodeID is not null
    AND AdjustDate BETWEEN @FromDate and @ToDate

    UNION ALL

    --Payroll
    SELECT AP.DocID, DatePaid, AP.DocID, 'Payroll', '',[Employee],null, FromAccount, -Total,DivisionID, STK.JournalID  FROM AccPayroll AP
    LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Employee] From Staff) ST
    ON AP.StaffID = ST.StaffID
    LEFT JOIN (SELECT DocID, StockID, sum(case when isdeduction = 1 then -1 ELSE 1 END * Amount) as [Total] FROM AccPayroll_Details Group by DocID, StockID) PD
    ON AP.DocID = PD.DocID
    LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK
    ON PD.StockID = STK.StockId
    WHERE DocStatus = 'Completed'
    AND DatePaid BETWEEN @FromDate and @ToDate

	UNION ALL

	--Bank Journal
	SELECT CD.LineID, CD.DatePaid, CD.DocID, 'Bank Journal', CD.RefNo, null, convert(varchar,GLC.GLCode),CM.BankAccountID ,- isnull(TotalIncl,0),GLC.DivisionID, GLC.GLCategoryID   
	FROM CASH_TRANSACTION_DETAIL  CD
	LEFT JOIN CASH_TRANSACTION_MASTER CM ON CD.DocID = CM.DocID
	LEFT JOIN AccGLCode GLC ON CD.GLCodeID = GLC.GLCodeID
	WHERE isnull(CM.IsComplete,0) = 1
	AND isnull(SingleTransaction,0) = 0
	AND DatePaid BETWEEN @FromDate and @ToDate
    
    UNION ALL

	--Bank Journal (Single Entry)
	SELECT MIN(LineID) as [DocID], max(CD.DatePaid), CD.DocID, 'Bank Journal', max(CD.RefNo), null, /*convert(varchar,GLC.GLCode)*/ 'Multiple',CM.BankAccountID ,- sum(isnull(TotalIncl,0)) , 0, GLC.GLCategoryID    --GLC.DivisionID   
	FROM CASH_TRANSACTION_DETAIL  CD
	LEFT JOIN CASH_TRANSACTION_MASTER CM ON CD.DocID = CM.DocID
	LEFT JOIN AccGLCode GLC ON CD.GLCodeID = GLC.GLCodeID 
	WHERE isnull(CM.IsComplete,0) = 1
	AND isnull(SingleTransaction,0) = 1
	AND DatePaid BETWEEN @FromDate and @ToDate
    Group by CD.DocID,CM.BankAccountID ,GLC.DivisionID, GLC.GLCategoryID --,GLC.GLCode   
    
   	UNION ALL

	--Bank Journal (Transfers)
	SELECT CD.LineID, CD.DatePaid, CD.DocID, 'Bank Journal', CD.RefNo, null, convert(varchar,GLC.GLCode),CM.BankAccountID , isnull(TotalIncl,0),GLC.DivisionID, GLC.GLCategoryID      
	FROM CASH_TRANSACTION_DETAIL  CD
	LEFT JOIN CASH_TRANSACTION_MASTER CM ON CD.DocID = CM.DocID
	LEFT JOIN AccGLCode GLC ON CD.GLCodeID = GLC.GLCodeID
	LEFT JOIN (SELECT BankAccountID, GLCodeID FROM AccBankAccount) BAL ON CD.GlCodeID = BAL.GLCodeID
	WHERE isnull(CM.IsComplete,0) = 1
	AND isnull(SingleTransaction,0) = 0
	AND DatePaid BETWEEN @FromDate and @ToDate
    
    UNION ALL

	--Bank Journal (Single Entry) (Transfers)
	SELECT MIN(LineID) as [DocID], max(CD.DatePaid), CD.DocID, 'Bank Journal', max(CD.RefNo), null, /*convert(varchar,GLC.GLCode)*/ 'Multiple',CM.BankAccountID , sum(isnull(TotalIncl,0)) , 0, GLC.GLCategoryID    --GLC.DivisionID   
	FROM CASH_TRANSACTION_DETAIL  CD
	LEFT JOIN CASH_TRANSACTION_MASTER CM ON CD.DocID = CM.DocID
	LEFT JOIN AccGLCode GLC ON CD.GLCodeID = GLC.GLCodeID 
	LEFT JOIN (SELECT BankAccountID, GLCodeID FROM AccBankAccount) BAL ON CD.GlCodeID = BAL.GLCodeID
	WHERE isnull(CM.IsComplete,0) = 1
	AND isnull(SingleTransaction,0) = 1
	AND DatePaid BETWEEN @FromDate and @ToDate
    Group by CD.DocID,CM.BankAccountID ,GLC.DivisionID, GLC.GLCategoryID    --,GLC.GLCode  
    
    UNION ALL
        
    --Expenditures
    SELECT DocID,DateCompleted,DocNo,DocType,Memo,DM.SupplierName, E.AccountNum, BankAccountID, 
	-1 * Qty * CostPriceEx * (TAX /100 + 1),
	DM.DivisionID, CASE WHEN DM.StockID < 0 THEN GLC.GLCategoryID ELSE STK.JournalID END
	FROM EXPENDITURE_MASTER DM
	LEFT JOIN (SELECT EntityID, Company,AccountNum FROM Entity ) E ON DM.ClientID = E.EntityID
	LEFT JOIN (SELECT StockID, JournalID FROM AccStock) STK ON DM.StockID = STK.StockID AND DM.StockID > 0 
	LEFT JOIN (SELECT * FROM AccGLCode) GLC ON abs(DM.StockID) = GLC.GLCodeID AND  DM.StockID < 0 
	WHERE DocStatus = 'Completed'
	AND DocType IN ('Purchase')
	AND DateCompleted BETWEEN @FromDate and @ToDate
) A
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL'
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED'  
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON A.JournalID = L.LookupID


--Liquidity forecasts
INSERT INTO #CashFlow ([Year],[Month],[Date],[Company],[Type],[DivisionID],
[Week 1 Est.], [Week 2 Est.],[Week 3 Est.],[Week 4 Est.],[Week 5 Est.],
[Week 1], [Week 2],[Week 3],[Week 4],[Week 5],
[Transaction Type],[Rank], LiquidityID)
SELECT 
Year(DateCompleted) as [Year],
Month(DateCompleted) as [Month],
convert(varchar,DateCompleted,111),
Company,
upper(L.Value) as [Type], 
DivisionID, 
CASE WHEN Day(DateCompleted) between 1 and 7 THEN abs(isnull(CashAmount,0)) ELSE 0 END as [Week1],
CASE WHEN Day(DateCompleted) between 8 and 14 THEN abs(isnull(CashAmount,0)) ELSE 0 END as [Week2],
CASE WHEN Day(DateCompleted) between 15 and 21 THEN abs(isnull(CashAmount,0)) ELSE 0 END as [Week3],
CASE WHEN Day(DateCompleted) between 22 and 28 THEN abs(isnull(CashAmount,0)) ELSE 0 END as [Week4],
CASE WHEN Day(DateCompleted) between 28 and 31 THEN abs(isnull(CashAmount,0)) ELSE 0 END as [Week5],
0,0,0,0,0,
CASE WHEN isnull(CashAmount,0) < 0 THEN 'Disbursal' ELSE 'Receipt' END as [Type],
CASE WHEN isnull(CashAmount,0) < 0 THEN 1 ELSE 11 END as [Rank], LiquidityID
FROM AccLiquidity LF
LEFT JOIN (SELECT EntityID, Company FROM Entity) E ON LF.EntityID = E.EntityID
LEFT JOIN (SELECT LookupID, Value 
FROM Lookup 
where class like 'JournalType' 
UNION ALL
SELECT -1, 'ACCOUNTS RECEIVABLE'
UNION ALL
SELECT -2, 'OUTPUT VAT CONTROL' 
UNION ALL
SELECT -3, 'COST OF SALES' 
UNION ALL
SELECT -4, 'INVENTORY' 
UNION ALL
SELECT -5, 'INPUT VAT CONTROL' 
UNION ALL
SELECT -6, 'BANK' 
UNION ALL
SELECT -8, 'FOREIGN EXCHANGE' 
UNION ALL
SELECT -9, 'ACCOUNTS PAYABLE' 
UNION ALL
SELECT -10, 'UN-RECEIVED INVENTORY' 
UNION ALL
SELECT -11, 'PREPAID EXPENSE' 
UNION ALL
SELECT -12, 'CAPITAL' 
UNION ALL
SELECT -13, 'INVENTORY EXPENSE' 
UNION ALL
SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
UNION ALL
SELECT -15, 'CAPITAL OUTPUT VAT CONTROL'
UNION ALL
SELECT -16, 'DISCOUNT ALLOWED' 
UNION ALL
SELECT -17, 'DISCOUNT RECEIVED'  
UNION ALL
SELECT -18, 'OPENING BALANCE' 
) L 
ON LF.JournalID = L.LookupID


UPDATE #CashFlow 
SET 
[Week 1] = isnull(CF.[Week 1],0),  
[Week 1 Est.] = isnull(CF.[Week 1 Est.],0),  
[Week 2] = isnull(CF.[Week 2],0),
[Week 2 Est.] = isnull(CF.[Week 2 Est.],0),  
[Week 3] = isnull(CF.[Week 3],0),
[Week 3 Est.] = isnull(CF.[Week 3 Est.],0),  
[Week 4] = isnull(CF.[Week 4],0),
[Week 4 Est.] = isnull(CF.[Week 4 Est.],0),  
[Week 5] = isnull(CF.[Week 5],0),
[Week 5 Est.] = isnull(CF.[Week 5 Est.],0)  
FROM #CashFlow C
LEFT JOIN (
	SELECT [Year], [Month],
	sum(isnull([Week 1],0)) as [Week 1],  
	sum(isnull([Week 2],0)) as [Week 2],
	sum(isnull([Week 3],0)) as [Week 3],
	sum(isnull([Week 4],0)) as [Week 4],
	sum(isnull([Week 5],0)) as [Week 5],
	sum(isnull([Week 1 Est.],0)) as [Week 1 Est.],  
	sum(isnull([Week 2 Est.],0)) as [Week 2 Est.],
	sum(isnull([Week 3 Est.],0)) as [Week 3 Est.],
	sum(isnull([Week 4 Est.],0)) as [Week 4 Est.],
	sum(isnull([Week 5 Est.],0)) as [Week 5 Est.]
	FROM #CashFlow
	WHERE Rank = 1
	GROUP BY [Year], [Month]
	) CF 
ON C.[Year] = CF.[Year] AND C.[Month] = CF.[Month]
where [Rank] = 2

UPDATE #CashFlow 
SET 
[Week 1] = isnull(CF.[Week 1],0),  
[Week 1 Est.] = isnull(CF.[Week 1 Est.],0),  
[Week 2] = isnull(CF.[Week 2],0),
[Week 2 Est.] = isnull(CF.[Week 2 Est.],0),  
[Week 3] = isnull(CF.[Week 3],0),
[Week 3 Est.] = isnull(CF.[Week 3 Est.],0),  
[Week 4] = isnull(CF.[Week 4],0),
[Week 4 Est.] = isnull(CF.[Week 4 Est.],0),  
[Week 5] = isnull(CF.[Week 5],0),
[Week 5 Est.] = isnull(CF.[Week 5 Est.],0)  
FROM #CashFlow C
LEFT JOIN (
	SELECT [Year], [Month],
	sum(isnull([Week 1],0)) as [Week 1],  
	sum(isnull([Week 2],0)) as [Week 2],
	sum(isnull([Week 3],0)) as [Week 3],
	sum(isnull([Week 4],0)) as [Week 4],
	sum(isnull([Week 5],0)) as [Week 5],
	sum(isnull([Week 1 Est.],0)) as [Week 1 Est.],  
	sum(isnull([Week 2 Est.],0)) as [Week 2 Est.],
	sum(isnull([Week 3 Est.],0)) as [Week 3 Est.],
	sum(isnull([Week 4 Est.],0)) as [Week 4 Est.],
	sum(isnull([Week 5 Est.],0)) as [Week 5 Est.]
	FROM #CashFlow
	WHERE Rank = 1
	GROUP BY [Year], [Month]
	) CF
ON C.[Year] = CF.[Year] AND C.[Month] = CF.[Month]
where [Rank] = 12

UPDATE #CashFlow 
SET 
[Week 1] = isnull(CF.[Week 1],0),  
[Week 1 Est.] = isnull(CF.[Week 1 Est.],0),  
[Week 2] = isnull(CF.[Week 2],0),
[Week 2 Est.] = isnull(CF.[Week 2 Est.],0),  
[Week 3] = isnull(CF.[Week 3],0),
[Week 3 Est.] = isnull(CF.[Week 3 Est.],0),  
[Week 4] = isnull(CF.[Week 4],0),
[Week 4 Est.] = isnull(CF.[Week 4 Est.],0),  
[Week 5] = isnull(CF.[Week 5],0),
[Week 5 Est.] = isnull(CF.[Week 5 Est.],0)  
FROM #CashFlow C
LEFT JOIN (
	SELECT [Year], [Month],
	sum(isnull(CASE WHEN Rank = 2 THEN -1 ELSE 1 END * [Week 1 Est.],0)) as [Week 1 Est.],  
	sum(isnull(CASE WHEN Rank = 2 THEN -1 ELSE 1 END * [Week 1],0)) as [Week 1],  
	sum(isnull(CASE WHEN Rank = 2 THEN -1 ELSE 1 END * [Week 2 Est.],0)) as [Week 2 Est.],
	sum(isnull(CASE WHEN Rank = 2 THEN -1 ELSE 1 END * [Week 2],0)) as [Week 2],
	sum(isnull(CASE WHEN Rank = 2 THEN -1 ELSE 1 END * [Week 3 Est.],0)) as [Week 3 Est.],
	sum(isnull(CASE WHEN Rank = 2 THEN -1 ELSE 1 END * [Week 3],0)) as [Week 3],
	sum(isnull(CASE WHEN Rank = 2 THEN -1 ELSE 1 END * [Week 4 Est.],0)) as [Week 4 Est.],
	sum(isnull(CASE WHEN Rank = 2 THEN -1 ELSE 1 END * [Week 4],0)) as [Week 4],
	sum(isnull(CASE WHEN Rank = 2 THEN -1 ELSE 1 END * [Week 5 Est.],0)) as [Week 5 Est.],
	sum(isnull(CASE WHEN Rank = 2 THEN -1 ELSE 1 END * [Week 5],0)) as [Week 5]
	FROM #CashFlow
	WHERE Rank  in (2,12)
	GROUP BY [Year], [Month]
	) CF 
ON C.[Year] = CF.[Year] AND C.[Month] = CF.[Month]
where [Rank] = 13



SELECT  Convert(varchar(36),NEWID()) + CASE WHEN Rank in (1,11) THEN '' ELSE '#BOLD' END  as [ID], 
upper(isnull(Company,'OVERHEAD')) as [Company], [Type], 
dbo.fnFormatNumber(sum(isnull([Week 1 Est.],0))) as [Week 1 Est.], 
dbo.fnFormatNumber(sum(isnull([Week 1],0))) as [Week 1 Act.], 
dbo.fnFormatNumber(sum(isnull([Week 2 Est.],0))) as [Week 2 Est.], 
dbo.fnFormatNumber(sum(isnull([Week 2],0))) as [Week 2 Act.], 
dbo.fnFormatNumber(sum(isnull([Week 3 Est.],0))) as [Week 3 Est.], 
dbo.fnFormatNumber(sum(isnull([Week 3],0))) as [Week 3 Act.], 
dbo.fnFormatNumber(sum(isnull([Week 4 Est.],0))) as [Week 4 Est.], 
dbo.fnFormatNumber(sum(isnull([Week 4],0))) as [Week 4 Act.], 
dbo.fnFormatNumber(sum(isnull([Week 5 Est.],0))) as [Week 5 Est.],
dbo.fnFormatNumber(sum(isnull([Week 5],0))) as [Week 5 Act.] 
FROM #CashFlow
Group by [Rank], [Company], [Type], [Year], [Month]
Order by [Year], [Month], [Rank] 

SET NOCOUNT OFF","0","","1","LRA-FUSION","0","0","fusion"
"40173","cv_Acc_Print_Expenditure_Header","","
SELECT  Top 1
isnull(EH.LegalName,E.Legalname) as [<legalname>],
 isnull(EH.Company,E.Company)  as [<client>],
isnull(EH.Company,E.Company)  as [<client1>],
isnull(E.Switchboard,'') as [<Telephone>],
isnull(E.Fax,'') as [<fax>],
EAC.Address1 as [<address11>],
EAC.Address2 as [<address12>],
EAC.Address3 as [<address13>],
EAC.Address1 as [<address1>],
EAC.Address2 as [<address2>],
EAC.Address3 as [<address3>],
EAC.Region as [<region>],
EAC.Code as [<address4>],
EAC.city as [<address5>],
isnull(EAP.Address1,EAC.Address1) as [<Daddress1>],
isnull(EAP.Address2,EAC.Address2) as [<Daddress2>],
isnull(EAP.Address3,EAC.Address3) as [<Daddress3>],
isnull(EAP.Code,EAC.Code) as [<Daddress4>],
isnull(EAP.city,EAC.city) as [<Daddress5>],
isnull(E.compregnum,'') as [<cregno>],
isnull(E.VATnum,'') as [<cvat>],
CASE WHEN isnull(EA.Address1,'') <> '' THEN isnull(EA.Address1,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Address2,'') <> '' THEN isnull(EA.Address2,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Address3,'') <> '' THEN isnull(EA.Address3,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.City,'') <> '' THEN isnull(EA.City,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Country,'') <> '' THEN isnull(EA.Country,'') + Char(13) ELSE '' END +
CASE WHEN isnull(EA.Code,'') <> '' THEN isnull(EA.Code,'') ELSE '' END as [<address>],
u.[Consultant] as [<consultant>],
DM.ClientPo as [<refno>],
DM.ClientPo as [<refno1>],
 isnull(isnull(EH.Accountnum, EH.entityid),isnull(E.AccountNum, E.EntityID))  as [<accounts>],
 isnull(isnull(EH.Accountnum, EH.entityid),isnull(E.AccountNum, E.EntityID))  as [<account>],
isnull(EH.VatNum,E.VatNum) as [<clientvat>],
isnull(EH.CompRegNum,E.CompRegNum) as [<clientreg>],
Case when Att.userid is not null then Att.[Attention] ELSE
    Case when ECP.Entitycontactid is not null then ECP.[ProjContact] ELSE 
         AEC.[AccountContact] 
    END
END as [<contact1>],
Case when Att.userid is not null then Att.[Attention] ELSE
    Case when ECP.Entitycontactid is not null then ECP.[ProjContact] ELSE 
         AEC.[AccountContact]
    END
END as [<contact>],
P.ProjectID as [<projectno>],
P.ProjectName as [<projectname>],
convert(varchar,isnull(DM.DateCompleted, getdate()),103) as [<docdate>],
Case when Doctype = 'Invoice' and DocStatus = 'Open' then 'PROFORMA INVOICE' WHEN Doctype = 'Invoice' and DocStatus <> 'Open' THEN 'TAX INVOICE' ELSe DocType END as [<doctype>],
Case when Doctype = 'Invoice' and DocStatus = 'Open' then 'Proforma Invoice' WHEN Doctype = 'Invoice' and DocStatus <> 'Open' THEN 'Tax Invoice' ELSe DocType END as [<doctype>],
isnull(DS.Prefix,'') + ' ' + convert(varchar,DM.DocNo) as [<docno>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalEx / isnull(DM.ROE,1)) as [<totalex>],
DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalEx / isnull(DM.ROE,1))-(DD.Discount / isnull(DM.ROE,1))) as [<totalexcl>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.Discount / isnull(DM.ROE,1)) as [<discount>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl / isnull(DM.ROE,1)) as [<totalincl>],
DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl / isnull(DM.ROE,1)) as [<totalincl>],
DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) ) as [<totalvat>], 
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
DM.memo as [<notes>],
DS.Terms as [<terms>],
DS.Banking as [<banking>],
DS.Footer as [<footer>],
(SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = (SELECT Top 1 agnetID FROM EntityContact where entitycontactID = E.InvoiceTo)) as [<agent>],
DV.Division as [<division>],
DV.Division as [<division>],
LPT.value as [<paymentterms>],
MDS.Serialno as [<serial>],
MDS.Licenceno   as [<Licence>],
MDS.CDNo    as [<CDNO>],
MDS.CostCentre  as [<cost>],
MDS.Valuesettings as [<value>], 
MDS.TownDie as [<Towndie>],
isnull(DS.URL,'') as [<URL>],
LJ.VAlue as [<model>],
convert(varchar,getdate(),106) as [<todays>],

CASE (DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) WHEN 0
THEN '0.00 @ 0%'
ELSE DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) ) + ' @ ' + dbo.fnFormatNumber(DM.Tax)
END as [<vatsummary>]
FROM EXPENDITURE_MASTER DM
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] ,  sum(PriceEx * Qty * (1 - (isnull(Discperc,0) / 100)) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl], DocID FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group By DocID) DD
ON DM.DocID = DD.DocID
LEFT JOIN (Select userid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention] FROM users) Att
ON DM.ProcessedBy = Att.userid 
LEFT JOIN (SELECT EntityID, Company,LegalName ,VATNum,AccountNum,InvoiceTo,CompRegNum,AlternateCompanyID,PaymentTerms,Switchboard,Fax From Entity) E
ON DM.ClientID = E.EntityID 
LEFT JOIN Lookup LPT ON E.PaymentTerms = LPT.LookupID
LEFT JOIN (SELECT EntityID, Company,LegalName ,VATNum,AccountNum,InvoiceTo,CompRegNum,AlternateCompanyID From Entity) EH
ON E.AlternateCompanyID = EH.EntityID 
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact],Accountnum,phone1 FROM EntityContact) AEC
ON isnull(EH.InvoiceTo,E.InvoiceTo) = AEc.EntityContactID 
LEFT JOIN (SELECT ProjectID, EntityContactID, ProjectName FROM Projects) P
ON DM.ProjectID = P.ProjectID
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [ProjContact] FROM EntityContact) ECP
ON P.EntityContactID  = ECP.EntityContactID 
LEFT JOIN (SELECT userid, isnull(firstname,'')+ ' ' + isnull(surname,'') as [Consultant] From users) u
ON DM.CreatedBy = u.userid
LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
ON DM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%postal%') EA
ON isnull(EH.Entityid, E.EntityID) = EA.Entityid
LEFT JOIN (SELECT lookupID,Value as Division FROM Lookup) DV ON DV.LookupID = DM.DivisionID
Left Join Machinedetails MDS on MDS.EntityID = E.EntityID
Left Join LinkLookup LJ  on MDS.ModelTypeID= LJ.LinkLookupID
Left Join (select * from Entityaddress where Addresstype like '%physical Address%')EAC 
ON isnull(EH.Entityid, E.EntityID) = EAC.Entityid
Left Join (select * from Entityaddress where Addresstype like '%Delivery Address%')EAP 
ON isnull(EH.Entityid, E.EntityID) = EAP.Entityid
WHERE DM.DocID = {docid}

","0","","1","LRA-FUSION","0","0","fusion"
"40174","cv_Acc_Print_Expenditure_Requisition","","
SELECT 
DM.StockCode as [Code],
DM.StockDescription as [Description],
DM.Qty,
LP.Value as [Unit],
dbo.fnFormatNumber(isnull(CostPriceEx,0)) as [Cost Ex. VAT],
dbo.fnFormatNumber(isnull(CostPriceEx,0) * Isnull(Qty,0)) as [Total Cost Ex. VAT],
SupplierName as [Supplier],
E.Company as [For Client],
P.ProjectName as [For Project],
STKA.StockDescription + ' : ' + isnull(A.SerialNo,'') as [For Asset],
LL.Value as [Deliver To]
FROM Expenditure_Master DM
LEFT JOIN (SELECT StockID, PurchasedBy FROM AccStock) STK
ON DM.StockID = STK.StockID
LEFT JOIN Lookup LP
ON STK.PurchasedBy = LP.LookupID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
ON DM.ClientID = E.EntityID
LEFT JOIN (SELECT ProjectID , ProjectName FROM Projects) P
ON DM.ProjectID  = P.ProjectID
LEFT JOIN (SELECT AssetID, StockID, SerialNo FROM AccAsset) A
ON DM.AssetID = A.AssetID
LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STKA
ON A.StockID = STKA.StockID
LEFT JOIN LinkLookup LL
ON DM.ToContainerID = LL.LinkLookupID
where docid = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40175","cv_Acc_Print_CEDoc_EHeader","","SELECT Top 1
'COST ESTIMATE' as [<doctype>],
UPPER(Case When isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END) as [<client>],
UPPER(Case When isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END) as [<client>],
UPPER(Case When isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END) as [<client>],
Case When isnull(DM.UseEC,0) = 0 then E.Fax ELSE EC.Fax END as [<fax1>],
isnull(E.AccountNum,'') as [<ACCno>],
isnull('('+Att.Attention+')','') as  [<contact2>],
Case When isnull(DM.UseEC,0) = 0 then E.Company ELSE EC.Contact END as [<client1>],
isnull(Att.Attention,'') as [<contact>],
isnull(Att.Attention,'') as [Contact],
isnull(Att.Attention,'') as [<contact>],
isnull(Att.Attention,'') as [<contact2>],
KJK.value as [<machine1>],
CAST(DAY(DM.DateCreated) AS VARCHAR(2)) + ' ' + DATENAME(MM, DM.DateCreated) + ' ' + CAST(YEAR(DM.DateCreated) AS VARCHAR(4))  as [<docdate>],
CAST(DAY(DM.DateCreated) AS VARCHAR(2)) + ' ' + DATENAME(MM, DM.DateCreated) + ' ' + CAST(YEAR(DM.DateCreated) AS VARCHAR(4))  as [DocDate],
isnull(Att.FullTitle,'') as [<fulltitle>],
isnull(Att.Fax,'') as [<fax>],
isnull(Att.Phone1,'') as [<phone>],
isnull(EA.Address1,'') as [<address1>],
isnull(EA.Address2,'') as [<address2>],
isnull(EA.Address3,'') as [<address3>],
isnull(ED.Code,EP.Code) as [<Dcode>],
DM.ClientPO as [<refno>],
Att.Cell as [<Cell>], 
isnull(EA.City,'') as [<address4>],
isnull(ED.Address1,EP.Address1) as [<Daddress1>],
isnull(ED.Address2,EP.Address2) as [<Daddress2>],
isnull(ED.Address3,EP.Address3) as [<Daddress3>],
isnull(ED.City,EP.City) as [<Daddress4>],
isnull(EA.code,'') as [<code>],
Att.Email as [<email>],
Att.Email as [Email],
convert(varchar,DM.Startdate,103) + ' - ' + convert(varchar,DM.Enddate,103) as [<rundates>] ,
case WHEN isnull(DM.PreviousDocID,0) > 0 then PreviousDocID Else DM.DocID END  as [<docno>],
case WHEN isnull(DM.PreviousDocID,0) > 0 then PreviousDocID Else DM.DocID END  as [DocNo],
'.' + convert(varchar,ISNULL(DM.Revision,1)) AS [<revision>],
isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.TotalEx / DM.ROE)  as [<totalex>],
isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.TotalEx / DM.ROE)  as [<totalexcl>],
isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.Discount / DM.ROE) as [<discount>],
--isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.TotalIncl / DM.ROE ) as [<totalincl>],
isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber((DD.TotalIncl - (DD.TotalEx - DD.Discount)) / DM.ROE) as [<totalvat>], 
CASE WHEN isnull(DD.Discount,0) <> 0 then char(13) + 'Discount' END as [<disclabel>],
CASE WHEN isnull(DD.Discount,0) <>  0 then char(13) + isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(cast(DD.Discount as money) / DM.ROE)  END as [<invisiblediscount>],
U.SalesCon as [<salescons>],
U.SalesCon as [salescons],
U.SalesCon as [<salescons1>],
isnull(E.compregnum,'') as [<cCompreg>],
isnull(E.VATnum,'') as [<cVATnum>],
S.SalesRepCell as [<salesrepcell>],
LC.Value as [<extsalescons>],
DS.CoRegNo as [<compreg>],
DS.VatRegNo as [<vatno>],
DM.Descr as [gendescr],
DM.Descr as [<gendescr>],
DM.Descr as [<gendescr>],
DM.memo as [<notes>],
DS.Terms as [<terms>],
DS.Banking as [<banking>],
DS.Footer as [<footer>],
'' as [<roe>],
ACC.StockDescription as  [<desc>],
KJK.value as [<machine>],
ACC.Specifications [<spec>],
ACC.Extraspecifications [<info>],
us.SalesCons as [<consultant>],
us.SalesCons as [<consultant>],
LP.[Position] as [<Position>],
DM.accCostOther4 as [pax],
	LPs.[accCostOther1] as [Adult],
	LPG.[accCostOther2] as [child],
	LPT.[accCostOther3] as [Infants],
dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.4) as [<amount40%>],
dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.3) as [<amount30%>],
dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.2) as [<amount20%>],
dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.1) as [<amount10%>],
dbo.fnFormatNumber((DD.Totalincl / DM.ROE) / 6) as [<amt6mth>],
dbo.fnFormatNumber((DD.Totalincl / DM.ROE) / 12) as [<amt12mth>]


FROM COST_ESTIMATE_MASTER DM
LEFT JOIN (SELECT Sum(PriceEx * qty) as [TotalEx], sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] ,Sum((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1)) as [TotalIncl], DocID FROM COST_ESTIMATE_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group By DocID) DD
ON DM.DocID = DD.DocID
LEFT JOIN (SELECT EntityID, Company ,VATNum,AccountNum,InvoiceTo,Fax,Switchboard, compregnum,SalesConsID From Entity) E
ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact],Accountnum,Email,Fax,Phone1,SalesConsID FROM EntityContact) EC
ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention], ltrim(rtrim(isnull(Title,'') + ' ' + isnull(firstname,'') +  ' '+ isnull(surname,''))) as [FullTitle],Accountnum,Email,Fax,Phone1,SalesConsID,Cell  FROM EntityContact) ATT
ON DM.AttentionOf = Att.EntityContactID 
LEFT JOIN (Select Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact],Accountnum,Email,SalesConsID FROM EntityContact) AEC
ON E.InvoiceTo = AEc.EntityContactID 
LEFT JOIN (SELECT * FROM AccDocumentSetup) DS
ON DM.DivisionID = DS.DivisionID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') +  ' '  + isnull(surname,'') as [SalesCon],StaffID  FROM Users) U 
ON DM.SalesRepID = U.UserID
LEFT JOIN (SELECT Staffid, Cell as [SalesRepCell] FROM Staff ) S 
ON U.Staffid = S.Staffid
LEFT JOIN Lookup LC 
ON LC.Lookupid =  CASE WHEN  isnull(DM.UseEC,0) =0 THEN E.SalesConsID ELSE EC.SalesConsID END
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%Postal%') EA
ON E.EntityID = EA.Entityid
left join COST_ESTIMATE_DETAIL DF on DF.DocID = DD.DocID
left Join (select top 1 stockid ,StockDescription,Specifications,Extraspecifications,StockType from accstock where stockID=(select top 1 stockID from COST_ESTIMATE_DETAIL where DocID = 528863) ) ACC  on DF.stockID=ACC.stockID
left join Lookup KJK on KJK.LookupID = ACC.StockType
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%Delive%') ED
ON E.EntityID = ED.Entityid
LEFT JOIN (SELECT * FROM EntityAddress where addresstype like '%physic%') EP
ON E.EntityID = EP.Entityid
LEFT JOIN (select UserID,StaffID, isnull(firstname,'') + ' ' + isnull(Surname,'') as SalesCons from Users) US 
ON US.UserID = DM.SalesRepID
LEFT JOIN (SELECT StaffID, position FROM Staff) st
ON St.StaffID = US.StaffID
LEFT JOIN (SELECT LookupID, Value as [Position] FROM Lookup WHERE Class LIKE 'jobtitle') LP ON LP.LookupID = st.position
Left Join (SELECT LookupID, Value as [accCostOther1]  FROM Lookup WHERE Class LIKE 'accCostOther1' ) LPs ON LPs.LookupID = DM.accCostOther1
Left Join (SELECT LookupID, Value as [accCostOther2]  FROM Lookup WHERE Class LIKE 'accCostOther2' ) LPG ON LPG.LookupID = DM.accCostOther2
Left Join (SELECT LookupID, Value as [accCostOther3]  FROM Lookup WHERE Class LIKE 'accCostOther3'  ) LPT ON LPT.LookupID = DM.accCostOther3
Left Join (SELECT LookupID, Value as [Lead From]  FROM Lookup WHERE Class LIKE 'LeadFrom'  ) LPK ON LPK.LookupID = DM.PipelineLeadFromId

WHERE DM.DocID = {docid}
","0","","1","LRA-FUSION","0","0","fusion"
"40176","cv_Subscriptions_Current","","SELECT
SubscriptionID
,Company
,Contact
,Publisher
,NumCopies as [Number Of Copies]
,StartDate
,EndDate
	
FROM Subscriptions S
LEFT JOIN (
	SELECT 
		EntityID
		, Company 
	FROM Entity
) E ON E.EntityID = S.EntityID
LEFT JOIN (
	SELECT 
		EntityID
		, EntityContactID
		, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') AS [Contact] 
	FROM EntityContact
) EC
ON EC.EntityContactID = S.EntityContactID
LEFT JOIN (
	select 
		LookupID
		, Value as Publisher
	FROM Lookup 
	WHERE Class LIKE 'Publisher'
) LP ON LP.LookupID = S.PublisherID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40177","CvCallsQuickFindContacts","","select ec.EntityContactID,e.Company,e2.Company as [Holding Company],
Firstname,
Surname,
cell as [Cellphone],
Additional2 As [ID Number],
Additional3 As [Password],
Additional1 As [Vehicle Registration Number],
--Additional3 As [Password],
ead.Address1,ead.Address2,ead.Address3
,eadPo.Address1 As [PO Address1],eadPo.Address2 As [PO Address2],eadPo.Address3 As [PO Address3]
from
entitycontact ec inner join entity e 
on
ec.entityid = e.entityid
left join EntityAddress ead on 
ead.EntityID = e.EntityID and ead.EntityAddressID =
(select MAX(entityaddressid) from EntityAddress where EntityID = e.EntityID and AddressType like '%Physical%')
left join EntityAddress eadPo on 
eadPo.EntityID = e.EntityID and eadPo.EntityAddressID =
(select MAX(entityaddressid) from EntityAddress where EntityID = e.EntityID and AddressType like '%Postal%')
left join Entity e2 on
e2.EntityID = e.AlternateCompanyID
{where}

order by ec.company desc ","0","","1","LRA-FUSION","0","0","fusion"
"40178","cv_CallLog_Stock","","SELECT DISTINCT
	StockID
	,ISNULL(StockCode,'') + ': ' + ISNULL(StockDescription,'')  as Product
	,ISNULL((SELECT CallLogProductID FROM calllogproducts WHERE ProductID = A.StockID AND CallLogID = {CallLogID}), 0)as Assigned
FROM AccStock A
ORDER BY ISNULL(StockCode,'') + ': ' + ISNULL(StockDescription,'')  DESC
","0","","1","LRA-FUSION","0","0","fusion"
"40179","cv_Delivery_Truck_Printout","","Declare @ID as int
Declare @startdate as datetime
Declare @enddate as datetime


Set @ID = {ID}
Set @startdate = '{startdate}'
Set @enddate =  '{enddate}'

select * from 

(

select 
	convert(varchar,@startdate,111) + ' - '+  convert(varchar,@enddate,111) as [Date],
	'' as [Order Number],
	'' as  [Store],
	''  as [Warehouse] ,
	Value as [Truck],
	'' as [Signiture]
from  EntityGroup EG 
LEFT JOIN Lookup L ON GroupID = LookupID
where EG.GroupID = @ID  

Union All

select 
	isnull(null,'') ,
	'',
	'',
	'',
	'',
	''

Union All

select 
	isnull(null,'') ,
	ClientPO as [Order Number],
	DM.[Address] as [Store],
	LC.Value as [Warehouse],
	'',
	''
FROM DeliverySchedule DS
LEFT JOIN Debtor_Master DM ON  DS.DocID = DM.DocID
LEFT JOIN (
	SELECT LinkLookupID, Value,class FROM LinkLookup WHERE Class LIKE 'StockContainer'
) LC ON LC.LinkLookupID = DS.WarehouseID
where DS.VehicleNoID = @ID  AND DeliveryDate between convert(varchar,@startdate,111) AND convert(varchar,@enddate,111)
) X


union all

select 
	'Warehouse Manager:' ,
	'Sign:                             ',
	'',
	'',
	'Driver:' ,
	'Sign:                             '","0","","1","LRA-FUSION","0","0","fusion"
"40180","cv_Import_ChangeControl_Lines","","INSERT INTO Lookup (Value, Class)
SELECT DISTINCT ChangeType,'TaskType' FROM _TempChangeControl TCC
LEFT JOIN (SELECT LookupID, value from lookup where class like 'TaskType') TT
ON TT.Value = TCC.ChangeType
WHERE TT.LookupID IS NULL

INSERT INTO ClientActivityListItem (
	ClientActivityListID
	,DateAdded
	,DateModified
	,fname
	,[Description]
	,reason
	,ModuleID
	,ChangeTypeID
	,AssignedTo
)

SELECT DISTINCT
	{lCALID}
	,GetDate()
	,GetDate()
	,fname
	,[Description]
	,NULL
	,{moduleID}
	,TT.LookupID
	,{userID}
FROM _TempChangeControl TCC
LEFT JOIN (SELECT LookupID, value from lookup where class like 'TaskType') TT
ON TT.Value = TCC.ChangeType","0","","1","LRA-FUSION","0","0","fusion"
"40181","cv_Import_CC_Lookups","","
INSERT INTO Lookup (Value, Class)
SELECT DISTINCT ChangeType,'TaskType' FROM _TempChangeControl TCC
LEFT JOIN (SELECT LookupID, value from lookup where class like 'TaskType') TT
ON TT.Value = TCC.ChangeType
WHERE TT.LookupID IS NULL","0","","1","LRA-FUSION","0","0","fusion"
"40182","cv_Acc_Stock_Valuation_Calc","","
DECLARE @SCID as int
DECLARE @CurrentSCID as int
DECLARE @Qty as float


--Clear out deleted items from Calculations table
DELETE FROM AccStockControlValuation WHERE isnull(StockControlID,0) not in (SELECT StockControlID FROM AccStockControl)

--Populate Calculations table with new transactions 
INSERT INTO AccStockControlValuation(StockControlID, DocID, DocType, StockId, AdjustDate,AdjustQty,TotalQty,LastUnitPrice,QtyRemaining,DivisionID,StockValuationMethod,ContainerID)
SELECT StockControlID, SC.DocID, SC.DocType,SC.StockID, AdjustDate, Qty, null, 
CASE WHEN DocType in ('Goods Received Note', 'Purchase', 'Stock Transfer', 'Stock Take') THEN UnitPurchasePriceEx ELSE null END,
CASE WHEN DocType in ('Goods Received Note', 'Purchase', 'Stock Transfer', 'Stock Take') THEN Qty ELSE 0 END,
DivisionID, isnull(STK.StockValuationMethod,1), SC.ContainerID
FROM AccStockControl SC
LEFT JOIN (SELECT StockID, StockValuationMethod FROM AccStock) STK
ON SC.StockID = STK.StockID
WHERE isnull(SC.StockControlID,0) NOT IN (SELECT StockControlID FROM AccStockControlValuation)
ORDER BY AdjustDate,SC.Stockid

--Reset rolling qty and calculated costs in the event of an item being inserted earlier than the last one in this table
UPDATE AccStockControlValuation 
SET TotalQty = null, CalculatedUnitCost = null, CalculatedCost = null
FROM AccStockControlValuation C1
LEFT JOIN (SELECT StockID, DivisionID, ContainerID, min(AdjustDate) as [AdjustDate] FROM AccStockControlValuation WHERE TotalQty is null GROUP BY StockID, DivisionID, ContainerID) C2
ON C1.StockID = C2.StockID AND C1.DivisionID = C2.DivisionID and C1.ContainerID = C2.ContainerID and C1.Adjustdate >= C2.AdjustDate
WHERE C2.StockID is not null

--Set Pricing for any received goods without prices or use the matching price in the price list.
UPDATE  AccStockControlValuation
SET LastUnitPrice = isnull(LSVC.LastUnitPrice, SP.CostPriceEx / isnull(STK.SoldByToPurchasedByRatio,1) ),
TotalQty = null, CalculatedUnitCost = null, CalculatedCost = null
FROM AccStockControlValuation SCV
LEFT JOIN (SELECT CosID, LastUnitPrice FROM AccStockControlValuation ) LSVC
ON LSVC.COSID = (SELECT MAX(CosID) FROM AccStockControlValuation where StockID = SCV.StockID AND AdjustDate <= SCV.AdjustDate AND isnull(LastUnitPrice,0) > 0 )
LEFT JOIN (SELECT StockID,DivisionId,isnull(ForexDepTotal,CostPriceEx) as [CostPriceEx], ValidFrom, ValidTo FROM AccStockPrice) SP
ON SCV.StockID = SP.StockId AND SCV.DivisionID = SP.DivisionId AND SCV.AdjustDate between SP.ValidFrom AND SP.ValidTo 
LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock) STK
ON Scv.StockID = STK.StockID
where isnull(SCV.AdjustQty,0) > 0 AND isnull(SCV.LastUnitPrice,0) = 0
AND isnull(LSVC.LastUnitPrice, SP.CostPriceEx / isnull(STK.SoldByToPurchasedByRatio,1) ) is not null

--Calculate rolling qty balance on new or altered items
WHILE (SELECT Count(COSID) FROM AccStockControlValuation where TotalQty is null) > 0 
BEGIN
	--Calculate rolling qty balance on new or altered items
	UPDATE AccStockControlValuation
	SET TotalQty = (SELECT isnull((SELECT sum(isnull(adjustqty,0)) FROM AccStockControlValuation c2 where c1.stockid = c2.stockid AND c1.containerID = c2.ContainerID and C1.DivisionID = c2.DivisionID AND c2.AdjustDate <= c1.AdjustDate), 0) )
	FROM AccStockControlValuation c1
	WHERE c1.COSID IN (SELECT COSID FROM AccStockControlValuation where TotalQty is null)
END


--Calculate COS using FIFO (1) and LIFO (2)
SET @SCID = (SELECT min(COSID) FROM AccStockControlValuation where AdjustQty < 0 AND StockValuationMethod in (1,2) AND CalculatedCost is null ) 
WHILE @SCID <= (SELECT max(COSID) FROM AccStockControlValuation where AdjustQty < 0 AND StockValuationMethod in (1,2) ) AND isnull(@SCID,0) <> 0 
BEGIN
    SET @Qty = (SELECT abs(AdjustQty) FROM AccStockControlValuation WHERE COSID = @SCID)
    WHILE @Qty > 0 
    BEGIN
        --Find the earliest/latest available stock
        SET @CurrentSCID = (SELECT CASE C1.StockValuationMethod WHEN 1 THEN min(C2.COSID) WHEN 2 THEN max(C2.COSID) END  FROM AccStockControlValuation C1  LEFT JOIN (SELECT StockID,DivisionID, ContainerID, COSID, Adjustdate FROM AccStockControlValuation WHERE AdjustQty >0 AND QtyRemaining > 0 AND isnull(LastUnitPrice,0) > 0 ) C2 ON C1.StockID = C2.StockID AND C1.DivisionID= C2.DivisionID AND C1.ContainerID = C2.ContainerID AND C2.AdjustDate <= C1.AdjustDate  WHERE C1.COSID = @SCID AND C2.COSID is not null GROUP BY C1.StockValuationMethod)
        IF  isnull(@CurrentSCID,0) = 0 
            --If no stock left, try to get price from price list.
            BEGIN
                UPDATE AccStockControlValuation
                SET CalculatedCost = isnull(SP.ForexDepTotal , SP.CostPriceEx) * @Qty 
                FROM AccStockControlValuation C
                LEFT JOIN (SELECT * FROM AccStockPrice) SP
                ON C.StockID = SP.StockID AND C.DivisionID = SP.DivisionID  AND C.AdjustDate Between SP.ValidFrom and SP.ValidTo
                WHERE C.COSID = @SCID       
                
                SET @Qty = 0
            END
        ELSE
            --Available stock found, perform calculation
            IF @Qty <= (SELECT QtyRemaining FROM AccStockControlValuation WHERE COSID = @CurrentSCID )
                BEGIN
                    UPDATE AccStockControlValuation
                    SET CalculatedCost = isnull(CalculatedCost,0) + (SELECT LastUnitPrice * @Qty  FROM AccStockControlValuation where COSID = @CurrentSCID)
                    WHERE COSID = @SCID
                    UPDATE AccStockControlValuation
                    SET QtyRemaining = QtyRemaining - @Qty 
                    WHERE COSID = @CurrentSCID
                    SET @Qty = 0
                END
            ELSE
                BEGIN 
                    UPDATE AccStockControlValuation
                    SET CalculatedCost = isnull(CalculatedCost,0) + (SELECT  LastUnitPrice * QtyRemaining FROM AccStockControlValuation where COSID = @CurrentSCID) 
                    WHERE COSID = @SCID
                    SET @Qty = @Qty - (SELECT QtyRemaining FROM AccStockControlValuation where COSID = @CurrentSCID)
                    UPDATE AccStockControlValuation
                    SET QtyRemaining = 0
                    WHERE COSID = @CurrentSCID                  
                END
    END
--Update LastUnitPrice if this was a manufacturing item 
IF (SELECT DocType FROM AccStockControlValuation WHERE COSID = @SCID) = 'Manufacturing'
BEGIN
    UPDATE AccStockControlValuation
    SET LastUnitPrice = (SELECT Sum(isnull(CalculatedCost,0)) FROM AccStockControlValuation WHERE DocType = 'Manufacturing' AND DocID = (SELECT DocID FROM AccStockControlValuation WHERE COSID = @SCID))
    FROM AccStockControlValuation C
    WHERE DocType = 'Manufacturing' AND isnull(AdjustQty,0) > 0 AND DocID = (SELECT DocID FROM AccStockControlValuation WHERE COSID = @SCID)
END
--Get the next record to calculate COS for
SET @SCID = (SELECT min(COSID) FROM AccStockControlValuation where AdjustQty < 0 AND StockValuationMethod in (1,2) AND CalculatedCost is null AND COSID > @SCID) 
END

--Calculate COS using Average Cost (3)
UPDATE AccStockControlValuation
SET [CalculatedCost]  = (C4.[CalcCost] /  isnull(C4.TotalQty,1)) * abs(C3.[AdjustQty]) 
FROM AccStockControlValuation C3
LEFT JOIN (
        SELECT C1.COSID, SUM(C2.AdjustQty * C2.LastUnitPrice) as [CalcCost], Max(C2.TotalQty) as [TotalQty] FROM AccStockControlValuation C1
        LEFT JOIN (SELECT * FROM AccStockControlValuation WHERE AdjustQty >0 and isnull(LastUnitPrice,0) > 0 ) C2
        ON C1.StockID = C2.StockID AND C1.DivisionID = C2.DivisionID AND C1.ContainerID = C2.ContainerID AND C2.AdjustDate <= C1.AdjustDate
        WHERE C1.AdjustQty < 0 AND C1.StockValuationMethod in (3)
        Group by  C1.COSID
        ) C4
ON C3.COSID = C4.COSID 
WHERE C3.StockValuationMethod in (3) 
AND C3.CalculatedCost is null
AND C3.AdjustQty < 0


--Calculate cost back to unit cost
UPDATE AccStockControlValuation
SET CalculatedUnitCost =  CalculatedCost / abs(AdjustQty)
where abs(AdjustQty) <> 0
AND isnull(CalculatedCost,0) <> 0
AND CalculatedUnitCost is null

","0","","1","LRA-FUSION","0","0","fusion"
"40183","cv_Print_ChangeControl_Content","","SELECT 

	 CALI.FName as [Form Name]
	, CALI.[Description]
        , CALI.[Reason]
	, [Change Type]
	, CASE [isBillable] WHEN 0 THEN 'No' WHEN 1 THEN 'Yes' ELSE 'No' END As [Billable]
	, [Assigned To]
	, ISNULL(CALI.EstimatedHours , 0) as [Est. Hrs]
        , CASE ISNULL(ScreenshotPath,'') WHEN '' THEN NULL ELSE '<' + CAST(ClientActivityListItemID as VARCHAR) + '>' END as [Image]
FROM ClientActivityListItem CALI
LEFT JOIN (
	SELECT * FROM ClientActivityList
) CAL ON CAL.ClientActivityListID = CALI.ClientActivityListID 
LEFT JOIN (
	SELECT ModuleID, ProjectID, ModuleName as [Module Name] FROM Modules
) M ON M.ModuleID = CALI.ModuleID
LEFT JOIN (
	SELECT ProjectID, ProjectName as [Project Name], EntityID FROM Projects
) P ON P.ProjectID = M.ProjectID
LEFT JOIN (
	SELECT EntityID, Company FROM Entity
) E ON E.EntityID = P.EntityID
LEFT JOIN (
	SELECT userID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Assigned To] FROM Users
) U ON U.UserID = CALI.AssignedTo
LEFT JOIN (
	SELECT LookupID, Value as [Change Type] FROM Lookup WHERE Class LIKE 'TaskType'
) LT ON LT.LookupID = CALI.ChangeTypeID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40184","cv_Acc_Scan_Supplier_Invoice","","Declare @DocID as integer
Set @DocID = {docid}


SELECT convert(varchar,DD.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, (Sum(Qty) * SoldbyToPurchasedByRatio) - (isnull(SC.[QtyScanned],0) ) as [Qty], 'NOT SCANNED' as [S/N] 
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning, SoldbyToPurchasedByRatio FROM AccStock) STK
ON DD.StockID = STK.StockID
LEFT JOIN (SELECT DocID, DocType, StockID,  sum(abs(Qty * Ratio)) as [QtyScanned] FROM  AccStockControl where DocID = @DocID Group by DocID, DocType, StockID) SC
ON DD.DocID = SC.DocID  AND DM.DocType = SC.DocType AND DD.StockID = SC.StockID
WHERE DD.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1
GROUP BY STK.StockDescription,SC.[QtyScanned], DD.StockID,SoldbyToPurchasedByRatio
HAVING Sum(Qty * SoldbyToPurchasedByRatio ) - isnull(SC.[QtyScanned],0) > 0

UNION ALL

SELECT convert(varchar,STK.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, [QtyScanned], SC.SerialNumber
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT  DocID, DocType, StockID, SerialNumber,abs(Qty * Ratio) as [QtyScanned]  FROM AccStockControl) SC
ON DM.DocID = SC.DocID AND DM.DocType = SC.DocType
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON SC.StockID = STK.StockID
WHERE DM.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1","0","","1","LRA-FUSION","0","0","fusion"
"40185","cv_Activities_All2",""," 
SELECT distinct [Key],e2.Company,IsNull(ec2.FirstName,'') + ' ' + IsNull(ec2.Surname,'') as Contact,LD.Value as [Division] , Type, SubType, [Description], Subject,
Case when A.AssignedTo < 0 then convert(varchar,abs(A.AssignedTo)) + ' Assignees' ELSE U.Assignee END as [Assignee],
convert(varchar,[Date],111) + ' ' + convert(varchar,[Date],108) as [Next Date],
Status, [Created By]
FROM 
(
--Actions
SELECT 
    convert(varchar, ActivityID) + '##Action' as [key] , 
    AddedByID as [CreatedBy], 
    Entityid, 
    Entitycontactid, 
    'Action' as [Type],
    L.Value as [SubType],
    P.UserID as [AssignedTo],
    Comments as [Description],
    '' as [Subject], 
    DateAdded as [DateCreated], 
    DateAction as [Date],
    LO.Value as [Status],DivID, U.Firstname + ' ' + U.Surname as [Created By], AssessmentID
FROM Activity A
LEFT JOIN Lookup L ON A.ActivityTypeID = L.LookupID
LEFT JOIN Lookup LO ON A.ActivityOutcomeID = LO.LookupID
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = A.addedbyid
LEFT JOIN (Select userid, firstname, surname as Names from users) P on P.userid = A.userid
UNION ALL

--Calls
SELECT 
	convert(varchar, CallLogID) + '##' + case isnull(AdvCall,0) when 0 then 'Call' ELSE 'AdvancedCall' END as [key],
	CallCreatorID, 
	EntityID, 
	CL.EntityContactID,
	case isnull(AdvCall,0) when 0 then 'Call' ELSE 'Advanced Call' END, 
	L.Value,
	U.Userid, 
	CallDescription, 
	callsubject as [Subject],
	null, 
	CallDate, 
	LO.Value,
	DivID, U.firstname + ' ' + u.surname as [Created BY], AssessmentID
FROM CallLog CL
LEFT JOIN (SELECT EntityContactID, EntityID FROM EntityContact) EC ON  CL.EntityContactID = EC.entityContactID
LEFT JOIN Lookup L ON CL.CallTypeID = L.LookupID
LEFT JOIN Lookup LO ON CL.BusResID = LO.LookupID
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = CL.callcreatorid

UNION ALL

--Appointments
SELECT 
    convert(varchar, AppointmentID) + '##Appointment' as [key], 
    CreateUserID, 
    Entityid, 
    apc.EntityContactID, 
    'Appointment',
    L.Value,
    ForUserID,
    notes, 
    Subject , 
    null, 
    [Date], 
    case when [Date] < getdate() then 'Passed' ELSE convert(varchar,datediff(d,  GetDate(),[Date])) + ' day(s) to go'  end,
    U.DefaultDivisionID, UN.firstname + ' ' + un.surname as [Created By], AssessmentID
FROM Appointment A
LEFT JOIN Lookup L ON A.ClientRelID = L.LookupID
LEFT JOIN (SELECT UserID, DefaultDivisionID FROM Users) U ON A.ForuserID = U.UserID
LEFT JOIN (Select Entitycontactid,apptid from appointmentcontacts) apc on apc.apptid = a.appointmentid
LEFT JOIN (Select userid, firstname, surname from users) UN on UN.userid = A.createuserid

UNION ALL

--Tasks
SELECT 
	convert(varchar, T.TaskReminderID) + '##Task' as [key], 
	CreateByID, 
	Entityid, 
	T.Entitycontactid, 
	'Task', 
	'',
	isnull(DeveloperID, -1 * NoOfAssignees), --Uses negatives to denote multiple assignees
	TaskName, 
	'' ,
	null, 
	TaskDate, 
	convert(varchar,isnull(percentageid,0)) + '% completed' ,
	DivID, u.firstname + ' ' + u.surname as [Created By], AssessmentID
FROM TaskReminder T
LEFT JOIN (SELECT EntityContactID, EntityID FROM EntityContact) EC ON  T.EntityContactID = EC.entityContactID
LEFT JOIN (SELECT TaskReminderID, count(DeveloperID) as [NoOfAssignees] FROM DeveloperTasks Group By TaskReminderID having  count(DeveloperID) > 1) DT1
ON T.Taskreminderid= DT1.TaskReminderID
LEFT JOIN (SELECT TaskReminderID, DeveloperID  FROM DeveloperTasks ) DT2
ON T.Taskreminderid= DT2.TaskReminderID and DT1.TaskReminderID is null
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = T.createbyid


UNION ALL

--Sub Tasks
SELECT 
	convert(varchar, ActionID) + '##SubTask'  as [key], 
	CreateByID, 
	Entityid, 
	T.Entitycontactid, 
	'Sub Task', 
	l.value,
	A.AssignedTo,
	comments, 
	null, 
	null,
	NextActionDate, 
	convert(varchar,isnull(A.percentageid,0)) + '% completed' ,
	DivID,'' as [Created By], AssessmentID
FROM Actions A


LEFT JOIN TaskReminder T ON A.TaskReminderID = T.TaskReminderID
LEFT JOIN (SELECT EntityContactID, EntityID FROM EntityContact) EC ON  T.EntityContactID = EC.entityContactID
LEFT JOIN Lookup L ON A.bittypeID = l.Lookupid
--LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = CL.callcreatorid


UNION ALL 

--Tickets
SELECT 
	convert(varchar, T.TicketID) + '##Ticket'  as [key],  
	LogByID, 
	Entityid, 
	EntitycontactID, 
	'Ticket',
	TicketType,
	U.UserID, 
	tMessage,
	'',
	DateCaptured,
	DateCaptured,
	tStatus,
	DivID, u.firstname + ' ' + u.surname as [Created By], AssessmentID
FROM Tickets T
LEFT JOIN (SELECT  max(entitycontactid) as [EntitycontactID], TicketID FROM TicketContacts Group by Ticketid) TC
ON T.TicketID = TC.TicketID
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = T.logbyid

UNION ALL

--Jobs
SELECT 
	convert(varchar, P.ProjectID) + '##Job'  as [key] , 
	ProjectManagerID, 
	Entityid, 
	EntitycontactID, 
	'Job',
	l.value, 
	U.UserID,
	ProjectName, 
	projectnotes,
	dateAdded, 
	DateAdded, 
	LS.Value, 
	P.DivID, '' as [Created By], AssessmentID
FROM Projects P
Left JOIN lookup L ON P.ProjectTypeID = L.LookupID
LEFT JOIN (SELECT UserID, StaffID FROM Users) U ON P.TechnicianID = U.StaffID
LEFT JOIN Lookup LS ON P.projectstateid = LS.LookupID
LEFT JOIN (SELECT UserID, DefaultDivisionID FROM Users) UD ON P.ProjectManagerID = UD.UserID
--LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = CL.callcreatorid

Where isnull(IsJob,0) = 1


)A
Left join entity e2 on e2.EntityID = a.Entityid 
Left join entitycontact ec2 on ec2.EntityContactID = a.EntityContactid 

LEFT JOIN Lookup LD ON A.DivID = LD.LookupID
LEFT JOIN (SELECT UseriD, isnull(Firstname, '') + ' ' + isnull(surname,'') as [Assignee] From Users ) U ON A.AssignedTo = U.UserID
{where}
ORDER BY  [Next Date]DESC","0","","1","LRA-FUSION","0","0","fusion"
"40186","cv_Print_ChangeControl_Header","","SELECT 
	ClientActivityListID
	, GeneralDescription as [<CHANGECONTROLNAME>]
	, P.ProjectName
	, M.ModuleName as [<MODULENAME>]
	, E.Company as [<CLIENT>]
	, GETDATE() as [<DATE>] 
	,[<KAM>]
FROM ClientActivityList CAL
LEFT JOIN (
	SELECT ProjectID, EntityID, ProjectName FROM Projects
) P ON P.ProjectID = CAL.ProjectID
LEFT JOIN (
	SELECT EntityID, Company FROM Entity
) E ON E.EntityID = P.EntityID
LEFT JOIN (
	SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [<KAM>] FROM Users 
) U ON U.UserID = CAL.OwnerID
LEFT JOIN (
	SELECT ModuleID, ModuleName FROM Modules
) M ON M.ModuleID = CAL.ModuleID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40187","cv_Print_ChangeControl_Totals","","SELECT 
    [Ownership]
    ,[Name]
    ,[Signature]
FROM (
    SELECT DISTINCT
        ClientActivityListID
        , 'Customer' as [Ownership]
        , E.Company as [Name]
        , '' as [Signature]
        , '' as [blank]
        , '' as [Billable Hours]
        , '' as [Non Billable Hours Required]
        , 1 as [Rank]
    FROM ClientActivityList CAL
    LEFT JOIN (
        SELECT ProjectID, EntityID FROM Projects
    ) P ON P.ProjectID = CAL.ProjectID
    LEFT JOIN (
        SELECT EntityID, Company FROM Entity 
    ) E ON E.EntityID = P.EntityID

    UNION ALL

    SELECT DISTINCT 
        ClientActivityListID
        , 'KAM' as [Ownership]
        , [Owner]as [Name]
        , '' as [Signature]
        , ''
        , '' as [Billable Hours]
        , '' as [Non Billable Hours Required]
        , 2 as [Rank]
    FROM ClientActivityList CAL
    LEFT JOIN (
        SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Owner] FROM Users
    ) UO ON UO.UserID = CAL.OwnerID

    UNION ALL

    SELECT DISTINCT 
        CAL.ClientActivityListID
        , 'Development Team' as [Ownership]
        , Developer as [Name]
        , '' as [Signature]
        , ''
        , '' as [Billable Hours]
        , '' as [Non Billable Hours Required]
        , 3 as [Rank]
    FROM ClientActivityList CAL 
    LEFT JOIN (
        SELECT * FROM ClientActivityListItem
    ) CALI ON CALI.ClientActivityListID = CAL.ClientActivityListID
    LEFT JOIN (
        SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Developer] FROM Users
    ) UD ON UD.UserID = CALI.AssignedTo

    UNION ALL

    SELECT DISTINCT 
        ClientActivityListID
        , 'Operations' as [Ownership]
        , '' as [Name]
        , '' as [Signature]
        , ''
        , '' as [Billable Hours]
        , '' as [Non Billable Hours Required]
        , 4 as [Rank]
    FROM ClientActivityList

    UNION ALL

    SELECT DISTINCT 
        ClientActivityListID
        , 'Testing' as [Ownership]
        , '' as [Name]
        , '' as [Signature]
        , ''
        , '' as [Billable Hours]
        , '' as [Non Billable Hours Required]
        , 5 as [Rank]
    FROM ClientActivityList

    UNION ALL

    SELECT DISTINCT 
        ClientActivityListID
        , 'Installing Update' as [Ownership]
        , '' as [Name]
        , '' as [Signature]
        , ''
        , '' as [Billable Hours]
        , '' as [Non Billable Hours Required]
        , 6 as [Rank]
    FROM ClientActivityList

    UNION ALL

    SELECT DISTINCT 
        ClientActivityListID
        , 'Travel to site for update or Development' as [Ownership]
        , '' as [Name]
        , '' as [Signature]
        , ''
        , '' as [Billable Hours]
        , '' as [Non Billable Hours Required]
        , 7 as [Rank]
    FROM ClientActivityList
    
    UNION ALL
    
    SELECT DISTINCT 
        CAL.ClientActivityListID
        , CAST((select SUM(CASE WHEN ISNULL(isBillable, 0) = 1 Then EstimatedHours end) from ClientActivityListItem WHERE clientactivitylistid = CAL.ClientActivityListID) AS VARCHAR(50)) + ' Billable Hours' as [Ownership]
        , '' as [Name]
        , '' as [Signature]
        , ''
        , '' as [Billable Hours]
        , '' as [Non Billable Hours Required]
        , 8 as [Rank]
    FROM ClientActivityList CAL
    LEFT JOIN (SELECT * FROM ClientActivityListItem) CALI ON CALI.ClientActivityListID = CAL.ClientActivityListID
    
    UNION ALL
    
    SELECT DISTINCT 
        CAL.ClientActivityListID
        , CAST((select SUM(CASE WHEN ISNULL(isBillable, 0) = 0 Then EstimatedHours end) from ClientActivityListItem WHERE clientactivitylistid = CAL.ClientActivityListID) AS VARCHAR(50)) + ' Non Billable Hours' as [Ownership]
        , '' as [Name]
        , '' as [Signature]
        , ''
        , '' as [Billable Hours]
        , '' as [Non Billable Hours Required]
        , 8 as [Rank]
    FROM ClientActivityList CAL    
    LEFT JOIN (SELECT * FROM ClientActivityListItem) CALI ON CALI.ClientActivityListID = CAL.ClientActivityListID
) X
{where}
ORDER BY [Rank],[Name]","0","","1","LRA-FUSION","0","0","fusion"
"40188","cv_Acc_Entity_Discount","","DECLARE @StockID as int
DECLARE @PriceCat as int
DECLARE @EntityID as int
DECLARE @Qty as float

SET @StockID ={stockid}
SET @PriceCat ={pricecat}
SET @EntityID ={entityid}
SET @Qty = {qty}

SELECT ED.* 
FROM AccEntityDiscount ED
LEFT JOIN (SELECT * FROM AccEntityDiscountStock WHERE StockID in (0,@StockID)) EDS
	ON ED.EntityDiscountID = EDS.EntityDiscountID
LEFT JOIN (SELECT StockID, StockType, SubTypeID FROM AccStock) STK
	ON EDS.StockID = STK.StockID
LEFT JOIN (SELECT * FROM AccEntityDiscountPriceCategory WHERE PriceCategoryID IN (0, @PriceCat)) EDPC
	ON ED.EntityDiscountID = EDPC.EntityDiscountID
LEFT JOIN (SELECT * FROM AccEntityDiscountStockType) EDST
	ON ED.EntityDiscountID = EDST.EntityDiscountID AND (STK.StockType = EDST.StockTypeID OR EDST.StockTypeID = 0)
LEFT JOIN (SELECT * FROM AccEntityDiscountStockSubType) EDSST
	ON ED.EntityDiscountID = EDSST.EntityDiscountID AND (STK.SubTypeID = EDSST.StockSubTypeID OR   EDSST.StockSubTypeID = 0)
where ED.Entityid = @EntityID
AND ED.DiscountType = 1
AND EDS.StockID is not null
AND EDPC.PriceCategoryID is not null
AND EDST.StockTypeID is not null
AND EDSST.StockSubTypeID is not null
AND (isnull(DiscountPercent,0) > 0 OR isnull(discountFixed,0) > 0)
AND ((isnull(ED.MinQty,0) <= @Qty AND isnull(ED.BreakPointType,1) = 1) OR (isnull(ED.MinAmt,0) <= @Qty * {unitprice) AND isnull(ED.BreakPointType,1) = 2))
ORDER BY ED.MinQty desc, ED.DiscountPercent Desc



","0","","1","LRA-FUSION","0","0","fusion"
"40189","cv_Acc_Entity_Surcharge","","DECLARE @StockID as int
DECLARE @PriceCat as int
DECLARE @EntityID as int
DECLARE @Qty as float

SET @StockID ={stockid}
SET @PriceCat ={pricecat}
SET @EntityID ={entityid}
SET @Qty = {qty}

SELECT ED.* 
FROM AccEntityDiscount ED
LEFT JOIN (SELECT * FROM AccEntityDiscountStock WHERE StockID in (0,@StockID)) EDS
	ON ED.EntityDiscountID = EDS.EntityDiscountID
LEFT JOIN (SELECT StockID, StockType, SubTypeID FROM AccStock) STK
	ON EDS.StockID = STK.StockID
LEFT JOIN (SELECT * FROM AccEntityDiscountPriceCategory WHERE PriceCategoryID IN (0, @PriceCat)) EDPC
	ON ED.EntityDiscountID = EDPC.EntityDiscountID
LEFT JOIN (SELECT * FROM AccEntityDiscountStockType) EDST
	ON ED.EntityDiscountID = EDST.EntityDiscountID AND (STK.StockType = EDST.StockTypeID OR EDST.StockTypeID = 0)
LEFT JOIN (SELECT * FROM AccEntityDiscountStockSubType) EDSST
	ON ED.EntityDiscountID = EDSST.EntityDiscountID AND (STK.SubTypeID = EDSST.StockSubTypeID OR   EDSST.StockSubTypeID = 0)
where ED.Entityid = @EntityID
AND EDS.StockID is not null
AND EDPC.PriceCategoryID is not null
AND EDST.StockTypeID is not null
AND EDSST.StockSubTypeID is not null
AND isnull(DiscountPercent,0) < 0 
AND isnull(ED.MinQty,0) <= @Qty
ORDER BY ED.MinQty desc, ED.DiscountPercent Desc



","0","","1","LRA-FUSION","0","0","fusion"
"40190","qf_Leads","","select L.LeadID, 
LTRIM(ISNULL(L.firstname,'')+' '+ISNULL(L.Lastname,'')) AS [Contact],
L.Company
from Lead L
where (LTRIM(ISNULL(L.firstname,'')+' '+ISNULL(L.Lastname,'')) like '%<%replace%>%') OR (isnull(L.Company,'') like '%<%replace%>%')
order by LTRIM(ISNULL(L.firstname,'')+' '+ISNULL(L.Lastname,'')), L.company","0","","1","LRA-FUSION","0","0","fusion"
"40191","qf_Canvas","","SELECT c.CanvasID, 
LTRIM(ISNULL(c.Contact,'')) AS [Contact],
C.Company
FROM Canvas c
WHERE (LTRIM(ISNULL(c.Contact,'')) LIKE '%<%replace%>%') OR (ISNULL(C.Company,'') LIKE '%<%replace%>%')
ORDER BY LTRIM(ISNULL(c.Contact,'')), C.company","0","","1","LRA-FUSION","0","0","fusion"
"40192"," cv_SetTimesheetInvoiceno","","Update t
Set t.InvoiceNo={wheres}
FROM Timesheet T

left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
left join Devappointment dappt on dappt.DevApptID = t.DevApptID
left join lookup l on l.lookupid = dappt.TASKTYPEID 
LEFT JOIN (
SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
) MR ON MR.ModuleID = modules.ModuleID
LEFT JOIN 
(
SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Consultant],StaffID FROM Users) U 
ON U.StaffID = MR.ConsultantID
 {where} 
","0","","1","LRA-FUSION","0","0","fusion"
"40193","cv_SetTimesheetInvoiceno","","Update t
Set t.Invoiceno={wheres}
FROM Timesheet T

left join projects p on p.projectid = t.projectid 
left join entity e on e.entityid = p.entityid
left join entitycontact ec on ec.entitycontactid = p.entitycontactid
left join modules on modules.moduleid = t.moduleid
left join users on users.userid = t.developerid
left join Staff S on S.StaffID = users.StaffID
left join Devappointment dappt on dappt.DevApptID = t.DevApptID
left join lookup l on l.lookupid = dappt.TASKTYPEID 
LEFT JOIN (
SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount
) MR ON MR.ModuleID = modules.ModuleID
LEFT JOIN 
(
SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Consultant],StaffID FROM Users) U 
ON U.StaffID = MR.ConsultantID
 {where} 
 ","0","","1","LRA-FUSION","0","0","fusion"
"40194","cv_Risk_Assessment_Total","","SELECT 
	CAST(sum(ISNULL(RAI.RiskTotalItem,0)) as money) as Total
FROM Risk_Assessment_Master RAM
LEFT JOIN Risk_Assessment_Section RAS ON RAS.RiskAssessmentID = RAM.RiskAssessmentID
LEFT JOIN Risk_Assessment_Category RAC ON RAS.RiskAssessmentSectionID = RAC.RiskAssessmentSectionID
LEFT JOIN (
select 
	RiskAssessmentCategoryID,
	sum(isnull(Price,0)) as RiskTotalItem 
from Risk_Assessment_Item
Group by RiskAssessmentCategoryID
)  RAI ON RAC.RiskAssessmentCategoryID = RAI.RiskAssessmentCategoryID

where RAM.RiskAssessmentID = {id}","0","","1","LRA-FUSION","0","0","fusion"
"40195","cv_Assessment_Register_Man","","SELECT 
AssessmentRegisterID,L.Value as [Type], RegisterDescription as [Description]
FROM AssessmentRegister AR
LEFT JOIN lookup L on AR.AssessmentRegisterTypeID = L.LookupID
{where}
ORDER BY L.Value, AR.RegisterDescription
","0","","1","LRA-FUSION","0","0","fusion"
"40196","cv_Ordertemplates","","SELECT Distinct 
E.RiskTemplateID, 
E.TemplateName, 
isnull((Select top 1 count(OrdertemplateID) from Ordertemplates where RiskTemplateID = E.RiskTemplateID AND OrderID = {OrderID}),0) as [Ticked]
FROM Risk_Template E
ORDER BY E.TemplateName","0","","1","LRA-FUSION","0","0","fusion"
"40197","cv_Contact_Bill_Template_Detail","","select
DetailID,
RT.TemplateName AS [Assessment Type],
RBT.TemplateName as [Billing Template],
isDefault as [Default]
from ContactBillTemplateDetails CRBT
LEFT JOIN Risk_Template RT ON CRBT.AssessmentTypeID = RiskTemplateID
LEFT JOIN Risk_Bill_Template RBT ON CRBT.BillTemplateID = RBT.BillTemplateID
 {where}","0","","1","LRA-FUSION","0","0","fusion"
"40198","cv_Activities_All_Leads","","SELECT distinct [Key],LD.Value as [Division] , Type, SubType, [Description], Subject,
Case when A.AssignedTo < 0 then convert(varchar,abs(A.AssignedTo)) + ' Assignees' ELSE U.Assignee END as [Assignee],
convert(varchar,[Date],111) + ' ' + convert(varchar,[Date],108) as [Next Date],
Status, [Created By]
FROM 
(
--Actions
SELECT 
	convert(varchar, ActivityID) + '##Action' as [key] , 
	AddedByID as [CreatedBy], 
	LeadID, 
	Entitycontactid, 
	'Action' as [Type],
	L.Value as [SubType],
	U.UserID as [AssignedTo],
	Comments as [Description],
	'' as [Subject], 
	DateAdded as [DateCreated], 
	DateAction as [Date],
	LO.Value as [Status],DivID, U.Firstname + ' ' + U.Surname as [Created By], AssessmentID
FROM Activity A
LEFT JOIN Lookup L ON A.ActivityTypeID = L.LookupID
LEFT JOIN Lookup LO ON A.ActivityOutcomeID = LO.LookupID
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = A.addedbyid

UNION ALL

--Calls
SELECT 
	convert(varchar, CallLogID) + '##' + case isnull(AdvCall,0) when 0 then 'Call' ELSE 'AdvancedCall' END as [key],
	CallCreatorID, 
	LeadID, 
	CL.EntityContactID,
	case isnull(AdvCall,0) when 0 then 'Call' ELSE 'Advanced Call' END, 
	L.Value,
	U.Userid, 
	CallDescription, 
	callsubject as [Subject],
	null, 
	CallDate, 
	LO.Value,
	DivID, U.firstname + ' ' + u.surname as [Created BY], AssessmentID
FROM CallLog CL
LEFT JOIN (SELECT EntityContactID, EntityID FROM EntityContact) EC ON  CL.EntityContactID = EC.entityContactID
LEFT JOIN Lookup L ON CL.CallTypeID = L.LookupID
LEFT JOIN Lookup LO ON CL.BusResID = LO.LookupID
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = CL.callcreatorid

UNION ALL

--Appointments
SELECT 
    convert(varchar, AppointmentID) + '##Appointment' as [key], 
    CreateUserID, 
    LeadID, 
    apc.EntityContactID, 
    'Appointment',
    L.Value,
    ForUserID,
    notes, 
    Subject , 
    null, 
    [Date], 
    case when [Date] < getdate() then 'Passed' ELSE convert(varchar,datediff(d,  GetDate(),[Date])) + ' day(s) to go'  end,
    U.DefaultDivisionID, UN.firstname + ' ' + un.surname as [Created By], AssessmentID
FROM Appointment A
LEFT JOIN Lookup L ON A.ClientRelID = L.LookupID
LEFT JOIN (SELECT UserID, DefaultDivisionID FROM Users) U ON A.ForuserID = U.UserID
LEFT JOIN (Select Entitycontactid,apptid from appointmentcontacts) apc on apc.apptid = a.appointmentid
LEFT JOIN (Select userid, firstname, surname from users) UN on UN.userid = A.createuserid

/*UNION ALL

--Tasks
SELECT 
	convert(varchar, T.TaskReminderID) + '##Task' as [key], 
	CreateByID, 
	Entityid, 
	T.Entitycontactid, 
	'Task', 
	'',
	isnull(DeveloperID, -1 * NoOfAssignees), --Uses negatives to denote multiple assignees
	TaskName, 
	'' ,
	null, 
	TaskDate, 
	convert(varchar,isnull(percentageid,0)) + '% completed' ,
	DivID, u.firstname + ' ' + u.surname as [Created By], AssessmentID
FROM TaskReminder T
LEFT JOIN (SELECT EntityContactID, EntityID FROM EntityContact) EC ON  T.EntityContactID = EC.entityContactID
LEFT JOIN (SELECT TaskReminderID, count(DeveloperID) as [NoOfAssignees] FROM DeveloperTasks Group By TaskReminderID having  count(DeveloperID) > 1) DT1
ON T.Taskreminderid= DT1.TaskReminderID
LEFT JOIN (SELECT TaskReminderID, DeveloperID  FROM DeveloperTasks ) DT2
ON T.Taskreminderid= DT2.TaskReminderID and DT1.TaskReminderID is null
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = T.createbyid


UNION ALL

--Sub Tasks
SELECT 
	convert(varchar, ActionID) + '##SubTask'  as [key], 
	CreateByID, 
	Entityid, 
	T.Entitycontactid, 
	'Sub Task', 
	l.value,
	A.AssignedTo,
	comments, 
	null, 
	null,
	NextActionDate, 
	convert(varchar,isnull(A.percentageid,0)) + '% completed' ,
	DivID,'' as [Created By], AssessmentID
FROM Actions A
LEFT JOIN TaskReminder T ON A.TaskReminderID = T.TaskReminderID
LEFT JOIN (SELECT EntityContactID, EntityID FROM EntityContact) EC ON  T.EntityContactID = EC.entityContactID
LEFT JOIN Lookup L ON A.bittypeID = l.Lookupid
--LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = CL.callcreatorid


UNION ALL 

--Tickets
SELECT 
	convert(varchar, T.TicketID) + '##Ticket'  as [key],  
	LogByID, 
	Entityid, 
	EntitycontactID, 
	'Ticket',
	TicketType,
	U.UserID, 
	tMessage,
	'',
	DateCaptured,
	DateCaptured,
	tStatus,
	DivID, u.firstname + ' ' + u.surname as [Created By], AssessmentID
FROM Tickets T
LEFT JOIN (SELECT  max(entitycontactid) as [EntitycontactID], TicketID FROM TicketContacts Group by Ticketid) TC
ON T.TicketID = TC.TicketID
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = T.logbyid

UNION ALL

--Jobs
SELECT 
	convert(varchar, P.ProjectID) + '##Job'  as [key] , 
	ProjectManagerID, 
	Entityid, 
	EntitycontactID, 
	'Job',
	l.value, 
	U.UserID,
	ProjectName, 
	projectnotes,
	dateAdded, 
	DateAdded, 
	LS.Value, 
	P.DivID, '' as [Created By], AssessmentID
FROM Projects P
Left JOIN lookup L ON P.ProjectTypeID = L.LookupID
LEFT JOIN (SELECT UserID, StaffID FROM Users) U ON P.TechnicianID = U.StaffID
LEFT JOIN Lookup LS ON P.projectstateid = LS.LookupID
LEFT JOIN (SELECT UserID, DefaultDivisionID FROM Users) UD ON P.ProjectManagerID = UD.UserID
--LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = CL.callcreatorid

Where isnull(IsJob,0) = 1*/


)A
LEFT JOIN Lookup LD ON A.DivID = LD.LookupID
LEFT JOIN (SELECT UseriD, isnull(Firstname, '') + ' ' + isnull(surname,'') as [Assignee] From Users ) U ON A.AssignedTo = U.UserID
{where}
ORDER BY  [Next Date]DESC","0","","1","LRA-FUSION","0","0","fusion"
"40199","cv_Acc_Stock_Find_POS","","DECLARE @UserID as int
SET @UserID = {userid}

SELECT Distinct Top 200 
[ID], [Type],  [Code], [Description], [Price Category],[Unit Selling Price], [Barcode] 
FROM (
	SELECT 
		convert(varchar,ISNULL(STK.StockID,0)) + '#' + convert(varchar,ISNULL(PC.Lookupid,0) ) as [ID],
		ST.Value as [Type], 
		STK.StockCode as [Code], 
		STK.StockDescription as [Description],
		PC.Value as [Price Category],
		isnull(dbo.fnFormatNumber(SP.SellingPriceEx),'None') as [Unit Selling Price],
		Barcode as [Barcode],
		PC.Lookupid as [PriceCategoryID],
		0 as [IsGLCode]
	FROM AccStock STK WITH(NOLOCK)
	LEFT JOIN (
		SELECT 
			LookupID
			, Value 
		FROM Lookup WITH(NOLOCK) 
		where class like 'StockType' 
	) ST 
	ON STK.StockType = ST.Lookupid 
	LEFT JOIN (
		SELECT 
			LinkLookupID
			, Value 
		FROM LinkLookup WITH(NOLOCK) 
		where class like 'StockSubType'
	) SST
	ON STK.SubTypeID = SST.LinkLookupID
	--CROSS JOIN (
	--	SELECT 
	--		LookupID
	--		, Value 
	--	FROM Lookup WITH(NOLOCK) 
	--	where class = 'PriceCategory'
	--) PC
	LEFT JOIN (
		SELECT 
			SupplierID
			,SellingPriceEx
			,StockId
			,PriceCategoryID 
		FROM AccStockPrice WITH(NOLOCK) 
		Where getdate() between ValidFrom and ValidTo 
		and isnull(IsContract,0) = 0
		and divisionid in (SELECT DivisionID FROM UserDivisions WITH(NOLOCK) where userid = @userID)
	) SP
	ON STK.StockID = SP.StockID --AND PC.LookupID = SP.PriceCategoryID
	
	LEFT JOIN (
		SELECT 
			LookupID
			, Value 
		FROM Lookup WITH(NOLOCK) 
		where class = 'PriceCategory'
	) PC ON PC.LookupID = SP.PriceCategoryID
	
	LEFT JOIN (
		SELECT 
			EntityID
			, Company 
		FROM Entity WITH(NOLOCK)
	) E
	ON SP.SupplierID = E.Entityid
	WHERE isnull(IsHidden,0) = 0

	UNION ALL

	SELECT 
		convert(varchar,- GLCodeID) + '#0' as [ID] ,
		'GL Code' as [Type],
		convert(varchar,GLCode) as [Code], 
		LJ.[GL Group]  as [Description], 
		'' as [Price Category]
		, 'None' as [Unit Selling Price]
		, '' as [Barcode], 
		0 as [PriceCategoryID],
		1 as [IsGLCode]
	FROM AccGLCode GLC WITH(NOLOCK)
	LEFT JOIN (
		SELECT LookupID, Upper(Value) as [GL Group] 
		FROM Lookup WITH(NOLOCK)
		where class like 'JournalType' 
	) LJ
	ON GLC.GLCategoryID = LJ.Lookupid
	WHERE GLC.GLCategoryID >0
	and (divisionid in (SELECT DivisionID FROM UserDivisions WITH(NOLOCK) where userid = @userID) OR DivisionID = 0)
) A
{where}
ORDER By [Code], [Description], [Price Category]","0","","1","LRA-FUSION","0","0","fusion"
"40200","cv_Inventory_Movement_Rpt","","

DECLARE @StartDate as datetime
DECLARE @EndDate as datetime 
DECLARE @atMonth as int

SET @StartDate ='{StartDate}'

SET @atMonth = Month(@startDate)


SET @EndDate = '{EndDate}'

SELECT  NEWID()
    , StockCode
    , StockDescription
    
    ,SUM(ISNULL([Month 1],0)) as [Month 1]
    , SUM(ISNULL([Month 2],0)) as [Month 2]
    , SUM(ISNULL([Month 3],0)) as [Month 3]
    , SUM(ISNULL([Month 4],0)) as [Month 4]
    , SUM(ISNULL([Month 5],0)) as [Month 5]
    , SUM(ISNULL([Month 6],0)) as [Month 6]
    ,round((SUM(ISNULL([Month 1],0))+SUM(ISNULL([Month 2],0))+SUM(ISNULL([Month 3],0))+SUM(ISNULL([Month 4],0))+ SUM(ISNULL([Month 5],0))+ SUM(ISNULL([Month 6],0))) 
	/(Case when SUM(ISNULL([Month 1],0)) >0 then 1 else 0 end 
	+Case when SUM(ISNULL([Month 2],0)) >0 then 1 else 0 end 
	+Case when SUM(ISNULL([Month 3],0)) >0 then 1 else 0 end 
	+Case when SUM(ISNULL([Month 4],0)) >0 then 1 else 0 end 
	+Case when SUM(ISNULL([Month 5],0)) >0 then 1 else 0 end 
	+Case when SUM(ISNULL([Month 6],0)) >0 then 1 else 0 end),0) as [Average]
FROM 
	(
	SELECT 
  
    StockCode, StockDescription,
    ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -5 Then SUM(QTY) END,0) as [Month 1],
    ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -4 Then SUM(QTY) END,0) as [Month 2],
    ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -3 Then SUM(QTY) END,0) as [Month 3],
    ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -2 Then SUM(QTY) END,0) as [Month 4],
    ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -1 Then SUM(QTY) END,0) as [Month 5],
    ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth Then SUM(QTY) END,0) as [Month 6]
    FROM (

        SELECT A.StockCode, A.StockDescription, DateCompleted, QTY FROM Debtor_Detail DD
        LEFT JOIN (
            SELECT DocID, DateCompleted, DocType, DocStatus FROM Debtor_Master
        ) DM ON DM.DocID = DD.DocID
        LEFT JOIN (
            SELECT * FROM AccStock
        ) A ON A.StockID = DD.StockID
          
{where}  
         
      --GROUP BY A.StockCode, A.StockDescription,DD.Qty
    ) X
    GROUP BY MONTH(DateCompleted)
  , StockCode, StockDescription
    )A
--)X 
GROUP BY StockCode, StockDescription

Union all

SELECT  NEWID()
    ,  'TOTAL :'
    ,null
    
    ,SUM(ISNULL([Month 1],0)) as [Month 1]
    , SUM(ISNULL([Month 2],0)) as [Month 2]
    , SUM(ISNULL([Month 3],0)) as [Month 3]
    , SUM(ISNULL([Month 4],0)) as [Month 4]
    , SUM(ISNULL([Month 5],0)) as [Month 5]
    , SUM(ISNULL([Month 6],0)) as [Month 6]
   ,Round((SUM(ISNULL([Month 1],0))+SUM(ISNULL([Month 2],0))+SUM(ISNULL([Month 3],0))+SUM(ISNULL([Month 4],0))+ SUM(ISNULL([Month 5],0))+ SUM(ISNULL([Month 6],0))) 
	/(Case when SUM(ISNULL([Month 1],0)) >0 then 1 else 0 end 
	+Case when SUM(ISNULL([Month 2],0)) >0 then 1 else 0 end 
	+Case when SUM(ISNULL([Month 3],0)) >0 then 1 else 0 end 
	+Case when SUM(ISNULL([Month 4],0)) >0 then 1 else 0 end 
	+Case when SUM(ISNULL([Month 5],0)) >0 then 1 else 0 end 
	+Case when SUM(ISNULL([Month 6],0)) >0 then 1 else 0 end),0) as [Avarage]
FROM (
SELECT 
   
    Sum(ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -5 Then QTY END,0)) as [Month 1],
    Sum(ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -4 Then QTY END,0)) as [Month 2],
    Sum(ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -3 Then QTY END,0)) as [Month 3],
    Sum(ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -2 Then QTY END,0)) as [Month 4],
    Sum(ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -1 Then QTY END,0)) as [Month 5],
    Sum(ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth Then QTY END,0)) as [Month 6]
   
    FROM (

        SELECT DateCompleted, sum(QTY) as QTY FROM Debtor_Detail DD
        LEFT JOIN (
            SELECT DocID, DateCompleted, DocType, DocStatus FROM Debtor_Master
        ) DM ON DM.DocID = DD.DocID
        LEFT JOIN (
            SELECT * FROM AccStock
        ) A ON A.StockID = DD.StockID
          {where}
  GROUP BY Dm.DateCompleted
    ) X
    GROUP BY MONTH(DateCompleted)

    )A
--)X 
--GROUP BY StockCode, StockDescription
","0","","1","LRA-FUSION","0","0","fusion"
"40201","cv_Risk_CONTENTS_print_top","","--cv_Risk_CONTENTS_print_top
SET NOCOUNT ON

DECLARE @RiskID INT
DECLARE @SectionID INT
DECLARE @CategoryID INT
DECLARE @Section varchar(500)
DECLARE @AssesementType varchar(500)
DECLARE @Risk CURSOR
DECLARE @Category CURSOR

truncate table temp_print_assessment_ID{userID}

SET @RiskID = {riskid}



SET @Risk = CURSOR FAST_FORWARD FOR SELECT RAS.RiskAssessmentSectionID  
FROM Risk_Assessment_Section RAS
	LEFT JOIN Risk_Assessment_Category RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
	LEFT JOIN Risk_Assessment_Item RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
	WHERE RAS.RiskAssessmentID = @RiskID
	group by RAS.RiskAssessmentSectionID 
	having 
	sum(isnull(RAI.Price,0)) > 0  

OPEN @Risk

FETCH NEXT FROM @Risk INTO @SectionID

WHILE @@FETCH_STATUS = 0 

BEGIN 
set @Section = (
	SELECT
		RAS.SectionName 
	FROM Risk_Assessment_Section RAS
	LEFT JOIN Risk_Assessment_Category RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
	LEFT JOIN Risk_Assessment_Item RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
	WHERE RAS.RiskAssessmentSectionID = @SectionID AND RAS.RiskAssessmentID = @RiskID
	group by RAS.SectionName 
	having 
	sum(isnull(RAI.Price,0)) > 0 
 )

insert into temp_print_assessment_ID{userID} (tempcol1,tempcol2,tempcol3,tempcol4)
select '<B>'+@Section+'</B>','','',''

      SET @Category = CURSOR FAST_FORWARD FOR
      SELECT RiskAssessmentCategoryID FROM Risk_Assessment_Category WHERE RiskAssessmentSectionID = @SectionID
      
      OPEN @Category 
      
      FETCH NEXT FROM @Category INTO @CategoryID
      
      WHILE @@FETCH_STATUS = 0 
      BEGIN 
            insert into temp_print_assessment_ID{userID} (tempcol1,tempcol2,tempcol3,tempcol4)
            SELECT 
               char(9)  +char(9)  + ISNULL( RAC.CategoryName,''),
              space(len('										')),
                '' ,
                 LEFT('R ' + CONVERT(VARCHAR, CAST(sum(isnull(RAI.Price,0)) AS MONEY), 1), LEN('R '+ CONVERT(VARCHAR, CAST(sum(isnull(RAI.Price,'')) AS MONEY), 1)) - 3) as price
            FROM Risk_Assessment_Section RAS
            LEFT JOIN Risk_Assessment_Category RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
            LEFT JOIN Risk_Assessment_Item RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
            WHERE RAI.RiskAssessmentCategoryID = @CategoryID AND RAS.RiskAssessmentID = @RiskID
            group by RAC.CategoryName
            having 
            sum(isnull(RAI.Price,0)) > 0 
            FETCH NEXT FROM @Category INTO @CategoryID
      END
      CLOSE @Category 
      DEALLOCATE @Category
      
      FETCH NEXT FROM @Risk INTO @SectionID
END

CLOSE @Risk
DEALLOCATE @Risk


SET NOCOUNT OFF
select tempcol1 as [ ],tempcol2 as [ ], tempcol3 as [ ],tempcol4 as [ ] from temp_print_assessment_ID{userID}","0","","1","LRA-FUSION","0","0","fusion"
"40202","cv_Risk_CONTENTS_print_btm","","--cv_Risk_CONTENTS_print_btm

SET NOCOUNT ON
DECLARE @RiskID INT
DECLARE @SectionID INT
DECLARE @CategoryID INT
DECLARE @Section varchar(500)
DECLARE @AssesementType varchar(500)
DECLARE @Risk CURSOR
DECLARE @Category CURSOR

truncate table temp_print_assessment_ID{userID}

SET @RiskID = {riskid}


SET @AssesementType = (SELECT AssessmentTypeName FROM Risk_Assessment_Master WITH(NOLOCK) WHERE RiskAssessmentID = @RiskID)


SET @Risk = CURSOR FAST_FORWARD FOR SELECT RiskAssessmentSectionID FROM Risk_Assessment_Section WITH(NOLOCK) WHERE RiskAssessmentID = @RiskID

OPEN @Risk

FETCH NEXT FROM @Risk INTO @SectionID

WHILE @@FETCH_STATUS = 0 

BEGIN 


SET @Category = CURSOR FAST_FORWARD FOR
SELECT RiskAssessmentCategoryID FROM Risk_Assessment_Category WITH(NOLOCK) WHERE RiskAssessmentSectionID = @SectionID

OPEN @Category 

FETCH NEXT FROM @Category INTO @CategoryID

WHILE @@FETCH_STATUS = 0 
BEGIN 
insert into temp_print_assessment_ID{userID} (tempcol1,tempcol2,tempcol3,tempcol4,tempcol5,[Ranking1],[Ranking2],[Ranking3])
	SELECT distinct

	'<col-grey>',
	'<col-grey>CATEGORY',
	'<col-grey>'+ISNULL( RAC.CategoryName,'') + isnull(': ' + [Location],'')  ,
	'<col-grey>',
	'<col-grey>',
	@CategoryID,Location,1

FROM Risk_Assessment_Section RAS WITH(NOLOCK)
LEFT JOIN (select CategoryName,RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
LEFT JOIN (select RiskAssessmentCategoryID,Location,Price from Risk_Assessment_Item WITH(NOLOCK) ) RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
WHERE RAI.RiskAssessmentCategoryID = @CategoryID AND RAI.Price is not null AND RAS.RiskAssessmentID = @RiskID
group by RAC.CategoryName, RAI.Location
--having 
--sum(isnull(RAI.Price,0)) > 0   


UNION ALL 

SELECT distinct
'<B>' +'Item Type' + '</B>' ,
'<B>' +'Model No'+ '</B>',
'<B>' +'Description'+ '</B>',
'<B>' +'Qty'+ '</B>',
'<B>' +'Amount'+ '</B>',
@CategoryID ,Location, 2
FROM Risk_Assessment_Section RAS WITH(NOLOCK)
LEFT JOIN (select CategoryName,RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
LEFT JOIN (select RiskAssessmentCategoryID,Location,Price from Risk_Assessment_Item WITH(NOLOCK) ) RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
WHERE RAI.RiskAssessmentCategoryID = @CategoryID AND RAI.Price is not null AND RAS.RiskAssessmentID = @RiskID
group by RAC.CategoryName, RAI.Location
--having 
--sum(isnull(RAI.Price,0)) > 0 

UNION ALL  

SELECT 
ISNULL(RAI.ItemPrompt,''),
ISNULL(RAI.MODEL,''),
ISNULL(RAI.Description,''),
ISNULL(RAI.QTY,''),
LEFT('R ' + CONVERT(VARCHAR, CAST((isnull(RAI.Price,0)) AS MONEY), 1), LEN('R '+ CONVERT(VARCHAR, CAST((isnull(RAI.Price,0)) AS MONEY), 1)) - 3) as price ,
@CategoryID, Location, 3

FROM Risk_Assessment_Section RAS WITH(NOLOCK)
LEFT JOIN (select CategoryName,RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
LEFT JOIN (select RiskAssessmentCategoryID,Location,Price,[Description],MODEL,ItemPrompt,QTY from Risk_Assessment_Item WITH(NOLOCK) ) RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
WHERE RAI.RiskAssessmentCategoryID = @CategoryID AND RAI.Price is not null AND RAS.RiskAssessmentID = @RiskID
group by RAI.Location,RAS.RiskAssessmentSectionID,RAI.ItemPrompt,RAI.MODEL,RAI.Description,RAI.QTY,RAI.Price
--having 
--sum(isnull(RAI.Price,0)) > 0  

UNION ALL 

SELECT '', '','','','' ,@CategoryID, Location, 4
FROM Risk_Assessment_Section RAS WITH(NOLOCK)
LEFT JOIN (select CategoryName,RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
LEFT JOIN (select RiskAssessmentCategoryID,Location,Price from Risk_Assessment_Item WITH(NOLOCK) ) RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
WHERE RAI.RiskAssessmentCategoryID = @CategoryID AND RAI.Price is not null AND RAS.RiskAssessmentID = @RiskID
group by RAC.CategoryName, RAI.Location
--having 
--sum(isnull(RAI.Price,0)) > 0 

UNION ALL 

SELECT 
'',
'',
'Total Items  (' + convert(varchar,Count(RAI.RiskAssessmentItemID)) + ')',
'the Category       *****************',
LEFT('R ' + CONVERT(VARCHAR, CAST(sum(isnull(RAI.Price,0)) AS MONEY), 1), LEN('R '+ CONVERT(VARCHAR, CAST(sum(isnull(RAI.Price,0)) AS MONEY), 1)) - 3) as price ,
@CategoryID, Location, 5
FROM Risk_Assessment_Item RAI  WITH(NOLOCK)
WHERE RAI.RiskAssessmentCategoryID = @CategoryID AND RAI.Price is not null
Group by Location

UNION ALL 


SELECT '<B>' +''+ '</B>' , '<B>' +''+ '</B>' ,'<B>' +''+ '</B>' ,'<B>' +''+ '</B>' ,'<B>' +'' + '</B>'  ,
@CategoryID, Location, 6
FROM Risk_Assessment_Section RAS
LEFT JOIN (select CategoryName,RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
LEFT JOIN (select RiskAssessmentCategoryID,Location,Price from Risk_Assessment_Item WITH(NOLOCK) ) RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
WHERE RAI.RiskAssessmentCategoryID = @CategoryID AND RAI.Price is not null AND RAS.RiskAssessmentID = @RiskID
group by RAC.CategoryName, RAI.Location
--having 
--sum(isnull(RAI.Price,0)) > 0 

FETCH NEXT FROM @Category INTO @CategoryID
END
CLOSE @Category 
DEALLOCATE @Category

FETCH NEXT FROM @Risk INTO @SectionID
END

CLOSE @Risk
DEALLOCATE @Risk
SET NOCOUNT OFF
select 
tempcol1 as [ ],
tempcol2 as [ ], 
tempcol3 as [ ],
CASE WHEN tempcol4  = '0' THEN '' ELSE tempcol4 END as [ ],
tempcol5 as [ ]
from temp_print_assessment_ID{userID}
where tempcol3 <> 'Total Items  (0)'
ORDER BY [Ranking1],[Ranking2],[Ranking3]

","0","","1","LRA-FUSION","0","0","fusion"
"40203","cv_Risk_Item_print_header","","select distinct
	convert(varchar,getdate(),111) as [<date>], 
	 ISNULL(RAM.SurveyDate,'') AS [<surveydate>],   
	 isnull(EC.FirstName,'') + ' '+isnull(EC.Surname,'') as [<client>],   
	 CASE     WHEN ISNULL(ReplacementSurveyorID,0) = 0    THEN ISNULL(U.Surveyor,'')    
	 ELSE ISNULL(UR.Surveyor,'')   END  as [<surveyor>],   
	 Lastupdated as [<lastupdated>],   
	 convert(varchar(7),Date, 120) + '/' +   SUBSTRING('0000000', 1,(len('0000000')-len(number))) +   
	 convert(varchar,number) + '/'+Prefix As [<assno>], 
 	CASE 
	WHEN 
	RAN.isold = 1
	THEN
	convert(varchar(7),Date, 120) + '/' +
	SUBSTRING('0000000', 1,(len('0000000')-len(number))) +
	convert(varchar,number) + '/'+Prefix
	ELSE
	convert(varchar(7),NewDate) + '/' +
	SUBSTRING('0000000', 1,(len('0000000')-len(number))) +
	convert(varchar,number) + '/'+Prefix
	END As [<assno>],
	 ISNULL(ER.Company,'') AS [<requestedby>],   
	 ISNULL(EI.Company,'') AS [<insurer>],   
	 ISNULL(EB.Company,'') AS [<broker>],   
	 ISNULL(E.VendorNumber,'') AS [<policy>],   
	 dbo.fnFormatNumber(ISNULL(O.sibefore,0)) AS [<sibefore>],   
	 dbo.fnFormatNumber(ISNULL(RAM.TotalValue,0)) AS [<sinew>],   
	 ISNULL(0,'') AS [<debit>],   
	 ISNULL(EC.Phone1,'') AS [<phone1>],   
	 ISNULL(EC.HomePhone,'') AS [<phone2>],   
	 CASE WHEN convert(varchar,EC.BirthDate) = '' THEN '' ELSE   convert(varchar,EC.BirthDate) END AS [<dateofbirth>],
	 ISNULL(EC.Fax,'') AS [<fax>],
	 ISNULL(EC.Cell,'') AS [<cell>],
	 ISNULL(EC.Additional1,'') AS [<id>],
	 ISNULL(EC.Email,'') AS [<email>],
	 ISNULL(ED.Address1,'')+ ' ' +ISNULL(ED.Address2,'') AS [<address1>],
	 ISNULL(ED.City,'') AS [<address2>],
	 ISNULL(ED.Country,'') AS [<address3>],
	 ISNULL(ED.Code,'') AS [<address4>],
	 ISNULL(ED.Address1,'')+ ' ' +ISNULL(ED.Address2,'') AS [<Paddress1>],
	 ISNULL(ED.City,'') AS [<Paddress2>],
	 ISNULL(ED.Country,'') AS [<Paddress3>],
	ISNULL(ED.Code,'') AS [<Paddress4>],
	ISNULL(ED.Address1,'')+ ' ' +ISNULL(EAR.Address2,'')+ ' ' +ISNULL(EAR.City,'')+ ' ' +ISNULL(EAR.Country,'')+ ' ' +ISNULL(EAR.Code,'') AS [<addressfull>],
	'R ' + CONVERT(VARCHAR,CAST(ISNULL(RAM.TotalValue,0) AS MONEY),1) AS [<valuationsubtotal>],
	'R ' + CONVERT(VARCHAR,CAST(ISNULL(((RAM.TotalValue/100) * 5),0) AS MONEY),1) AS [<contingencytotal>],
	'R ' + CONVERT(VARCHAR,CAST(ISNULL(RAM.TotalValue + ((RAM.TotalValue/100) * 5),0) AS MONEY),1) AS [<valuationtotal>],
	'R ' + CONVERT(VARCHAR,CAST(ISNULL(null,0) AS MONEY),1) AS [<risktotal>],
	'R ' + CONVERT(VARCHAR,CAST(ISNULL(null,0) AS MONEY),1) AS [<specifiedtotal>],
	'R ' + CONVERT(VARCHAR,CAST(ISNULL(null,0) AS MONEY),1) AS [<unspecifiedtotal>],
	'R ' + CONVERT(VARCHAR,CAST(ISNULL(RAM.TotalValue + ((RAM.TotalValue/100) * 5),0) AS MONEY),1) AS [<netttotal>],
	ISNULL(YIR.SelectedAnswer,'') as [<yearsinces>],   ISNULL(CLYIR.SelectedAnswer,'') as [<noclaimsres>],
	ISNULL(YIPR.SelectedAnswer,'') as [<yearsinprevres>],   ISNULL(CLYIPR.SelectedAnswer,'') as [<noclaimsprevres>],
	ISNULL(MS.SelectedAnswer,'') as [<maritalstatus>],
	ISNULL(NOC.SelectedAnswer,'') as [<nochildren>]
from Risk_Assessment_Master RAM  
LEFT JOIN Risk_Assessment RA ON RA.AssessmentID = RAM.AssessmentID  
LEFT JOIN EntityContact EC ON EC.EntityContactID = RA.EntityContactID
LEFT JOIN (SELECT EntityID,VendorNumber FROM Entity) E ON E.EntityID = EC.EntityID 
LEFT JOIN EntityAddress EAR ON EC.PhysicalAddrID = EAR.EntityAddressID  
LEFT JOIN EntityAddress EAP ON EC.PostalAddrID = EAP.EntityAddressID  
LEFT JOIN Risk_Assessment_Section RAS ON RAM.AssessmentID = RAS.RiskAssessmentID  
LEFT JOIN Risk_Assessment_Category RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN Risk_Assessment_Item RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID  
LEFT JOIN (SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Surveyor] FROM Staff) U   ON RAM.SurveyorID = U.StaffID 
LEFT JOIN (
SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') as [Surveyor] FROM Staff) UR   
	ON RAM.ReplacementSurveyorID = UR.StaffID  
LEFT JOIN  Risk_AssessmentNo RAN 
	ON RAN.RiskAssessmentID = RAM.RiskAssessmentID  
LEFT JOIN (SELECT Company,EntityID FROM Entity) EI 
	ON EI.EntityID = RAM.InsurerID  
LEFT JOIN (SELECT Company,EntityID FROM Entity) EB 
	ON EB.EntityID = RAM.BrokerID  
LEFT JOIN (SELECT Company,EntityID FROM Entity) ER
	ON ER.EntityID = RAM.RequestedBy  
LEFT JOIN OrderForm O 
	ON RAM.OrderID = O.OrderID  
LEFT JOIN entityaddress ED 
	ON ED.EntityAddressID = O.EntityAddressID 
LEFT JOIN (  
select 
	RAS.RiskAssessmentID,
	RAI.SelectedAnswer 
from   Risk_Assessment_Section RAS   
LEFT JOIN Risk_Assessment_Category RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN Risk_Assessment_Item RAI    
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID   
where ItemPrompt like '%Years in this res%'   ) YIR 	ON RAM.RiskAssessmentID = YIR.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	RAI.SelectedAnswer 
from   Risk_Assessment_Section RAS   
LEFT JOIN Risk_Assessment_Category RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN Risk_Assessment_Item RAI    
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID   
where ItemPrompt like '%No Claim / Loses in this res%'   ) CLYIR ON RAM.RiskAssessmentID = CLYIR.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	RAI.SelectedAnswer 
from   Risk_Assessment_Section RAS   
LEFT JOIN Risk_Assessment_Category RAC
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN Risk_Assessment_Item RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
	where ItemPrompt like '%Years in previous res%'   ) YIPR ON RAM.RiskAssessmentID = YIPR.RiskAssessmentID  
LEFT JOIN (
select 
RAS.RiskAssessmentID,
RAI.SelectedAnswer from   Risk_Assessment_Section RAS   
LEFT JOIN Risk_Assessment_Category RAC
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN Risk_Assessment_Item RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID   
where ItemPrompt like '%No Claims / Loses Years in previous res%'   ) CLYIPR ON RAM.RiskAssessmentID = CLYIPR.RiskAssessmentID  
LEFT JOIN (
select 
RAS.RiskAssessmentID,
RAI.SelectedAnswer 
from   Risk_Assessment_Section RAS   
LEFT JOIN Risk_Assessment_Category RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN Risk_Assessment_Item RAI    
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt like '%Marital Status%'   ) MS ON RAM.RiskAssessmentID = CLYIPR.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	RAI.SelectedAnswer 
from   Risk_Assessment_Section RAS   
LEFT JOIN Risk_Assessment_Category RAC
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN Risk_Assessment_Item RAI    
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID   
where ItemPrompt like '%No of Children%'   ) 
NOC ON RAM.RiskAssessmentID = CLYIPR.RiskAssessmentID    
WHERE RAM.RiskAssessmentID = {riskID}","0","","1","LRA-FUSION","0","0","fusion"
"40204","cv_AccStock_ControlMan_Export","","Declare @Date as datetime
set @Date = '{date}'


     INSERT INTO TempStockControlExport
     
SELECT 
Stk.StockID ,
LL.Value as [Type], 
LLL.Value as [Sub Type] ,
Stk.StockCode as [Code], 
Stk.StockDescription as [Description],
L.Value as [Unit], 
dbo.fnFormatNumber(ISNULL(ASP.CostPriceEx, 0)) as [Bulk Cost Price Ex. VAT],
dbo.fnFormatNumber(sum(isnull(SC.QtyStores,0) * Isnull(STK.Weight,0) / 1000)) as [Total Weight (KG)] ,
dbo.fnFormatNumber(sum(isnull(SC.QtyStores,0))) as [Total In Stores] ,
dbo.fnFormatNumber(sum(isnull(qtySO,0)) - SUM(ISNULL([QtyINV], 0))) as [On Sales Order],
dbo.fnFormatNumber(sum(isnull(qtyForManuf,0)) + sum(isnull(SplitInput,0))) as [Required For Manufacture],
dbo.fnFormatNumber(sum(isnull(SC.QtyStores,0)  - isnull(qtySO,0)  - isnull(qtyForManuf,0) - isnull(SplitInput,0))) as [Available],
dbo.fnFormatNumber(sum(isnull(qtyPO,0)) - SUM(ISNULL([QtyGRN],0))) as [On Purchase Order],
dbo.fnFormatNumber(sum(isnull(qtyUnderManuf,0)) + sum(isnull(SplitOutput,0))) as [Under Manufacture],
isnull(Stk.LeadTime,0) as [Lead Time (Hrs)],
isnull(convert(Varchar,min(PO.ETA),111),'') as [Next Arrival],
stk.ReOrderLevel as [Re-Order Level],
stk.FulFillment as [Fulfillment Level],


CONVERT(VARCHAR,
CAST(
CASE WHEN 
	round(
		sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - 
		sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + 
		sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0)) + 
		sum(isnull(SplitOutput,0))
	,4) -  ISNULL(stk.ReOrderLevel,0) > 0 
Then
	0
ELSE
	ISNULL(stk.FulFillment,0) - 
	round(
		sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - 
		sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + 
		sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0)) + 
		sum(isnull(SplitOutput,0))
	,4)
END
AS MONEY),1)
as [Recommended Qty For Purchase]

FROM AccStock STK
Cross Join (SELECT LookupID from Lookup where class like 'Divisions') Div
--In Stores
LEFT JOIN (SELECT StockID, sum(qty * Ratio ) as [QtyStores],DivisionID FROM AccStockControl where Adjustdate <= @Date  group by StockID,DivisionID) SC
ON STK.StockID = SC.StockID AND Div.LookupID = SC.DivisionID
--On Purchase Order
LEFT JOIN (SELECT CD.StockID, sum(CD.Qty * SoldByToPurchasedByRatio) as [QtyPO], min(DateCompleted) as [ETA],
	CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END AS [DivisionID]
	from CREDITOR_DETAIL CD 
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID,Deliverydate FROM CREDITOR_MASTER) CM
        ON CD.DocID = CM.DocID
        LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock) Stk
        ON CD.StockID = Stk.StockID 
		where DocType = 'Purchase Order' AND CONVERT(VARCHAR,isnull(Datecreated, @Date),111) <= CONVERT(VARCHAR,@Date,111) AND CONVERT(VARCHAR,isnull(Deliverydate, @Date),111)  >= CONVERT(VARCHAR,@Date,111)
        --where DocType = 'Purchase Order' AND isnull(Datecreated, @Date) <= @Date AND isnull(Deliverydate, @Date)  >= @Date  
        Group By CD.StockID,CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END) PO
ON Stk.StockID = PO.StockID  AND Div.LookupID = PO.DivisionID
--On Sales Order
LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtySO],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID]
	from DEBTOR_DETAIL DD
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER) DM
        ON DD.DocID = DM.DocID
        where DocType = 'Invoice' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
        Group By DD.StockID,CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) SO
ON Stk.StockID = SO.StockID  AND Div.LookupID = SO.DivisionID
--On Invoice
LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtyINV],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID]
	from DEBTOR_DETAIL DD
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER) DM
        ON DD.DocID = DM.DocID
        where DocType = 'Invoice' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
        Group By DD.StockID,CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) INV
ON Stk.StockID = INV.StockID  AND Div.LookupID = INV.DivisionID
--On GRN
LEFT JOIN (SELECT CD.StockID, sum(CD.Qty * SoldByToPurchasedByRatio) as [QtyGRN], min(DateCompleted) as [ETA],
	CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END AS [DivisionID]
	from CREDITOR_DETAIL CD 
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID,Deliverydate FROM CREDITOR_MASTER) CM
        ON CD.DocID = CM.DocID
        LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock) Stk
        ON CD.StockID = Stk.StockID 
		where DocType = 'Goods Received Note' AND CONVERT(VARCHAR,isnull(Datecreated, @Date),111) <= CONVERT(VARCHAR,@Date,111) AND CONVERT(VARCHAR,isnull(Deliverydate, @Date),111)  >= CONVERT(VARCHAR,@Date,111)
        --where DocType = 'Purchase Order' AND isnull(Datecreated, @Date) <= @Date AND isnull(Deliverydate, @Date)  >= @Date  
        Group By CD.StockID,CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END) GRN
ON Stk.StockID = GRN.StockID  AND Div.LookupID = GRN.DivisionID
--Required For Manufacture
LEFT JOIN (SELECT MD.StockID, Sum(MD.Qty * M.Qty) as [QtyForManuf],DivisionID FROM AccManufacture_Detail MD 
	LEFT JOIN AccManufacture M ON MD.DocID = M.DocID
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date 
	Group by  MD.StockID,DivisionID )Manuf
ON Stk.StockID = Manuf.StockID  AND Div.LookupID = Manuf.DivisionID
--Under Manufacture
LEFT JOIN (SELECT M.StockID, Sum(M.Qty) as [QtyUnderManuf],DivisionID FROM AccManufacture M
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
	GROUP By M.StockID,DivisionID) UManuf
ON Stk.StockID = UManuf.StockID  AND Div.LookupID = uManuf.DivisionID
--Split Stock Manufacturing
LEFT JOIN (SELECT SD.StockID, LL.LinkedTo as [DivID],
	sum(Case when isnull(SD.IsInput,0) = 1 THEN Qty * Length ELSE 0 END) as [SplitInput],
	sum(Case when isnull(SD.IsInput,0) = 0 THEN Qty * Length ELSE 0 END) as [SplitOutput]
	FROM ACCStock_Split_Master SM
	LEFT JOIN (SELECT * FROM AccStock_Split_Detail) SD ON SM.DocID = SD.DocID
	LEFT JOIN LinkLookup LL ON SD.ContainerID = LL.LinkLookupID
	WHERE SM.DocStatus <> 'Completed' AND SM.DateCreated <= @Date
	Group by SD.StockID, LL.LinkedTo)  SS
ON STK.StockID = SS.StockID and Div.LookupID = SS.DivID
LEFT JOIN Lookup L on  STK.SoldBy = L.LookupID 
LEFT JOIN Lookup LL on STK.StockType = LL.LookupID
LEFT JOIN LinkLookup LLL on STK.SubTypeID = LLL.Linklookupid 
LEFT JOIN AccStockPrice ASP ON ASP.StockID = STK.StockID
{where}
Group by STK.StockId, LL.Value, LLL.Value, STK.StockCode,STK.StockDescription,L.Value,STK.LeadTime,stk.ReOrderLevel, stk.FulFillment, ASP.CostPriceEx
ORDER BY LL.Value, Stk.StockDescription","0","","1","LRA-FUSION","0","0","fusion"
"40205","cv_AccStock_ControlMan_ContExport","","DECLARE @Date as DATETIME
SET @Date = '{date}'


INSERT INTO TempStockControlContainerExport

SELECT 
	CONVERT(VARCHAR,Stk.StockID) + '#' + ISNULL(CONVERT(VARCHAR,SC.ContainerID),'0') as [ID]  ,
	LL.Value as [Type], 
	LLL.Value as [Sub Type] ,
	LLLL.Value as [Container], 
	STK.StockCode as [Code], 
	Stk.StockDescription as [Description],
	--E.Company as [Preferred Supplier],
	L.Value as [Unit], 
	dbo.fnFormatNumber(isnull(ASP.CostPriceEx,0)) as [Bulk Cost Price Ex. VAT],
	dbo.fnFormatNumber(sum(isnull(SC.QtyStores,0) * isnull(STK.Weight,0) /1000)) as [Total Weight (KG)] ,
	dbo.fnFormatNumber(sum(isnull(SC.QtyStores,0))) as [Total In Stores] ,
	dbo.fnFormatNumber(sum(isnull(qtySO,0)) - SUM(ISNULL([QtyINV], 0))) as [On Sales Order],
	dbo.fnFormatNumber(sum(isnull(qtyForManuf,0)) + sum(isnull(SplitInput,0))) as [Required For Manufacture],
	dbo.fnFormatNumber(sum(isnull(SC.QtyStores,0)  - isnull(qtySO,0)  - isnull(qtyForManuf,0) - isnull(SplitInput,0))) as [Available],
	dbo.fnFormatNumber(sum(isnull(qtyPO,0)) - SUM(ISNULL([QtyGRN],0))) as [On Purchase Order],
	dbo.fnFormatNumber(sum(isnull(qtyUnderManuf,0)) + sum(isnull(SplitOutput,0))) as [Under Manufacture],
	isnull(Stk.LeadTime,0) as [Lead Time (Hrs)],
	isnull(convert(Varchar,min(PO.ETA),111),'') as [Next Arrival],
	CASE WHEN round(sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0)) + sum(isnull(SplitOutput,0)),4) + isnull(/*ReOrderLevel*/ stk.FulFillment,0) > 0 then
		CASE WHEN cast(isnull(/*ReOrderLevel*/ stk.FulFillment,0) - round(sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0))  + sum(isnull(SplitOutput,0)),4) as money) < 0 then
			'0.00'
		ELSE
			convert(Varchar,cast(isnull(/*ReOrderLevel*/ stk.FulFillment,0) - round(sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0)) + sum(isnull(SplitOutput,0)),4) as money),1)
		END
	ELSE
		convert(varchar,Abs(cast(round(sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0)) + sum(isnull(SplitOutput,0)),4) as money)),1)
	END  as [Recommended Qty For Purchase]
FROM AccStock STK
Cross Join (SELECT LookupID from Lookup where class like 'Divisions') Div
--In Stores
LEFT JOIN (SELECT StockID, sum(qty * Ratio) as [QtyStores],DivisionID,ContainerID FROM AccStockControl where Adjustdate <= @Date  group by StockID,DivisionID, ContainerID) SC
ON STK.StockID = SC.StockID AND Div.LookupID = SC.DivisionID
--On Purchase Order
LEFT JOIN (SELECT CD.StockID, sum(CD.Qty * SoldByToPurchasedByRatio) as [QtyPO], min(DateCompleted) as [ETA],
	CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END AS [DivisionID],
	CD.ContainerID 
	from CREDITOR_DETAIL CD 
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID,Deliverydate FROM CREDITOR_MASTER) CM
        ON CD.DocID = CM.DocID
        LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock) Stk
        ON CD.StockID = Stk.StockID 
        where DocType = 'Purchase Order' AND isnull(Datecreated, @Date) <= @Date AND isnull(Deliverydate, @Date)  >= @Date  
        Group By CD.StockID, CD.ContainerID, CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END) PO
ON Stk.StockID = PO.StockID  AND Div.LookupID = PO.DivisionID AND SC.ContainerID = PO.ContainerID 
--On Sales Order
LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtySO],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
	DD.ContainerID
	from DEBTOR_DETAIL DD
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER) DM
        ON DD.DocID = DM.DocID
        where DocType = 'Invoice' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
        Group By DD.StockID, DD.ContainerID, CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) SO
ON Stk.StockID = SO.StockID  AND Div.LookupID = SO.DivisionID AND SO.ContainerID = SC.ContainerID 
--On Invoice
LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtyINV],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID]
	from DEBTOR_DETAIL DD
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER) DM
        ON DD.DocID = DM.DocID
        where DocType = 'Invoice' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
        Group By DD.StockID,CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) INV
ON Stk.StockID = INV.StockID  AND Div.LookupID = INV.DivisionID
--On GRN
LEFT JOIN (SELECT CD.StockID, sum(CD.Qty * SoldByToPurchasedByRatio) as [QtyGRN], min(DateCompleted) as [ETA],
	CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END AS [DivisionID]
	from CREDITOR_DETAIL CD 
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID,Deliverydate FROM CREDITOR_MASTER) CM
        ON CD.DocID = CM.DocID
        LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock) Stk
        ON CD.StockID = Stk.StockID 
		where DocType = 'Goods Received Note' AND CONVERT(VARCHAR,isnull(Datecreated, @Date),111) <= CONVERT(VARCHAR,@Date,111) AND CONVERT(VARCHAR,isnull(Deliverydate, @Date),111)  >= CONVERT(VARCHAR,@Date,111)
        --where DocType = 'Purchase Order' AND isnull(Datecreated, @Date) <= @Date AND isnull(Deliverydate, @Date)  >= @Date  
        Group By CD.StockID,CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END) GRN
ON Stk.StockID = GRN.StockID  AND Div.LookupID = GRN.DivisionID
--Required For Manufacture
LEFT JOIN (SELECT MD.StockID, Sum(MD.Qty * M.Qty) as [QtyForManuf],DivisionID,MD.ContainerID FROM AccManufacture_Detail MD 
	LEFT JOIN AccManufacture M ON MD.DocID = M.DocID
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date 
	Group by  MD.StockID,DivisionID,MD.ContainerID  )Manuf
ON Stk.StockID = Manuf.StockID  AND Div.LookupID = Manuf.DivisionID AND Manuf.ContainerID = SC.ContainerID 
--Under Manufacture
LEFT JOIN (SELECT M.StockID, Sum(M.Qty) as [QtyUnderManuf],DivisionID,ContainerID  FROM AccManufacture M
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
	GROUP By M.StockID,DivisionID,ContainerID ) UManuf
ON Stk.StockID = UManuf.StockID  AND Div.LookupID = uManuf.DivisionID AND SC.ContainerID = UManuf.ContainerID 
--Split Stock Manufacturing
LEFT JOIN (SELECT SD.StockID, LL.LinkedTo as [DivID],SD.ContainerID, 
	sum(Case when isnull(SD.IsInput,0) = 1 THEN Qty * Length ELSE 0 END) as [SplitInput],
	sum(Case when isnull(SD.IsInput,0) = 0 THEN Qty * Length ELSE 0 END) as [SplitOutput]
	FROM ACCStock_Split_Master SM
	LEFT JOIN (SELECT * FROM AccStock_Split_Detail) SD ON SM.DocID = SD.DocID
	LEFT JOIN LinkLookup LL ON SD.ContainerID = LL.LinkLookupID
	WHERE SM.DocStatus <> 'Completed' AND SM.DateCreated <= @Date
	Group by SD.StockID, LL.LinkedTo, SD.ContainerID)  SS
ON STK.StockID = SS.StockID and Div.LookupID = SS.DivID AND SC.ContainerID = SS.ContainerID
LEFT JOIN Lookup L on  STK.SoldBy = L.LookupID 
LEFT JOIN Lookup LL on STK.StockType = LL.LookupID
LEFT JOIN LinkLookup LLL on STK.SubTypeID = LLL.Linklookupid 
LEFT JOIN LinkLookup LLLL on SC.ContainerID  = LLLL.Linklookupid 
--LEFT JOIN (SELECT EntityID, Company From Entity) E
--ON Stk.SupplierID = E.Entityid
LEFT JOIN AccStockPrice ASP ON ASP.StockID = STK.StockID
{where}
Group by STK.StockId, LL.Value, LLL.Value, LLLL.LinkLookupID, LLLL.Value , SC.ContainerID, STK.StockCode,STK.StockDescription,L.Value,STK.LeadTime,/*ReOrderLevel*/ stk.FulFillment, ASP.CostPriceEx--,E.Company
ORDER BY LL.Value, Stk.StockDescription, LLLL.Value ","0","","1","LRA-FUSION","0","0","fusion"
"40206","cv_SalesByProduct_Export2","","select DocID, [Doc. Type], [Doc. No.], LD.Value as [Division], 
CASE WHEN isnull(A.UseEC,0) = 1 then EC.AccountNum ELSE E.AccountNum END as [Account],
CASE WHEN isnull(A.UseEC,0) = 1 then EC.Contact ELSE E.Company END as [Client],
isnull(EH.Company,'') as [Holding Company],
A.ClientPo as [Customer Order Number], Project,Notes, 
Convert(varchar,Created,111) as [Created],Convert(varchar,[Doc. Date],111) as [Doc. Date],
[Status], U.Consultant,ExtSal.Value as [Ext. Consultant], 
StockCode as [Code], StockDescription as [Description],
Currency, [R.O.E.], 
dbo.fnFormatNumber([Total Ex. VAT]) as [Total Ex. VAT], 
dbo.fnFormatNumber([Total VAT]) as [Total VAT],
dbo.fnFormatNumber([Total Incl. VAT]) as [Total Incl. VAT],
dbo.fnFormatNumber([Est. Cost]) as [Est. Cost]
FROM 
(
SELECT Convert(Varchar,DD.LineID) + '#' + DocType as [DocID], DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
[ClientPO], P.ProjectName  as [Project],    isnull(DM.Memo,'') as Notes, 
DateCreated as [Created],DateCompleted as [Doc. Date],DocStatus as [Status], DM.SalesRepID as [SalesRepID],DM.CreatedBy,
DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],DD.StockCode, DD.StockDescription,
CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1)) as [Total Ex. VAT], 
CASE doctype when 'Credit Note' then -1 ELSE 1 END * (([Total Incl. VAT] - [Total Ex. VAT])  / isnull(DM.ROE,1)) as [Total VAT], 
CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT]  / isnull(DM.ROE,1))  as [Total Incl. VAT],
CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))  as [Est. Cost],
DM.Period, DM.BatchID
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT LineID, DocID, StockCode,StockDescription,
            (PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
             (PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
             Cast((isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
             (PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
             FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 ) DD
ON DM.DocID = DD.Docid
LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
ON DM.DocID = SD.DocID
LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
ON DM.ProjectID = P.ProjectID
        

) A
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
    On A.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
    ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
    ON A.EntityID = E.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
    ON E.AlternateCompanyID = EH.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
    ON A.Entityid = EC.EntityContactID AND isnull(A.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
    ON E.SalesConsID = ExtSal.lookupid
{where}
--ORDER BY A.DocID desc
","0","","1","LRA-FUSION","0","0","fusion"
"40207","cv_Get_Daily_Cashup","","SELECT SUM([Total Incl. VAT]) FROM Debtor_Master DM
LEFT JOIN (
	SELECT 
		DocID
		,Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT] 
	FROM Debtor_Detail
	GROUP BY DocID
) DD
ON DD.DocID = DM.DocID

WHERE DocType LIKE 'Payment Receipt' 
AND CONVERT(VARCHAR,DM.DateCompleted,111) = '{date}'
AND PaymentTypeID = (
	SELECT TOP 1 LookupID FROM Lookup WHERE Class LIKE 'PaymentType' AND Value LIKE '{paymenttype}'
)
","0","","1","LRA-FUSION","0","0","fusion"
"40208","cv_Cashup_Man","","SELECT DISTINCT
    CashupID
    ,AC.CashupDate as [Date]
    ,U.[User]
    ,AC.[Status]
    ,dbo.fnFormatNumber(SUM(ISNULL([System Cash],0))) as [System Cash]
    ,dbo.fnFormatNumber(SUM(ISNULL([System CC],0))) as [System CC]
    ,dbo.fnFormatNumber(SUM(ISNULL([System EFT],0))) as [System EFT]
    
    ,dbo.fnFormatNumber(ISNULL(AC.Cash,0)) as [Actual Cash]
    ,dbo.fnFormatNumber(ISNULL(AC.CreditCard,0)) as [Actual CC]
    ,dbo.fnFormatNumber(ISNULL(AC.EFT,0)) as [Actual EFT]
    ,dbo.fnFormatNumber(ISNULL(AC.Disburcement,0)) as [Total Disbursements]
    
    ,dbo.fnFormatNumber(ISNULL(AC.Suppliers,0)) as [Total Suppliers]
    ,dbo.fnFormatNumber(ISNULL(AC.StaffLoan,0)) as [Total Staff Loans]
    
    ,dbo.fnFormatNumber(ISNULL(AC.cFloat,0)) as [Total Float]
    
    ,dbo.fnFormatNumber(SUM(ISNULL([System Cash],0)) - ISNULL(AC.Cash,0) - ISNULL(AC.Disburcement,0) - ISNULL(AC.Suppliers,0) - ISNULL(AC.StaffLoan,0)) as [Cash Variance] 
    ,dbo.fnFormatNumber(SUM(ISNULL([System CC],0)) - ISNULL(AC.CreditCard,0)) as [Credit Card Variance] 
    ,dbo.fnFormatNumber(SUM(ISNULL([System EFT],0)) - ISNULL(AC.EFT,0)) as [EFT Variance]
FROM AccCashup AC
LEFT JOIN (
    
    SELECT DM.CreatedBy,DM.DateCompleted, SUM(ISNULL([Total Incl. VAT],0)) as [System Cash] FROM Debtor_Master DM
    LEFT JOIN (
        SELECT 
            DocID
            ,Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT] 
        FROM Debtor_Detail
        GROUP BY DocID
    ) DD
    ON DD.DocID = DM.DocID

    WHERE DocType LIKE 'Payment Receipt' 
    AND PaymentTypeID = (
        SELECT TOP 1 LookupID FROM Lookup WHERE Class LIKE 'PaymentType' AND Value LIKE 'Cash'
    
    )
    Group BY DM.CreatedBy,DM.DateCompleted
) C ON CONVERT(VARCHAR,C.DateCompleted,111) = CONVERT(VARCHAR,AC.CashupDate,111) AND  C.CreatedBy = AC.UserID
LEFT JOIN (
    
    SELECT DM.CreatedBy,DM.DateCompleted, SUM(ISNULL([Total Incl. VAT],0)) as [System CC] FROM Debtor_Master DM
    LEFT JOIN (
        SELECT 
            DocID
            ,Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT] 
        FROM Debtor_Detail
        GROUP BY DocID
    ) DD
    ON DD.DocID = DM.DocID

    WHERE DocType LIKE 'Payment Receipt' 
    AND PaymentTypeID = (
        SELECT TOP 1 LookupID FROM Lookup WHERE Class LIKE 'PaymentType' AND Value LIKE 'Credit Card'
    
    )
    Group BY DM.CreatedBy,DM.DateCompleted
) CC ON CONVERT(VARCHAR,CC.DateCompleted,111) = CONVERT(VARCHAR,AC.CashupDate,111) AND  CC.CreatedBy = AC.UserID


LEFT JOIN (
    
    SELECT DM.CreatedBy,DM.DateCompleted, SUM(ISNULL([Total Incl. VAT],0)) as [System EFT] FROM Debtor_Master DM
    LEFT JOIN (
        SELECT 
            DocID
            ,Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT] 
        FROM Debtor_Detail
        GROUP BY DocID
    ) DD
    ON DD.DocID = DM.DocID

    WHERE DocType LIKE 'Payment Receipt' 
    AND PaymentTypeID = (
        SELECT TOP 1 LookupID FROM Lookup WHERE Class LIKE 'PaymentType' AND Value LIKE 'EFT'
    
    )
    Group BY DM.CreatedBy,DM.DateCompleted
) EFT ON CONVERT(VARCHAR,EFT.DateCompleted,111) = CONVERT(VARCHAR,AC.CashupDate,111) AND  EFT.CreatedBy = AC.UserID




LEFT JOIN (
    SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [User] FROM Users 
) U ON U.UserID = AC.UserID
{where}

GROUP BY AC.CashupID,CashupDate,U.[User],AC.[Status],AC.Cash,AC.CreditCard,AC.Disburcement,AC.cFloat,AC.EFT,AC.Suppliers,AC.StaffLoan

","0","","1","LRA-FUSION","0","0","fusion"
"40209","cv_Acc_Cashup_Report","","SET ANSI_WARNINGS OFF
SET NOCOUNT ON

DECLARE @StartDate as datetime
DECLARE @EndDate as datetime
DECLARE @UserID as int	
SET @EndDate =  '{enddate}' 
SET @StartDate =  '{startdate}' 
SET @UserID = {userid}

IF OBJECT_ID(N'tempdb..#CashUp', N'U') IS NOT NULL 
BEGIN
    DROP TABLE #CashUp;
END

CREATE TABLE #CashUp
(
[DivisionID] int,
[DateCompleted] DateTime,
[DocType] varchar(50),
[SalesRepID] int,
[PaymentType] int,
[Total] Money
)

--Populate Temp table
INSERT INTO #CashUp
SELECT 
DM.DivisionID as [DivisionID],
DateCompleted, DM.DocType, DM.SalesRepID as [SalesRepID], PaymentTypeID,
CASE doctype when 'Credit Note' then -1 ELSE 1 END * (isnull([Total Incl. VAT],0)  / isnull(DM.ROE,1))  as [Total Incl. VAT]
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
             FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
ON DM.DocID = DD.Docid
WHERE DM.DocStatus = 'Completed'
AND DateCompleted between @StartDate AND @EndDate
AND DocType in ('Invoice', 'Credit Note', 'Payment Receipt')
AND DM.SalesRepID = @UserID

INSERT INTO #Cashup ([DateCompleted],[DocType],[SalesRepID],[Total])
SELECT CashUpDate, 'Disbursement', UserID, isnull(Disburcement,0)
FROM AccCashUp
WHERE CashupDate between  @StartDate AND @EndDate
AND UserID = @UserID

INSERT INTO #Cashup ([DateCompleted],[DocType],[SalesRepID],[Total])
SELECT CashUpDate, 'Float', UserID, isnull([cFloat] ,0)
FROM AccCashUp
WHERE CashupDate between  @StartDate AND @EndDate
AND UserID = @UserID

--Actual report
SELECT [Description], [Transactions], [Amount] FROM (
	SELECT 'TRANSACTION ANALYSIS' as [Description], null as [Transactions], null as [Amount], 0 as [Rank]
	UNION ALL
	SELECT '  Sales' as [Transaction], Count([DocType]) as [Transactions],dbo.fnFormatNumber(isnull(sum(isnull([Total],0)),0)) as [Amount], 1 as [Rank]
	FROM  #CashUp
	WHERE DocType = 'Invoice'
	UNION ALL
	SELECT '  Credit Notes' as [Transaction], Count([DocType]) as [Transactions],dbo.fnFormatNumber(isnull(sum(isnull([Total],0)),0)) as [Amount], 2 as [Rank]
	FROM  #CashUp
	WHERE DocType = 'Credit Note'
	UNION ALL
	SELECT '  Disbursements' as [Transaction], Count([DocType]) as [Transactions], dbo.fnFormatNumber(isnull(sum(isnull([Total],0)),0)) as [Amount], 4 as [Rank]
	FROM  #CashUp
	WHERE DocType = 'Disbursement'
	UNION ALL
	SELECT 'CASH ANALYSIS' as [Transaction], null as [Transactions], null as [Amount], 5 as [Rank]
	UNION ALL
	SELECT '  ' + L.Value, Count([DocType]), dbo.fnFormatNumber(isnull(sum(isnull([Total],0)),0)) as [Amount], 6 as [Rank]  
	FROM #CashUp CU
	LEFT JOIN Lookup L ON CU.PaymentType = L.LookupID
	WHERE DocType = 'Payment Receipt'
	Group by  L.Value
	UNION ALL
	SELECT 'SUMMARY' as [Transaction], null as [Transactions], null as [Amount], 7 as [Rank]
	UNION ALL
	SELECT '  Opening Draw Value' as [Transaction], Count([DocType]) as [Transactions], dbo.fnFormatNumber(isnull(sum(isnull([Total],0)),0)) as [Amount], 8 as [Rank]
	FROM  #CashUp
	WHERE DocType = 'Float'
	UNION ALL
	SELECT '  Add : Sales' as [Transaction], Count([DocType]) as [Transactions],dbo.fnFormatNumber(isnull(sum(isnull([Total],0)),0)) as [Amount], 9 as [Rank]
	FROM  #CashUp
	WHERE DocType = 'Invoice'
	UNION ALL
	SELECT '  Less : Credit Notes' as [Transaction], Count([DocType]) as [Transactions],dbo.fnFormatNumber(isnull(sum(isnull([Total],0)),0)) as [Amount], 10 as [Rank]
	FROM  #CashUp
	WHERE DocType = 'Credit Note'
	UNION ALL
	SELECT '  Less : Disbursements' as [Transaction], Count([DocType]) as [Transactions], dbo.fnFormatNumber(isnull(sum(isnull([Total],0)),0)) as [Amount], 11 as [Rank]
	FROM  #CashUp
	WHERE DocType = 'Disbursement'
	UNION ALL
	SELECT '  Closing Draw Value' as [Transaction], Count([DocType]) as [Transactions], 
	dbo.fnFormatNumber(isnull(sum(
		CASE DOCTYPE  WHEN 'Invoice' THEN 1 WHEN 'Float' THEN 1 ELSE -1  END * isnull([Total],0)
	),0)) as [Amount], 12 as [Rank]
	FROM  #CashUp
	WHERE DocType Not in ('Payment Receipt')
) A 
ORDER BY [Rank]","0","","1","LRA-FUSION","0","0","fusion"
"40210","cv_SalesByProduct_Export","","SELECT DocID, [Doc. Type], [Doc. No.], LD.Value as [Division], 
CASE WHEN isnull(A.UseEC,0) = 1 then EC.AccountNum ELSE E.AccountNum END as [Account],
CASE WHEN isnull(A.UseEC,0) = 1 then EC.Contact ELSE E.Company END as [Client],
isnull(EH.Company,'') as [Holding Company],
A.ClientPo as [Customer Order Number], Project,Notes, 
Convert(varchar,Created,111) as [Created],Convert(varchar,[Doc. Date],111) as [Doc. Date],
[Status], U.Consultant,ExtSal.Value as [Ext. Consultant], 
StockCode as [Code], StockDescription as [Description],
Currency, [R.O.E.], [QTY], 
dbo.fnFormatNumber([Total Ex. VAT]) as [Total Ex. VAT], 
dbo.fnFormatNumber([Total VAT]) as [Total VAT],
dbo.fnFormatNumber([Total Incl. VAT]) as [Total Incl. VAT],
dbo.fnFormatNumber([Est. Cost]) as [Est. Cost],
dbo.fnFormatNumber([Profit]) as [Profit],

dbo.fnFormatNumber(CASE [Est. Cost] WHEN 0 THEN 0 ELSE [Profit] / [Est. Cost] END * 100) as [Margin %],

dbo.fnFormatNumber(

CASE [Total Ex. VAT] WHEN 0 THEN 0 ELSE 
(CASE [Est. Cost] WHEN 0 THEN 0 ELSE ([Total Ex. VAT] - [Est. Cost]) / [Total Ex. VAT] END * 100) 
END

) as [GP]

FROM 
(
    SELECT Convert(Varchar,DD.LineID) + '#' + DocType as [DocID], DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
    DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
    [ClientPO], P.ProjectName  as [Project],    isnull(DM.Memo,'') as Notes, 
    DateCreated as [Created],DateCompleted as [Doc. Date],DocStatus as [Status], DM.SalesRepID as [SalesRepID],DM.CreatedBy,
    DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],DD.StockCode, DD.StockDescription, DD.Qty,
    CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1)) as [Total Ex. VAT], 
    CASE doctype when 'Credit Note' then -1 ELSE 1 END * (([Total Incl. VAT] - [Total Ex. VAT])  / isnull(DM.ROE,1)) as [Total VAT], 
    CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT]  / isnull(DM.ROE,1))  as [Total Incl. VAT],
    CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))  as [Est. Cost],
     (
        CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1))
        -
        CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))
    ) as [Profit],
    DM.Period, DM.BatchID
    FROM DEBTOR_MASTER DM
    LEFT JOIN (SELECT LineID, DocID, StockCode,StockDescription,Qty,
                (PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
                 (PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
                 Cast((isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
                 (PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
                 FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 ) DD
    ON DM.DocID = DD.Docid
    LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
    ON DM.DocID = SD.DocID
    LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
    ON DM.ProjectID = P.ProjectID
        

) A
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
    On A.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
    ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
    ON A.EntityID = E.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
    ON E.AlternateCompanyID = EH.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
    ON A.Entityid = EC.EntityContactID AND isnull(A.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
    ON E.SalesConsID = ExtSal.lookupid
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"40211","cv_pop_years_sales","","SELECT 1, 'Jan ' + CONVERT(VARCHAR, YEAR(GETDATE()))
UNION ALL 
SELECT 2, 'Feb ' + CONVERT(VARCHAR, YEAR(GETDATE()))
UNION ALL 
SELECT 3, 'Mar ' + CONVERT(VARCHAR, YEAR(GETDATE()))
UNION ALL 
SELECT 4, 'Apl ' + CONVERT(VARCHAR, YEAR(GETDATE()))
UNION ALL 
SELECT 5, 'May ' + CONVERT(VARCHAR, YEAR(GETDATE()))
UNION ALL 
SELECT 6, 'Jun ' + CONVERT(VARCHAR, YEAR(GETDATE()))
UNION ALL 
SELECT 7, 'Jul ' + CONVERT(VARCHAR, YEAR(GETDATE()))
UNION ALL 
SELECT 8, 'Aug ' + CONVERT(VARCHAR, YEAR(GETDATE()))
UNION ALL 
SELECT 9, 'Sept ' + CONVERT(VARCHAR, YEAR(GETDATE()))
UNION ALL 
SELECT 10, 'Oct ' + CONVERT(VARCHAR, YEAR(GETDATE()))
UNION ALL 
SELECT 11, 'Nov ' + CONVERT(VARCHAR, YEAR(GETDATE()))
UNION ALL 
SELECT 12, 'Dec ' + CONVERT(VARCHAR, YEAR(GETDATE()))","0","","1","LRA-FUSION","0","0","fusion"
"40212","cv_Acc_Debtor_POS_Details","","declare @DocID as int
DECLARE @Date as DATETIME
SET @Date = '{date}'
set @DocID = {docid}

SELECT LineID, [Group], [Stock Code] as [Code], [Description], [Comments], Qty, Discount, [Price Ex.], [Price Incl.],[Total Incl.],[Stock Available]
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1) ) as [Total Incl.],
	[Available] as [Stock Available],
	Rank, -1000 as [Rank2]
	FROM DEBTOR_DETAIL  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	
	LEFT JOIN (
		
		SELECT 
		STK.StockID,
		LLLL.Linklookupid ,
		sum(isnull(SC.QtyStores,0)  - isnull(qtySO,0)  - isnull(qtyForManuf,0) - isnull(SplitInput,0)) as [Available]

		FROM AccStock STK
		Cross Join (SELECT LookupID from Lookup where class like 'Divisions') Div
		--In Stores
		LEFT JOIN (SELECT StockID, sum(qty * Ratio) as [QtyStores],DivisionID,ContainerID FROM AccStockControl where Adjustdate <= @Date  group by StockID,DivisionID, ContainerID) SC
		ON STK.StockID = SC.StockID AND Div.LookupID = SC.DivisionID
		--On Sales Order
		LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtySO],
			CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
			DD.ContainerID
			from DEBTOR_DETAIL DD
				LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER) DM
				ON DD.DocID = DM.DocID
				where DocType = 'Invoice' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
				Group By DD.StockID, DD.ContainerID, CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) SO
		ON Stk.StockID = SO.StockID  AND Div.LookupID = SO.DivisionID AND SO.ContainerID = SC.ContainerID 
		--Required For Manufacture
		LEFT JOIN (SELECT MD.StockID, Sum(MD.Qty * M.Qty) as [QtyForManuf],DivisionID,MD.ContainerID FROM AccManufacture_Detail MD 
			LEFT JOIN AccManufacture M ON MD.DocID = M.DocID
			WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date 
			Group by  MD.StockID,DivisionID,MD.ContainerID  )Manuf
		ON Stk.StockID = Manuf.StockID  AND Div.LookupID = Manuf.DivisionID AND Manuf.ContainerID = SC.ContainerID 

		--Split Stock Manufacturing
		LEFT JOIN (SELECT SD.StockID, LL.LinkedTo as [DivID],SD.ContainerID, 
			sum(Case when isnull(SD.IsInput,0) = 1 THEN Qty * Length ELSE 0 END) as [SplitInput],
			sum(Case when isnull(SD.IsInput,0) = 0 THEN Qty * Length ELSE 0 END) as [SplitOutput]
			FROM ACCStock_Split_Master SM
			LEFT JOIN (SELECT * FROM AccStock_Split_Detail) SD ON SM.DocID = SD.DocID
			LEFT JOIN LinkLookup LL ON SD.ContainerID = LL.LinkLookupID
			WHERE SM.DocStatus <> 'Completed' AND SM.DateCreated <= @Date
			Group by SD.StockID, LL.LinkedTo, SD.ContainerID)  SS
		ON STK.StockID = SS.StockID and Div.LookupID = SS.DivID AND SC.ContainerID = SS.ContainerID

		LEFT JOIN LinkLookup LLLL on SC.ContainerID  = LLLL.Linklookupid 

		 WHERE  (SC.Containerid is not null )  AND  (isnull(Stk.IsTangible,0) = 1)  
		 GROUP BY STK.StockID,
		LLLL.Linklookupid 
	
	
	) SQ ON SQ.StockID = CED.StockID AND SQ.Linklookupid = CED.ContainerID
	
	
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	
	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1)) as [Total Incl.], 
	(SELECT Top 1 Rank From DEBTOR_DETAIL Where LineID = CED.ComponentOfLineID), NULL ,Rank as [Rank2]
	FROM DEBTOR_DETAIL CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND DocID =  @DocID
	) A
	
	
	
ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"40213","cv_Acc_Rental_Man","","SELECT DISTINCT
R.RentalID, LD.Value as [Division], STK.StockCode as [Code], STK.StockDescription as [Description],
null as [S/N], E.Company as [Client], EC.[Contact], EC.[Cell], EC.[Email],DD.Comments,
R.DocType as [Document], DM.DocNo as [Doc. No.], U.[Sales Rep.],
Convert(varchar,StartDate,111) + ' ' + Convert(varchar,StartDate,108)  as [Start],
Convert(varchar,EndDate,111) + ' ' + Convert(varchar,EndDate,108)  as [End],
Convert(varchar,DateReturned,111) + ' ' + Convert(varchar,DateReturned,108)  as [Returned],
CASE
	WHEN isnull(STK.IsTangible,0) = 0 AND GetDate() < R.StartDate THEN 'Booked' 
	WHEN isnull(STK.IsTangible,0) = 0 AND GetDate() between R.StartDate and R.EndDate THEN 'Hired Out'
	WHEN isnull(STK.IsTangible,0) = 0 AND GetDate() > R.EndDate THEN 'Completed'
	WHEN isnull(STK.IsTangible,0) = 1 AND SC.AdjustDate is null THEN 'Booked'
	WHEN isnull(STK.IsTangible,0) = 1 AND SC.AdjustDate is not null AND getdate() between r.Startdate and r.Enddate AND isnull(R.IsReturned,0) = 0  THEN 'Hired Out'
	WHEN isnull(STK.IsTangible,0) = 1 AND SC.AdjustDate is not null AND getdate() > r.Enddate AND isnull(R.IsReturned,0) = 0  THEN 'Overdue'
	WHEN isnull(STK.IsTangible,0) = 1 AND isnull(R.IsReturned,0) = 1 THEN 'Returned'
END as [Status]
FROM Rental R
LEFT JOIN (SELECT DocID, DocType,DivisionID, EntityID, AttentionOF, SalesRepID,DocNo  FROM DEBTOR_MASTER ) DM
ON R.DocType= DM.DocType AND R.DocID = DM.DocID
LEFT JOIN (SELECT LineID, DocID, StockID,DivisionID,Comments FROM DEBTOR_DETAIL) DD
ON DM.DocID = DD.DocID AND R.LineID = DD.LineID
LEFT JOIN (SELECT EntityID, company, AccountNum FROM Entity) E
ON DM.EntityID = E.EntityID
LEFT JOIN (SELECT EntityContactID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Contact], Phone1, Cell, Email FROM EntityContact) EC
ON DM.AttentionOF = EC.EntityContactID
LEFT JOIN (SELECT StockID, StockCode, StockDescription, IsTangible,IsRentable FROM AccStock) STK
ON DD.StockID = STK.StockID
LEFT JOIN Lookup LD
ON  isnull(DD.DivisionID, DM.DivisionID) = LD.LookupID
LEFT JOIN (SELECT userID, isnull(Firstname,'') + ' ' + isnull(Surname,'')  as [Sales Rep.] FROM Users) U
ON DM.SalesRepID = U.UserID
LEFT JOIN (SELECT * FROM AccStockControl WHERE  Qty < 0) SC
ON R.DocType=  SC.DocType AND R.LineID = SC.LineID
WHERE ((R.DocType = 'Sales Order' AND isnull(STK.IsRentable,0) = 1) OR(R.DocType = 'Invoice' AND isnull(STK.IsTangible,0) = 0) OR (R.DocType = 'Dispatch Note' AND isnull(STK.IsTangible,0) = 1))
{where}
ORDER BY [Start] Desc
","0","","1","LRA-FUSION","0","0","fusion"
"40214","cv_Rate_Man","","SELECT 

RateID
,
	CASE 
		PaymentPeriodID
	WHEN 0 Then 
		'Daily'
	WHEN 1 Then
		'Weekly'
	When 2 Then
		'Monthly'
	When 3 Then
		'Yearly'
	END as [Payment Period]
	
,Duration
,Interest
,TotalFrom AS [Total From]
,TotalTo AS [Total To]

FROM AccRates","0","","1","LRA-FUSION","0","0","fusion"
"40215","cv_job_stock_lines_all","","declare @ProjectID as int
set @ProjectID = {pid}
 
SELECT LineID, [Group],Project, [Stock Code], [Description], [Comments], [Supplier], Qty, Discount, [Cost Ex.], [Price Ex.], [Price Incl.],[Total Incl.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.], convert(varchar,cast(Priceincl as money),1) as [Price Incl.],convert(varchar,cast(TotalIncl as money),1) as [Total Incl.],Rank, -1000 as [Rank2]
	FROM Job_Stock  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND ced.ProjectID =  @ProjectID
 	
	UNION ALL
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.], convert(varchar,cast(Priceincl as money),1) as [Price Incl.],convert(varchar,cast(TotalIncl as money),1) as [Total Incl.], (SELECT Top 1 Rank From Job_Stock Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2]
	FROM job_stock CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND ced.ProjectID =  @ProjectID
	) A
ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"40216","cv_ImportQuoteToJob","","Declare @IsAdd As Bit
Set @IsAdd = {isadd}

Declare @ProjectID As Integer
Set @ProjectID = {projectid}

Declare @Vat AS Float
Set @Vat = (select top 1 custvalue from crmsetup where variable = 'defaultvat')


insert into job_stock 
	(isadditional,comments,costpriceex,containerid,groupname,componentoflineid,[rank],supplierid,addtobudget,budgetdate
,projectid,shippingdocid,stockid,stockcode,stockdescription,qty,discperc,priceex,pricecategoryid,taxtypeid,tax,ismarginbased,markupperc,wasteperc,clientid,divisionid,reportcategoryid,guardlineid,uselandedcost,rentallineid)
select 
	@IsAdd,
	comments,
	costpriceex,
	containerid,
	groupname,
	componentoflineid,
	[rank],
	supplierid,
	addtobudget,
	budgetdate,
	@projectid,
	shippingdocid,
	stockid,
	stockcode,
	stockdescription,
	qty,
	discperc,
	priceex,
	pricecategoryid,
	taxtypeid,
	tax,
	ismarginbased,
	markupperc,
	wasteperc,
	clientid,
	divisionid,
	reportcategoryid,
	guardlineid,
	uselandedcost,
	rentallineid
from cost_estimate_detail 
where docid = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40217","cv_Acc_print_CEDoc_Rates","","SELECT 
ISNULL(Max(Case When PaymentPeriodID = 0 Then [Payment] END),0) AS [Daily],
ISNULL(Max(Case When PaymentPeriodID = 1 Then [Payment] END),0) AS [Weekly],
ISNULL(Max(Case When PaymentPeriodID = 2 Then [Payment] END),0) AS [Monthly],
ISNULL(Max(Case When PaymentPeriodID = 3 Then [Payment] END),0) AS [Yearly]
FROM 
(
	SELECT 
		DM.DocID
		,ISNULL(DM.Currency,'') + ' ' + dbo.fnFormatNumber(ISNULL((([TotalIncl] / isnull(DM.ROE,1)) * AR.Interest),0)) as [Payment]
		,AR.PaymentPeriodID
				
		
	FROM COST_ESTIMATE_MASTER DM
	LEFT JOIN (
		SELECT 
			DocID
			,Sum((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1)) as [TotalIncl]
		FROM COST_ESTIMATE_DETAIL
		GROUP BY DocID
	) DD ON DD.DocID = DM.DocID
	LEFT JOIN (SELECT * FROM ACCRates) AR
	ON TotalFrom >= DD.[TotalIncl] or DD.[TotalIncl] <= TotalTo

) DM
WHERE DM.DocID = {docid}

GROUP BY DM.DocID","0","","1","LRA-FUSION","0","0","fusion"
"40218","cv_Acc_CEDoc_StockImages","","SELECT 
	DD.LineID
	,STK.ProductImage 
FROM COST_ESTIMATE_DETAIL DD
LEFT JOIN (SELECT * FROM AccStock) STK ON STK.StockID = DD.StockID
WHERE STK.ProductImage IS NOT NULL AND DD.DocID = {DocID}
","0","","1","LRA-FUSION","0","0","fusion"
"40219","cv_DocumentRequiredMan","","SELECT
	DR.DocReqID,
	F.Caption as [Form Name],
	L.Value as [Document Type],
	DR.ReqNum as [Required],
	CASE WHEN ISNULL(DR.IsOnceOff,0) = 0 THEN 'Yes' ELSE 'No' END as [Requring]
FROM EntityDocumentRequired DR
LEFT JOIN Forms F ON F.FormID = DR.FormID
LEFT JOIN Lookup L ON L.LookupID = DR.DocTypeID
{where}
ORDER BY F.Caption","0","","1","LRA-FUSION","0","0","fusion"
"40220","cv_Acc_Print_Cost_Estimate_Seperate","","declare @DocID as int
Declare @CommentsBelow as bit
set @DocID = {docid}
Set @CommentsBelow  =  (SELECT Top 1 isnull(Selected,0) from crmSetup where variable = 'CommentsBelow')


{select}   

(

 
    --Select Summary info
    SELECT Distinct null as [Line], null as [LineID], '<col-grey><B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>' as [Group], '<col-grey>' as [Project],'<col-grey><B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>' as [Stock Code], '<col-grey>' as [Container], '<col-grey>' as [Description],  '<col-grey>' as [Description+Spec],'<col-grey>' as [Comments],'<col-grey>' as [Supplier],'<col-grey>' as [Total Weight], '<col-grey>' as [Qty], '<col-grey>' as [Discount], '<col-grey>' as [Cost Ex.], '<col-grey>' as [Price Ex.],
		'<col-grey><B>' + isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty) / isnull(ROE,1) )  + '</B>' as [Total Ex.],
		'<col-grey><B>' + isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty  * ((100 - isnull(discperc,0)) /100)) / isnull(ROE,1))  + '</B>' as [Total Ex. Disc],
		'<col-grey><B>' + isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) / isnull(ROE,1) )  + '</B>' as [Nett],
		'<col-grey><B>' + isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber((Qty * PriceEx) / isnull(CEM.ROE,1) * CEM.Tax/100 + (Qty * PriceEx) / isnull(CEM.ROE,1) ) + '</B>' as [Total Incl],
		'<col-grey><B>' + ISNULL(CEM.Currency,'') + dbo.fnFormatNumber((Qty * PriceEx) / isnull(CEM.ROE,1) *CEM.Tax/100 ) + '</B>' as [VAT],
		'<col-grey>' as [Delivery Terms],
		'<col-grey>' AS [KG/UNIT/CARTON]
		,'<col-grey>' AS [KG TOTAL],
		'<col-grey>' AS [Other4],
		'<col-grey>' AS  [Stock Sub Type],
		'<col-grey>' AS [Packing],
		'<col-grey>' AS [Sold In],
		'<col-grey>' AS [Wastage],
		'<col-grey>'  as [Barcode],
		'<col-grey>'  as [Default Bin Name],
'<col-grey>'  as [MarkupPerc],
    9999999999999999 as [Rank],9999999999999999 as [Rank2],9999999999999999 as [GroupRank], '<col-grey>' as [customer item number],'<col-grey>' as [image]
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN AccStock STK ON CED.StockID = STK.StockID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
    ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    LEFT JOIN (SELECT * from AccPrintoutGroup) APG
    ON APG.Doctype = 'Quote'  AND rtrim(lower(isnull(APG.GroupName,''))) = rtrim(lower(isnull(CED.GroupName,'')))
    WHERE CED.DocID = @DocID
    AND isnull(ComponentOfLineID,0)  = 0
    AND ISNULL(APG.PrintoutGroupID,0) <> 0
    GROUP BY CED.GroupName,CEM.Currency, rCED.[GroupRank] , CEM.ROE, CED.Qty, CED.PriceEx, CEM.Tax
   ) A 

ORDER BY [GroupRank] , Rank,Rank2 ","0","","1","LRA-FUSION","0","0","fusion"
"40221","CV_Get_DocumentsRequired","","SELECT 
	L.Value as [DocumentType],
	EDR.ReqNum as [Requirement], 
	EDR.ReqNum - (
		SELECT COUNT(*) FROM EntityDocument
		WHERE DocTypeID = EDR.DocTypeID
		AND {linkname} = {linkid}) as [StillNeeded]
FROM EntityDocumentRequired EDR
LEFT JOIN Forms F ON F.FormID = EDR.FormID
LEFT JOIN Lookup L ON L.LookupID = EDR.DocTypeID
WHERE F.FormName = '{formname}'","0","","1","LRA-FUSION","0","0","fusion"
"40222","cv_management_Restrictions","","SELECT top 1  C.CustomCTRLID 
FROM CustomCTRLBlocked B 
LEFT JOIN (SELECT CustomCtrlID, CtrlFormName, CtrlName FROM CustomCTRL) C 
	ON B.CustomCtrlID = C.CustomCTrlID 
where
CtrlFormName = '{formName}'
AND 
CtrlName = 'cmdComplete'
AND
B.UserLevelID in (select UserlevelID from users where userID = {userID})","0","","1","LRA-FUSION","0","0","fusion"
"40223","cv_Acc_Scan_Expenditure","","Declare @DocID as integer
Set @DocID = {docid}


SELECT convert(varchar,DD.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, Sum(Qty) - isnull(SC.[QtyScanned],0) as [Qty], 'NOT SCANNED' as [S/N] 
FROM EXPENDITURE_MASTER DD
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON DD.StockID = STK.StockID
LEFT JOIN (SELECT DocID, DocType, StockID,  sum(abs(Qty * Ratio)) as [QtyScanned] FROM  AccStockControl where DocID = @DocID AND Qty < 0 Group by DocID, DocType, StockID) SC
ON DD.DocID = SC.DocID  AND DD.DocType = SC.DocType AND SC.StockID = DD.StockID
WHERE DD.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1
GROUP BY STK.StockDescription,SC.[QtyScanned], DD.StockID
HAVING Sum(Qty) - isnull(SC.[QtyScanned],0) > 0

UNION ALL

SELECT convert(varchar,STK.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, [QtyScanned], SC.SerialNumber
FROM EXPENDITURE_MASTER DM
LEFT JOIN (SELECT  DocID, DocType, StockID, SerialNumber,abs(Qty * Ratio) as [QtyScanned]  FROM AccStockControl WHERE Qty < 0) SC
ON DM.DocID = SC.DocID AND DM.DocType = SC.DocType
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON SC.StockID = STK.StockID
WHERE DM.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1","0","","1","LRA-FUSION","0","0","fusion"
"40224","cv_Acc_Scan_Get_Line_EXPENDITURE","","SELECT Top 1 DD.DocID FROM EXPENDITURE_MASTER DD
LEFT JOIN (SELECT DocID, DocType FROM EXPENDITURE_MASTER) DM
ON DD.docID = DM.DocID
LEFT JOIN (SELECT DocID, DocType, LineID, sum(abs(Qty * Ratio)) as [QtyScanned] FROM AccStockControl where Qty < 0 Group By LineID, DocID, DocType) SC
ON DD.DOCID = SC.LineID  AND DD.DocID = SC.DocID AND DM.DocType = SC.DocType
where DD.docid = {docid}
AND DD.stockid =  {stockid}
AND DD.Qty - isnull([QtyScanned],0) > 0","0","","1","LRA-FUSION","0","0","fusion"
"40225","cv_Acc_Scan_Stock_Transfer","","Declare @DocID as integer
Set @DocID =  {docid}


SELECT convert(varchar,DD.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, Sum(Qty) - isnull(SC.[QtyScanned],0) as [Qty], 'NOT SCANNED' as [S/N] 
FROM EXPENDITURE_MASTER DD
LEFT JOIN (SELECT DocID, DocType FROM EXPENDITURE_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON DD.StockID = STK.StockID
LEFT JOIN (SELECT DocID, DocType, StockID,  sum(abs(Qty * Ratio)) as [QtyScanned] FROM  AccStockControl where DocID = @DocID Group by DocID, DocType, StockID) SC
ON DD.DocID = SC.DocID  AND DM.DocType = SC.DocType
WHERE DD.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1
GROUP BY STK.StockDescription,SC.[QtyScanned], DD.StockID
HAVING Sum(Qty) - isnull(SC.[QtyScanned],0) > 0

UNION ALL

SELECT convert(varchar,STK.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, [QtyScanned], SC.SerialNumber
FROM EXPENDITURE_MASTER DM
LEFT JOIN (SELECT  DocID, DocType, StockID, SerialNumber,abs(Qty * Ratio) as [QtyScanned]  FROM AccStockControl) SC
ON DM.DocID = SC.DocID AND DM.DocType = SC.DocType
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON SC.StockID = STK.StockID
WHERE DM.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1","0","","1","LRA-FUSION","0","0","fusion"
"40226","cv_Documents_Required","","select 
	CONVERT(VARCHAR, entitydocumentid) as ID,
	l.value as [Doc Type],
	[Sub Doc] as [Doc Sub Type],
	Keywords,
	Description,convert(varchar,DateLinked,111) as [Date Linked], 
	[Name], 
	[path] as Location,
	ISNULL(S.Firstname, '') + ' ' + ISNULL(S.Surname, '') as [Added By],
	CASE WHEN ISNULL(D.CheckedOut,0) = 1 THEN ISNULL(U.Firstname,'') + ' ' + ISNULL(U.Surname, '') ELSE '' END as [Checked Out By]
from entitydocument d
left join lookup l on l.lookupid = d.doctypeid
LEFT JOIN (select distinct lookupid, [value] as [Sub Doc] from lookup where class like 'documentsubtype') ls
	ON ls.lookupid = d.docsubid
LEFT JOIN Staff S ON S.StaffID = D.StaffID
LEFT JOIN Users U ON U.UserID = D.CheckedOutBy
<%where%>

UNION ALL

SELECT 
	'00000000' + CONVERT(VARCHAR, D.DocReqID) as ID,
	L.Value as [Doc Type],
	null,
	'Documents required' as [Keywords],
	CONVERT(VARCHAR, D.ReqNum - (SELECT COUNT(*) FROM EntityDocument WHERE DocTypeID = D.DocTypeID AND {idname} = {id})),
	null,
	null,
	null,
	null,
	null
FROM EntityDocumentRequired D
LEFT JOIN Forms F ON F.FormID = D.FormID
LEFT JOIN Lookup L ON L.LookupID = D.DocTypeID
WHERE F.FormName like '{formname}'
AND D.ReqNum - (SELECT COUNT(*) FROM EntityDocument WHERE DocTypeID = D.DocTypeID AND {idname} = {id}) > 0

order by ID, Keywords,[Name]","0","","1","LRA-FUSION","0","0","fusion"
"40227","cv_PurchasesByProduct","","SELECT DocID, [Doc. Type], [Doc. No.], LD.Value as [Division], 
CASE WHEN isnull(A.UseEC,0) = 1 then EC.AccountNum ELSE E.AccountNum END as [Account],
CASE WHEN isnull(A.UseEC,0) = 1 then EC.Contact ELSE E.Company END as [Client],
isnull(EH.Company,'') as [Holding Company],
A.ClientPo as [Customer Order Number], Project,Notes, 
Convert(varchar,Created,111) as [Created],Convert(varchar,[Doc. Date],111) as [Doc. Date],
[Status], U.Consultant,
StockCode as [Code], StockDescription as [Description],
Currency, [R.O.E.], 
dbo.fnFormatNumber([Total Ex. VAT]) as [Total Ex. VAT], 
dbo.fnFormatNumber([Total VAT]) as [Total VAT],
dbo.fnFormatNumber([Total Incl. VAT]) as [Total Incl. VAT],
dbo.fnFormatNumber([Est. Cost]) as [Est. Cost],
dbo.fnFormatNumber([Profit]) as [Profit],

dbo.fnFormatNumber(CASE [Est. Cost] WHEN 0 THEN 0 ELSE [Profit] / [Est. Cost] END * 100) as [Margin %],

dbo.fnFormatNumber(

CASE [Total Ex. VAT] WHEN 0 THEN 0 ELSE 
(CASE [Est. Cost] WHEN 0 THEN 0 ELSE ([Total Ex. VAT] - [Est. Cost]) / [Total Ex. VAT] END * 100) 
END

) as [GP]

FROM 
(
    SELECT Convert(Varchar,DD.LineID) + '#' + DocType as [DocID], DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
    DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
    [ClientPO], P.ProjectName  as [Project],    isnull(DM.Memo,'') as Notes, 
    DateCreated as [Created],DateCompleted as [Doc. Date],DocStatus as [Status], DM.SalesRepID as [SalesRepID],DM.CreatedBy,
    DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],DD.StockCode, DD.StockDescription,
    CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1)) as [Total Ex. VAT], 
    CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * (([Total Incl. VAT] - [Total Ex. VAT])  / isnull(DM.ROE,1)) as [Total VAT], 
    CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT]  / isnull(DM.ROE,1))  as [Total Incl. VAT],
    CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))  as [Est. Cost],
     (
        CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1))
        -
        CASE doctype when 'Supplier Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))
    ) as [Profit],
    DM.Period
    FROM CREDITOR_MASTER DM
    LEFT JOIN (SELECT LineID, DocID, StockCode,StockDescription,
                (PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
                 (PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
                 Cast((isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
                 (PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
                 FROM CREDITOR_DETAIL ) DD
    ON DM.DocID = DD.Docid
    LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM CREDITOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
    ON DM.DocID = SD.DocID
    LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
    ON DM.ProjectID = P.ProjectID
        

) A
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
    On A.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
    ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
    ON A.EntityID = E.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
    ON E.AlternateCompanyID = EH.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
    ON A.Entityid = EC.EntityContactID AND isnull(A.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
    ON E.SalesConsID = ExtSal.lookupid
{where}

ORDER BY A.DocID desc



","0","","1","LRA-FUSION","0","0","fusion"
"40228","cv_Print_JobCard_Header_Doc_PickingSlip","","SELECT 

{subtotal} As [<subtotal>],
{discount} As [<discount>],
GetDate() As [<datetime>],
Convert(Varchar,GetDate(),106) As [<docdate>],
Convert(Varchar,GetDate(),106) As [<todaydate>],
Convert(Varchar,GetDate(),106) As [<todays>],
P.ProjectID as [<jobno>],
P.ProjectID as [<docno>],
P.TicketID as [<ticketno>],
P.ProjectName as [<jobname>],
E.Accountnum as [<account>],
E.Company as [<client>],
E.Company as [<client1>],
E.Vatnum as [<clientvat>],
EC.Contact as [<contact>],
EC.Contact as [<contact1>],
EC.phone1 + Case when len(isnull(EC.Cell,'')) > 0 then ' / ' + isnull(Ec.Cell,'') ELSE '' END as [<telno>],
E.fax as [<Fax>],
E.Switchboard as [<Tel>],
P.ClientPO as [<refno>],
LD.Value as [<division>],
P.ProjectNotes as [<notes>],
P.CompletionNotes as [<completionnotes>],
Convert(Varchar,PDS.StartDate,103) + ' ' + Convert(Varchar,PDS.StartDate,108) as [<startdate>],
Convert(Varchar,PDE.EndDate,103) + ' ' + Convert(Varchar,PDE.EndDate,108) as [<enddate>],
PS.Value as [<status>],
JT.Value as [<type>],
T.Technician as [<technician>],
M.Manager as [<manager>],
EA.Address1 as [<address1>],
EA.Address2 as [<address2>],
EA.Address3 as [<address3>],
EA.Region as [<region>],
EA.Code as [<code>],
EA.City as [<city>],
EA.Country as [<country>],

EAD.Address1 as [<Deladdress1>],
EAD.Address2 as [<Deladdress2>],
EAD.Address3 as [<Deladdress3>],
EAD.Region as [<Delregion>],
EAD.Code as [<DelPcode>],
EAD.City as [<DelPcity>],
EAD.Country as [<DelPcountry>],


EAC.Address1 as [<Daddress1>],
EAC.Address2 as [<Daddress2>],
EAC.Address3 as [<Daddress3>],
EAC.Region as [<Dregion>],
EAC.Code as [<Dcode>],
EAC.City as [<Dcity>],
EAC.Country as [<Dcountry>],
ltrim(rtrim(Replace(Replace(isnull(replace(EA.Address1,char(13),'') + char(13),'')
+ isnull(replace(EA.Address2,char(13),'') +  char(13),'')
+ isnull(replace(EA.Address3,char(13),'') + char(13),'')
+ isnull(replace(EA.Code,char(13),'') + char(13),'')
+ isnull(replace(EA.city,char(13),'') + char(13),'')
+ isnull(replace(EA.country,char(13),''),''), char(13) + char(13), Char(13)), char(13) + char(13), Char(13)))) as [<address>],

EAP.Address1 as [<Paddress1>],
EAP.Address2 as [<Paddress2>],
EAP.Address3 as [<Paddress3>],
EAP.Region as [<Pregion>],
EAP.Code as [<Pcode>],
EAP.City as [<Pcity>],
EAP.Country as [<Pcountry>],


dbo.fnFormatNumber(isnull(JS.PriceEx,0)) as [<totalex>],
dbo.fnFormatNumber(isnull(JS.PriceIncl,0)) as [<totalincl>],
dbo.fnFormatNumber(isnull(JS.PriceIncl,0) - isnull(JS.PriceEx,0) ) as [<totalvat>],
dbo.fnFormatNumber(isnull([PriceExStock],0)) as [<stockprice>] ,
dbo.fnFormatNumber(isnull([PriceExLabour],0)) as [<labourprice>], 
MDS.TownDie as [<town>],
convert(varchar,MDS.Instalationdate,106)    as [<instalation>],
convert(varchar,MDS.Guaranteedate,106) as[<guarantee>], 
datename(month,MDS.RMSDate) as [<rms>],
MDS.Serialno as [<Serial>],
MDS.CostCentre as [<costcentre>],
MDS.Valuesettings as [<valuesetting>],
MDS.Options as [<options>],
MDS.InterfaceScale as [<interface>],
MDS.Licenceno as [<Licenceno>],
isnull(lo.value,'None') as [<letter>],
isnull(lF.value,'None') as [<feeder>],
isnull(LMT.value,'None') as [<folder>],
isnull(LDT.value,'None') as [<model>],
isnull(LB.value,'None') as [<labels>],
isnull(LNK.value,'None') as [<ink>],
isnull(GT.value,'None') as [<Machinetype>],
dbo.ServiceM(MDS.MachineConfigID) as [<servicing>],
'JOB' as [<doctype>],
LPT.Value as [<paymentterms>],
U.SalesRep as [<consultant>]
FROM Projects P
LEFT JOIN (SELECT DocID, SalesRepID FROM Cost_Estimate_Master ) CEM
	ON P.CEDocID  = CEM.DocID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [SalesRep] FROM Users) U
	ON CEM.SalesRepID = U.UserID
LEFT JOIN (SELECT EntityID,Company,VatNum, Switchboard,Fax,AccountNum,PaymentTerms  FROM Entity) E
    ON  P.Entityid = E.Entityid
LEFT JOIN Lookup LPT
	ON E.PaymentTerms = LPT.LookupID
LEFT JOIN (SELECT * FROM Lookup where class like 'divisions') LD
    ON P.DivID = LD.Lookupid
LEFT JOIN (SELECT * FROM EntityAddress) EA
    ON E.EntityID = EA.EntityID 
    AND EA.EntityAddressID = (	SELECT 
									Max(EntityAddressID) 
								FROM EntityAddress 
								where EntityID = P.EntityID AND AddressType like '%physical%'
								)
LEFT JOIN (SELECT ProjectID, Min(ProjDate) as [StartDate] FROM ProjectDates WHERE isnull(IsStartEndDate,0) = 1 GROUP BY ProjectID) PDS
    ON P.ProjectID = PDS.ProjectID
LEFT JOIN (SELECT ProjectID, Max(ProjDate) as [EndDate] FROM ProjectDates WHERE isnull(IsStartEndDate,0) = 1 GROUP BY ProjectID) PDE
    ON P.ProjectID = PDE.ProjectID
LEFT JOIN (SELECT * FROM ProjContacts) PC
    ON PC.JobContID = (SELECT Min(JobContID) FROM ProjContacts where ProjectID = P.ProjectID)
LEFT JOIN (SELECT EntityContactID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Contact], Phone1,fax, Cell FROM EntityContact) EC
    ON PC.EntitycontactID = EC.Entitycontactid
LEFT JOIN (SELECT * FROM Lookup where class like 'ProjectState') PS
    ON P.ProjectStateID = PS.Lookupid
LEFT JOIN (SELECT * FROM Lookup where class like 'JobType') JT
    ON P.ProjectTypeID = JT.Lookupid
LEFT JOIN (SELECT ProjectID, StaffID as TechnicianID FROM JobTechnician WHERE JobTechnicianID in (SELECT min(JobTechnicianID) FROM JobTechnician Group By ProjectID)) PT
    ON P.ProjectID = PT.ProjectID
LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Technician] FROM Staff) T
    ON PT.TechnicianID = T.StaffID
LEFT JOIN (SELECT StaffID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Manager] FROM Staff) M
    ON P.ProjectManagerID = M.StaffID
LEFT JOIN (SELECT sum((qty * PriceEx)) AS [PriceEx], 
     Sum(PriceEx * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [PriceIncl],
    ProjectID,
    sum((CASE WHEN isnull(STK.IsTangible,0) = 1 THEN qty * PriceEx ELSE 0 END)) AS [PriceExStock] ,
    sum((CASE WHEN isnull(STK.IsTangible,0) = 0 THEN qty * PriceEx ELSE 0 END)) AS [PriceExLabour] 
    FROM Job_Stock JS 
    LEFT JOIN AccStock STK ON JS.StockID = STK.StockID
    Group by ProjectID) JS
    ON P.ProjectID = JS.ProjectID
    Left Join JobMachine JP on JP.JobID = P.ProjectID
    left Join Linklookup LDT on LDT.Linklookupid = JP.MachineID
    left Join Lookup GT on  GT.LookupID =LDT.LinkedTo
    left Join machineDetails MDS on Jp.EntityID = MDS.EntityID and MDS.ModelTypeID =JP.MachineID 
    left Join Linklookup Lo on Lo.Linklookupid = MDS.LetteroppenerID
    left Join Linklookup LF on LF.Linklookupid = MDS.FeederType
    left Join Linklookup LMT on LMT.Linklookupid = MDS.FolderTypeID
    left Join Linklookup LB on LB.Linklookupid = MDS.LabelTypeID
    left Join Linklookup LNK on LNK.Linklookupid = MDS.InkCatridgeID
    LEFT JOIN( select * from  MachineAddress where AddressType like 'Physical Address' )EAC on EAC.MachineID = MDS.MachineConfigID

LEFT JOIN( select * from EntityAddress where AddressType like '%Delivery%')EAD on EAD.EntityID = P.EntityID 

    LEFT JOIN (SELECT * FROM EntityAddress) EAP
    ON E.EntityID = EAP.EntityID 
    AND EAP.EntityAddressID = (	SELECT 
									Max(EntityAddressID) 
								FROM EntityAddress 
								where EntityID = P.EntityID AND AddressType like '%Postal%'
								)


Where P.ProjectID = {projectid}
","0","","1","LRA-FUSION","0","0","fusion"
"40229","cv_Risk_DOMESTIC_print_top","","--cv_Risk_DOMESTIC_print_top
SET NOCOUNT ON
DECLARE @RiskID INT
DECLARE @SectionID INT
DECLARE @CategoryID INT
DECLARE @Section varchar(500)
DECLARE @AssesementType varchar(500)
DECLARE @ID INT
DECLARE @Risk CURSOR
DECLARE @Category CURSOR

truncate table temp_print_assessment_ID{userID}

SET @RiskID = {riskid}


SET @AssesementType = (SELECT AssessmentTypeName FROM Risk_Assessment_Master WITH(NOLOCK) WHERE RiskAssessmentID = @RiskID)


insert into temp_print_assessment_ID{userID} (tempcol1,tempcol2,tempcol3 )
select '<col-grey><B>Category</B>','<col-grey><B>Description</B>','<col-grey><B>Answer</B>'
SET @Risk = CURSOR FAST_FORWARD FOR SELECT RiskAssessmentSectionID FROM Risk_Assessment_Section WITH(NOLOCK) WHERE RiskAssessmentID = @RiskID

OPEN @Risk

FETCH NEXT FROM @Risk INTO @SectionID

WHILE @@FETCH_STATUS = 0 

BEGIN 
set @Section = (SELECT SectionName FROM Risk_Assessment_Section WITH(NOLOCK) WHERE RiskAssessmentSectionID = @SectionID)


      SET @Category = CURSOR FAST_FORWARD FOR
      SELECT RiskAssessmentCategoryID FROM Risk_Assessment_Category WITH(NOLOCK) WHERE RiskAssessmentSectionID = @SectionID
      
      OPEN @Category 
      
      FETCH NEXT FROM @Category INTO @CategoryID
     
	  
      
      WHILE @@FETCH_STATUS = 0 
      BEGIN 
     SET @ID =  (  
		SELECT TOP 1 RiskAssessmentItemID
		FROM Risk_Assessment_Section RAS WITH(NOLOCK)
            LEFT JOIN (select CategoryName,RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
			LEFT JOIN (select RiskAssessmentCategoryID,Description,SelectedAnswer,ItemPrompt,RiskAssessmentItemID from Risk_Assessment_Item WITH(NOLOCK) ) RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
		WHERE RAI.RiskAssessmentCategoryID = @CategoryID 
		Order by RAI.RiskAssessmentItemID
		 )
   
   
     
            insert into temp_print_assessment_ID{userID} (tempcol1,tempcol2,tempcol3)
            SELECT 
                 '<col-grey><B>' + ISNULL( RAC.CategoryName,'')+'</B>',
                ISNULL(RAI.ItemPrompt,''),
                ISNULL(SelectedAnswer,'') +' '+ISNULL(Description,'')
            FROM Risk_Assessment_Section RAS WITH(NOLOCK)
            LEFT JOIN (select CategoryName,RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
			LEFT JOIN (select RiskAssessmentCategoryID,Description,SelectedAnswer,ItemPrompt,RiskAssessmentItemID from Risk_Assessment_Item WITH(NOLOCK) ) RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
            WHERE RAI.RiskAssessmentCategoryID = @CategoryID AND RAI.RiskAssessmentItemID = @ID AND  isnull(SelectedAnswer,'') +' '+isnull(Description,'') <> ''
            AND RAC.CategoryName NOT LIKE  'Header In%'
            UNION ALL 
           
                       SELECT
                 '',
                 ISNULL(RAI.ItemPrompt,''),
                 isnull(SelectedAnswer,'') +' '+isnull(Description,'')
                
            FROM Risk_Assessment_Section RAS WITH(NOLOCK)
            LEFT JOIN (select CategoryName,RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
			LEFT JOIN (select RiskAssessmentCategoryID,Description,SelectedAnswer,ItemPrompt,RiskAssessmentItemID from Risk_Assessment_Item WITH(NOLOCK) ) RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
            WHERE RAI.RiskAssessmentCategoryID = @CategoryID AND RAI.RiskAssessmentItemID <> @ID AND  isnull(SelectedAnswer,'') +' '+isnull(Description,'') <> ''
            AND RAC.CategoryName NOT LIKE  'Header In%'
            
            UNION ALL  
            
            SELECT '', '',''
            FROM Risk_Assessment_Section RAS WITH(NOLOCK)
            LEFT JOIN (select CategoryName,RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID
			LEFT JOIN (select RiskAssessmentCategoryID,Description,SelectedAnswer,ItemPrompt,RiskAssessmentItemID from Risk_Assessment_Item WITH(NOLOCK) ) RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
            WHERE RAI.RiskAssessmentCategoryID = @CategoryID AND RAI.RiskAssessmentItemID <> @ID AND  isnull(SelectedAnswer,'') +' '+isnull(Description,'') <> ''
           AND RAC.CategoryName NOT LIKE  'Header In%'
            
             SET @ID = 0
            FETCH NEXT FROM @Category INTO @CategoryID
      END
      CLOSE @Category 
      DEALLOCATE @Category
      
      FETCH NEXT FROM @Risk INTO @SectionID
END

CLOSE @Risk
DEALLOCATE @Risk
SET NOCOUNT OFF
select 
	tempcol1 as [ ],
	tempcol2 as [ ],
	tempcol3 as [ ]
from temp_print_assessment_ID{userID}","0","","1","LRA-FUSION","0","0","fusion"
"40230","CV_TicketAddition","","SELECT Distinct L.LookupID, L.Value, Case WHEN isnull(E.TicketID,0)> 0 THEN 1 ELSE 0 END as [Ticked] FROM Lookup L
LEFT JOIN (SELECT * FROM TicketAddition WHERE TicketID = {TicketID}) E ON L.LookupID = E.LookupID
where 
(L.class like 'TicketAddition')","0","","1","LRA-FUSION","0","0","fusion"
"40231","CV_Job_picking_Slip","","{select} (
	SELECT 
	DD.GroupName as [Group],
	DD.StockCode as [Code],
	DD.StockDescription as [Description], 
	DD.Comments,
	DD.Qty * ISNULL(JSC.Qty,1) as [Qty], LSB.Value as [UOM],
	LL.Value as [From],
	'   ' as [Picked By],
	'   ' as [Qty Picked],
	'   ' as [Qty Needed],
	LC.Value as [Container]
	FROM Job_Stock DD
	LEFT JOIN (SELECT StockID , IsTangible, SoldBy FROM AccStock) STK
		ON DD.StockID = STK.StockID
	LEFT JOIN Lookup LSB
		ON STK.SoldBy = LSB.LookupID
	LEFT JOIN LinkLookup LL
		ON DD.ContainerID = LL.LinkLookupID
	LEFT JOIN LinkLookup LC ON LC.LinkLookupID = DD.ContainerID
	LEFT JOIN (SELECT LineID, Qty FROM Job_Stock ) JSC
		ON DD.ComponentOfLineID = JSC.LineID 
	where  
	Isnull(STK.IsTangible,0) = 1
	AND DD.LineID in ({lines})
) A
","0","","1","LRA-FUSION","0","0","fusion"
"40232","cv_CompanyProject","","select   Convert(Varchar,e.EntityID) + '#' + Convert(Varchar,p.ProjectID), e.Company,p.ProjectName from entity e left join projects p
on e.EntityId = p.EntityID

left join ratecard rc 
on rc.Projectid = p.ProjectID


where 
 IsNull(rc.RateCardID,0) = 0 and
 e.EntityID is not null  and p.ProjectID is not null
 and p.ProjectName <> '' 
{where}
order by e.Company,p.ProjectName","0","","1","LRA-FUSION","0","0","fusion"
"40233","cv_ReturnModuleIds","","declare	@tmpICDchar varchar(200)
set	@tmpICDchar = ''
select	@tmpICDchar = @tmpICDchar + ',' + Convert(Varchar,ICD)
from	(select	distinct
		moduleid as ICD
	from	ratecardamount where ratecardid = 7 
	 ) TopValues
select	Substring(@tmpICDchar,2,dataLength(@tmpICDchar) - 1)","0","","1","LRA-FUSION","0","0","fusion"
"40234","cv_Project_Quotes","","SELECT 
	convert(varchar,CEM.DocID) + '#' + CASE WHEN PBQ.ProjectID is null THEN '' ELSE 'Exclude' END as [DocID]
	,CEM.DocID as [Doc No.]
	,CEM.Revision
	,CEM.ClientPO as [Client Order No.]
	,CEM.Descr as [Description] 
	,CEM.Currency
	,CEM.ROE as [R.O.E]
	,dbo.fnFormatNumber([Est. Cost] / isnull(CEM.ROE,1)) as [Est. Cost]
	,dbo.fnFormatNumber([Total Ex. VAT] / isnull(CEM.ROE,1)) as [Total Ex. VAT]
	,dbo.fnFormatNumber([Total Incl. VAT] / isnull(CEM.ROE,1)) as [Total Incl. VAT]
FROM COST_ESTIMATE_MASTER CEM
LEFT JOIN (
	SELECT	
		DocID
		, Sum(CostPriceEx * Qty ) as [Est. Cost]
		, sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) as [Total Ex. VAT]
		, sum((PriceEx * qty * ((100 - isnull(discperc,0)) /100)) * (TAX /100 + 1)) as [Total Incl. VAT] 
	FROM Cost_Estimate_Detail  
	WHERE isnull(componentOfLineID,0) = 0  
	Group By DocID
) CED
ON CEM.DocID = CED.DocID
LEFT JOIN (SELECT Distinct ProjectID, DocID FROM  ProjectBudgetQuotes) PBQ
ON CEM.DocID = PBQ.DocID
WHERE CEM.ProjectID = {projectID}","0","","1","LRA-FUSION","0","0","fusion"
"40235","cv_Acc_QuickSale","","DECLARE @Date as DATETIME
SET @Date = GETDATE()

SELECT DISTINCT
	convert(varchar,A.StockID) + '#' + convert(varchar,isnull(SQ.LinkLookupID,'')) +'##' + convert(varchar,isnull(AP.PriceCategoryID,''))
	,A.StockCode as [Stock Code]
	,A.StockDescription as [Stock Description]
	,LLC.[Container]
	,SQ.[Available] as [Available QTY]
	,AQS.QTY as [Selling QTY]
	,AQS.SellingPrice as [Selling Price]
FROM AccStock A
LEFT JOIN (
	SELECT * FROM AccStockPrice
) AP ON AP.StockID = A.StockID

LEFT JOIN (
	SELECT 
		STK.StockID,
		LLLL.Linklookupid ,
		sum(isnull(SC.QtyStores,0)  - isnull(qtySO,0)  - isnull(qtyForManuf,0) - isnull(SplitInput,0)) as [Available]
	FROM AccStock STK
	Cross Join (SELECT LookupID from Lookup where class like 'Divisions') Div
	--In Stores
	LEFT JOIN (SELECT StockID, sum(qty * Ratio) as [QtyStores],DivisionID,ContainerID FROM AccStockControl where Adjustdate <= @Date  group by StockID,DivisionID, ContainerID) SC
	ON STK.StockID = SC.StockID AND Div.LookupID = SC.DivisionID
	--On Sales Order
	LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtySO],
		CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID],
		DD.ContainerID
		from DEBTOR_DETAIL DD
			LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER) DM
			ON DD.DocID = DM.DocID
			where DocType = 'Invoice' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
			Group By DD.StockID, DD.ContainerID, CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) SO
	ON Stk.StockID = SO.StockID  AND Div.LookupID = SO.DivisionID AND SO.ContainerID = SC.ContainerID 
	--Required For Manufacture
	LEFT JOIN (SELECT MD.StockID, Sum(MD.Qty * M.Qty) as [QtyForManuf],DivisionID,MD.ContainerID FROM AccManufacture_Detail MD 
		LEFT JOIN AccManufacture M ON MD.DocID = M.DocID
		WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date 
		Group by  MD.StockID,DivisionID,MD.ContainerID  )Manuf
	ON Stk.StockID = Manuf.StockID  AND Div.LookupID = Manuf.DivisionID AND Manuf.ContainerID = SC.ContainerID 

	--Split Stock Manufacturing
	LEFT JOIN (SELECT SD.StockID, LL.LinkedTo as [DivID],SD.ContainerID, 
		sum(Case when isnull(SD.IsInput,0) = 1 THEN Qty * Length ELSE 0 END) as [SplitInput],
		sum(Case when isnull(SD.IsInput,0) = 0 THEN Qty * Length ELSE 0 END) as [SplitOutput]
		FROM ACCStock_Split_Master SM
		LEFT JOIN (SELECT * FROM AccStock_Split_Detail) SD ON SM.DocID = SD.DocID
		LEFT JOIN LinkLookup LL ON SD.ContainerID = LL.LinkLookupID
		WHERE SM.DocStatus <> 'Completed' AND SM.DateCreated <= @Date
		Group by SD.StockID, LL.LinkedTo, SD.ContainerID)  SS
	ON STK.StockID = SS.StockID and Div.LookupID = SS.DivID AND SC.ContainerID = SS.ContainerID

	LEFT JOIN LinkLookup LLLL on SC.ContainerID  = LLLL.Linklookupid 

	 WHERE  (SC.Containerid is not null )  AND  (isnull(Stk.IsTangible,0) = 1)  
	 GROUP BY STK.StockID,	LLLL.Linklookupid 
) SQ ON SQ.StockID = A.StockID --AND SQ.Linklookupid = AC.ContainerID
LEFT JOIN (
	SELECT LinkLookupID, Value as [Container], LinkedTo FROM LinkLookup WHERE Class LIKE 'StockContainer'
) LLC ON LLC.LinkLookupID = SQ.LinkLookupID
LEFT JOIN (
	SELECT * FROM AccQuickSale
) AQS ON AQS.StockID = A.StockID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40236","cv_QuickSaleLineItems","","SELECT 
	AQS.StockID
	, AQS.QTY
	, AQS.SellingPrice as PriceEx
	, A.StockCode
	, A.StockDescription
	, AQS.PriceCategoryID
	, AQS.ContainerID
	, AQS.DivisionID
	, AQS.CostPrice
	, AP.MinSellingPriceEx
	, AP.IsMarginBased
	, AP.Markup as MarkupPerc
	
FROM AccQuickSale AQS
LEFT JOIN (SELECT * FROM AccStock) A ON A.StockID = AQS.StockID
LEFT JOIN (SELECT * FROM AccStockPrice) AP 
ON AP.StockID = A.StockID 
AND AP.PriceCategoryID = AQS.PriceCategoryID 
AND AP.DivisionID = AQS.DivisionID
WHERE UserID = {userID}","0","","1","LRA-FUSION","0","0","fusion"
"40237","cv_Acc_Dependant_Items_Jobs","","DECLARE @LineID as integer
SET @LineID = {lineid}

INSERT INTO {inserttable} ( StockID, StockCode, StockDescription, Qty, PriceCategoryID, CostPriceEx, PriceEx, DiscPerc, 
TaxTypeID, Tax, isMarginBased,MarkupPerc,WastePerc, ContainerID, ComponentOfLineID, 
[Rank], SupplierID, ProjectID, DivisionID,IsAdditional)


SELECT  STK.StockID, STK.StockCode, STK.StockDescription,D.DepSellingQty, SP.PriceCategoryID, 
isnull(SP.CostPriceEx,0) / STK.SoldByToPurchasedByRatio, isnull(SP.SellingPriceEx,0), 0 as [DiscPerc],
DD.TaxTypeID, DD.Tax, SP.IsMarginBased, SP.Markup, isnull(D.WastagePerc,0), DD.ContainerID, DD.LineID, 
DD.Rank + D.AccStock_DepID - (SELECT min(AccStock_DepID) FROM AccStock_Dep WHERE PriStockID = D.PriStockID) + 1  as [Rank] ,
SP.SupplierID, DD.ProjectID, DD.DivisionID,DD.IsAdditional
FROM AccStock_Dep D 
LEFT JOIN AccStock STK 
	ON D.DepStockID = STK.StockID 
LEFT JOIN (SELECT * FROM AccStockPrice where getdate() between ValidFrom and ValidTo) SP
	ON STK.StockID = SP.StockID AND D.PriceCategoryID =  SP.PriceCategoryID
CROSS JOIN (SELECT Top 1 * FROM job_stock  where LineID = @LineID) DD
Where D.PriStockID = DD.StockID
ORDER BY D.AccSTOCK_DepID
","0","","1","LRA-FUSION","0","0","fusion"
"40238","cv_Acc_Back_Order_Report","","SELECT 
A.LineID, 
A.DocNo As [Sales Order No],
E.Company as [Client],  
convert(varchar,A.ProjectID ) + ' - ' + P.ProjectName as [Project/Job],
 isnull(ProjectNum,p.projectid) as [Project/Job No.],
A.ClientPo as [Client Ref.],
A.StockCode as [Code],
A.StockDescription as [Description],
L.Value As [Source],
dbo.fnFormatNumber(SOQty - InvQty) as [Qty Not Invoiced],
case acc.istangible 
when 1
then
dbo.fnFormatNumber((isnull(SC.QtyStores,0)  - isnull(qtySO,0)  - isnull(qtyForManuf,0) - isnull(SplitInput,0))) 
else
'0.00'
end
As [Available],
dbo.fnFormatNumber(SoVal - InvVal) as [Value Not Invoiced],
convert(varchar,A.DateCreated,111) as [Date Created],
convert(varchar,A.[LastDate],111) as [Doc Date],
convert(varchar,A.[dueDate],111) as [Due Date],
Case A.IsPurchased
When 1
Then 'Yes'
When 0
Then 'No'
ENd
 As Purchased

FROM (
	 SELECT min(DD.LineID) as [LineID],DD.IsPurchased, 
    max(CASE WHEN DM.DocType = 'Sales Order' THEN DM.DocNo ELSE null END) as [DocNo], 
    DM.EntityID, DD.StockCode, DD.StockDescription, DD.StockID,
    sum(CASE WHEN DM.DocType = 'Sales Order' THEN DD.Qty Else 0 END) as [SOQty],
    sum(CASE WHEN DM.DocType = 'Invoice' THEN DD.Qty Else 0 END) as [InvQty],
    sum(CASE WHEN DM.DocType = 'Sales Order'	THEN  PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ELSE 0 END) as [SOVal],
    sum(CASE WHEN DM.DocType = 'Invoice'		THEN  PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ELSE 0 END) as [InvVal],
    min(DateCreated) as [DateCreated], max(DateCompleted) as [LastDate],
    isnull(DD.ProjectID, DM.ProjectID) as [ProjectID],DM.DivisionID,
    ClientPO,
    max(CASE WHEN DM.DocType = 'Sales Order' THEN DD.ETADate ELSE null END) as [DueDate],
    CASE WHEN isnull(DD.ComponentOfLineID,0)  > 0 THEN 1 ELSE 0 END as [IsComponent]
    FROM DEBTOR_DETAIL DD
    LEFT JOIN (SELECT DocID,DocNo, DocType, DocStatus,DateCreated, DateCompleted, ProjectID,Entityid,ClientPO,DivisionID FROM DEBTOR_MASTER) DM
    ON DD.DocID = DM.DocID
    where doctype in ('Sales Order', 'Invoice')
    Group by DM.EntityID, DD.IsPurchased,DD.StockCode, DD.StockDescription,isnull(DD.ProjectID, DM.ProjectID),ClientPO,DD.StockID,DM.DivisionID,
    CASE WHEN isnull(DD.ComponentOfLineID,0)  > 0 THEN 1 ELSE 0 END 
  	) A

--In Stores
LEFT JOIN (SELECT StockID, sum(qty * Ratio ) as [QtyStores],DivisionID FROM AccStockControl WITH(NOLOCK) where Adjustdate <= Getdate()  group by StockID,DivisionID) SC
ON A.StockID = SC.StockID AND A.DivisionID = SC.DivisionID
--On Purchase Order
LEFT JOIN (SELECT CD.StockID, sum(CD.Qty * SoldByToPurchasedByRatio) as [QtyPO], min(DateCompleted) as [ETA],
	CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END AS [DivisionID]
	from CREDITOR_DETAIL CD 
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID,Deliverydate FROM CREDITOR_MASTER WITH(NOLOCK)) CM
        ON CD.DocID = CM.DocID
        LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock WITH(NOLOCK)) Stk
        ON CD.StockID = Stk.StockID 
		where DocType = 'Purchase Order' AND CONVERT(VARCHAR,isnull(Datecreated, Getdate()),111) <= CONVERT(VARCHAR,Getdate(),111) AND CONVERT(VARCHAR,isnull(Deliverydate, Getdate()),111)  >= CONVERT(VARCHAR,Getdate(),111)
        --where DocType = 'Purchase Order' AND isnull(Datecreated, Getdate()) <= Getdate() AND isnull(Deliverydate, Getdate())  >= Getdate()  
        Group By CD.StockID,CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END) PO
ON A.StockID = PO.StockID  AND A.DivisionID = PO.DivisionID
--On GRN
LEFT JOIN (SELECT CD.StockID, sum(CD.Qty * SoldByToPurchasedByRatio) as [QtyGRN], min(DateCompleted) as [ETA],
	CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END AS [DivisionID]
	from CREDITOR_DETAIL CD WITH(NOLOCK)
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID,Deliverydate FROM CREDITOR_MASTER WITH(NOLOCK)) CM
        ON CD.DocID = CM.DocID
        LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock WITH(NOLOCK)) Stk
        ON CD.StockID = Stk.StockID 
		where DocType = 'Goods Received Note' AND CONVERT(VARCHAR,isnull(Datecreated, Getdate()),111) <= CONVERT(VARCHAR,Getdate(),111) AND CONVERT(VARCHAR,isnull(Deliverydate, Getdate()),111)  >= CONVERT(VARCHAR,Getdate(),111)
        --where DocType = 'Purchase Order' AND isnull(Datecreated, Getdate()) <= Getdate() AND isnull(Deliverydate, Getdate())  >= Getdate()  
        Group By CD.StockID,CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END) GRN
ON A.StockID = GRN.StockID  AND A.DivisionID = GRN.DivisionID
--On Sales Order
LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtySO],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID]
	from DEBTOR_DETAIL DD WITH(NOLOCK)
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER WITH(NOLOCK)) DM
        ON DD.DocID = DM.DocID
        where DocType = 'Sales Order' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= Getdate() AND DateCreated < = Getdate()  
        Group By DD.StockID,CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) SO
ON A.StockID = SO.StockID  AND A.DivisionID = SO.DivisionID
--On Invoice
LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtyINV],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID]
	from DEBTOR_DETAIL DD
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER WITH(NOLOCK)) DM
        ON DD.DocID = DM.DocID
        where DocType = 'Invoice' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= Getdate() AND DateCreated < = Getdate()  
        Group By DD.StockID,CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) INV
ON A.StockID = INV.StockID  AND A.DivisionID = INV.DivisionID
--Required For Manufacture
LEFT JOIN (SELECT MD.StockID, Sum(MD.Qty * M.Qty) as [QtyForManuf],DivisionID FROM AccManufacture_Detail MD  WITH(NOLOCK)
	LEFT JOIN AccManufacture M WITH(NOLOCK) ON MD.DocID = M.DocID
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= Getdate() AND DateCreated < = Getdate() 
	Group by  MD.StockID,DivisionID )Manuf
ON A.StockID = Manuf.StockID  AND A.DivisionID = Manuf.DivisionID
--Under Manufacture
LEFT JOIN (SELECT M.StockID, Sum(M.Qty) as [QtyUnderManuf],DivisionID FROM AccManufacture M WITH(NOLOCK)
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= Getdate() AND DateCreated < = Getdate()  
	GROUP By M.StockID,DivisionID) UManuf
ON A.StockID = UManuf.StockID  AND A.DivisionID = uManuf.DivisionID
--Split Stock Manufacturing
LEFT JOIN (SELECT SD.StockID, LL.LinkedTo as [DivID],
	sum(Case when isnull(SD.IsInput,0) = 1 THEN Qty * Length ELSE 0 END) as [SplitInput],
	sum(Case when isnull(SD.IsInput,0) = 0 THEN Qty * Length ELSE 0 END) as [SplitOutput]
	FROM ACCStock_Split_Master SM WITH(NOLOCK)
	LEFT JOIN (SELECT * FROM AccStock_Split_Detail WITH(NOLOCK)) SD ON SM.DocID = SD.DocID
	LEFT JOIN LinkLookup LL ON SD.ContainerID = LL.LinkLookupID
	WHERE SM.DocStatus <> 'Completed' AND SM.DateCreated <= Getdate()
	Group by SD.StockID, LL.LinkedTo)  SS
ON A.StockID = SS.StockID and A.DivisionID = SS.DivID
LEFT JOIN (SELECT EntityID, AccountNum, Company FROM Entity) E
ON A.EntityID = E.EntityID
LEFT JOIN (SELECT ProjectID, ProjectName, ProjectNum FROM Projects) P
ON A.ProjectID = P.ProjectID

LEft Join (Select stockid,resourcesource,istangible from accstock ) ACC
On ACC.StockID = A.StockID
Left Join Lookup L
on ACC.ResourceSource = L.LookupID

WHERE (SoQty <> 0 AND (InvQty - SOQty < 0))
{where}


ORDER BY E.Company, DateCreated  ","0","","1","LRA-FUSION","0","0","fusion"
"40239","cv_Create_User_TempTable","","--cv_Create_User_TempTable



if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[temp_print_assessment_ID{userID}]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)

BEGIN
Delete from [dbo].[temp_print_assessment_ID{userID}]

end 


else

begin 
CREATE TABLE [dbo].[temp_print_assessment_ID{userID}](
	[tempcol1] [varchar](500) NULL,
	[tempcol2] [varchar](500) NULL,
	[tempcol3] [varchar](500) NULL,
	[tempcol4] [varchar](500) NULL,
	[tempcol5] [varchar](500) NULL,
	[tempcol6] [varchar](500) NULL,
	[tempcol7] [varchar](500) NULL,
	[tempcol8] [varchar](500) NULL,
	[tempcol9] [varchar](500) NULL,
	[Ranking1] [int] NULL,
	[Ranking2] [varchar](500) NULL,
	[Ranking3] [int] NULL
) ON [PRIMARY]

end ","0","","1","LRA-FUSION","0","0","fusion"
"40240","cv_EntityAddressDefault","","SELECT TOP 1 
	CASE ISNULL(Address1, '') WHEN '' THEN '' ELSE ISNULL(Address1, '') + ', ' END +
	CASE ISNULL(Address2, '') WHEN '' THEN '' ELSE ISNULL(Address2, '') + ', ' END +
	CASE ISNULL(Address3, '') WHEN '' THEN '' ELSE ISNULL(Address3, '') + ', ' END +
	CASE ISNULL(City, '') WHEN '' THEN '' ELSE ISNULL(City, '') + ', ' END +
	CASE ISNULL(Region, '') WHEN '' THEN '' ELSE ISNULL(Region, '') + ', ' END +
	CASE ISNULL(Country, '') WHEN '' THEN '' ELSE ISNULL(Country, '') + ', ' END +
	CASE ISNULL(Code, '') WHEN '' THEN '' ELSE ISNULL(Code, '') END
FROM EntityAddress 
WHERE ISNULL(IsDefault,0) = 1
AND EntityID = {entityid}","0","","1","LRA-FUSION","0","0","fusion"
"40241","cv_Tool_Man","","SELECT 
	TD.ToolID
	, ISNULL(E.AccountNum,'') as [Account Num]
	, E.Company As [Company] 
	, A.StockCode as [Part Code]
	, A.StockDescription as [Part Description]
	, LTS.Value as [Shape]
	, LTNC.value as [No Of Cavity]
	, TD.ToolNo as [Tool No]
	, TD.ToolNoID as [ID]
	, TD.ToolOD as [OD]
	, TD.ToolPCD as [PCD]
	, TD.ToolHoles as [Holes]
	, TD.ToolSize as [Size]
FROM ToolDetails TD
LEFT JOIN (
	SELECT EntityID, AccountNum, Company FROM Entity
) E ON E.EntityID = TD.EntityID
LEFT JOIN (
	SELECT StockID, StockCode, StockDescription FROM AccStock
) A ON A.StockID = TD.LinkedStockID
LEFT JOIN (
	SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'ToolShape'
) LTS ON LTS.LookupID = TD.ShapeID
LEFT JOIN (
	SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'ToolNoOfCavity'
) LTNC ON LTNC.LookupID = TD.NoOfCavitiesID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40242","cv_Subscription_DriverSheet","","SELECT 
	E.Company as [Company Name]
	,[Attention]
	,NumCopies as [Qty]
	,T.Value as [Delivery Address]
	,EA.Address1 as [Physical Address 1]
	,EA.Address2 as [Physical Address 2]
	,ISNULL(EA.Address3,'')
	+ ISNULL(CHAR(13) + EA.City,'')
	+ ISNULL(CHAR(13) + EA.Region,'')
	as [Physical Address 3]
	,S.PreferredRoute as [Route]
	,E.Switchboard as [Work Phone]
	,'                 ' as [Sign]
FROM Subscriptions S
Left Join Lookup T on T.LookupID=S.DeliveryAreaID
LEFT JOIN (
	SELECT 
		EntityID
		, Company 
		, Switchboard
	FROM Entity
) E
ON E.EntityID = S.EntityID
LEFT JOIN (
	SELECT 
		EntityContactID
		, EntityID
		, PhysicalAddrID
		, ISNULL(FirstName,'') + ' ' + ISNULL(Surname,'') as [Attention] 
	FROM EntityContact
) EC ON EC.EntityContactID = S.EntityContactID
LEFT JOIN (
	SELECT 
		EntityAddressID
		,EntityID
		,AddressType
		,Address1
		,Address2
		,Address3
		,City
		,Region
		,Code
		,Country
		,[State]
		,TempID
		,IsDefault
	FROM EntityAddress
) EA ON EA.EntityAddressID = EC.PhysicalAddrID

{where}
order by S.PreferredRoute","0","","1","LRA-FUSION","0","0","fusion"
"40243","cv_Subscription_CourierSheet","","SELECT 
	E.Company as [Company Name]
	,[Attention]
	,NumCopies as [Qty]
	,EA.Address1 as [Physical Address 1]
	,EA.Address2 as [Physical Address 2]
	,ISNULL(EA.Address3,'') as [Physical Address 3]
	,EA.City as [Physical Address 4]
	,EA.Code as [Physical Code]
	,EA.Region as [Province]
	,EA.Country
	,E.Switchboard as [Work Phone]

FROM Subscriptions S
LEFT JOIN (
	SELECT 
		EntityID
		, Company 
		, Switchboard
	FROM Entity
) E
ON E.EntityID = S.EntityID
LEFT JOIN (
	SELECT 
		EntityContactID
		, EntityID
		, PhysicalAddrID
		, ISNULL(FirstName,'') + ' ' + ISNULL(Surname,'') as [Attention] 
	FROM EntityContact
) EC ON EC.EntityContactID = S.EntityContactID
LEFT JOIN (
	SELECT 
		EntityAddressID
		,EntityID
		,AddressType
		,Address1
		,Address2
		,Address3
		,City
		,Region
		,Code
		,Country
		,[State]
		,TempID
		,IsDefault
	FROM EntityAddress
) EA ON EA.EntityAddressID = EC.PhysicalAddrID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40244","Create_DeliveryItem","","
select  'BuySellUnits' as Class ,'Units' as Value
into #temp


insert into lookup(class,value)
Select 
LL.Class,
LL.Value
From #temp LL
left join lookup  L ON L.value = LL.value AND L.Class = LL.Class
where L.lookupID is null




insert into AccStock(Stockcode, StockDescription, IsTangible, RequiresScanning, PurchasedBy, SoldBy, SoldByToPurchasedByRatio, IsManufactured,JournalId)
SELECT 
'DEL001' as [Stockcode],
'Delivery Fee' as [StockDescription],  
0 as [IsTangible],
0 as [RequiresScanning], 
(select top 1 lookupid from lookup where value like  'Units' and class like  'BuySellUnits') as [PurchasedBy],
(select top 1 lookupid FROM Lookup where value like  'Units' and class like  'BuySellUnits') as [SoldBy], 
1 as [SoldByToPurchasedByRatio],
0 as[ IsManufactured], 
(select top 1 lookupid from lookup where class like 'JournalType' and value like 'Accrued Income' ) as [JournalId]
 

INSERT INTO AccStockPrice
(
    StockId,
    DivisionId,
    CostPriceEx,
    SellingPriceEx,
    MinSellingPriceEx,
    CostPriceExBuffer,
    RentalPriceEx,
    IsMarginBased,
    Markup,
    IsForExDependant,
    ExchangeRateID,
    ForExMultiplier,
    ForexBasePrice,
    ConvertExchangeRateID,
    ForexDepTotal,
    PriceFromDocTotals,
    CalcPriceUsing,
    CalcPriceUsingPerc,
    UseLandedCost,
    LastUpdated,
    PriceCategoryID,
    ValidFrom,
    ValidTo,
    SupplierID,
    IsContract
)

SELECT DISTINCT
    (select top 1 StockID from accstock where StockCode = 'DEL001' AND StockDescription = 'Delivery Fee') as [StockId],
    (Select top 1 lookupID from lookup where Class like 'Division') as [DivisionId],
    0 as [CostPriceEx],
    0 as [SellingPriceEx],
    0 as [MinSellingPriceEx],
    0 as [CostPriceExBuffer],
    0 as [RentalPriceEx],
    1 as [IsMarginBased],
    0 as [Markup],
    0 as [IsForExDependant],
    0 as [ExchangeRateID],
    0 as [ForExMultiplier],
    0 as [ForexBasePrice],
    0 as [ConvertExchangeRateID],
    0 as [ForexDepTotal],
    0 as [PriceFromDocTotals],
    0 as [CalcPriceUsing],
    0 as [CalcPriceUsingPerc],
    0 as [UseLandedCost],
    GETDATE()  as [LastUpdated],
    (Select top 1 lookupID from lookup where Class like 'PriceCategory') as [PriceCategoryID],
    CONVERT(VARCHAR,YEAR(GETDATE())) + '/01/01' as [ValidFrom],
    convert(varchar,DATEADD(YEAR,1,GETDATE()),111) as [ValidTo],
    0 as [SupplierID],
    0 as [IsContract]


DROP TABLE #temp","0","","1","LRA-FUSION","0","0","fusion"
"40245","cv_DeliverySchedule_BatchAmount","","Select Sum([Loginet Amount]) as Total from (
select CASE WHEN UPPER(DM.Country) = 'LOCAL' THEN
        CAST(
            (CASE 
                WHEN 
                    ISNULL(tonnageValueID,0) <> 0 
                THEN 
                    (([TonTotal]) * CAST(T.value AS MONEY)) 
                ELSE 
                    ([InvoiceTotal]- Discount) 
            * 
            (
                (ISNULL(CAST(CASE ISNUMERIC(REPLACE(LABC.Value,'%','')) WHEN 1 THEN REPLACE(LABC.Value,'%','') ELSE 0 END AS MONEY),0) / 100)
             ) END)
        as DECIMAL(12,2)) 
        when upper(DM.Country) = 'NATIONAL' then 
        CAST(
            (CASE 
                WHEN 
                    ISNULL(tonnageValueID,0) <> 0 
                THEN 
                    (([TonTotal]) * CAST(T.value AS MONEY)) 
                ELSE 
                    ([InvoiceTotal]- Discount) 
            * 
            (
                (ISNULL(CAST(CASE ISNUMERIC(REPLACE(LEC.Value,'%','')) WHEN 1 THEN REPLACE(LEC.Value,'%','') ELSE 0 END AS MONEY),0) / 100)
            ) END
                    )
        AS DECIMAL(12,2)) 
        --end
    ELSE
        '00.00'
    END AS [Loginet Amount]
FROM Debtor_Master DM
LEFT JOIN (
	SELECT 
		EntityID,
		Company, 
		EntityCategoryID,
		ABCCatID 
	FROM Entity
) E ON E.EntityID = DM.EntityID 
LEFT JOIN (
    SELECT 
        DocID
        ,CAST(SUM((PriceEx * Qty )) AS DECIMAL(12,2)) AS [InvoiceTotal] 
        ,SUM(Weight) AS [Weight]
         ,SUM(PriceEx * Qty * (ISNULL(discperc,0))/100) AS [Discount]
        ,CAST(SUM((PriceEx)) AS DECIMAL(12,2)) AS [TonTotal] 
    FROM Debtor_Detail DD
    LEFT JOIN accstock AC ON DD.StockID = AC.StockID
    GROUP BY DocID
) DD ON DD.DocID = DM.DocID
LEFT JOIN (
	SELECT 
		* 
	FROM DeliverySchedule
) DS ON DS.DocID = DM.DocID
LEFT JOIN (
    SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'abc'
) LABC ON LABC.LookupID = E.ABCCatID
LEFT JOIN (
    SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'category'
) LEC ON LEC.LookupID = E.EntityCategoryID
LEFT JOIN (
	SELECT * FROM Lookup
) T ON T.LookupID = DS.tonnageValueID
WHERE DocType = 'Invoice' AND DocStatus = 'Completed'

AND DM.docID in ({ids}) ) X
","0","","1","LRA-FUSION","0","0","fusion"
"40246","cv_Acc_Check_Un-Allocated_Expenditure","","--cv_Acc_Check_Un-Allocated_Expenditure
DECLARE @docid as integer
SET @DocID = {docid}

SELECT sum(DD.Qty) - isnull(Scanned,0) as [Un-Allocated], DD.StockDescription 
FROM EXPENDITURE_MASTER DD
LEFT JOIN AccStock STK ON DD.StockID = STK.StockID
LEFT JOIN (SELECT StockID, DocID, DocType, abs(sum(qty * ratio)) as [Scanned] FROM AccStockControl WHERE DocID = @DocID GROUP BY StockID, DocID, DocType ) SC
ON DD.StockID = SC.StockID AND DD.DocType = Sc.DocType AND DD.DocID = SC.DocID 
Where DD.docID = @DocID
AND isnull(Stk.RequiresScanning,0) = 1
Group by SC.Scanned, DD.StockDescription
HAVING sum(DD.Qty) > isnull(Scanned,0) ","0","","1","LRA-FUSION","0","0","fusion"
"40247","cv_Acc_Scan_Disbursement","","Declare @DocID as integer
Set @DocID =  {docid}


SELECT convert(varchar,DD.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, Sum(Qty) - isnull(SC.[QtyScanned],0) as [Qty], 'NOT SCANNED' as [S/N] 
FROM EXPENDITURE_MASTER DD
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON DD.StockID = STK.StockID
LEFT JOIN (SELECT DocID, DocType, StockID,  sum(abs(Qty * Ratio)) as [QtyScanned] FROM  AccStockControl where DocID = @DocID Group by DocID, DocType, StockID) SC
ON DD.DocID = SC.DocID  AND DD.DocType = SC.DocType AND SC.StockID = DD.StockID
WHERE DD.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1
GROUP BY STK.StockDescription,SC.[QtyScanned], DD.StockID
HAVING Sum(Qty) - isnull(SC.[QtyScanned],0) > 0

UNION ALL

SELECT convert(varchar,STK.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, [QtyScanned], SC.SerialNumber
FROM EXPENDITURE_MASTER DM
LEFT JOIN (SELECT  DocID, DocType, StockID, SerialNumber,abs(Qty * Ratio) as [QtyScanned]  FROM AccStockControl) SC
ON DM.DocID = SC.DocID AND DM.DocType = SC.DocType
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON SC.StockID = STK.StockID
WHERE DM.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1","0","","1","LRA-FUSION","0","0","fusion"
"40248","cv_Acc_Document_Number_Setup","","DECLARE @DivID as integer
SET @DivID =  {divid}


SELECT convert(varchar,isnull(DNS.DocumentNumberSetupID,0)) + '#' + A.[Doc. Type] as [ID], A.[Doc. Type], StartingNumber as [Starting Doc. No.]
FROM (
	SELECT 'Quote' as [Doc. Type]
	UNION ALL
	SELECT 'Sales Order'
	UNION ALL
	SELECT 'Invoice'
	UNION ALL
	SELECT 'Credit Note'
	UNION ALL
	SELECT 'Payment Receipt'
	UNION ALL
	SELECT 'Dispatch Note'
	UNION ALL
	SELECT 'Purchase Order'
	UNION ALL
	SELECT 'Supplier Invoice'
	UNION ALL
	SELECT 'Supplier Credit Note'
	UNION ALL
	SELECT 'Supplier Payment'
	UNION ALL
	SELECT 'Goods Received Note'
) A
LEFT JOIN (SELECT * FROM accDocumentNumberSetup WHERE DivisionID = @DivID) DNS
ON A.[Doc. Type] = DNS.DocumentType","0","","1","LRA-FUSION","0","0","fusion"
"40249","cv_Acc_Inventory_Shortfall","","--cv_Acc_Inventory_Shortfall
DECLARE @DocID as int
SET @DocID =  {docid}

SELECT 
Convert(varchar,D.LineID) + '#' + Convert(varchar,isnull(D.PriceCategoryID,0))  as [ID], 
CASE WHEN D.ComponentOfLineID > 0 THEN '-    ' ELSE '' END + D.StockCode as [Code], 
CASE WHEN D.ComponentOfLineID > 0 THEN '-    ' ELSE '' END + D.StockDescription as [Description],
LR.Value as [Resource Source],
E.Company as [Supplier],
LL.Value as [Container],
LU.Value as [Unit],
isnull(convert(varchar,ETA.ETA,111),'') as [Next ETA],
D.Qty * isnull(DDM.Qty,1) as [Qty On Doc.],
isnull(SO.Qty,0) - isnull(DN.Qty,0) -(D.Qty * isnull(DDM.Qty,1) ) as [On S.O.],
isnull(MC.Qty,0) as [For Manufacturing], 

isnull([Qty In Container],0) as [Qty In Container],
(isnull(PO.Qty,0) - isnull(GRN.Qty,0)) * SoldByToPurchasedByRatio  as [On P.O.],
isnull(MO.Qty,0) as [Being Manufactured],
isnull(STK.Fulfillment,0) as [Fulfillment],

isnull([Qty In Container],0) --In Container
-
(isnull(SO.Qty,0) - isnull(DN.Qty,0)) --On S.O. & Required
-
CASE WHEN isnull(MC.RaisedByDocType,'') ='Sales Order' then  0 ELSE isnull(MC.Qty,0) END  --For Manufacturing 
as [Available],
isnull(STK.Fulfillment,0) --Fulfillment
-
isnull(MO.Qty,0) --Being Manufactured
- 
((isnull(PO.Qty,0) - isnull(GRN.Qty,0)) * SoldByToPurchasedByRatio ) --On P.O.
-
(
    isnull([Qty In Container],0) --In Container
    -
    (isnull(SO.Qty,0) - isnull(DN.Qty,0)) --On S.O. & Required
    -
    CASE WHEN isnull(MC.RaisedByDocType,'') ='Sales Order' then  0 ELSE isnull(MC.Qty,0) END --For Manufacturing 
) as [Recommended]
FROM {table}_DETAIL D 
LEFT JOIN (SELECT LineID, Qty FROM {table}_DETAIL) DDM
ON D.ComponentOfLineID = DDM.LineID
LEFT JOIN (SELECT StockID,ResourceSource, IsTangible, SoldBy,MinReorderAmt, Fulfillment, ReOrderLevel,SoldByToPurchasedByRatio FROM AccStock) STK
ON D.StockID = STK.StockID
LEFT JOIN (Select Value,LookupID from Lookup) LR
ON STK.ResourceSource = LR.LookupID
LEFT JOIN (SELECT * FROM Lookup) LU
ON STK.SoldBy = LU.LookupID
LEFT JOIN (SELECT * FROM LinkLookup) LL 
ON D.ContainerID = LL.LinkLookupID
LEFT JOIN (SELECT StockID,ContainerID, sum(Qty * Ratio) as [Qty In Container] FROM AccStockControl Group by StockID,ContainerID) SC
ON D.StockID = SC.StockID AND D.ContainerID = SC.ContainerID
LEFT JOIN (SELECT EntityID, Company FROM Entity)  E
ON D.SupplierID = E.EntityID
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
            LEFT JOIN (SELECT DOCID, DocType FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
            ON DD.DocID = DM.DocID
            LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*DEBTOR_DETAIL*/) DDM
            ON DD.ComponentOfLineID = DDM.LineID
            WHERE DM.DocType = 'Sales Order'
            Group by StockID, ContainerID ) SO
ON D.StockID = SO.StockID AND D.ContainerID = SO.ContainerID    
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
            LEFT JOIN (SELECT DOCID, DocType FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
            ON DD.DocID = DM.DocID
            LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*DEBTOR_DETAIL*/) DDM
            ON isnull(DD.ComponentOfLineID,0) = DDM.LineID
            WHERE DM.DocType = 'Dispatch Note'
            Group by StockID, ContainerID ) DN
ON D.StockID = DN.StockID AND D.ContainerID = DN.ContainerID    
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Purchase Order'
            Group by StockID, ContainerID ) PO
ON D.StockID = PO.StockID AND D.ContainerID = PO.ContainerID  
LEFT JOIN (SELECT StockID, ContainerID, min(CD.ETADate) as [ETA] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Purchase Order'
            AND CD.ETADate is not null
            AND CD.ETADate >= getdate()
            Group by StockID, ContainerID ) ETA
ON D.StockID = ETA.StockID AND D.ContainerID = ETA.ContainerID  
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Goods Received Note'
            Group by StockID, ContainerID ) GRN
ON D.StockID = GRN.StockID AND D.ContainerID = GRN.ContainerID  
LEFT JOIN (SELECT MD.StockID, MD.ContainerID, Sum(MD.Qty) as [Qty],MM.RaisedByDocType FROM AccMANUFACTURE_DETAIL MD
            LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType FROM AccMANUFACTURE) MM
            ON MD.DocID = MM.DocID
            WHERE isnull(MM.IsComplete,0) = 0 
            Group by MD.StockID, MD.ContainerID, MM.RaisedByDocType) MC
ON D.StockID = MC.StockID AND D.ContainerID = MC.ContainerID
LEFT JOIN (SELECT MO.StockID, MO.ContainerID, sum(MO.Qty) as [Qty],MM.RaisedByDocType FROM AccMANUFACTURE_Output MO
            LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType FROM AccMANUFACTURE) MM
            ON MO.DocID = MM.DocID
            WHERE isnull(MM.IsComplete,0) = 0 
            Group by MO.StockID, MO.ContainerID,MM.RaisedByDocType) MO
ON D.StockID = MO.StockID AND D.ContainerID = MO.ContainerID
WHERE isnull(STK.IsTangible,0) = 1
AND D.DocID = @DocID
ORDER BY (CASE WHEN isnull(ComponentofLineID,0) =0 THEN D.LineID ELSE ComponentofLineID END )

","0","","1","LRA-FUSION","0","0","fusion"
"40250","cv_Ticket_Supplier_Contacts","","select ec.entitycontactid, isnull(firstname,'') + ' ' + isnull(surname,'') as [contact], isnull(ac.EntityContactID,0) as [Assigned]
from entitycontact ec
left join TicketSuppliercontacts ac
on ac.entitycontactid = ec.entitycontactid and ac.TicketID = <%apptid%>
where ec.entityID = <%eid%> 
","0","","1","LRA-FUSION","0","0","fusion"
"40251","cv_Risk_UNDERWRITINGFACTORS_print","","DECLARE @ID AS INT

SET @ID = {riskID}

SELECT DISTINCT
	CONVERT(VARCHAR,DAY(GETDATE())) + ' day of '  + DBO.[GetMonthFromInt](MONTH(GETDATE())) + ' ' + CONVERT(VARCHAR,YEAR(GETDATE())) + ' day of' AS [<date>], 
	--***************************************************************************************
	isnull(BUA.[Desc],'') AS [<bua>] ,
	isnull(DBA.[Desc],'') AS [<dba>] ,
	isnull(AOBY.[Desc],'') AS [<aoby>] ,
	isnull(CELP.[Desc],'') AS [<celp>] ,
	isnull(OLRO.[Desc],'') AS [<olro>] ,
	isnull(AAOP.[Desc],'') AS [<aaop>] ,
	isnull(ESPP.[Desc],'') AS [<espp>] ,
	isnull(RT.[Desc],'') AS [<rt>] ,
	isnull(HCSO.[Desc],'') AS [<hcso>] ,
	isnull(FAB.[Desc],'') AS [<fab>] ,
	isnull(ACGP.[Desc],'') AS [<acgp>] ,
	isnull(DNCB .[Desc],'') AS [<dncb >] ,
	isnull(MHT.[Desc],'') AS [<mht>] ,
	isnull(OTS.[Desc],'') AS [<ots>] ,
	isnull(IYDMH.[Desc],'') AS [<iydmh>] ,
	isnull(TTWR.[Desc],'') AS [<ttwr>] ,
	isnull(YOLT.[Desc],'') AS [<yolt>] ,
	isnull(CAOR.[Desc],'') AS [<caor>] ,
	isnull(SALC.[Desc],'') AS [<salc>] ,
	isnull(CAORL.[Desc],'') AS [<caorl>] ,
	isnull(WSS.[Desc],'') AS [<wss>] ,
	isnull(WWSL.[Desc],'') AS [<wwsl>] ,
	isnull(ES.[Desc],'') AS [<es>] ,
	isnull(S.[Desc],'') AS [<s>] ,
	isnull(CK.[Desc],'') AS [<ck>] ,
	isnull(CSY.[Desc],'') AS [<csy>] ,
	isnull(EBS.[Desc],'') AS [<ebs>] ,
	isnull(HOC.[Desc],'') AS [<hoc>] ,
	isnull(BB.[Desc],'') AS [<bb>] ,
	isnull(DLB.[Desc],'') AS [<dlb>] ,
	isnull(LARL.[Desc],'') AS [<larl>] ,
	isnull(FDOB.[Desc],'') AS [<fdob>] ,
	isnull(FKAB.[Desc],'') AS [<fkab>] ,
	isnull(ATG.[Desc],'') AS [<atg>] ,
	isnull(ATGC.[Desc],'') AS [<atgc>] ,
	isnull(HATGC.[Desc],'') AS [<hatgc>] ,
	isnull(GOG.[Desc],'') AS [<gog>] ,
	isnull(GHOT.[Desc],'') AS [<ghot>] ,
	isnull(BNAW.[Desc],'') AS [<bnaw>] ,
	isnull(WDFB.[Desc],'') AS [<wdfb>] ,
	isnull(BFLL.[Desc],'') AS [<bfll>] ,
	isnull(DWS.[Desc],'') AS [<dws>] ,
	isnull(NOPWS.[Desc],'') AS [<nopws>] ,
	isnull(VROD.[Desc],'') AS [<vrod>] ,
	isnull(DLD.[Desc],'') AS [<dld>] ,
	isnull(NOPD.[Desc],'') AS [<nopd>] ,
	isnull(PBOCS.[Desc],'') AS [<pbocs>] ,
	isnull(HOSA.[Desc],'') AS [<hosa>] ,
	isnull(VSC.[Desc],'') AS [<vsc>] ,
	isnull(DSC.[Desc],'') AS [<dsc>] ,
	isnull(NOPSC.[Desc],'') AS [<nopsc>] ,
	isnull(VRC.[Desc],'') AS [<vrc>] ,
	isnull(DRC.[Desc],'') AS [<drc>] ,
	isnull(NOPRC.[Desc],'') AS [<noprc>] ,
	isnull(VPC.[Desc],'') AS [<vpc>] ,
	isnull(DPC.[Desc],'') AS [<dpc>] ,
	isnull(NOPPC.[Desc],'') AS [<noppc>] ,
	isnull(VSPSC.[Desc],'') AS [<vspsc>] ,
	isnull(DSPSC.[Desc],'') AS [<dspsc>] ,
	isnull(NOPSPSC.[Desc],'') AS [<nopspsc>] ,
	isnull(DTAP.[Desc],'') AS [<dtap>] ,
	isnull(DDTAP.[Desc],'') AS [<ddtap>] ,
	isnull(AAPM.[Desc],'') AS [<aapm>] ,
	isnull(DAA.[Desc],'') AS [<daa>] ,
	isnull(MAIV.[Desc],'') AS [<maiv>] ,
	isnull(DMA.[Desc],'') AS [<dma>] ,
	isnull(MCOP.[Desc],'') AS [<mcop>] ,
	isnull(ABWP.[Desc],'') AS [<abwp>] ,
	isnull(TCC.[Desc],'') AS [<tcc>] ,
	isnull(BOS.[Desc],'') AS [<bos>] ,
	isnull(ARLR.[Desc],'') AS [<arlr>] ,
	isnull(PPVO.[Desc],'') AS [<ppvo>] ,
	isnull(SDROW.[Desc],'') AS [<sdrow>],
	isnull(FBW.[Desc],'') AS [<fbw>],
	isnull(TOFB.[Desc],'') AS [<tofb>],
	[dbo].[RISKSECURITYSYSTEMSQA] (@ID) AS [<sysfeat>],
	[dbo].[RISKSURGELIGHTNING PROTECTION] (@ID) AS [<lightprotec>],
	[dbo].[RISKSTAINS] (@ID) AS [<stains>]
	
--*******************************
FROM 
 Risk_Assessment_Master RAM  
LEFT JOIN Risk_Assessment RA ON RA.AssessmentID = RAM.AssessmentID  
LEFT JOIN (SELECT FirstName,Surname,EntityContactID,PhysicalAddrID,PostalAddrID FROM EntityContact) EC ON EC.EntityContactID = RA.EntityContactID  
LEFT JOIN EntityAddress EAR ON EC.PhysicalAddrID = EAR.EntityAddressID  
LEFT JOIN EntityAddress EAP ON EC.PostalAddrID = EAP.EntityAddressID  
LEFT JOIN (SELECT RiskAssessmentID,RiskAssessmentSectionID FROM Risk_Assessment_Section) RAS ON RAM.AssessmentID = RAS.RiskAssessmentID  
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID FROM Risk_Assessment_Category) RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT RiskAssessmentCategoryID,Price from Risk_Assessment_Item) RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID  
LEFT JOIN (SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') AS [Surveyor] FROM Staff) U   ON RAM.SurveyorID = U.StaffID 
LEFT JOIN (
SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') AS [Surveyor] FROM Staff) UR   
	ON RAM.ReplacementSurveyorID = UR.StaffID  
LEFT JOIN  Risk_AssessmentNo RAN 
	ON RAN.RiskAssessmentID = RAM.RiskAssessmentID  
LEFT JOIN (SELECT Company,EntityID FROM Entity) EI 
	ON EI.EntityID = RAM.InsurerID  
LEFT JOIN (SELECT Company,EntityID FROM Entity) EB 
	ON EB.EntityID = RAM.BrokerID  
LEFT JOIN OrderForm O 
	ON RAM.OrderID = O.OrderID  
--**********************************************SECURITY AND GENERAL*****************************************
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Building used as:%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) BUA ON RAM.RiskAssessmentID = BUA.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If office Describe Business Activity%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) DBA ON RAM.RiskAssessmentID = DBA.RiskAssessmentID 
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%What is the approximate age of buildings (years)?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) AOBY ON RAM.RiskAssessmentID = AOBY.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Does the client ever leave the property ucoccupied for more thant 30 days per annum?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) CELP ON RAM.RiskAssessmentID = CELP.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Does the owner live at the property or rent it out?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) OLRO ON RAM.RiskAssessmentID = OLRO.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Is there any building activity adjacent or opposite the property?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) AAOP ON RAM.RiskAssessmentID = AAOP.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Are there any empty stands or parks adjacent to the property?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) ESPP ON RAM.RiskAssessmentID = ESPP.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Are there any rubber trees on property or visible neighbouring property?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) RT ON RAM.RiskAssessmentID = RT.RiskAssessmentID 
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Has the clinet signed off?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) HCSO ON RAM.RiskAssessmentID = HCSO.RiskAssessmentID 
--**********************************************FARMS AND SMALLHOLDINGS*****************************************
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Are builings on a farm or smallholding? %' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) BFS ON RAM.RiskAssessmentID = BFS.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes: Firebreaks around buidlings?%' AND SectionName LIKE 'SECTION B'  
AND RAS.RiskAssessmentID = @ID) FAB ON RAM.RiskAssessmentID = FAB.RiskAssessmentID   
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Width of firebreaks in Metres?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) FBW ON RAM.RiskAssessmentID = FBW.RiskAssessmentID
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Type of Firebreaks%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) TOFB ON RAM.RiskAssessmentID = TOFB.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Are any crops grown on the property?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) ACGP ON RAM.RiskAssessmentID = ACGP.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Distance of nearest crop to buildings?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) DNCB ON RAM.RiskAssessmentID = DNCB.RiskAssessmentID
--**********************************************THATCH************************************************************************
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Is the main house thatch?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) MHT ON RAM.RiskAssessmentID = MHT.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Are there other thatch structures?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) OTS ON RAM.RiskAssessmentID = OTS.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%If yes: Distance to main  house in Metres%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) IYDMH ON RAM.RiskAssessmentID = IYDMH.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
 where RAI.ItemPrompt like '%Has thatch been treated with retardant?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID
) TTWR ON RAM.RiskAssessmentID = TTWR.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes to above question: Year of last treatment%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) YOLT ON RAM.RiskAssessmentID = YOLT.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Is the certificate available on request (Year of last treatment)?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) CAOR ON RAM.RiskAssessmentID = CAOR.RiskAssessmentID 
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If thatch, are there SABS approved lightning conductor(s)?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) SALC ON RAM.RiskAssessmentID = SALC.RiskAssessmentID
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Is the certificate available on request (lightning conductor(s))%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) CAORL ON RAM.RiskAssessmentID = CAORL.RiskAssessmentID 
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If thatch, is there a water sprinkler system?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) WSS ON RAM.RiskAssessmentID = WSS.RiskAssessmentID 
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%What water source is it linked to?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) WWSL ON RAM.RiskAssessmentID = WWSL.RiskAssessmentID 
--**********************************************FIRE************************************************************************
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Is the electricity supply:%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) ES ON RAM.RiskAssessmentID = ES.RiskAssessmentID 
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Stoves%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) S ON RAM.RiskAssessmentID = S.RiskAssessmentID 
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If GAS, are the cylinders kept:%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) CK ON RAM.RiskAssessmentID = CK.RiskAssessmentID 
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%How often are cylinders serviced? (years)%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) CSY ON RAM.RiskAssessmentID = CSY.RiskAssessmentID 
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Is there an extractor above the stove?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) EBS ON RAM.RiskAssessmentID = EBS.RiskAssessmentID 
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes to above question: How often is it cleaned?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) HOC ON RAM.RiskAssessmentID = HOC.RiskAssessmentID 
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Is there a built in braai?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) BB ON RAM.RiskAssessmentID = BB.RiskAssessmentID 
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes to above question: Describe location (braai)%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) DLB ON RAM.RiskAssessmentID = DLB.RiskAssessmentID 
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%What is the length of the braai chimney above roof level? (Metres)%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) LARL ON RAM.RiskAssessmentID = LARL.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Are there fireplaces in the dwelling or outbuildings?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) FDOB ON RAM.RiskAssessmentID = FDOB.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%What is the length of the fireplace chimney above roof level? (Metres)%%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) LARLF ON RAM.RiskAssessmentID = LARLF.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Is there any firewood stored in or around the dwellings??%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) FWSABD ON RAM.RiskAssessmentID = FWSABD.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Are any flammables kept in or around the builings?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) FKAB ON RAM.RiskAssessmentID = FKAB.RiskAssessmentID  
--**********************************************Water************************************************************************
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Are there gutters?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) ATG ON RAM.RiskAssessmentID = ATG.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes to above question: Are the gutters cleared?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) ATGC ON RAM.RiskAssessmentID = ATGC.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes to above, how often are gutters cleared?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) HATGC ON RAM.RiskAssessmentID = HATGC.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Geysers: Are there any gas operated geysers?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) GOG ON RAM.RiskAssessmentID = GOG.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Do all geysers have overflow trays?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) GHOT ON RAM.RiskAssessmentID = GHOT.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Are the buildings nearby a watercourse?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) BNAW ON RAM.RiskAssessmentID = BNAW.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Watercourse distance from buildings (metres)?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) WDFB ON RAM.RiskAssessmentID = WDFB.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Building floodline level%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) BFLL ON RAM.RiskAssessmentID = BFLL.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes to any of the 3 above questions: Describe water stains%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) DWS ON RAM.RiskAssessmentID = DWS.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%No. of photos (Water stains)%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) NOPWS ON RAM.RiskAssessmentID = NOPWS.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Is there visible rising or other damp?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) VROD ON RAM.RiskAssessmentID = VROD.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes to above question: Describe damp location%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) DLD ON RAM.RiskAssessmentID = DLD.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%No. of photos (Damp)%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) NOPD ON RAM.RiskAssessmentID = NOPD.RiskAssessmentID 
--**********************************************SUBSIDENCE************************************************************************
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Is the property built on clay soil?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) PBOCS ON RAM.RiskAssessmentID = PBOCS.RiskAssessmentID 
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Is there a history of subsidence in the area?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) HOSA ON RAM.RiskAssessmentID = HOSA.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Are there any visible structural cracks?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) VSC ON RAM.RiskAssessmentID = VSC.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes to above question: Describe structural cracks%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) DSC ON RAM.RiskAssessmentID = DSC.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%No. of photos (structural cracks)%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) NOPSC ON RAM.RiskAssessmentID = NOPSC.RiskAssessmentID
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Are there any visible signs of repaired cracks?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) VRC ON RAM.RiskAssessmentID = VRC.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes to above question: Describe repaired cracks%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) DRC ON RAM.RiskAssessmentID = DRC.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%No. of photos (repaired cracks)%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) NOPRC ON RAM.RiskAssessmentID = NOPRC.RiskAssessmentID
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Are there any visible signs of plaster cracks?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) VPC ON RAM.RiskAssessmentID = VPC.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes to above question: Describe plaster cracks%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) DPC ON RAM.RiskAssessmentID = DPC.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%No. of photos (plaster cracks)%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) NOPPC ON RAM.RiskAssessmentID = NOPPC.RiskAssessmentID
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Are there any cracks in the swimming pool or surroundings?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) VSPSC ON RAM.RiskAssessmentID = VSPSC.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes to above question: Describe swimming pool or surroundings cracks%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) DSPSC ON RAM.RiskAssessmentID = DSPSC.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%No. of photos (swimming pool or surroundings cracks)%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) NOPSPSC ON RAM.RiskAssessmentID = NOPSPSC.RiskAssessmentID
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Is there evidence or is the client aware of any damage to adjoining properties?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) DTAP ON RAM.RiskAssessmentID = DTAP.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes: Describe (damage to adjoining properties) %' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) DDTAP ON RAM.RiskAssessmentID = DDTAP.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Have there been alterations/additions in the past 24 months?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) AAPM ON RAM.RiskAssessmentID = AAPM.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes: Describe (alterations/additions)%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) DAA ON RAM.RiskAssessmentID = DAA.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Are there any mining activities in the vicinity?%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) MAIV ON RAM.RiskAssessmentID = MAIV.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%If yes: Describe (mining activities)%' AND SectionName LIKE 'SECTION B'
AND RAS.RiskAssessmentID = @ID) DMA ON RAM.RiskAssessmentID = DMA.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Maintenance / Condition of property%' AND SectionName LIKE 'SECTION C'
AND RAS.RiskAssessmentID = @ID) MCOP ON RAM.RiskAssessmentID = MCOP.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Are there any broken windows on the property?%' AND SectionName LIKE 'SECTION C'
AND RAS.RiskAssessmentID = @ID) ABWP ON RAM.RiskAssessmentID = ABWP.RiskAssessmentID
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Tennis Court condition%' AND SectionName LIKE 'SECTION C'
AND RAS.RiskAssessmentID = @ID) TCC ON RAM.RiskAssessmentID = TCC.RiskAssessmentID  

LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Buildings on a slope%' AND SectionName LIKE 'SECTION C'
AND RAS.RiskAssessmentID = @ID) BOS ON RAM.RiskAssessmentID = BOS.RiskAssessmentID  

LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Any rubbish lying around buildings?%' AND SectionName LIKE 'SECTION C'
AND RAS.RiskAssessmentID = @ID) ARLR ON RAM.RiskAssessmentID = ARLR.RiskAssessmentID  

LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Are there any plug points visibly overloaded?%' AND SectionName LIKE 'SECTION C'
AND RAS.RiskAssessmentID = @ID) PPVO ON RAM.RiskAssessmentID = PPVO.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Is there sufficient drainage for run-off water?%' AND SectionName LIKE 'SECTION C'
AND RAS.RiskAssessmentID = @ID) SDROW ON RAM.RiskAssessmentID = SDROW.RiskAssessmentID  

WHERE RAM.RiskAssessmentID = @ID

--**************************************","0","","1","LRA-FUSION","0","0","fusion"
"40252","cv_Risk_BUILDING_VALUATION_print","","DECLARE @ID AS INT

SET @ID = {riskID}



SELECT Distinct
CONVERT(VARCHAR,GETDATE(),111) AS [<date>], 
isnull(EC.FirstName,'') + ' '+isnull(EC.Surname,'') AS [<client>], 
ISNULL(EAR.Address1,'')+ ' ' +ISNULL(EAR.Address2,'')+ ' ' +ISNULL(EAR.City,'')+ ' ' +ISNULL(EAR.Country,'')+ ' ' +ISNULL(EAR.Code,'') AS [<addressfull>],  
 CONVERT(VARCHAR(7),ISNULL([DATE],''), 120) + '/' +   SUBSTRING('0000000', 1,(LEN('0000000')-LEN(ISNULL(number,'')))) +   
 CONVERT(VARCHAR,ISNULL(number,'')) + '/'+ISNULL(Prefix,'') AS [<assno>],  
dbo.fnFormatNumber(ISNULL(O.ContentsSumInsured,0)) AS [<contentinsured>],
dbo.fnFormatNumber(SUM(ISNULL(RAI.Price,0))) AS [<repcost>],
--***************************************************************************************
	ISNULL(TOD.[Desc],'') AS [<tod>],
	ISNULL(NOF.[Desc],'') AS [<nof>],
	ISNULL(RAM.TotalValue,0) as [<TotalValue>],
	dbo.fnFormatNumber(ISNULL(MDRATE.[Desc],0)) AS [<mdrate>],
	ISNULL(MDTSM.[Desc],'') AS [<mdtsm>],
	dbo.fnFormatNumber(ISNULL(MDRATE.[Desc],0)*ISNULL(MDTSM.[Desc],1)) as [<mdtc>],
	ISNULL(MDCW.[Desc] ,'')AS [<mdcw>],
	ISNULL(MDCR.[Desc],'') AS [<mdcr>],
	ISNULL(MDNS.[Desc],'') AS [<mdns>],
	ISNULL(GCW.[Desc],'') AS [<gcw>],
	ISNULL(GCR.[Desc],'') AS [<gcr>],
	ISNULL(GTSM.[Desc],'') AS [<gtsm>],
	ISNULL(LCW.[Desc],'') AS [<lcw>],
	ISNULL(LCR.[Desc],'') AS [<lcr>],
	ISNULL(LTSM.[Desc],'') AS [<ltsm>],
	ISNULL(PCW.[Desc],'') AS [<pcw>],
	ISNULL(PCR.[Desc],'') AS [<pcr>],
	ISNULL(PTSM.[Desc],'') AS [<ptsm>],
	ISNULL(BC.[Desc],'') AS [<bc>],
	ISNULL(BRT.[Desc],'') AS [<brt>],
	ISNULL(BTSM.[Desc],'') AS [<btsm>],
	ISNULL(FCC.[Desc],'') AS [<fcc>],
	ISNULL(FCTSM.[Desc],'') AS [<fctsm>],
	ISNULL(SPCW.[Desc],'') AS [<spcw>],
	ISNULL(SPCR.[Desc],'') AS [<spcr>],
	ISNULL(SPTSM.[Desc],'') AS [<sptsm>],
	ISNULL(ETEG.[Desc],'') AS [<eteg>],
	ISNULL(EAA.[Desc],'') AS [<eaa>],
	ISNULL(SLTSM.[Desc],'') AS [<sltsm>],
	ISNULL(SLCW.[Desc],'') AS [<slcw>],
	ISNULL(SLCR.[Desc],'') AS [<slcr>],
	ISNULL(CFTSM.[Desc],'') AS [<cftsm>],
	ISNULL(CFCW.[Desc],'') AS [<cfcw>],
	ISNULL(CFCR.[Desc],'') AS [<cfcr>],
	ISNULL(SQTSM.[Desc],'') AS [<sqtsm>],
	ISNULL(SQCW.[Desc],'') AS [<sqcw>],
	ISNULL(SQCR.[Desc],'') AS [<sqcr>],
	ISNULL(OOTSM.[Desc],'') AS [<ootsm>],
	ISNULL(OOCW.[Desc],'') AS [<oocw>],
	ISNULL(OOCR.[Desc],'') AS [<oocr>],
	ISNULL(OODB.[Desc],'') AS [<oodb>],
	dbo.fnFormatNumber(ISNULL(PTETC.[Desc],0)) AS [<ptetc>],
	dbo.fnFormatNumber(ISNULL(WFTC.[Desc],0)) AS [<wftc>],
	dbo.fnFormatNumber(ISNULL(WFTC.[Desc],0)+ISNULL(PTETC.[Desc],0)) AS [<totalWorks>],
	dbo.fnFormatNumber(ISNULL(OBRATE.[Desc],0)) AS [<obrate>],
	dbo.fnFormatNumber(ISNULL(MDRATE.[Desc],0) * ISNULL(MDTSM.[Desc],1)+ISNULL(OBRATE.[Desc],0)*ISNULL(cftsm.[Desc],1) + ISNULL(sltsm.[Desc],0)+ISNULL( sqtsm.[Desc],0) + ISNULL(ootsm.[Desc],0)+ISNULL(WFTC.[Desc],0)+ISNULL(PTETC.[Desc],0)) AS [<totalall>],
	ISNULL(cftsm.[Desc],0) + ISNULL(sltsm.[Desc],0)+ISNULL( sqtsm.[Desc],0) + ISNULL(ootsm.[Desc],0) AS [<obtsm>],
	dbo.fnFormatNumber(ISNULL(OBRATE.[Desc],0)*ISNULL(cftsm.[Desc],1) + ISNULL(sltsm.[Desc],0)+ISNULL( sqtsm.[Desc],0) + ISNULL(ootsm.[Desc],0)) as [<obtc>],
	dbo.fnFormatNumber
(
	(
		(ISNULL(MDRATE.[Desc],0) * ISNULL(MDTSM.[Desc],1)+ISNULL(OBRATE.[Desc],0)*ISNULL(cftsm.[Desc],1) + ISNULL(sltsm.[Desc],0)+ISNULL( sqtsm.[Desc],0) + ISNULL(ootsm.[Desc],0)+ISNULL(WFTC.[Desc],0)+ISNULL(PTETC.[Desc],0))
		+ 
		(
			(
			(ISNULL(MDRATE.[Desc],0) * ISNULL(MDTSM.[Desc],1)+ISNULL(OBRATE.[Desc],0)*ISNULL(cftsm.[Desc],1) + ISNULL(sltsm.[Desc],0)+ISNULL( sqtsm.[Desc],0) + ISNULL(ootsm.[Desc],0)+ISNULL(WFTC.[Desc],0)+ISNULL(PTETC.[Desc],0))
			* 
			15
			)
			/
			100
		)
	)
) AS [<totalallp>],
	dbo.fnFormatNumber
((
	(
		(ISNULL(MDRATE.[Desc],0)*ISNULL(MDTSM.[Desc],1)+ISNULL(OBRATE.[Desc],0)*ISNULL(cftsm.[Desc],1) + ISNULL(sltsm.[Desc],0)+ISNULL( sqtsm.[Desc],0) + ISNULL(ootsm.[Desc],0)+ISNULL(WFTC.[Desc],0)+ISNULL(PTETC.[Desc],0))
		+ 
		(
			(
			(ISNULL(MDRATE.[Desc],0)*ISNULL(MDTSM.[Desc],1)+ISNULL(OBRATE.[Desc],0)*ISNULL(cftsm.[Desc],1) + ISNULL(sltsm.[Desc],0)+ISNULL( sqtsm.[Desc],0) + ISNULL(ootsm.[Desc],0)+ISNULL(WFTC.[Desc],0)+ISNULL(PTETC.[Desc],0))
			* 
			ISNULL(PF.[Desc],0)
			)
			/
			100
		)
	)
				* 
			ISNULL(ETC.[Desc],1)
			)
			/
			100
) AS [<totalalle>],	dbo.fnFormatNumber
((((
	(
		(ISNULL(MDRATE.[Desc],0)*ISNULL(MDTSM.[Desc],1)+ISNULL(OBRATE.[Desc],0)*ISNULL(cftsm.[Desc],1) + ISNULL(sltsm.[Desc],0)+ISNULL( sqtsm.[Desc],0) + ISNULL(ootsm.[Desc],0)+ISNULL(WFTC.[Desc],0)+ISNULL(PTETC.[Desc],0))
		+ 
		(
			(
			(ISNULL(MDRATE.[Desc],0)*ISNULL(MDTSM.[Desc],1)+ISNULL(OBRATE.[Desc],0)*ISNULL(cftsm.[Desc],1) + ISNULL(sltsm.[Desc],0)+ISNULL( sqtsm.[Desc],0) + ISNULL(ootsm.[Desc],0)+ISNULL(WFTC.[Desc],0)+ISNULL(PTETC.[Desc],0))
			* 
			15
			)
			/
			100
		)
	)
				* 
			ISNULL(ETC.[Desc],0)
			)
			/
			100)
						* 
			14
			)
			/
			100
) AS [<totalincl>],
DBO.RISKSECURITYSYSTEMS (@ID) AS [<sysItems>],
DBO.RISKADDFEATURES (@ID) AS [<addfeat>],
ISNULL(ETC.[Desc],0) AS [<etc>],
ISNULL(PF.[Desc],0) AS [<pf>]
FROM 
 Risk_Assessment_Master RAM  
LEFT JOIN Risk_Assessment RA ON RA.AssessmentID = RAM.AssessmentID  
LEFT JOIN (SELECT FirstName,Surname,EntityContactID,PhysicalAddrID,PostalAddrID FROM EntityContact) EC ON EC.EntityContactID = RA.EntityContactID  
LEFT JOIN EntityAddress EAR ON EC.PhysicalAddrID = EAR.EntityAddressID  
LEFT JOIN EntityAddress EAP ON EC.PostalAddrID = EAP.EntityAddressID  
LEFT JOIN (SELECT RiskAssessmentID,RiskAssessmentSectionID FROM Risk_Assessment_Section) RAS ON RAM.AssessmentID = RAS.RiskAssessmentID  
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID FROM Risk_Assessment_Category) RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT RiskAssessmentCategoryID,Price from Risk_Assessment_Item) RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID  
LEFT JOIN (SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') AS [Surveyor] FROM Staff) U   ON RAM.SurveyorID = U.StaffID 
LEFT JOIN (
SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') AS [Surveyor] FROM Staff) UR   
	ON RAM.ReplacementSurveyorID = UR.StaffID  
LEFT JOIN  Risk_AssessmentNo RAN 
	ON RAN.RiskAssessmentID = RAM.RiskAssessmentID  
LEFT JOIN (SELECT Company,EntityID FROM Entity) EI 
	ON EI.EntityID = RAM.InsurerID  
LEFT JOIN (SELECT Company,EntityID FROM Entity) EB 
	ON EB.EntityID = RAM.BrokerID  
LEFT JOIN OrderForm O 
	ON RAM.OrderID = O.OrderID  
--**********************************************MAIN DWELLING!*****************************************
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where RAI.ItemPrompt like '%Type Of Dwelling%'
AND RAS.RiskAssessmentID = @ID) TOD ON RAM.RiskAssessmentID = TOD.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt like '%Number of buildings on the property%'
AND RAS.RiskAssessmentID = @ID) NOF ON RAM.RiskAssessmentID = NOF.RiskAssessmentID 
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	SUM(Price) AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,Price from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where (RAC.CategoryName IN ( 
	'MAIN DWELLING' ,
	'GARAGES',
	'LAPAS',
	'PATIOS',
	'BALCONIES',
	'SECURITY SYSTEMS',
	'ADDITIONAL FEATURES',
	'STOREROOMS / PUMPHOUSES',
'ELECTRIC GATES'))AND RAS.RiskAssessmentID = @ID
	GROUP BY RAS.RiskAssessmentID) MDRATE ON RAM.RiskAssessmentID = MDRATE.RiskAssessmentID  
	--******************************************************************************************
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.Qty,'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT Qty,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt like '%Total Square Metres%'   AND RAC.CategoryName = 'MAIN DWELLING'
AND RAS.RiskAssessmentID = @ID) MDTSM ON RAM.RiskAssessmentID = MDTSM.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Walls)%'   AND RAC.CategoryName = 'MAIN DWELLING'
AND RAS.RiskAssessmentID = @ID) MDCW ON RAM.RiskAssessmentID = MDCW.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Roof)%'   AND RAC.CategoryName = 'MAIN DWELLING'
AND RAS.RiskAssessmentID = @ID) MDCR ON RAM.RiskAssessmentID = MDCR.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%No. of storeys%'   AND RAC.CategoryName = 'MAIN DWELLING'
AND RAS.RiskAssessmentID = @ID) MDNS ON RAM.RiskAssessmentID = MDNS.RiskAssessmentID  
	--******************************************************************************************
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Walls)%'   AND RAC.CategoryName = 'GARAGES'
AND RAS.RiskAssessmentID = @ID) GCW ON RAM.RiskAssessmentID = GCW.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Roof)%'   AND RAC.CategoryName = 'GARAGES'
AND RAS.RiskAssessmentID = @ID) GCR ON RAM.RiskAssessmentID = GCR.RiskAssessmentID  
	
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	Qty AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT Qty,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt like '%Total Square Metres%'   AND RAC.CategoryName = 'GARAGES'
AND RAS.RiskAssessmentID = @ID) GTSM ON RAM.RiskAssessmentID = GTSM.RiskAssessmentID  
	
	--******************************************************************************************
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Walls)%'   AND RAC.CategoryName = 'LAPAS'
AND RAS.RiskAssessmentID = @ID) LCW ON RAM.RiskAssessmentID = LCW.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Roof)%'   AND RAC.CategoryName = 'LAPAS'
AND RAS.RiskAssessmentID = @ID) LCR ON RAM.RiskAssessmentID = LCR.RiskAssessmentID  
	
	
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(Qty,'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT Qty,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Total Square Metres%'   AND RAC.CategoryName = 'LAPAS'
AND RAS.RiskAssessmentID = @ID) LTSM ON RAM.RiskAssessmentID = LTSM.RiskAssessmentID  
		--******************************************************************************************
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Walls)%'   AND RAC.CategoryName = 'PATIOS'
AND RAS.RiskAssessmentID = @ID) PCW ON RAM.RiskAssessmentID = PCW.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Roof)%'   AND RAC.CategoryName = 'PATIOS'
AND RAS.RiskAssessmentID = @ID) PCR ON RAM.RiskAssessmentID = PCR.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.Qty,'')  AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT Qty,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Total Square Metres (Roof & Walls)%'   AND RAC.CategoryName = 'PATIOS'
AND RAS.RiskAssessmentID = @ID) PTSM ON RAM.RiskAssessmentID = PTSM.RiskAssessmentID  	
	
	--******************************************************************************************
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction%'   AND RAC.CategoryName = 'BALCONIES'
AND RAS.RiskAssessmentID = @ID) BC ON RAM.RiskAssessmentID = BC.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Roof Type%'   AND RAC.CategoryName = 'BALCONIES'
AND RAS.RiskAssessmentID = @ID) BRT ON RAM.RiskAssessmentID = BRT.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.Qty,'')  AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT Qty,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Total Square Metres%'   AND RAC.CategoryName = 'BALCONIES'
AND RAS.RiskAssessmentID = @ID) BTSM ON RAM.RiskAssessmentID = BTSM.RiskAssessmentID  	
	
	--******************************************************************************************
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	RAI.SelectedAnswer + ' ' + [Description]  AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Carports: (Describe Construction)%'   AND RAC.CategoryName = 'FEATURES'
AND RAS.RiskAssessmentID = @ID) FCC ON RAM.RiskAssessmentID = FCC.RiskAssessmentID  
			LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.Qty,'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT Qty,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Carports (Total Square Metres)%'   AND RAC.CategoryName = 'FEATURES'
AND RAS.RiskAssessmentID = @ID) FCTSM ON RAM.RiskAssessmentID = FCTSM.RiskAssessmentID  	
	--******************************************************************************************
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	RAI.SelectedAnswer + ' ' + [Description] AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Walls)%'   AND RAC.CategoryName = 'STOREROOMS / PUMPHOUSES'
AND RAS.RiskAssessmentID = @ID) SPCW ON RAM.RiskAssessmentID = SPCW.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	RAI.SelectedAnswer + ' ' + [Description] AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Roof)%'   AND RAC.CategoryName = 'STOREROOMS / PUMPHOUSES'
AND RAS.RiskAssessmentID = @ID) SPCR ON RAM.RiskAssessmentID = SPCR.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.Qty,'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT Qty,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Total Square Metres%'   AND RAC.CategoryName = 'STOREROOMS / PUMPHOUSES'
AND RAS.RiskAssessmentID = @ID) SPTSM ON RAM.RiskAssessmentID = SPTSM.RiskAssessmentID  
	
	--******************************************************************************************
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	RAI.SelectedAnswer + ' ' + [Description] AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Type of Electric Gate%'   AND RAC.CategoryName = 'ELECTRIC GATES'
AND RAS.RiskAssessmentID = @ID) ETEG ON RAM.RiskAssessmentID = ETEG.RiskAssessmentID  
			LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	RAI.SelectedAnswer + ' ' + [Description] AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Are the gates Aluminium?%'   AND RAC.CategoryName = 'ELECTRIC GATES'
AND RAS.RiskAssessmentID = @ID) EAA ON RAM.RiskAssessmentID = EAA.RiskAssessmentID  	
	
--**********************************************Out Buildings!*****************************************
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	RAI.SelectedAnswer AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Total Square Metres%'   AND RAC.CategoryName = 'SEPERATE LAUNDRY'
AND RAS.RiskAssessmentID = @ID) SLTSM ON RAM.RiskAssessmentID = SLTSM.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Walls)%'   AND RAC.CategoryName = 'SEPERATE LAUNDRY'
AND RAS.RiskAssessmentID = @ID) SLCW ON RAM.RiskAssessmentID = SLCW.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Roof)%'   AND RAC.CategoryName = 'SEPERATE LAUNDRY'
AND RAS.RiskAssessmentID = @ID) SLCR ON RAM.RiskAssessmentID = SLCR.RiskAssessmentID  
	--******************************************************************************************
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.Qty,'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT Qty,RiskAssessmentCategoryID,ItemPrompt from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Total Square Metres%'   AND RAC.CategoryName = 'COTTAGE / FLAT'
AND RAS.RiskAssessmentID = @ID) CFTSM ON RAM.RiskAssessmentID = CFTSM.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Walls)%'   AND RAC.CategoryName = 'COTTAGE / FLAT'
AND RAS.RiskAssessmentID = @ID) CFCW ON RAM.RiskAssessmentID = CFCW.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Roof)%'   AND RAC.CategoryName = 'COTTAGE / FLAT'
AND RAS.RiskAssessmentID = @ID) CFCR ON RAM.RiskAssessmentID = CFCR.RiskAssessmentID  
	--******************************************************************************************
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	RAI.Qty AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT Qty,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Total Square Metres%'   AND RAC.CategoryName = 'STAFF QUARTERS'
AND RAS.RiskAssessmentID = @ID) SQTSM ON RAM.RiskAssessmentID = SQTSM.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Walls)%'   AND RAC.CategoryName = 'STAFF QUARTERS'
AND RAS.RiskAssessmentID = @ID) SQCW ON RAM.RiskAssessmentID = SQCW.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt like '%Construction (Roof)%'   AND RAC.CategoryName = 'STAFF QUARTERS'
AND RAS.RiskAssessmentID = @ID) SQCR ON RAM.RiskAssessmentID = SQCR.RiskAssessmentID  
	--******************************************************************************************
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	RAI.SelectedAnswer AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Total Square Metres%'   AND RAC.CategoryName = 'OTHER OUTBUILDING'
AND RAS.RiskAssessmentID = @ID) OOTSM ON RAM.RiskAssessmentID = OOTSM.RiskAssessmentID  
	LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Walls)%'   AND RAC.CategoryName = 'OTHER OUTBUILDING'
AND RAS.RiskAssessmentID = @ID) OOCW ON RAM.RiskAssessmentID = OOCW.RiskAssessmentID  
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Construction (Roof)%'   AND RAC.CategoryName = 'OTHER OUTBUILDING'
AND RAS.RiskAssessmentID = @ID) OOCR ON RAM.RiskAssessmentID = OOCR.RiskAssessmentID  
			LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%Describe Outbuilding%'   AND RAC.CategoryName = 'OTHER OUTBUILDING'
AND RAS.RiskAssessmentID = @ID) OODB ON RAM.RiskAssessmentID = OODB.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	SUM(Price) AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,Price from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where (RAC.CategoryName IN ( 
	'STAFF QUARTERS',
	'COTTAGE / FLAT',
	'SEPERATE LAUNDRY',
	'OTHER OUTBUILDING'))AND RAS.RiskAssessmentID = @ID
	GROUP BY RAS.RiskAssessmentID) OBRATE ON RAM.RiskAssessmentID = OBRATE.RiskAssessmentID  
	--******************************************************************************************
		LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	SUM(Price) AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,Price from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where (ItemPrompt like '%Total Square Metres of Tiles%' AND ItemPrompt like '%Total Square Metres of Paving%'AND ItemPrompt like '%Wooden Decking (Total Square Metres)%')   
	AND RAC.CategoryName = 'PAVING / TILES / EXTERNAL DECKING'
AND RAS.RiskAssessmentID = @ID
	GROUP BY RAS.RiskAssessmentID) PTETC ON RAM.RiskAssessmentID = PTETC.RiskAssessmentID  
			LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	SUM(Price) AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,Price from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where (ItemPrompt like '%Fence Lenght in Metres%' AND ItemPrompt like '%Walling Length in Metres%')   
	AND RAC.CategoryName = 'WALLS / FENCES - PERIMETER, INTERNAL, BOUNDRY, RETAINING'
AND RAS.RiskAssessmentID = @ID
	GROUP BY RAS.RiskAssessmentID) WFTC ON RAM.RiskAssessmentID = WFTC.RiskAssessmentID  
	--******************************************************************************************
			LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	SelectedAnswer AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,Price from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%ESCALATION%'   AND RAC.CategoryName = 'Escalation %'
AND RAS.RiskAssessmentID = @ID
	) ETC ON RAM.RiskAssessmentID = ETC.RiskAssessmentID  
LEFT JOIN (
select 
	RAS.RiskAssessmentID,
	SelectedAnswer AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,Price from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID	
where ItemPrompt like '%PROFESSIONAL FEES%'   AND RAC.CategoryName = 'Professional Fees & Site Clearing %'
AND RAS.RiskAssessmentID = @ID) PF ON RAM.RiskAssessmentID = PF.RiskAssessmentID  

WHERE RAM.RiskAssessmentID = @ID--{riskID}
Group by isnull(EC.FirstName,'') ,isnull(EC.Surname,'') ,RAM.RiskAssessmentID,
ISNULL(EAR.Address1,''),ISNULL(EAR.Address2,''),ISNULL(EAR.City,''),ISNULL(EAR.Country,''),ISNULL(EAR.Code,''),ISNULL(ReplacementSurveyorID,0),isnull(U.Surveyor,''), ISNULL(UR.Surveyor,'')
,number,Prefix,DATE,ContentsSumInsured,
--**************************************
TOD.[Desc] ,			NOF.[Desc],
RAM.TotalValue ,	MDTSM.[Desc] ,
MDCW.[Desc] ,		MDCR.[Desc],
MDNS.[Desc] ,		GCW.[Desc] ,
GCR.[Desc],			GTSM.[Desc] ,
LCW.[Desc],			LCR.[Desc] ,
LTSM.[Desc] ,			PCW.[Desc] ,
PCR.[Desc] ,			PTSM.[Desc] , 
BC.[Desc],				BRT.[Desc] ,
BTSM.[Desc],			FCC.[Desc],
FCTSM.[Desc],		SPCW.[Desc],
SPCR.[Desc] ,			SPTSM.[Desc],
ETEG.[Desc],			EAA.[Desc],
SLTSM.[Desc] ,		SLCW.[Desc] ,
SLCR.[Desc],			CFTSM.[Desc],
CFCW.[Desc],		CFCR.[Desc],
SQTSM.[Desc],		SQCW.[Desc],
SQCR.[Desc],			OOTSM.[Desc],
OOCW.[Desc],		OOCR.[Desc],
OODB.[Desc]	,		MDRATE.[Desc],
PTETC.[Desc],		WFTC.[Desc],
OBRATE.[Desc],			ETC.[Desc],
PF.[Desc]
","0","","1","LRA-FUSION","0","0","fusion"
"40253","CV_Acc_Debtors_OutstandingRpt","","
SELECT 
	Convert(Varchar,DM.DocID) + '#' + DM.DocType as [DocID]
	,DM.DocType as [Doc. Type]
	,left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.]
	,LD.Value as [Division]
	,E.Company 
	,DM.[ClientPO]
	,P.ProjectName as [Project]
	,isnull(DM.Memo,'') as Notes
	,DM.DateCreated as [Created]
	,DM.DateCompleted as [Doc. Date]
	,DM.DocStatus as [Status]
	,UC.[Created By]
	,U.[Consultant]
	,DM.Currency
	,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.]
	,CASE DM.doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1)) as [Total Ex. VAT]
	,CASE DM.doctype when 'Credit Note' then -1 ELSE 1 END * (([Total Incl. VAT] - [Total Ex. VAT])  / isnull(DM.ROE,1)) as [Total VAT]
	,CASE DM.doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT]  / isnull(DM.ROE,1))  as [Total Incl. VAT]
	,CASE DM.doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))  as [Est. Cost]


FROM Debtor_Master DM
LEFT JOIN (
	SELECT * FROM Debtor_Master WHERE DocType LIKE 'Payment Receipt'
) DMP ON DMP.PreviousDocID = DM.DocID
LEFT JOIN (

	SELECT 
		DocID
		,Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT]
		,Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT]
		,Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost]
		,Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
	FROM DEBTOR_DETAIL 
	WHERE isnull(ComponentOfLineID,0) = 0 
	Group by Docid

) DD
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
	On DM.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
	ON DM.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
	ON DM.EntityID = E.EntityID AND isnull(DM.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
	ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
	ON DM.Entityid = EC.EntityContactID AND isnull(DM.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
	ON E.SalesConsID = ExtSal.lookupid
LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
	ON DM.ProjectID = P.ProjectID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Created By] FROM Users) UC ON UC.UserID = DM.CreatedBy

{where}","0","","1","LRA-FUSION","0","0","fusion"
"40254","cv_Document_Category","","/*
SELECT DocTemplateID,TemplateDescr As [Description],TemplatePath as [Path] FROM AccDocTemplates adt  
where isnull(isActive,0) = 1 
and (
adt.templatecategoryid is null or 
adt.templatecategoryid in 
(select lookupid from Lookup where value = '{TemplateCategory}' and Class = 'TemplateCategory')
)
ORDER By TemplateDescr  
*/



 select adt.doctemplateid,templatedescr as [Description],TemplatePath as [Path] from accdoctemplates adt 
 left join lookup l on
 adt.TemplateCategoryid = l.Lookupid 
 where (IsNull(adt.TemplateCategoryID,0)  = 0) OR (l.Class = 'TemplateCategory' and l.Value like '%{TemplateCategory}%')
 and isnull(adt.isactive,0) = 1
 Order By TemplateDescr","0","","1","LRA-FUSION","0","0","fusion"
"40255","cv_Acc_Print_Batch_List","","SET NoCount on

Create Table #Table  
    (DocID integer,
    DocType varchar(75),
    PreviousDocID integer,
    DocNo integer,
    CreateDate datetime,
    Source varchar(2),
    CEDocID integer,
    DocStatus varchar(100))

DECLARE @Counter as integer
DECLARE @LastCount as integer
DECLARE @DocID as integer
DECLARE @Source as varchar(2)

SET @DOCID = {docid}
SET @Source = '{source}'

--Populate temp table with original document of interest
Insert into #Table
SELECT DocID, DocType,PreviousDocID,DocNo,DateCreated,@Source,CEDocID,DocStatus FROM DEBTOR_MASTER
WHERE DocID = @DocID AND @Source ='DM'
UNION ALL
SELECT DocID, DocType,PreviousDocID,DocNo,DateCreated,@Source,CEDocID,DocStatus FROM CREDITOR_MASTER 
WHERE DocID = @DocID AND @Source ='CM'
UNION ALL
SELECT DocID, 'Quote',PreviousDocID,Case when isnull(Revision,0) > 1 then PreviousDocID ELSE  DocID END,DateCreated,@Source,DocID,DocStatus FROM COST_ESTIMATE_MASTER
WHERE DocID = @DocID AND @Source ='CE'
UNION ALL
SELECT ProjectID, 'Job',TicketID,ProjectID,DateAdded,@Source,CEDocID,L.Value FROM Projects P
LEFT JOIN Lookup L ON P.ProjectStateID = L.LookupID
WHERE ProjectID = @DocID AND @Source ='JB'
UNION ALL
SELECT TicketID, 'Ticket',CEDocID,TicketID,DateCaptured,@Source,CEDocID,tStatus FROM Tickets
WHERE TicketID = @DocID AND @Source ='TK'
UNION ALL
SELECT DocID, 'Manufacturing',RaisedByDocID,DocID,DateCreated,@Source,-1,case when isnull(IsComplete,0) = 1 then 'Completed' else 'Open' END   FROM AccManufacture
WHERE DocID = @DocID AND @Source ='MF'

SET @LastCount = -1
SET @Counter = 0

WHILE @Counter > @LastCount
--Repeat this loop until no new documents are being added
BEGIN
    Insert into #Table
    --Get Debtor docs
    SELECT distinct A.DocID, A.DocType,A.PreviousDocID,A.DocNo, A.DateCreated,'DM',A.CEDocID,A.DocStatus FROM DEBTOR_MASTER A
    LEFT JOIN #Table B ON A.DocID = B.DocID AND A.DocType= B.DocType collate database_default AND isnull(A.PreviousDocID,0) = isnull(B.PreviousDocID,0)
    WHERE ((A.DOCID IN (SELECT DocID FROM #Table WHERE Source = 'DM') OR A.PreviousDocID in (SELECT DocID FROM #Table WHERE Source = 'DM') OR A.PreviousDocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'DM') OR A.DocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'DM') OR A.CEDocID in (SELECT CEDocID FROM #Table)) 
    OR (A.ProjectID = @DocID AND @Source =  'JB'))
    AND B.DocID is null

    UNION ALL
    --Get Creditor docs
    SELECT distinct A.DocID, A.DocType,A.PreviousDocID,A.DocNo, A.DateCreated,'CM',A.CEDocID,A.DocStatus FROM CREDITOR_MASTER A
    LEFT JOIN (SELECT DocID, ProjectID FROM CREDITOR_DETAIL) CD ON A.DocID = CD.DocID 
    LEFT JOIN #Table B ON A.DocID = B.DocID AND A.DocType= B.DocType collate database_default  AND isnull(A.PreviousDocID,0) = isnull(B.PreviousDocID,0)
    WHERE ((A.DOCID IN (SELECT DocID FROM #Table WHERE Source = 'CM') OR A.PreviousDocID in (SELECT DocID FROM #Table WHERE Source = 'CM') OR A.PreviousDocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'CM') OR A.DocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'CM') OR A.CEDocID in (SELECT CEDocID FROM #Table) ) 
    OR (CD.ProjectID = @DocID AND @Source =  'JB'))    
    AND B.DocID is null 

    UNION ALL
    --Get Cost Estimate docs
    SELECT Distinct A.DocID, Case isnull((SELECT SELECTED FROM CRMSetup where variable = 'UseSO'),0) when 1 then 'Quote' ELSE 'Cost Estimate' END,A.PreviousDocID,   Case when isnull(A.Revision,0) > 1 then A.PreviousDocID ELSE  A.DocID END,DateCreated,'CE',A.DocID , A.DocStatus
    FROM COST_ESTIMATE_MASTER A
    LEFT JOIN #Table B ON A.DocID = B.DocID AND Case isnull((SELECT SELECTED FROM CRMSetup where variable = 'UseSO'),0) when 1 then 'Quote' ELSE 'Cost Estimate' END = B.DocType collate database_default  AND isnull(A.PreviousDocID,0) = isnull(B.PreviousDocID,0)
    WHERE ((A.DocID in (SELECT CEDocID FROM #Table))
    OR (A.ProjectID = @DocID AND @Source =  'JB'))   
    AND B.DocID is null

    UNION ALL
    --Get Jobs
    SELECT A.ProjectID, 'Job',A.TicketID,A.ProjectID, A.DateAdded,'JB',A.CEDocID,L.Value FROM Projects A
    LEFT JOIN #Table B ON A.ProjectID = B.DocID AND 'Job' = B.DocType collate database_default AND isnull(A.TicketID,0) = isnull(B.PreviousDocID,0)
    LEFT JOIN Lookup L ON A.ProjectStateID = L.LookupID
    WHERE (A.ProjectID IN (SELECT DocID FROM #Table WHERE Source = 'JB') OR A.TicketID in (SELECT DocID FROM #Table WHERE Source = 'TK') OR A.TicketID in (SELECT PreviousDocID FROM #Table WHERE Source = 'TK') OR A.ProjectID in (SELECT PreviousDocID FROM #Table WHERE Source = 'JB') OR A.CEDocID in (SELECT CEDocID FROM #Table) ) 
    AND B.DocID is null

    UNION ALL
    --Get Tickets
    SELECT A.TicketID, 'Ticket',A.CEDocID,  A.TicketID,DateCaptured,'TK',A.CEDocID , A.tStatus
    FROM Tickets A
    LEFT JOIN #Table B ON A.TicketID = B.DocID AND 'Ticket' = B.DocType collate database_default  AND isnull(A.CEDocID,0) = isnull(B.PreviousDocID,0)
    WHERE (A.TicketID IN (SELECT DocID FROM #Table WHERE Source = 'TK') OR A.CEDocID in (SELECT DocID FROM #Table WHERE Source = 'TK') OR A.CeDocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'CE') OR A.TicketID in (SELECT PreviousDocID FROM #Table WHERE Source = 'TK') OR A.CEDocID in (SELECT CEDocID FROM #Table) ) 
    AND B.DocID is null
    
    UNION ALL
    --Get Manufacturing Jobs
    SELECT A.DocID, 'Manufacturing', A.RaisedByDocID, A.DocID, A.DateCreated,'MF',-1, case when isnull(IsComplete,0) = 1 then 'Completed' else 'Open' END   
    FROM AccManufacture A
	LEFT JOIN #Table B ON A.DocID = B.DocID AND 'Manufacturing' = B.DocType collate database_default AND isnull(A.RaisedByDocID,0) = isnull(B.PreviousDocID,0)
    --WHERE (A.DocID IN (SELECT DocID FROM #Table WHERE Source = 'MF') OR A.RaisedByDocID in (SELECT DocID FROM #Table WHERE Source = 'DM') OR A.RaisedByDocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'DM') OR A.DocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'MF')  ) 
    WHERE (A.DocID IN (SELECT DocID FROM #Table WHERE Source = 'MF') OR A.RaisedByDocID in (SELECT DocID FROM #Table WHERE Source = 'DM') OR A.RaisedByDocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'DM') OR A.DocID in (SELECT PreviousDocID FROM #Table WHERE Source = 'MF') OR A.DocID in (SELECT CEDocID FROM #Table) ) 
    AND B.DocID is null

    
    
    SET @LastCount = @Counter
    SET @Counter = (SELECT Count(DocID) FROM #Table)
END

SELECT 
		T.DocID,
	   T.DocType, 
	   left('00000000', 8- len(DocNo)) + convert(varchar,DocNo) as [DocNo],  
	   convert(varchar,CreateDate,103) as [DateCreated],
	   T.DocStatus as [Status],
	   ISNULL(B.Qty,0) as [Qty]
FROM #Table T
LEFT JOIN AccPrintoutBatch B ON B.DocType = T.DocType COLLATE DATABASE_DEFAULT
ORDER BY CreateDate Desc, DocID
DROP Table #Table

Set NoCount Off
","0","","1","LRA-FUSION","0","0","fusion"
"40256","cv_Acc_Debtor_Payment_Allocation","","DECLARE @EntityID as integer
DECLARE @Currency as varchar(50)
DECLARE @PayDocID as integer
DECLARE @UseBalance as bit
SET @EntityID = {entityid}
SET @Currency = '{currency}'
SET @PayDocID = {paydocid}

SET @UseBalance = (SELECT TOP 1 ISNULL(Selected,0) FROM CRMSetup WHERE [Description] = 'AccValid' AND Variable = 'AutoPaymentDue')

SELECT * FROM (

    SELECT DM.DOCID,convert(varchar,DM.DOCNo) as [Invoice No.], convert(varchar,DateCompleted,111) as [Date], 
    dbo.fnFormatNumber(isnull([Total Invoiced],0)- isnull([Total Credited] ,0)) as [Total Invoiced],
    dbo.fnFormatNumber(isnull([Total Received],0))  as [Total Received],
    dbo.fnFormatNumber(isnull([Total Invoiced],0) - isnull([Total Credited] ,0) - isnull([Total Received],0)) as [Balance],
    CASE WHEN @UseBalance = 1 THEN 
		dbo.fnFormatNumber(isnull([Total Invoiced],0) - isnull([Total Credited] ,0) - isnull([Total Received],0))
    ELSE
		dbo.fnFormatNumber(isnull(DP2.PaymentPortion,0)) END as [Allocation],
    dbo.fnFormatNumber(isnull(DP2.SettlementDiscount,0)) as [Discount Amt.]
     FROM DEBTOR_Master DM 
    LEFT JOIN (SELECT  sum((PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(Tax,0) /100 + 1)) / isnull(roe,1)) as [Total Invoiced], DD.DocID FROM DEBTOR_DETAIL DD LEFT JOIN (SELECT DocID, ROE FROM DEBTOR_MASTER) DM ON DD.DocID = DM.DocID  WHERE isnull(ComponentOfLineID,0) = 0   group by DD.DocID ) DD
    ON DM.DocID= DD.DocID
    LEFT JOIN (SELECT Sum(isnull(PaymentPortion,0) + isnull(SettlementDiscount,0)) as [Total Received], InvoiceDocID from DEBTOR_Payment where PaymentDocID <> @PayDocID Group By InvoiceDocID) DP
    ON DM.DocID = DP.InvoiceDocID
    LEFT JOIN (SELECT PaymentPortion, SettlementDiscount, PaymentDocID, InvoiceDocID FROM DEBTOR_PAYMENT) DP2
    ON DM.DocID = DP2.InvoiceDocID AND DP2.PaymentDocID = @PayDocID
    LEFT JOIN (SELECT PreviousDocID, sum(isnull([Total Credited],0) / isnull(roe,1)) as [Total Credited]  FROM DEBTOR_MASTER DM
            LEFT JOIN (SELECT  sum(PriceEx * qty * ((100 - isnull(discperc,0))/100) * (isnull(Tax,0) /100 + 1)) as [Total Credited], DocID FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 group by DocID ) DD
            ON DM.DocID = dd.DocID
            WHERE DM.Doctype = 'Credit Note'  AND DocStatus = 'Completed'
        Group by PreviousDocID) DC
    ON DM.DocID = DC.previousDocID
        WHERE 
    (DocType = 'Invoice' OR doctype = 'Supplier Invoice')
    AND DocStatus = 'Completed' 
    AND (isnull([Total Invoiced],0)-isnull([Total credited],0) - isnull([Total Received],0)  > 0)
    AND entityid = @EntityID
    AND DM.Currency = @Currency
    
    UNION ALL
    
    --Opening balance line
    SELECT TOP 1 -1 as [DOCID], 'O/B', convert(varchar,DateCreated,111) as [Date], 
    dbo.fnFormatNumber((isnull(amtCurrent,0) +isnull(amt30,0) +isnull(amt60,0) +isnull(amt90,0) + isnull(amt120,0)) * -1  ) as [Opening Balance],
    dbo.fnFormatNumber(isnull([Total Received],0) ) as [Total Received],
    dbo.fnFormatNumber((isnull(amtCurrent,0) +isnull(amt30,0) +isnull(amt60,0) +isnull(amt90,0) + isnull(amt120,0)) * -1 - isnull([Total Received],0) ) as [Balance],
    CASE WHEN @UseBalance = 1 THEN 
		dbo.fnFormatNumber((isnull(amtCurrent,0) +isnull(amt30,0) +isnull(amt60,0) +isnull(amt90,0) + isnull(amt120,0)) * -1 - isnull([Total Received],0) )
    ELSE dbo.fnFormatNumber(isnull(DP2.PaymentPortion,0)) END as [Allocation],
    dbo.fnFormatNumber(isnull(DP2.SettlementDiscount,0)) as [Discount Amt.]
    FROM AccOPENINGBALANCE OB
    LEFT JOIN (SELECT sum(PaymentPortion) as [Total Received], InvoiceDocID,Entityid from DEBTOR_Payment DPi
         LEFT JOIN (SELECT docid from DEBTOR_MASTER) DMi
         on dpi.paymentdocid = dmi.docid
         where PaymentDocID <> @PayDocID
         group by InvoiceDocID,Entityid ) DP
    ON -1 = DP.InvoiceDocID AND OB.EntityID = DP.Entityid
    LEFT JOIN (SELECT PaymentPortion,SettlementDiscount, PaymentDocID, InvoiceDocID FROM DEBTOR_PAYMENT) DP2
    ON DP2.InvoiceDocID = -1 AND DP2.PaymentDocID = @PayDocID
    WHERE  OB.EntityID = @EntityID
)A
WHERE (cast(Balance as money) <> 0 OR Cast(Allocation as money) <> 0 )
ORDER BY DocID Asc","0","","1","LRA-FUSION","0","0","fusion"
"40257","cv_Risk_VEHICLEVALUATION_print_top",""," 
DECLARE @ID AS INT

SET @ID ={riskID}


SELECT Distinct
CONVERT(VARCHAR,GETDATE(),111) AS [<date>], 
isnull(EC.FirstName,'') + ' '+isnull(EC.Surname,'') AS [<client>], 
ISNULL(EAR.Address1,'')+ ' ' +ISNULL(EAR.Address2,'')+ ' ' +ISNULL(EAR.City,'')+ ' ' +ISNULL(EAR.Country,'')+ ' ' +ISNULL(EAR.Code,'') AS [<addressfull>],  
 CONVERT(VARCHAR(7),ISNULL([DATE],''), 120) + '/' +   SUBSTRING('0000000', 1,(LEN('0000000')-LEN(ISNULL(number,'')))) +   
 CONVERT(VARCHAR,ISNULL(number,'')) + '/'+ISNULL(Prefix,'') AS [<assno>],
CASE     WHEN ISNULL(ReplacementSurveyorID,0) = 0    THEN ISNULL(U.Surveyor,'')    
	 ELSE ISNULL(UR.Surveyor,'')   END  as [<surveyor>],    
ISNULL(EI.Company,'') AS [<insurer>],   
ISNULL(EB.Company,'') AS [<broker>],  
ISNULL(ER.Company,'') AS [<requestedby>], 
 ISNULL(EC.Fax,'') AS [<fax>],
ISNULL(O.ClientsPolicyNumber,'') AS [<policy>],
ISNULL(EC.Additional1,'') AS [<id>],
ISNULL(EC.Phone1,'') AS [<phone1>],   
ISNULL(EC.HomePhone,'') AS [<phone2>],
ISNULL(EC.Cell,'') AS [<cell>],
 ISNULL(EAR.Address1,'')+ ' ' +ISNULL(EAR.Address2,'') AS [<address1>],
 ISNULL(EAR.City,'') AS [<address2>],
 ISNULL(EAR.Country,'') AS [<address3>],
 ISNULL(EAR.Code,'') AS [<address4>],

--***************************************************************************************
ISNULL(EIVN.[Desc],'') as [<eivn>],
ISNULL(EIID.[Desc],'') as [<eiid>],
ISNULL(EIT.[Desc],'') as [<eit>],
ISNULL(EIIAA.[Desc],'') as [<eiiaa>],
ISNULL(EIHW.[Desc],'') as [<eihw>],
ISNULL(VDRCN.[Desc],'') AS [<vdrcn>],
ISNULL(VDRCND.[Desc],'') AS [<vdrcnd>],
ISNULL(VDY.[Desc],'') AS [<vdy>],
ISNULL(VDM.[Desc],'') AS [<vdm>],
ISNULL(VDMO.[Desc],'') AS [<vdmo>],
ISNULL(VDT.[Desc],'') AS [<vdt>],
ISNULL(VDRN.[Desc],'') AS [<vdrn>],
ISNULL(VDOR.[Desc],'') AS [<vdor>],
ISNULL(VDVN.[Desc],'') AS [<vdvn>],
ISNULL(VDEN.[Desc],'') AS [<vden>],
ISNULL(VDLX.[Desc],'') AS [<vdlx>],
ISNULL(VDC.[Desc],'') AS [<vdc>],
ISNULL(VDPD.[Desc],'') AS [<vdpd>],
ISNULL(VDID.[Desc],'') AS [<vdid>],
ISNULL(VDRWC.[Desc],'') AS [<vdrwc>],
ISNULL(VDRWCD.[Desc],'') AS [<vdrwcd>],
ISNULL(UFCOU.[Desc],'') AS [<ufcou>],
ISNULL(UFSA.[Desc],'') AS [<ufsa>],
ISNULL(PDP.[Desc],'') AS [<pdp>],
ISNULL(POP.[Desc],'') AS [<pop>],
CASE 
	WHEN ISNULL(AERT.[Desc],'') <> ''
		THEN 'Yes' 
		ELSE 'No'
END AS [<aert>], 
ISNULL(AERT.[Desc],'')  AS [<aertd>],
ISNULL(AERTM.[Desc],'')  AS [<aertm>],
CASE 
	WHEN ISNULL(AECR.[Desc],'') <> ''
		THEN 'Yes' 
		ELSE 'No'
END AS [<aecr>], 
ISNULL(AECR.[Desc],'')  AS [<aecrd>],
ISNULL(AECRM.[Desc],'')  AS [<aecrm>],
CASE 
	WHEN ISNULL(AEAI.[Desc],'') <> ''
		THEN 'Yes' 
		ELSE 'No'
END AS [<aeai>], 
ISNULL(AEAI.[Desc],'') AS [<aeaid>],
CASE 
	WHEN ISNULL(AEG.[Desc],'') <> ''
		THEN 'Yes' 
		ELSE 'No'
END AS [<aeg>], 
ISNULL(AEG.[Desc],'') AS [<aegd>],
CASE 
	WHEN ISNULL(AET.[Desc],'') <> ''
		THEN 'Yes' 
		ELSE 'No'
END AS [<aet>], 
ISNULL(AET.[Desc],'') AS [<aetd>],
ISNULL(AEM.[Desc],'') AS [<aem>],
ISNULL(AEA.[Desc],'') AS [<aea>],
ISNULL(AECC.[Desc],'') AS [<aecc>],
ISNULL(AEPS.[Desc],'') AS [<aeps>],
ISNULL(AEC.[Desc],'') AS [<aec>],
ISNULL(AES.[Desc],'') AS [<aes>],
ISNULL(AESR.[Desc],'') AS [<aesr>],
ISNULL(AESG.[Desc],'') AS [<aesg>],
ISNULL(AETK.[Desc],'') AS [<aetk>],
ISNULL(AEPK.[Desc],'') AS [<aepk>],
ISNULL(AELI.[Desc],'')AS [<aeli>],
ISNULL(AERR.[Desc],'') AS [<aerr>],
ISNULL(AEMW.[Desc],'') AS [<aemw>],
ISNULL(AEEW.[Desc],'') AS [<aeew>],
ISNULL(AEWT.[Desc],'') AS [<aewt>],
ISNULL(AEAC.[Desc],'') AS [<aeac>],
ISNULL(AEOE.[Desc],'') AS [<aeoe>],
ISNULL(CFPO.[Desc],'') AS [<cfpo>],
CASE 
	WHEN ISNULL(CFPO.[Desc] ,'') <> '' 
		THEN 'Pre-Owned'
	WHEN ISNULL(CFPN.[Desc] ,'') <> '' 
		THEN 'Purchased New'
END  as [<pd>],
ISNULL(CFBD.[Desc],'') AS [<cfbd>],
ISNULL(CFID.[Desc],'') AS [<cfid>],
ISNULL(CFM.[Desc],'') AS [<cfm>],
ISNULL(CFMF.[Desc],'') AS [<cfmf>],
ISNULL(CFO.[Desc],'') AS [<cfo>],
ISNULL(CFRB.[Desc],'') AS [<cfrb>],
ISNULL(CFT.[Desc],'') AS [<cft>],
ISNULL(CFID.[Desc],'') AS [<cfid>],
ISNULL(CFW.[Desc],'') AS [<cfw>],
ISNULL(CFBD.[Desc],'') AS [<cfbd>]
FROM 
 Risk_Assessment_Master RAM  
LEFT JOIN Risk_Assessment RA ON RA.AssessmentID = RAM.AssessmentID  
LEFT JOIN (SELECT FirstName,Surname,EntityContactID,PhysicalAddrID,PostalAddrID,HomePhone,Additional1,Cell,Phone1,Fax FROM EntityContact) EC ON EC.EntityContactID = RA.EntityContactID  
LEFT JOIN EntityAddress EAR ON EC.PhysicalAddrID = EAR.EntityAddressID  
LEFT JOIN EntityAddress EAP ON EC.PostalAddrID = EAP.EntityAddressID  
LEFT JOIN (SELECT RiskAssessmentID,RiskAssessmentSectionID FROM Risk_Assessment_Section) RAS ON RAM.AssessmentID = RAS.RiskAssessmentID  
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID FROM Risk_Assessment_Category) RAC ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT RiskAssessmentCategoryID,Price from Risk_Assessment_Item) RAI ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID  
LEFT JOIN (SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') AS [Surveyor] FROM Staff) U   ON RAM.SurveyorID = U.StaffID 
LEFT JOIN (
SELECT staffid, isnull(Firstname,'') + ' ' + isnull(surname,'') AS [Surveyor] FROM Staff) UR   
	ON RAM.ReplacementSurveyorID = UR.StaffID  
LEFT JOIN  Risk_AssessmentNo RAN 
	ON RAN.RiskAssessmentID = RAM.RiskAssessmentID  
LEFT JOIN (SELECT Company,EntityID FROM Entity) EI 
	ON EI.EntityID = RAM.InsurerID  
LEFT JOIN (SELECT Company,EntityID FROM Entity) EB 
	ON EB.EntityID = RAM.BrokerID 
LEFT JOIN (SELECT Company,EntityID FROM Entity) ER
ON ER.EntityID = RAM.RequestedBy  
LEFT JOIN OrderForm O 
	ON RAM.OrderID = O.OrderID  
--**********************************************VEHICLE DETAILS!*****************************************
LEFT JOIN (
select TOP 1
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Colour%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDC ON RAM.RiskAssessmentID = VDC.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Engine No. (See license disk)%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDEN ON RAM.RiskAssessmentID = VDEN.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%I.D. No.%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDID ON RAM.RiskAssessmentID = VDID.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%License Expiry (YYMMDD)%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDLX ON RAM.RiskAssessmentID = VDLX.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Make%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDM ON RAM.RiskAssessmentID = VDM.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Model%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDMO ON RAM.RiskAssessmentID = VDMO.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Odometer Reading%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDOR ON RAM.RiskAssessmentID = VDOR.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Principal Driver (Other than client)%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDPD ON RAM.RiskAssessmentID = VDPD.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Registered in clients name (If NO, please explain)%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDRCN ON RAM.RiskAssessmentID = VDRCN.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	 ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Registered in clients name (If NO, please explain)%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDRCND ON RAM.RiskAssessmentID = VDRCND.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Resident with client (If NO, explain)?%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDRWC ON RAM.RiskAssessmentID = VDRWC.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Resident with client (If NO, explain)?%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDRWCD ON RAM.RiskAssessmentID = VDRWCD.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Rigistration No.%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDRN ON RAM.RiskAssessmentID = VDRN.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Type%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDT ON RAM.RiskAssessmentID = VDT.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Vin No.%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDVN ON RAM.RiskAssessmentID = VDVN.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Year%'   AND RAC.CategoryName LIKE 'VEHICLE DETAILS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) VDY ON RAM.RiskAssessmentID = VDY.RiskAssessmentID
--**********************************************USE FACTORS!*****************************************
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Class of use%'   AND RAC.CategoryName LIKE 'USE FACTORS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) UFCOU ON RAM.RiskAssessmentID = UFCOU.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Select Appropriate%'   AND RAC.CategoryName LIKE 'USE FACTORS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) UFSA ON RAM.RiskAssessmentID = UFSA.RiskAssessmentID
--**********************************************PARKING!*****************************************
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Daytime Parking%'   AND RAC.CategoryName LIKE 'PARKING' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) PDP ON RAM.RiskAssessmentID = PDP.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Overnight Parking%'   AND RAC.CategoryName LIKE 'PARKING' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) POP ON RAM.RiskAssessmentID = POP.RiskAssessmentID
--**********************************************ACCESSORIES AND EXTRAS!*****************************************
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Airconditioning%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AEAC ON RAM.RiskAssessmentID = AEAC.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Alarm / Immobiliser (Details)%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AEAI ON RAM.RiskAssessmentID = AEAI.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Automatic%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AEA ON RAM.RiskAssessmentID = AEA.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Canopy%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AEC ON RAM.RiskAssessmentID = AEC.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%CD / Radio%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AECR ON RAM.RiskAssessmentID = AECR.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.Model,'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT Model,RiskAssessmentCategoryID,ItemPrompt from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%CD / Radio%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AECRM ON RAM.RiskAssessmentID = AECRM.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Cruise Control%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AECC ON RAM.RiskAssessmentID = AECC.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Electric Windows%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AEEW ON RAM.RiskAssessmentID = AEEW.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Gearlock (Details)%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AEG ON RAM.RiskAssessmentID = AEG.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Leather Interior%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AELI ON RAM.RiskAssessmentID = AELI.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Mag Wheels%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AEMW ON RAM.RiskAssessmentID = AEMW.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Manual%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AEM ON RAM.RiskAssessmentID = AEM.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Other Extras%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AEOE ON RAM.RiskAssessmentID = AEOE.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Phone Kit%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AEPK ON RAM.RiskAssessmentID = AEPK.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Power Steering%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AEPS ON RAM.RiskAssessmentID = AEPS.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Radio / Tape%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AERT ON RAM.RiskAssessmentID = AERT.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.Model,'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT Model,RiskAssessmentCategoryID,ItemPrompt from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Radio / Tape%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AERTM ON RAM.RiskAssessmentID = AERTM.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Roof Rack%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AERR ON RAM.RiskAssessmentID = AERR.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Smash & Grab%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AESG ON RAM.RiskAssessmentID = AESG.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Spoilers%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AES ON RAM.RiskAssessmentID = AES.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Sun Roof%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AESR ON RAM.RiskAssessmentID = AESR.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Tracker (Details)%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AET ON RAM.RiskAssessmentID = AET.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Transponder Key%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AETK ON RAM.RiskAssessmentID = AETK.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Window Tint%' AND RAC.CategoryName LIKE 'ACCESSORIES AND EXTRAS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) AEWT ON RAM.RiskAssessmentID = AEWT.RiskAssessmentID
--**********************************************CONDITION FACTORS!*****************************************
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Body Damage (Describe)%' AND RAC.CategoryName LIKE 'CONDITION FACTORS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) CFBD ON RAM.RiskAssessmentID = CFBD.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Interior Damage%' AND RAC.CategoryName LIKE 'CONDITION FACTORS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) CFID ON RAM.RiskAssessmentID = CFID.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Mags%' AND RAC.CategoryName LIKE 'CONDITION FACTORS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) CFM ON RAM.RiskAssessmentID = CFM.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Modified%' AND RAC.CategoryName LIKE 'CONDITION FACTORS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) CFMF ON RAM.RiskAssessmentID = CFMF.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%OTHER%' AND RAC.CategoryName LIKE 'CONDITION FACTORS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) CFO ON RAM.RiskAssessmentID = CFO.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Previously owned%' AND RAC.CategoryName LIKE 'CONDITION FACTORS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) CFPO ON RAM.RiskAssessmentID = CFPO.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Purchased new%' AND RAC.CategoryName LIKE 'CONDITION FACTORS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) CFPN ON RAM.RiskAssessmentID = CFPN.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Rebuild%' AND RAC.CategoryName LIKE 'CONDITION FACTORS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) CFRB ON RAM.RiskAssessmentID = CFRB.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Tyres%' AND RAC.CategoryName LIKE 'CONDITION FACTORS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) CFT ON RAM.RiskAssessmentID = CFT.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Windscreen%' AND RAC.CategoryName LIKE 'CONDITION FACTORS' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) CFW ON RAM.RiskAssessmentID = CFW.RiskAssessmentID
--**********************************************EXTRA INFORMATION!*****************************************
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Vehicle No:%' AND RAC.CategoryName LIKE 'Extra Information' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) EIVN ON RAM.RiskAssessmentID = EIVN.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Inspection Date:%' AND RAC.CategoryName LIKE 'Extra Information' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) EIID ON RAM.RiskAssessmentID = EIID.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Time:%' AND RAC.CategoryName LIKE 'Extra Information' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) EIT ON RAM.RiskAssessmentID = EIT.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Inspected at address:%' AND RAC.CategoryName LIKE 'Extra Information' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) EIIAA ON RAM.RiskAssessmentID = EIIAA.RiskAssessmentID
LEFT JOIN (
select TOP 1 
	RAS.RiskAssessmentID,
	ISNULL(RAI.SelectedAnswer,'')  + ISNULL(' ' + [Description],'') AS [Desc]
from   Risk_Assessment_Section RAS   WITH(NOLOCK) 
LEFT JOIN (SELECT RiskAssessmentSectionID,RiskAssessmentCategoryID,CategoryName from Risk_Assessment_Category WITH(NOLOCK)) RAC    
	ON RAC.RiskAssessmentSectionID = RAS.RiskAssessmentSectionID  
LEFT JOIN (SELECT SelectedAnswer,RiskAssessmentCategoryID,ItemPrompt,[Description] from Risk_Assessment_Item     WITH(NOLOCK)) RAI
	ON RAI.RiskAssessmentCategoryID = RAC.RiskAssessmentCategoryID
where ItemPrompt LIKE '%Home/Work?%' AND RAC.CategoryName LIKE 'Extra Information' AND SectionName LIKE 'SECTION A'
AND RAS.RiskAssessmentID = @ID) EIHW ON RAM.RiskAssessmentID = EIHW.RiskAssessmentID

WHERE RAM.RiskAssessmentID = @ID
--**************************************
","0","","1","LRA-FUSION","0","0","fusion"
"40258","cv_acc_manufacture_special",""," 
select
 
acc.StockDescription as [<part>],
acmo.Qty as [<qtytoissue>],
e.Company as [<client>],
IsNull(ead.Address1,'') as [<address1>],
IsNull(ead.Address2,'') as [<address2>],
IsNull(ead.Address3,'') as [<address3>],
IsNull(ead.Code,'') as [<address4>],
Convert(Varchar,GETDATE(),106) as [<printdate>],
Convert(Varchar,GETDATE(),106) as [<printdate1>],
jobnum as [<jobno>],
dm.ClientPO as [<orderno>],
acmd.StockCode as [<stockcode>] ,
ll.Value as [<container>],
SUM(actrl.Qty) as [<stocklevel>],
IsNull(u.FirstName,'') + ' ' + ISNULL(u.Surname,'') as [<user>],
acm.customerduedate as [<customerduedate>],
lmt.Value as [<manufacturetype>]
  from AccMANUFACTURE acm
left join entity e
on acm.EntityID = e.EntityID 
left join EntityAddress ead
on ead.EntityID = e.EntityID  and ead.EntityAddressID = (select Top 1 EntityAddressID from EntityAddress where EntityID = e.EntityID and entityaddress.AddressType like '%physical%')
left join AccMANUFACTURE_DETAIL acmd on
acm.DocID = acmd.DocID and acmd.LineID = (select Top 1 LineID from AccMANUFACTURE_DETAIL where DocID = acm.DocID )
LEFT join AccMANUFACTURE_OUTPUT acmo on
acmo.DocID = acm.DocID 
left join LinkLookup ll on ll.LinkLookupID = acmo.ContainerID 
left join projects p on acm.ProjectID = p.ProjectID 
left join AccStockControl actrl on
actrl.StockID = acmd.StockID 
left join Users u on
u.UserID ={userid}
left join DEBTOR_MASTER dm 
on acm.RaisedByDocID = dm.DocID 
left join accstock acc on
acc.stockid = acmo.stockid
left join Lookup lmt
on acm.ManufType = lmt.LookupID 
where acm.DocID = {docid}
group by e.Company ,ead.Address1 ,ead.Address2 ,ead.Address3 ,ead.Code ,acm.jobnum ,dm.ClientPO ,acmd.StockCode ,ll.Value 
,u.FirstName , u.Surname , acmd.ContainerID ,acmo.Qty,acc.StockDescription,acm.customerduedate ,lmt.value
  


 ","0","","1","LRA-FUSION","0","0","fusion"
"40259","cv_acc_manufacture_special_component","","select

top 1

acc.StockCode as [<stockcode>],
acc.StockDescription as [<description>],
acc.StockDescription as [<setnumber>], 
acc.StockDescription as [<partnumber>],
acm.DocID as [<number>],
acmo.Qty as [<qty>],
acmo.Qty as [<setstopack>],
e.Company as [<client>],
IsNull(ead.City,'') as [<town>],
IsNull(ead.code,'') as [<code>],
IsNull(ead.Address3,'') as [<pobox>],
IsNull(ead.Code,'') as [<address4>],
GETDATE() as [<printdate>],
GETDATE() as [<printdate2>],
Convert(Varchar,GETDATE(),106) as [<date>],
jobnum as [<jobno>],
dm.ClientPO as [<orderno>],
acmd.StockCode as [<stockcode>] ,
ll.Value as [<container>],
SUM(actrl.Qty) as [<stocklevel>],
IsNull(u.FirstName,'') + ' ' + ISNULL(u.Surname,'') as [<user>],
acm.customerduedate as [<duedate>],
lmt.value as [<manufacturetype>]
  from AccMANUFACTURE acm
left join entity e
on acm.EntityID = e.EntityID 
left join EntityAddress ead
on ead.EntityID = e.EntityID  and ead.EntityAddressID = (select Top 1 EntityAddressID from EntityAddress where EntityID = e.EntityID and entityaddress.AddressType like '%Postal%')
left join AccMANUFACTURE_DETAIL acmd on
acm.DocID = acmd.DocID and acmd.LineID = (select Top 1 LineID from AccMANUFACTURE_DETAIL where DocID = acm.DocID )
LEFT join AccMANUFACTURE_OUTPUT acmo on
acmo.DocID = acm.DocID 
left join LinkLookup ll on ll.LinkLookupID = acmo.ContainerID 
left join projects p on acm.ProjectID = p.ProjectID 
left join AccStockControl actrl on
actrl.StockID = acmd.StockID 
left join Users u on
u.UserID = {userid}
left join DEBTOR_MASTER dm 
on acm.RaisedByDocID = dm.DocID 
left join accstock acc on
acc.stockid = acmo.stockid
left join lookup lmt on
acm.manuftype = lmt.lookupid
where acm.DocID = {docid}
group by e.Company ,ead.Address1 ,ead.Address2 ,ead.Address3 ,ead.Code ,acm.jobnum ,dm.ClientPO ,acmd.StockCode ,ll.Value 
,u.FirstName , u.Surname , acmd.ContainerID ,acmo.Qty,acc.StockDescription,acm.customerduedate ,ead.City 
,acm.docid ,acc.StockCode,lmt.value
 ","0","","1","LRA-FUSION","0","0","fusion"
"40260","cv_acc_print_manufacture_special_components_table","","select distinct acc.stockcode as [COMP NO],acc.StockDescription as [Description] ,amfd.Qty as [QTY/SET],IsNull(amfd.Qty,0) * IsNull(amfo.Qty,0) as [TO ISSUE]
,IsNull(amfd.Qty,0) * IsNull(amfo.Qty,0) as [TOTAL REQD], '' as [TOTAL RECEIVED]
 from AccMANUFACTURE_DETAIL amfd
left join accstock acc
on amfd.StockID = acc.StockID	
left join AccMANUFACTURE_OUTPUT amfo on
amfo.DocID = amfd.DocID 
where amfd.DocID = {docid}
 and IsNull(IsWasted,0) <> 1","0","","1","LRA-FUSION","0","0","fusion"
"40261","cv_acc_print_manufacture_special_inputitem","","SELECT distinct acc.StockDescription as [<setnum>],
acc.stockdescription as [<compno>],
acc2.stockcode as [<stockcode>],
amfd.LineID , amfo.docid as [<clientpo>],acc2.StockDescription as [<description>] ,
amfo.Qty as [<setstopack>],acc2.StockDescription as [<PartName>],
td.ToolSize as [<toolsize>],
td.ToolNo as [<toolno>],
amfd.Qty as [<itemqty>],
amfo.Qty as [<qty>],
lmt.value as [<manufacturetype>]
FROM AccMANUFACTURE_OUTPUT amfo
left join accstock acc 
on amfo.StockID = acc.StockID 
left join AccMANUFACTURE_DETAIL amfd
on amfo.DocID = amfd.DocID 
left join AccSTOCK acc2 on 
acc2.StockID = amfd.StockID 
left join ToolDetails td on
td.ToolID = amfo.ToolID 
left join AccMANUFACTURE amf on
amf.DocID = amfo.DocID 
left join DEBTOR_MASTER dm on
dm.DocID = amf.RaisedByDocID
left join lookup lmt on
amf.manuftype = lmt.lookupid
where 
amfd.LineID = {lineid}
and acc.StockDescription is not null","0","","1","LRA-FUSION","0","0","fusion"
"40262","cv_packinglist","","
Declare @DocID As BigInt
Set @DocID = {docid}
 
 select acc.StockCode as [Comp No],acc.StockDescription as [Description],accmfo.ActualQty as [Qty/Set],accmfo.ActualQty * accmfo.Qty as [TOTAL REQD],accmfo.ActualQty * accmfo.Qty as [TO ISSUE],acc.defaultbinname as [BIN LOCATION],SUM(acctrl.Qty) as [STOCK LEVEL],'' as [PICKED QTY],'' as [QTY ISSUED] from AccMANUFACTURE_OUTPUT accmfo
 left join accstock acc on
 acc.StockID = accmfo.StockID 
 left join linklookup ll on
 ll.LinkLookupID = accmfo.ContainerID 
 left join AccStockControl acctrl 
 on acctrl.StockID = acc.StockID 
 where accmfo.DocID = @DocID 
 group by acc.StockCode,acc.StockDescription,accmfo.ActualQty ,accmfo.Qty ,ll.Value ,accmfo.OutputID 
 ,acc.defaultbinname 
 union all
 
 select acc.StockCode as [Comp No],acc.StockDescription as [Description],accmfd.Qty as [Qty/Set],amo.Qty * accmfd.Qty as [TOTAL REQD],amo.Qty * accmfd.Qty as  [TO ISSUE],acc.defaultbinname as [BIN LOCATION],SUM(acctrl.Qty) as [STOCK LEVEL],'' as [PICKED QTY],'' as [QTY ISSUED] from AccMANUFACTURE_DETAIL accmfd
 left join accstock acc on
 acc.StockID = accmfd.StockID 
 left join linklookup ll on
 ll.LinkLookupID = accmfd.ContainerID 
 left join AccStockControl acctrl 
 on acctrl.StockID = acc.StockID 
 left join AccMANUFACTURE_OUTPUT amo on
 amo.DocID = accmfd.DocID 
 where accmfd.DocID = @DocID 
and isnull(accmfd.iswasted,0) <> 1
 group by acc.StockCode,acc.StockDescription,amo.ActualQty ,accmfd.Qty ,ll.Value ,accmfd.OutputID 
,amo.Qty ,acc.defaultbinname 
 ","0","","1","LRA-FUSION","0","0","fusion"
"40263","cv_Acc_QuickSale_Man","","
Declare @Date as datetime
set @Date = GETDATE()



SELECT {top} 
	STK.StockID
	, STK.StockCode as [Stock Code]
	, STK.StockDescription as [Stock Description] 
	, dbo.fnFormatNumber(STKC.[On Sales Order]) as [On Sales Order]
	, dbo.fnFormatNumber(STKC.[Required For Manufacture]) as [Required For Manufacture]
	, dbo.fnFormatNumber(STKC.[On Purchase Order]) as [On Purchase Order]
	, dbo.fnFormatNumber(STKC.[Total Available]) as [Total Available]
	
	, dbo.fnFormatNumber(STKC.[Under Manufacture] + STKC.[On Purchase Order]) as [YTD IN]
	, dbo.fnFormatNumber(DMI.[YTD OUT]) as [YTD OUT]
	
	, dbo.fnFormatNumber([AVG Movement ({AVGMonth} Months)]) as [AVG Movement ({AVGMonth} Months)]
	
	{MainPriceCatSQL}
	
	, AQS.QTY as [Selling QTY]
	, AQS.SellingPrice as [Selling Price]
	
FROM AccStock STK
LEFT JOIN (

	SELECT 
		StockID,
		{PriceCatSQL}
	FROM AccStockPrice
	GROUP BY StockID
	
) STKP
ON STKP.StockID = STK.StockID

LEFT JOIN (

	SELECT 
		Stk.StockID ,
		'' as [ ],
		LL.Value as [Type], 
		LLL.Value as [Sub Type] ,
		Stk.StockCode as [Code], 
		Stk.StockDescription as [Description],
		L.Value as [Unit], 
		ISNULL(ASP.CostPriceEx,0) as [Bulk Cost Price Ex. VAT],
		sum(isnull(SC.QtyStores,0) * Isnull(STK.Weight,0) / 1000) as [Total Weight (KG)] ,
		sum(isnull(SC.QtyStores,0)) as [Total In Stores] ,
		sum(isnull(qtySO,0)) - SUM(ISNULL([QtyINV], 0)) as [On Sales Order],
		/*dbo.fnFormatNumber(sum(isnull(qtySO,0))) as [On Sales Order],*/
		sum(isnull(qtyForManuf,0)) + sum(isnull(SplitInput,0)) as [Required For Manufacture],
		sum(isnull(SC.QtyStores,0)  - isnull(qtySO,0)  - isnull(qtyForManuf,0) - isnull(SplitInput,0)) as [Total Available],
		sum(isnull(qtyPO,0)) - SUM(ISNULL([QtyGRN],0)) as [On Purchase Order],
		sum(isnull(qtyUnderManuf,0)) + sum(isnull(SplitOutput,0)) as [Under Manufacture],
		isnull(Stk.LeadTime,0) as [Lead Time (Hrs)],
		isnull(convert(Varchar,min(PO.ETA),111),'') as [Next Arrival],
		stk.ReOrderLevel as [Re-Order Level],
		stk.FulFillment as [Fulfillment Level],
		CONVERT(VARCHAR,
			CAST(
				CASE WHEN 
				round(
				sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - 
				sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + 
				sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0)) + 
				sum(isnull(SplitOutput,0))
				,4) -  ISNULL(stk.ReOrderLevel,0) > 0 
				Then
				0
				ELSE
				ISNULL(stk.FulFillment,0) - 
				round(
				sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - 
				sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + 
				sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0)) + 
				sum(isnull(SplitOutput,0))
				,4)
				END
			AS MONEY)
		,1)
		as [Recommended Qty For Purchase]

	FROM AccStock STK
	Cross Join (SELECT LookupID from Lookup where class like 'Divisions') Div
	--In Stores
	LEFT JOIN (SELECT StockID, sum(qty * Ratio ) as [QtyStores],DivisionID FROM AccStockControl where Adjustdate <= @Date  group by StockID,DivisionID) SC
	ON STK.StockID = SC.StockID AND Div.LookupID = SC.DivisionID
	--On Purchase Order
	LEFT JOIN (SELECT CD.StockID, sum(CD.Qty * SoldByToPurchasedByRatio) as [QtyPO], min(DateCompleted) as [ETA],
	CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END AS [DivisionID]
	from CREDITOR_DETAIL CD 
	LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID,Deliverydate FROM CREDITOR_MASTER) CM
	ON CD.DocID = CM.DocID
	LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock) Stk
	ON CD.StockID = Stk.StockID 
	where DocType = 'Purchase Order' AND CONVERT(VARCHAR,isnull(Datecreated, @Date),111) <= CONVERT(VARCHAR,@Date,111) AND CONVERT(VARCHAR,isnull(Deliverydate, @Date),111)  >= CONVERT(VARCHAR,@Date,111)
	--where DocType = 'Purchase Order' AND isnull(Datecreated, @Date) <= @Date AND isnull(Deliverydate, @Date)  >= @Date  
	Group By CD.StockID,CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END) PO
	ON Stk.StockID = PO.StockID  AND Div.LookupID = PO.DivisionID
	--On GRN
	LEFT JOIN (SELECT CD.StockID, sum(CD.Qty * SoldByToPurchasedByRatio) as [QtyGRN], min(DateCompleted) as [ETA],
	CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END AS [DivisionID]
	from CREDITOR_DETAIL CD 
	LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID,Deliverydate FROM CREDITOR_MASTER) CM
	ON CD.DocID = CM.DocID
	LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock) Stk
	ON CD.StockID = Stk.StockID 
	where DocType = 'Goods Received Note' AND CONVERT(VARCHAR,isnull(Datecreated, @Date),111) <= CONVERT(VARCHAR,@Date,111) AND CONVERT(VARCHAR,isnull(Deliverydate, @Date),111)  >= CONVERT(VARCHAR,@Date,111)
	--where DocType = 'Purchase Order' AND isnull(Datecreated, @Date) <= @Date AND isnull(Deliverydate, @Date)  >= @Date  
	Group By CD.StockID,CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END) GRN
	ON Stk.StockID = GRN.StockID  AND Div.LookupID = GRN.DivisionID
	--On Sales Order
	LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtySO],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID]
	from DEBTOR_DETAIL DD
	LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER) DM
	ON DD.DocID = DM.DocID
	where DocType = 'Sales Order' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
	Group By DD.StockID,CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) SO
	ON Stk.StockID = SO.StockID  AND Div.LookupID = SO.DivisionID
	--On Invoice
	LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtyINV],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID]
	from DEBTOR_DETAIL DD
	LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER) DM
	ON DD.DocID = DM.DocID
	where DocType = 'Invoice' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
	Group By DD.StockID,CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) INV
	ON Stk.StockID = INV.StockID  AND Div.LookupID = INV.DivisionID
	--Required For Manufacture
	LEFT JOIN (SELECT MD.StockID, Sum(MD.Qty * M.Qty) as [QtyForManuf],DivisionID FROM AccManufacture_Detail MD 
	LEFT JOIN AccManufacture M ON MD.DocID = M.DocID
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date 
	Group by  MD.StockID,DivisionID )Manuf
	ON Stk.StockID = Manuf.StockID  AND Div.LookupID = Manuf.DivisionID
	--Under Manufacture
	LEFT JOIN (SELECT M.StockID, Sum(M.Qty) as [QtyUnderManuf],DivisionID FROM AccManufacture M
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
	GROUP By M.StockID,DivisionID) UManuf
	ON Stk.StockID = UManuf.StockID  AND Div.LookupID = uManuf.DivisionID
	--Split Stock Manufacturing
	LEFT JOIN (SELECT SD.StockID, LL.LinkedTo as [DivID],
	sum(Case when isnull(SD.IsInput,0) = 1 THEN Qty * Length ELSE 0 END) as [SplitInput],
	sum(Case when isnull(SD.IsInput,0) = 0 THEN Qty * Length ELSE 0 END) as [SplitOutput]
	FROM ACCStock_Split_Master SM
	LEFT JOIN (SELECT * FROM AccStock_Split_Detail) SD ON SM.DocID = SD.DocID
	LEFT JOIN LinkLookup LL ON SD.ContainerID = LL.LinkLookupID
	WHERE SM.DocStatus <> 'Completed' AND SM.DateCreated <= @Date
	Group by SD.StockID, LL.LinkedTo)  SS
	ON STK.StockID = SS.StockID and Div.LookupID = SS.DivID
	LEFT JOIN Lookup L on  STK.SoldBy = L.LookupID 
	LEFT JOIN Lookup LL on STK.StockType = LL.LookupID
	LEFT JOIN LinkLookup LLL on STK.SubTypeID = LLL.Linklookupid 
	LEFT JOIN AccStockPrice ASP ON ASP.StockId = STK.StockID
	--WHERE  (ISNULL(ASP.PriceCategoryID,13794) = 13794)  AND  (isnull(Stk.IsTangible,0) = 1)  
	Group by STK.StockId, LL.Value, LLL.Value, STK.StockCode,STK.StockDescription,L.Value,STK.LeadTime,stk.ReOrderLevel, stk.FulFillment, ASP.CostPriceEx

) STKC ON STKC.StockID = STK.StockID
LEFT JOIN (
	SELECT * FROM AccQuickSale
) AQS ON AQS.StockID = STK.StockID
LEFT JOIN (
	SELECT DD.StockID, SUM(DD.QTY) as [YTD OUT] FROM Debtor_Master DM
	LEFT JOIN (
		SELECT * FROM Debtor_Detail
	) DD ON DD.DocID = DM.DocID
	WHERE DM.DocType LIKE 'Invoice' AND DocStatus LIKE 'Completed'
	GROUP BY DD.StockID	
) DMI ON DMI.StockID = STK.StockID
LEFT JOIN (
	SELECT A.StockID, (SUM(DD.QTY) / {AVGMonth}) as [AVG Movement ({AVGMonth} Months)] FROM Debtor_Detail DD
	LEFT JOIN (
	SELECT DocID, DateCompleted, DocType, DocStatus FROM Debtor_Master
	) DM ON DM.DocID = DD.DocID
	LEFT JOIN (
	SELECT * FROM AccStock
	) A ON A.StockID = DD.StockID
	WHERE  (DM.DocType LIKE 'Invoice' AND DM.DocStatus LIKE 'Completed')  
	AND (DateCompleted Between DATEADD(MONTH, - {AVGMonth}, GETDATE()) AND GETDATE())
	GROUP BY A.StockID
) SAM ON SAM.StockID = STK.StockID
{where}
","0","","1","LRA-FUSION","0","0","fusion"
"40264","cv_Acc_Print_Cost_Estimate","","
/* DO NOT EDIT THIS VIEW !!! */

Declare @DocID as int
Declare @CommentsBelow as bit
Declare @HideZeros as bit

Declare @PrintComponentsDQP as Bit
Declare @PrintComponentsDQ as Bit
Declare @PrintComponentsD as Bit


Set @DocID = {docid}
Set @CommentsBelow  =  (SELECT Top 1 isnull(Selected,0) from crmSetup where variable = 'CommentsBelow')
Set @HideZeros = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'HideZeroValues')

Set @PrintComponentsDQP = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'PrintComponentsDQP'  and custValue ='Quote')
Set @PrintComponentsDQ = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'PrintComponentsDQ'  and custValue ='Quote')
Set @PrintComponentsD = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'PrintComponentsD'  and custValue ='Quote')


SET NoCount ON
SET ANSI_WARNINGS OFF
--Put results into a tempory table so Line Numbers can be added
SELECT IDENTITY(int, 1,1) AS [Line], *
INTO #Temp
FROM
(
    --Select Main items
    SELECT 
	convert(varchar,lineid) + 'M'  as [LineID],
	CED.GroupName as [Group],
	ProjectName as [Project],
	isnull(ESC.EntityStockCode,CED.StockCode) as [Stock Code],
	LC.Value as [Container],
	CASE WHEN isnull(CED.Comments,'') <> '' AND  @CommentsBelow = 1 THEN isnull(ESC.EntityStockDescription,CED.StockDescription) + ':' + char(13) + CED.Comments ELSE isnull(ESC.EntityStockDescription,CED.StockDescription) END as [Description],
	isnull(ESC.EntityStockDescription,CED.StockDescription) + isnull(char(10) + STK.Specifications,'') as [Description+Spec],
	Comments,
	Company as [Supplier],
	convert(varchar,cast((isnull(STK.Weight,0) /1000) * CED.Qty  as money),1) as [Total Weight],
	dbo.fnMakeZeroBlank(convert(varchar,Qty)) as [Qty],
	convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	CASE WHEN @HideZeros = 1 AND isnull(CED.CostPriceEx ,0) = 0 THEN '' ELSE CEM.Currency + ' ' + dbo.fnFormatNumber(CED.CostPriceEx ) END as [Cost Ex.],
	CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx / isnull(ROE,1) ) END as [Price Ex.],
	CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx / isnull(ROE,1) * (CEM.TAX /100) ) END as [VAT],
	CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx * qty / isnull(ROE,1) ) END as [Total Ex.],
	CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx * qty  * ((100 - isnull(discperc,0)) /100) / isnull(ROE,1)) END as [Total Ex. Disc],
	CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx * ((100 - isnull(discperc,0)) /100) / isnull(ROE,1) ) END as [Nett],
	CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber((PriceEx * qty  * ((100 - isnull(discperc,0)) /100) / isnull(ROE,1))  * (1 + CEM.TAX /100)) END as [Total Incl],
	SM.DeliveryTerms,
	Rank,
	-1000 as [Rank2],
	rCED.[GroupRank],
	'' as [customer item number],
	CASE when STK.ProductImage is null then null else '<' + CONVERT(VARCHAR,CED.LineID) + '>' END as [Image],
	SM.[Packing],
	dbo.fnFormatNumber(STK.[Length] * STK.[Width] * STK.[Height]) as [Size],
	STKT.[Stock Type],
	dbo.fnFormatNumber(STK.[Weight] / 1000)  as [KG/UNIT/CARTON],
	dbo.fnFormatNumber((STK.[Weight] * CED.QTY) / 1000) as [KG TOTAL],
	STKST.[Stock Sub Type],
	CEM.accCostOther4 as [Other4],
	SPI.[Sold In],
	convert(varchar,CED.WastePerc) + '%' as [Wastage],
	CED.MarkupPerc,
	isnull(BarCode,'') as [Barcode],
	isnull(DefaultBinName,'') as [Default Bin Name]
    FROM Cost_Estimate_Detail  CED
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
		ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
		ON CED.ProjectID = P.projectID
    LEFT JOIN AccStock STK 
		ON CED.StockID = STK.StockID
    LEFT JOIN (SELECT LookupID, Value as [Stock Type] FROM lookup WHERE Class LIKE 'StockType') STKT 
		ON STKT.LookupID = STK.StockType
    LEFT JOIN (SELECT LinkLookupID, Value as [Stock Sub Type], Class FROM Linklookup WHERE Class LIKE 'StockSubType' ) STKST 
		ON STKST.LinkLookupID = STK.SubTypeID
    LEFT JOIN (SELECT Lookupid, Value as [Sold In] From Lookup where class like 'BuySellUnits') SPI 
		ON SPI.lookupID = STK.SoldBy
    LEFT JOIN Cost_Estimate_Master CEM 
		ON CEM.DocID = CED.DocID
    LEFT JOIN (	SELECT ShippingDocID, DeliveryTerms, [Packing] 
				FROM Shipping_Master  SM
				LEFT JOIN (	SELECT LookupID, Value as [Packing] from Lookup where class like 'Packagingtype') LP 
					ON LP.LookupID = SM.PackageTypeID) SM 
		ON CED.ShippingDocID = SM.Shippingdocid
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
		ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    LEFT JOIN (SELECT * from AccPrintoutGroup) APG
		ON APG.Doctype = 'Quote'  AND rtrim(lower(isnull(APG.GroupName,''))) = rtrim(lower(isnull(CED.GroupName,'')))
    LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LC
		ON CED.ContainerID = LC.LinkLookupID
    LEFT JOIN (SELECT * FROM EntityStockCode) ESC
		ON CED.StockID = ESC.StockID AND CEM.EntityID = ESC.EntityID
    where isnull(ComponentOfLineID,0)  = 0
    AND ISNULL(APG.PrintoutGroupID,0) = 0
    AND CED.DocID = @DocID
 
    UNION ALL

    --Select component items
    SELECT convert(varchar,CED.lineid) + 'C'  as [LineID], 
    (SELECT Top 1 GroupName From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) as [Group],
    null as [Project], 
    '-    ' + isnull(ESC.EntityStockCode,CED.StockCode) as [Stock Code], 
    null as [Container],
    CASE WHEN @PrintComponentsDQ = 1 OR @PrintComponentsD = 1  OR @PrintComponentsDQP = 1 THEN 
		'-    ' + isnull(ESC.EntityStockDescription,CED.StockDescription)
    ELSE
		''
    END as [Description],
    CASE WHEN @PrintComponentsDQ = 1 OR @PrintComponentsD = 1  OR @PrintComponentsDQP = 1 THEN 
		'-    ' + isnull(ESC.EntityStockDescription,CED.StockDescription) 
	ELSE
		''
	END	as [Description+Spec], 
    Comments,Company as [Supplier],
    convert(varchar,cast((isnull(STK.Weight,0) /1000) * CED.Qty as money),1) as [Total Weight],
    CASE WHEN @PrintComponentsDQ = 1  OR @PrintComponentsDQP = 1 THEN 
		dbo.fnMakeZeroBlank(convert(varchar,Qty)) 
	ELSE
		''
	END as [Qty],
    convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	CASE WHEN @PrintComponentsDQP = 1 THEN 
		CASE WHEN @HideZeros = 1 AND isnull(CED.CostPriceEx ,0) = 0 THEN '' ELSE CEM.Currency + ' ' + dbo.fnFormatNumber(CED.CostPriceEx ) END 
	Else
		''
	END	
	as [Cost Ex.],
	CASE WHEN @PrintComponentsDQP = 1 THEN 
		CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx / isnull(ROE,1) ) END 
	Else
		''
	END as [Price Ex.],
	CASE WHEN @PrintComponentsDQP = 1 THEN 
		CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx / isnull(ROE,1) * (CEM.TAX /100) ) END 
	ELSE
		''
	END as [VAT],
	CASE WHEN @PrintComponentsDQP = 1 THEN 
		CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx * qty / isnull(ROE,1) ) END 
	ELSE
		''
	END as [Total Ex.],
	CASE WHEN @PrintComponentsDQP = 1 THEN 
		CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx * qty  * ((100 - isnull(discperc,0)) /100) / isnull(ROE,1)) END 
	ELSE
		''
	END as [Total Ex. Disc],
	CASE WHEN @PrintComponentsDQP = 1 THEN 
		CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(PriceEx * ((100 - isnull(discperc,0)) /100) / isnull(ROE,1) ) END 
	ELSE
		''
	END as [Nett],
	CASE WHEN @PrintComponentsDQP = 1 THEN 
		CASE WHEN @HideZeros = 1 AND isnull(PriceEx,0) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber((PriceEx * qty  * ((100 - isnull(discperc,0)) /100) / isnull(ROE,1))  * (1 + CEM.TAX /100) ) END 
	ELSE
		''
	END as [Total Incl],
    null as [DeliveryTerms],
    (SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) ,CED.Rank as [Rank2], 
    rCED.[GroupRank], '' as [customer item number],
    NULL,
    NULL AS [Packing],
	NULL AS [Size],
	NULL AS [Class],
	NULL AS [KG/UNIT/CARTON],
	NULL AS [KG TOTAL],
	NULL,
	NULL,
	null,
	null,
	CED.MarkupPerc,
	isnull(BarCode,'') as [Barcode],
	isnull(DefaultBinName,'') as [Default Bin Name]
    FROM Cost_Estimate_Detail CED
    LEFT JOIN (SELECT LineID, Rank,GroupName FROM COST_ESTIMATE_DETAIL WHERE DocID = @DocID) CEDM
		ON isnull(CED.ComponentOfLineID,0) = CEDM.LineID
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
		ON CED.SupplierID = E.Entityid
    LEFT JOIN AccStock STK 
		ON CED.StockID = STK.StockID
    LEFT JOIN Cost_Estimate_Master CEM 
		on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
		ON CEDM.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    LEFT JOIN (SELECT * from AccPrintoutGroup) APG
		ON APG.Doctype = 'Quote'  AND rtrim(lower(isnull(APG.GroupName,''))) = rtrim(lower(isnull(CED.GroupName,'')))
    LEFT JOIN (SELECT * FROM EntityStockCode) ESC
		ON CED.StockID = ESC.StockID AND CEM.EntityID = ESC.EntityID
    WHERE isnull(ComponentOfLineID,0)  > 0
    AND ISNULL(APG.PrintoutGroupID,0) = 0
    AND CED.DocID = @DocID
    AND isnull((select selected from crmSetup where Variable like 'PrintComponents' and custValue ='Quote' ),0) = 1

    UNION ALL

	--Comments
    SELECT distinct convert(varchar,lineid) + 'C'  as [LineID],
    (SELECT Top 1 GroupName From Cost_Estimate_Detail Where LineID = DD.ComponentOfLineID), '' as [Project],'' as [Stock Code],'' as [Container], '' as [Code],'-      ' + Comments as [Description],
    NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
    (SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = DD.ComponentOfLineID) ,Rank + 1 as [Rank2], rCED.[GroupRank], '<col-grey>' as [customer item number],'<col-grey>' as [image],
    NULL AS [Packing],
	NULL AS [Size],
	NULL AS [Class],
	NULL AS [KG/UNIT/CARTON],
	NULL AS [KG TOTAL],
	NULL,
	NULL,
	null,
	null,
	DD.MarkupPerc,
	'' as [Barcode],
	'' as [Default Bin Name]
    FROM Cost_Estimate_Detail DD
    LEFT JOIN (SELECT DocID , ROE FROM Cost_Estimate_Master ) DM
		ON DD.DocID = DM.DocID 
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
		ON DD.GroupName = rCED.GroupName AND DD.DocID = rCED.DocID
    LEFT JOIN (SELECT * from AccPrintoutGroup) APG
		ON APG.Doctype = 'Quote'  AND rtrim(lower(isnull(APG.GroupName,''))) = rtrim(lower(isnull(DD.GroupName,'')))
    WHERE DD.DocID = @docid
    AND ISNULL(APG.PrintoutGroupID,0) = 0
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
    and  isnull(ComponentOfLineID,0)  > 0

 -- comment out for Spoc
    UNION ALL
  
    --Select Groups
    SELECT Distinct '<col-grey>',  '<col-grey>' + '<B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>' , '<col-grey>', '<col-grey>' + '<B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>' , '<col-grey>', '<col-grey>','<col-grey>', '<col-grey>', '<col-grey>','<col-grey>',
    '<col-grey>',
    '<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>',
    '<col-grey><B>' + CASE WHEN @HideZeros = 1 AND sum(PriceEx * qty) / isnull(ROE,1) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty) / isnull(ROE,1)) END  + '</B>' as [Total Ex.],
    '<col-grey><B>' + CASE WHEN @HideZeros = 1 AND sum(PriceEx * qty) / isnull(ROE,1) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty * ((100 - isnull(discperc,0)) /100)) / isnull(ROE,1) ) END  + '</B>' as [Total Ex. Disc],
    '<col-grey><B>' + CASE WHEN @HideZeros = 1 AND sum(PriceEx * qty) / isnull(ROE,1) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) / isnull(ROE,1) ) END + '</B>' as [Nett],
    '<col-grey><B>' + CASE WHEN @HideZeros = 1 AND sum(PriceEx * qty) / isnull(ROE,1) = 0 THEN '' ELSE isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum((PriceEx * qty  * ((100 - isnull(discperc,0)) /100) / isnull(ROE,1))  * (1 + CEM.TAX /100)) ) END  + '</B>' as [Total Incl],
    '<col-grey>' as [DeliveryTerms],
    isnull(min(Rank),0),-2000, rCED.[GroupRank], '<col-grey>' as [customer item number],'<col-grey>' as [image],
    '<col-grey>' AS [Packing],
	'<col-grey>' AS [Size],
	'<col-grey>' AS [Class],
	'<col-grey>' AS [KG/UNIT/CARTON],
	'<col-grey>' AS [KG TOTAL],
	'<col-grey>',
	'<col-grey>',
	'<col-grey>',
	'<col-grey>',
	null As [MarkupPerc],
	null as [Barcode],
	null as [Default Bin Name]
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM 
		ON CEM.DocID = CED.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
		ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    LEFT JOIN (SELECT * from AccPrintoutGroup) APG
		ON APG.Doctype = 'Quote'  AND rtrim(lower(isnull(APG.GroupName,''))) = rtrim(lower(isnull(CED.GroupName,'')))
    WHERE CED.DocID = @DocID
    AND ISNULL(APG.PrintoutGroupID,0) = 0
    AND isnull(ComponentOfLineID,0)  = 0
    AND isnull(CED.GroupName,'') <> ''
    GROUP BY CED.GroupName,CEM.Currency , rCED.[GroupRank],CEM.ROE
    

    -- comment out for Spoc
    UNION ALL
    

    --Select Summary info
    SELECT null, '<col-grey><B>SUMMARY:</B>', '<col-grey>', '<col-grey><B>SUMMARY:</B>', '<col-grey>', '<col-grey>',  '<col-grey>', '<col-grey>','<col-grey>','<col-grey>', '<col-grey>','<col-grey>',  '<col-grey>','<col-grey>','<col-grey>',  
    '<col-grey>','<col-grey>','<col-grey>','<col-grey>','<col-grey>',
    9999999999999998,9999999999999998,9999999999998, '<col-grey>' as [customer item number],'<col-grey>' as [image] ,'<col-grey>' AS [Packing],
	'<col-grey>' AS [Size],
	'<col-grey>' AS [Class],
	'<col-grey>' AS [KG/UNIT/CARTON],
	'<col-grey>' AS [KG TOTAL],
	'<col-grey>',
	'<col-grey>',
	'<col-grey>',
	'<col-grey>',
	null As [MarkupPerc],
	null as [Barcode],
	null as [Default Bin Name]
	WHERE (SELECT max(GroupName) FROM Cost_Estimate_Detail WHERE DocID = @Docid) <> ''
	
-- comment out for Spoc
    UNION ALL
  
    --Select Summary info
    SELECT Distinct null, '<col-grey><B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>', '<col-grey>','<col-grey><B>' + upper(isnull(CED.GroupName, 'Not Specified')) + '</B>', '<col-grey>', '<col-grey>',  '<col-grey>','<col-grey>','<col-grey>','<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>', '<col-grey>','<col-grey>',
    '<col-grey><B>' + isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty) / isnull(ROE,1) )  + '</B>' as [Total Ex.],
    '<col-grey><B>' + isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * qty  * ((100 - isnull(discperc,0)) /100)) / isnull(ROE,1))  + '</B>' as [Total Ex.],
    '<col-grey><B>' + isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum(PriceEx * ((100 - isnull(discperc,0)) /100)) / isnull(ROE,1) )  + '</B>' as [Nett],
    '<col-grey><B>' + isnull(CEM.Currency,'') + ' ' + dbo.fnFormatNumber(sum((PriceEx * qty  * ((100 - isnull(discperc,0)) /100) / isnull(ROE,1))  * (1 + CEM.TAX /100)) )  + '</B>' as [Total Incl],
    '<col-grey>',
    9999999999999999,9999999999999999, isnull(rCED.GroupRank,0) + 9999999999999, '<col-grey>' as [customer item number],'<col-grey>' as [image] ,'<col-grey>' AS [Packing],
	'<col-grey>' AS [Size],
	'<col-grey>' AS [Class],
	'<col-grey>' AS [KG/UNIT/CARTON],
	'<col-grey>' AS [KG TOTAL],
	'<col-grey>',
	'<col-grey>',
	'<col-grey>',
	'<col-grey>',
    null As [MarkupPerc],
    null as [Barcode],
	null as [Default Bin Name]   
    FROM Cost_Estimate_Detail  CED
    Left join Cost_Estimate_Master CEM on CEM.DocID = CED.DocID
    LEFT JOIN (SELECT Min(Rank) as [GroupRank], GroupName,DocID FROM COST_ESTIMATE_DETAIL Group By GroupName, DocID) rCED
		ON CED.GroupName = rCED.GroupName AND CED.DocID = rCED.DocID
    LEFT JOIN (SELECT * from AccPrintoutGroup) APG
		ON APG.Doctype = 'Quote'  AND rtrim(lower(isnull(APG.GroupName,''))) = rtrim(lower(isnull(CED.GroupName,'')))
    WHERE CED.DocID = @DocID
    AND isnull(ComponentOfLineID,0)  = 0
    AND ISNULL(APG.PrintoutGroupID,0) = 0
    AND isnull(CED.GroupName,'') <> ''
    GROUP BY CED.GroupName,CEM.Currency, rCED.[GroupRank] , CEM.ROE
    HAVING sum(PriceEx * qty  * ((100 - isnull(discperc,0)) /100)) / isnull(ROE,1) <> 0

    ) A 

ORDER BY [GroupRank] , Rank,Rank2,[LineID]

{select} #Temp

DROP TABLE #Temp

SET NoCount OFF","0","","1","LRA-FUSION","0","0","fusion"
"40265","qf_Machine_Job","","SELECT 
	MD.MachineConfigID,
	L.Value as [Machine Name],
	LL.Value as [Model Type],
	MD.Options,
	MD.Framalink,
	MD.Serialno,
	MD.Licenceno,
	MD.CDNo 
FROM MachineDetails MD
LEFT JOIN LinkLookup LL ON LL.LinkLookupID = MD.ModelTypeID 
LEFT JOIN Lookup L ON L.LookupID = LL.LinkedTo 
WHERE EntityID IN ({entityid})
AND (L.Value like '%<%replace%>%' or LL.Value like '%<%replace%>%' or MD.Framalink like '%<%replace%>%')","0","","1","LRA-FUSION","0","0","fusion"
"40266","cv_Job_Linked_Machines","","SELECT 
    PM.JobMachineID ,
    L.Value as [Machine Name],
    LL.Value as [Model Type],
    MD.Options,
    MD.Framalink,
    MD.Serialno,
    MD.Licenceno,
    MD.CDNo 
FROM MachineDetails MD
LEFT JOIN LinkLookup LL ON LL.LinkLookupID = MD.ModelTypeID 
LEFT JOIN Lookup L ON L.LookupID = LL.LinkedTo
LEFT JOIN JobMachine PM ON MD.MachineConfigID = PM.MachineID
WHERE PM.JOBID = {projectid}","0","","1","LRA-FUSION","0","0","fusion"
"40267","cv_Acc_Entity_Price_Contract","","
DECLARE @StockID as int
DECLARE @PriceCat as int
DECLARE @EntityID as int
DECLARE @Qty as float

SET @StockID =1009623
SET @PriceCat =13977
SET @EntityID = 68775
SET @Qty = 1

SELECT ED.* 
FROM AccEntityDiscount ED
LEFT JOIN (SELECT * FROM AccEntityDiscountStock WHERE StockID in (0,@StockID)) EDS
    ON ED.EntityDiscountID = EDS.EntityDiscountID
LEFT JOIN (SELECT StockID, StockType, SubTypeID FROM AccStock) STK
    ON EDS.StockID = STK.StockID
LEFT JOIN (SELECT * FROM AccEntityDiscountPriceCategory WHERE PriceCategoryID IN (0, @PriceCat)) EDPC
    ON ED.EntityDiscountID = EDPC.EntityDiscountID
LEFT JOIN (SELECT * FROM AccEntityDiscountStockType) EDST
    ON ED.EntityDiscountID = EDST.EntityDiscountID AND (STK.StockType = EDST.StockTypeID OR EDST.StockTypeID = 0)
LEFT JOIN (SELECT * FROM AccEntityDiscountStockSubType) EDSST
    ON ED.EntityDiscountID = EDSST.EntityDiscountID AND (STK.SubTypeID = EDSST.StockSubTypeID OR   EDSST.StockSubTypeID = 0)
where ED.Entityid = @EntityID
AND ED.DiscountType = 2 
AND EDS.StockID is not null
AND EDPC.PriceCategoryID is not null
AND EDST.StockTypeID is not null
AND EDSST.StockSubTypeID is not null
AND (isnull(DiscountPercent,0) > 0 OR isnull(discountFixed,0) > 0)
AND ((isnull(ED.MinQty,0) <= @Qty AND isnull(ED.BreakPointType,1) = 1) OR (isnull(ED.MinAmt,0) <= @Qty * {unitprice) AND isnull(ED.BreakPointType,1) = 2))
ORDER BY ED.MinQty desc, ED.DiscountFixed Desc





","0","","1","LRA-FUSION","0","0","fusion"
"40268","CV_DISCOUNT_Report","","SELECT 
	CONVERT(VARCHAR,ED.EntityDiscountID)+'#'+CONVERT(VARCHAR(50),newID()),
	E.Company,
	CASE WHEN ISNULL(StockCode,'') = '' THEN 'ALL'
	ELSE ISNULL(StockCode,'')END as [Stock Code],
	CASE WHEN ISNULL(StockDescription,'') = '' THEN 'ALL'
	ELSE ISNULL(StockDescription,'')END as [Stock Description],
	DiscountDescription as [Discount Description],
	convert(varchar,cast(DiscountPercent as money),1) +'%' as [Discount],
	convert(varchar,cast(DiscountFixed as money),1)  as [Fixed Price],
	convert(varchar,cast(isnull(MinQty,0) as money),1) as [Min Qty],
	dbo.fnFormatNumber((SELECT max(isnull(ForexDepTotal, CostPriceEx)) FROM AccStockPrice where GetDate() Between ValidFrom AND ValidTo AND StockID = S.StockID)) as [Cost Price]
FROM AccEntityDiscount ED
LEFT JOIN Entity E ON E.EntityID = ED.EntityID
LEFT JOIN AccEntityDiscountStock EDS 
ON ED.EntityDiscountID = EDS.EntityDiscountID
LEFT JOIN AccStock S ON S.stockID = EDS.StockID
{where}
order by DiscountDescription","0","","1","LRA-FUSION","0","0","fusion"
"40269","cv_Acc_Print_CEDoc_Header","","DECLARE  @DocID as Int
SET @DocID = {docid}

SELECT TOP 1

	CASE WHEN (SELECT top 1 Selected FROM crmSetup where Description = 'COS' AND variable = 'UseSO') =1 THEN 'QUOTE' ELSE 'COST ESTIMATE' END as [<doctype>],
    Convert(varchar,DM.StartDate,103) as [<docdate>],
    Convert(varchar,DM.StartDate,103) as [<docdate>],
    CONVERT(VARCHAR(10),GETDATE(),103) as [<datenow>],
    UPPER(Case When isnull(DM.UseEC,0) = 0 then ISNULL(E.Company,'') ELSE ISNULL(EC.Contact,'') END) as [<client>],
UPPER(Case When isnull(DM.UseEC,0) = 0 then ISNULL(E.Company,'') ELSE ISNULL(EC.Contact,'') END) as [<client>],
UPPER(Case When isnull(DM.UseEC,0) = 0 then ISNULL(E.Company,'') ELSE ISNULL(EC.Contact,'') END) as [<client>],
    Case When isnull(DM.UseEC,0) = 0 then ISNULL(E.Company,'') ELSE ISNULL(EC.Contact,'') END as [<client1>],
    UPPER(Case When isnull(DM.UseEC,0) = 0 then ISNULL(E.LegalName,'') ELSE ISNULL(EC.Contact,'') END) as [<legalname>],
    ISNULL(E.Switchboard,'') as [<switchboard>],
    Case When isnull(DM.UseEC,0) = 0 then ISNULL(E.Fax,'') ELSE ISNULL(EC.Fax,'') END as [<fax1>],
     isnull(E.Comments,'') as [<customercomments>],
    isnull(E.AccountNum,'') as [<accno>],
    isnull(E.AccountNum,'') as [<account>],  
    ISNULL(E.URL,'') as [<clientURL>],
    ISNULL(E.VendorNumber,'') as [<vendornumber>],
    isnull(Att.Attention,'') as [<contact>],
    isnull(Att.Attention,'') as [<contact>],
    isnull(Att.Attention,'') as [<contact2>],
    isnull(Att.FullTitle,'') as [<fulltitle>],
    isnull(Att.Fax,'') as [<fax>],
    isnull(Att.Phone1,'') as [<phone>],
    isnull(Att.Email,'') as [<email>],
    ISNULL(Att.JobTitle,'') as [<cJobTitle>],
    COALESCE(EAPoNo.Address1 + ', ','') + COALESCE(EAPoNo.Address2 + ', ','') + COALESCE(EAPoNo.Address3 + ', ','') + COALESCE(EAPoNo.City + ', ','') + COALESCE(EAPoNo.Region + ', ','') + COALESCE(EAPoNo.Code + '','') as [<postaladdress>],
    COALESCE(EP.Address1 + ', ','') + COALESCE(EP.Address2 + ', ','') + COALESCE(EP.Address3 + ', ','') + COALESCE(EP.City + ', ','') + COALESCE(EP.Region + ', ','') + COALESCE(EP.Code + '','') as [<physicaladdress>],
    
    ISNULL(ISNULL(ISNULL(ISNULL(EAPhy.Address1,EA.Address1),EP.Address1),EAPoNo.Address1),'') as [<address1>],
    ISNULL(ISNULL(ISNULL(ISNULL(EAPhy.Address2,EA.Address2),EP.Address2),EAPoNo.Address2),'') as [<address2>],
    ISNULL(ISNULL(ISNULL(ISNULL(EAPhy.Address3,EA.Address3),EP.Address3),EAPoNo.Address3),'') as [<address3>],
    ISNULL(ISNULL(ISNULL(ISNULL(EAPhy.City,EA.City),EP.City),EAPoNo.City),'') as [<address4>],
    ISNULL(ISNULL(ISNULL(ISNULL(EAPhy.code,EA.code),EP.code),EAPoNo.code),'') as [<code>],
    ISNULL(EAPoNo.Address1,'') As [<poaddress1>],
    ISNULL(EAPoNo.Address2,'') As [<poaddress2>],
    ISNULL(EAPoNo.Address3,'') As [<poaddress3>],
    ISNULL(EAPoNo.City,'') As [<pocity>],
    ISNULL(EAPoNo.Code,'') As [<pocode>],
    ISNULL(EAPoNo.Region,'') As [<poregion>],
    ISNULL(EAPoNo.Country,'') As [<pocountry>],
    ISNULL(isnull(ED.Code,EP.Code),'') as [<Dcode>],
    ISNULL(DM.ClientPO,'') as [<refno>],
    ISNULL(DM.ClientPO,'') as [<refno1>],
    ISNULL(U.sMail,'') as [<semail>],
    ISNULL(U.sMail,'') as [<semail>],
    ISNULL(U.sext,'') as [<sext>],
    ISNULL(U.sext,'') as [<ext>],
    ISNULL(U.SalesRepCell,'') as [<salesrepcell>],
    ISNULL(U.Stel,'') as [<stel>],
    ISNULL(U.sFax,'') as [<sfax>],
    ISNULL(U.SalesCon,'') as [<salescons>],
    ISNULL(U.SalesCon,'') as [<salescons1>],
    ISNULL(U.SalesCon,'') as [<consultant>],
    ISNULL(U.SalesCon,'') as [<consultant>],
    ISNULL(U.sMail,'') as [<consEmail>],
    ISNULL(U.Position,'') as [<position>],
    ISNULL(Att.Cell,'') as [<cell>], 
    ISNULL(isnull(ED.Address1,EP.Address1),'') as [<daddress1>],
    ISNULL(isnull(ED.Address2,EP.Address2),'') as [<daddress2>],
    ISNULL(isnull(ED.Address3,EP.Address3),'') as [<daddress3>],
    ISNULL(isnull(ED.City,EP.City),'') as [<daddress4>],
    ISNULL(isnull(ED.Country,EP.Country),'') as [<daddress5>],
    ISNULL(P.projectName,'') as [<ProjectName>],
	ISNULL(P.ProjectNum,'') as [<ProjectCode>],
    convert(varchar,DM.Startdate,103) + ' - ' + convert(varchar,DM.Enddate,103) as [<rundates>] ,
    CONVERT(VARCHAR,DM.EndDate,111) as [<expdate>],
    CAST(DAY(DM.Enddate) AS VARCHAR(2)) + ' ' + DATENAME(MM, DM.Enddate) + ' ' + CAST(YEAR(DM.Enddate) AS VARCHAR(4)) as [<expiry>] ,
    CONVERT(varchar(10),DM.EndDate,103) AS [<expiry+0>],
    CONVERT(varchar(10),(DATEADD(day,30,DM.EndDate)),103) as [<expiry+30>],
    CONVERT(varchar(10),(DATEADD(day,60,DM.EndDate)),103) as [<expiry+60>],
    case WHEN isnull(DM.PreviousDocID,0) > 0 then PreviousDocID Else DM.DocID END  as [<docno>],
    '.' + convert(varchar,ISNULL(DM.Revision,0)) AS [<revision>],
    ISNULL(DM.Currency,'') as [<currency>],
    ISNULL(DM.QuoteAccepted,'') as [<QuoteAccepted>],
    ISNULL(DM.Descr,'') as [<description>],
    ISNULL(DM.OrderNumber,'') as [<OrderNumber>],
    ISNULL(DM.FullName,'') as [<FullName>],
    ISNULL(DM.SignOffDate,'') as [<SignOffDate>],
    CASE ISNULL(DM.IsApproved,0) WHEN 0 THEN 'No' ELSE 'Yes' END as [<IsApproved>],
    ISNULL(DM.Designation,'') as [<Designation>],
    ISNULL(DM.Fnumber,'') as [<Fnumber>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.TotalEx / DM.ROE)  as [<totalex>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.TotalEx / DM.ROE)  as [<totalex>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber((DD.TotalEx  - SH.[<Calc>]) / DM.ROE)  as [<totalex1>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.TotalEx / DM.ROE)  as [<totalexcl>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.Discount / DM.ROE) as [<discount>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(DD.TotalIncl / DM.ROE ) as [<totalincl>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber((DD.TotalIncl - (DD.TotalEx - DD.Discount)) / DM.ROE) as [<totalvat>], 
    ISNULL(DM.Currency,'') + ' ' + dbo.fnFormatNumber((DD.TotalEx / DM.ROE) - (DD.Discount / DM.ROE)) as [<totalexdisc>],
    CASE WHEN isnull(DD.Discount,0) <> 0 then char(13) + 'Discount' END as [<disclabel>],
    CASE WHEN isnull(DD.Discount,0) <>  0 then char(13) + isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(cast(DD.Discount as money) / DM.ROE)  END as [<invisiblediscount>],
    ISNULL(DD.[TotalQTY],'') as [<TotalQTY>],
    ISNULL(SH.[<netweight>],'') as [<totalkgs>],
    isnull(E.compregnum,'') as [<cCompreg>],
    isnull(E.VATnum,'') as [<cVATnum>],
    ISNULL(LC.Value,'') as [<extsalescons>],
    ISNULL(DS.CoRegNo,'') as [<compreg>],
    ISNULL(DS.VatRegNo,'') as [<vatno>],
    Isnull(ACT.TaxTypeName,'') as [<exempt>],
     isnull(DS.ContactDetails,'')as [<companycontact>],
	isnull(DS.Emails,'')as [<companymail>],
	isnull(DS.Telephone	,'')as [<companytel>],
	isnull(DS.Faxno,'')as [<companyfax>],
	isnull(DS.URL,'') as [<URL>],
    ISNULL(DM.Descr,'') as [<gendescr>],
    ISNULL(DM.Descr,'') as [<gendescr>],
    ISNULL(DM.memo,'') as [<notes>],
    ISNULL(DS.Terms,'') as [<terms>],
    ISNULL(DS.Banking,'') as [<banking>],
    ISNULL(DS.Footer,'') as [<footer>],
    convert(varchar,cast(DM.ROE as money),1)  as [<roe>], 
    ISNULL(DM.accCostOther4,'') as [<pax>],
    ISNULL(LPS.[accCostOther1],'') as [<other1>],
    ISNULL(LPS.[accCostOther1],'') as [<other1>],
    ISNULL(LPG.[accCostOther2],'') as [<other2>],
    ISNULL(LPG.[accCostOther2],'') as [<other2>],
    ISNULL(LPT.[accCostOther3],'') as [<other3>],
    ISNULL(LPT.[accCostOther3],'') as [<other3>],
    isnull(DM.accCostOther4,'') AS [<other4>],
    isnull(DM.accCostOther5,'') AS [<other5>],
    isnull(DM.accCostOther6,'') AS [<other6>],
    dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.4) as [<amount40%>],
    dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.35) as [<amount35%>],
    dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.3) as [<amount30%>],
    dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.2) as [<amount20%>],
    dbo.fnFormatNumber((DD.Totalincl / DM.ROE) * 0.1) as [<amount10%>],
    dbo.fnFormatNumber((DD.Totalincl / DM.ROE) / 6) as [<amt6mth>],
    dbo.fnFormatNumber(((DD.Totalincl / DM.ROE) * 1.2)/ 12)  as [<amt12mth>],
    dbo.fnFormatNumber(((DD.Totalincl / DM.ROE) * 1.25)/ 18) as [<amt18mth>],
    dbo.fnFormatNumber(((DD.Totalincl / DM.ROE) * 1.30)/ 24) as [<amt24mth>],
    DD.[TotalIncl] * (SELECT  top 1 Interest FROM ACCRates WHERE TotalFrom >= DD.[TotalIncl] or DD.[TotalIncl] <= TotalTo) as [<rate>],
    convert(varchar,DM.PipelineNextDate,106) as [<nextdate>],
    convert(varchar,DM.PipelineLastDate,106) as [<lastdate>],
    convert(varchar,DM.ExpectedOrder,106) as [<expecteddate>],
    ISNULL(SH.[<TotalPacking>],'') as [<totalpacking>],
    ISNULL(SH.[<TotalPacking>],'') as [<totalpacking>],
    ISNULL(SH.[<netweight>],'') as [<totalkgs>],
    ISNULL(SH.[<volume>],'') as [<volume>],
    ISNULL(SH.[<netweight>],'') as [<netweight>],
    ISNULL(SH.[<grossweight>],'') as [<grossweight>],
    ISNULL(SH.[<Origin>],'')  as [<origin>],
    ISNULL(SH.[<Origin>],'')  as [<origin>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(SH.[<calc>]) as [<calc>],
    isnull(DM.Currency,'') + ' ' + dbo.fnFormatNumber(SH.[<calc>]) as [<calc>],
    ISNULL(SH.[<Dest>],'') as [<dest>],
    ISNULL(SH.[<Dest>],'') as [<dest>],
    ISNULL(SH.DeliveryTerms,'') as [<dterms>],
    ISNULL(sExt,'') as [<ext>],
    ISNULL(PT.Value,'') as [<PaymentTerms>],
    ISNULL(LPT.[accCostOther3],'') as [<other33>],
    isnull(DM.[Signature],'') as [<Signature>]
      ,'' as [<signaturepic>],
    ISNULL(DA.Address1,'') AS [<coaddr1>],
    ISNULL(DA.Address2,'') AS [<coaddr2>],
    ISNULL(DA.Code,'') as [<coaddrcode>],
    ISNULL(DA.City,'') as [<coaddrregion>],
    --CASE when STK.ProductImage is null then null else '<' + CONVERT(VARCHAR,CED.LineID) + '>' END as [Image]
    CASE when STK.ProductImage is null then null else '<' + CONVERT(VARCHAR,CostED.LineID) + '>' END as [<Image>],
	ISNULL(LResourceType.Value,'') as [<resourceType>],
    ISNULL(CostED.Comments,'') as [<standno>],
    ISNULL(AEC.[AccountContact],'') as [<accountcontact>],
    ISNULL(AEC.Email,'') as [<accountcontactemail>],
    ISNULL(AEC.Phone1,'') as [<accountcontactphone>]

FROM COST_ESTIMATE_MASTER DM
LEFT JOIN ( SELECT Sum(PriceEx * qty) as [TotalEx], SUM(QTY) -1 as [TotalQty],
            sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount], 
            Sum((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (J.TAX /100 + 1)) as [TotalIncl],
            J.DocID, 
            SUM(QTY * STK.[WEIGHT]) as [TotalKGs]
            FROM COST_ESTIMATE_DETAIL J
            lEFT JOIN (SELECT StockID, [Weight] FROM ACCSTOCK) STK ON STK.STOCKID=J.STOCKID
            WHERE isnull(ComponentOfLineID,0) = 0 
            Group By J.DocID) DD
    ON DM.DocID = DD.DocID
LEFT JOIN ( SELECT EntityID,Company,LegalName,VATNum,AccountNum,InvoiceTo,Fax,Switchboard,compregnum,SalesConsID ,Comments,PaymentTerms, URL,VendorNumber From Entity) E
    ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN ( SELECT * FROM [Lookup]) PT 
    ON PT.LookupID =E.PaymentTerms
LEFT JOIN ( SELECT Entitycontactid, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact], Accountnum, Email,
            Fax,Phone1,SalesConsID, JobTitle 
            FROM EntityContact) EC
    ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN ( SELECT Entitycontactid,isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention],
            ltrim(rtrim(isnull(Title,'') + ' ' + isnull(firstname,'') +  ' '+ isnull(surname,''))) as [FullTitle],
            Accountnum,Email,Fax,Phone1,SalesConsID ,Cell,JobTitle
            FROM EntityContact) ATT
    ON DM.AttentionOf = Att.EntityContactID 
LEFT JOIN ( Select Entitycontactid,isnull(firstname,'') +  ' '+ isnull(surname,'') as [AccountContact],Accountnum,
            Email,SalesConsID,Phone1
            FROM EntityContact) AEC
    ON E.InvoiceTo = AEc.EntityContactID 
LEFT JOIN ( SELECT * FROM AccDocumentSetup) DS
    ON DM.DivisionID = DS.DivisionID

LEFT JOIN ( SELECT * FROM DivisionAddress) DA
    ON DM.DivisionID = DA.DivisionID

LEFT JOIN ( SELECT  U.UserID, S.StaffID, isnull(U.Firstname,'') +  ' '  + isnull(U.surname,'') as [SalesCon],
            isnull(S.Tel,'') as [Stel], Isnull(S.Fax,'') as [sFax],Isnull(S.Email,'') as [sMail],
            isnull(S.Cell,'') as [SalesRepCell], isnull(S.Ext,'') as [sExt], LP.[Position]
            FROM Users U
            LEFT JOIN (SELECT StaffID, Fax, Email, Cell, Ext, Tel, Position FROM  Staff) S 
            ON U.StaffID= S.StaffID
            LEFT JOIN (SELECT LookupID,Value as [Position] FROM Lookup  WHERE Class LIKE 'jobtitle') LP 
            ON LP.LookupID = S.Position
            ) U 
    ON DM.SalesRepID = U.UserID
LEFT JOIN Lookup LC 
    ON LC.Lookupid =  CASE WHEN  isnull(DM.UseEC,0) = 0 THEN E.SalesConsID ELSE EC.SalesConsID END
--LEFT JOIN ( SELECT * FROM EntityAddress WHERE addresstype like '%Postal%') EA
--    ON E.EntityID = EA.Entityid
LEFT JOIN ( SELECT * FROM EntityAddress WHERE addresstype like '%Delive%') ED
    ON E.EntityID = ED.Entityid
--LEFT JOIN ( SELECT * FROM EntityAddress WHERE addresstype like '%Physic%') EP
--    ON E.EntityID = EP.Entityid
    
    LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%postal%' AND IsDefault = 1) EA
    ON E.Entityid = EA.Entityid
LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%physical%' AND IsDefault = 1) EAPhy
    ON E.Entityid = EAPhy.Entityid
LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%physical%') EP
    ON E.Entityid = EP.Entityid
    LEFT JOIN ( SELECT * FROM EntityAddress where addresstype like '%postal%') EAPoNo
    ON E.Entityid = EAPoNo.Entityid

LEFT JOIN ( SELECT LookupID, Value as [accCostOther1] FROM Lookup WHERE Class LIKE 'accCostOther1') LPS
    ON LPS.LookupID = DM.accCostOther1
LEFT JOIN ( SELECT LookupID, Value as [accCostOther2] FROM Lookup WHERE Class LIKE 'accCostOther2') LPG
    ON LPG.LookupID = DM.accCostOther2
LEFT JOIN ( SELECT LookupID, Value as [accCostOther3] FROM Lookup WHERE Class LIKE 'accCostOther3') LPT 
    ON LPT.LookupID = DM.accCostOther3
LEFT JOIN ( SELECT LookupID, Value as [Lead From] FROM Lookup WHERE Class LIKE 'LeadFrom') LPK 
    ON LPK.LookupID = DM.PipelineLeadFromId
LEFT JOIN ( SELECT DocID, SUM(NoOfPackages) as [<TotalPacking>], SUM([Length] * Width * Height) as [<volume>], 
            SUM([Weight]) as [<netweight>], SUM(PackageWeight + [Weight]) as [<grossweight>],Origin as [<Origin>],
            Destination as [<Dest>],CalcTotalEx as [<Calc>], max(DeliveryTerms) as [DeliveryTerms]
            FROM SHIPPING_MASTER
            GROUP BY DocID,Origin,Destination,CalcTotalEx,Destination) SH 
    ON SH.DocID = DM.DocID 
Left Join AccTaxType ACT on ACT.TaxTypeID=DM.TaxTypeID    
LEFT JOIN (SELECT ProjectID, ProjectNum, ProjectName FROM Projects) P 
	ON P.ProjectID = DM.ProjectID
LEFT JOIN (SELECT * FROM COST_ESTIMATE_DETAIL) CostED on CostED.DocID = DM.DocID
LEFT JOIN (Select * FROM AccStock) STK ON STK.StockID = CostED.StockID
LEFT JOIN (SELECT LookupID, Class, Value FROM Lookup) LResourceType on LResourceType.LookupID = STK.StockType
WHERE DM.DocID = @DocID","0","","1","LRA-FUSION","0","0","fusion"
"40270","cv_Acc_PickingSlip_Man","","SELECT 
	PickingLineID
	, DocType as [Document Type]
        , PS.DocNo as [Doc. No.]
        , PS.RefNo as [Reference]
	, E.Company as [Company]
	, A.StockCode as [Stock Code]
	, A.StockDescription as [Stock Description]
	, PS.PickingDate as [Date] 
	, PS.QtyToPick as [Qty To Pick]
	, PS.QTYPicked as [Qty Picked]
        , isnull(PS.QtyToPick,0) - isnull(PS.QtyPicked,0) as [Variance]
FROM AccPickingSlip PS
LEFT JOIN (
	SELECT EntityID, Company, Accountnum FROM Entity
) E ON E.EntityID = PS.EntityID
LEFT JOIN (
	SELECT StockID,StockCode, StockDescription FROM AccStock
) A ON A.StockID = PS.StockID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40271","cv_Save_PickingSlip","","INSERT INTO AccPickingSlip (
	DocType
	,DocID
	,LineID
	,StockID
	,StockCode
	,StockDescription
	,QtyToPick
	,EntityID
	,PickingDate
)
SELECT DISTINCT
	DM.DocType
	, DM.DocID
	, DD.LineID
	, DD.StockID
	, DD.StockCode
	, DD.StockDescription
	, DD.Qty 
	, DM.EntityID
	, GetDate() as PickingDate
FROM Debtor_Detail DD
LEFT JOIN (
	SELECT * FROM Debtor_Master
) DM ON DM.DocID = DD.DocID
WHERE DD.LineID = {LineID} 
","0","","1","LRA-FUSION","0","0","fusion"
"40272","cv_Acc_Inventory_Movement_Rpt","","SELECT  
	StockControlID
	, convert(varchar,AdjustDate,111) + ' ' + convert(varchar,AdjustDate,108) as [Adjustment Date] 
	, Code
	, [Description]
	, [Serial Number]
	, Container
	, [Adjusting Document]
	, [Document No.]
	, isnull(convert(varchar,[Length]),'') as [Length]
	, [Qty Adjusted]
	, Unit 
FROM (
	select 
		StockControlID
		,AdjustDate
		,STK.StockCode as [Code]
		, Stk.StockDescription as [Description]
		, SC.SerialNumber as [Serial Number]
		, L.Value as [Container]
		, sc.DocType as [Adjusting Document]
		, convert(varchar,Case When DM.DocNo is not null then DM.DocNo WHEN CM.DocNo is not null then CM.DocNo ELSE SC.DocID END) as [Document No.]
		, dbo.fnFormatNumber(SC.[Qty] * Sc.[Ratio]) as [Qty Adjusted] 
		, LL.Value as [Unit]
		, CASE WHEN SC.Qty <0 THEN -1 ELSE 1 END * SC.[Length] as [Length]
		
	from accStockControl SC
	LEFT JOIN (SELECT StockID, StockDescription,StockCode, IsSplittable FROM AccStock) STK
	ON Sc.StockID = STK.StockID
	LEFT JOIN LinkLookup L On SC.ContainerID = L.LinkLookupID
	LEFT JOIN (SELECT DivisionID, DocNo, DocType,DocID From DEBTOR_MASTER) DM
	ON SC.DocType = DM.DocType and Sc.DocID = DM.DocID
	LEFT JOIN (SELECT DivisionID, DocNo, DocType,DocID From CREDITOR_MASTER) CM
	ON SC.DocType = CM.DocType AND Sc.DocID = CM.DocID
	LEFT JOIN (SELECT LookupID, Value FROM Lookup) LL
	ON SC.SoldBy = LL.LookupID
	{where}
		
	) A
ORDER BY Code","0","","1","LRA-FUSION","0","0","fusion"
"40273","cv_PrintOutSpecial","","
select PrintOutSpecialID,PrintOutSpecialID as [ID],doc.TemplateDescr as Description,UseDifferentTemplates,
DocumentType,
IncludeColour,
doc.TemplatePath  
 from printoutspecial ps
 left join AccDocTemplates doc
 on ps.SpecialTemplateID = doc.DocTemplateID 

","0","","1","LRA-FUSION","0","0","fusion"
"40274","cv_CheckList_Print_Header_Ticket","","SELECT TOP 1
	E.Company as [<Customername>] ,
	M.SerialNo as [<serial>],
	L.Value as [<model>],
	ISNULL(U.Firstname, '') + ' ' + ISNULL(U.Surname, '') as [<Technician>]
FROM Tickets T
LEFT JOIN Entity E ON E.EntityID = T.EntityID
LEFT JOIN LinkLookup L ON L.LinkLookupID = T.SubStockTypeID
LEFT JOIN MachineDetails M ON M.EntityID = T.EntityID AND M.ModelTypeID = L.LinkLookupID
LEFT JOIN Users U ON U.UserID = T.UserID
WHERE T.TicketID = {ticketid}","0","","1","LRA-FUSION","0","0","fusion"
"40275","export_Cus","","TRUNCATE TABLE _custImport


Insert into _custImport (TableName,Field1,Field2,Field3,Field4,Field5,Field6,Field7,Field8,Field9,Field10,Field11,Field12,Field13,Field14,Field15,Field16,Field17,Field18,Field19,Field20,Field21,Field22,Field23,Field24,Field25,Field26,Field27,Field28,Field29)
select 
	'Lookup' as [TableName],
	convert(varchar,isnull(LookupID,0)) as [Field1],
	convert(varchar,isnull(Class,'')) as [Field2],
	convert(varchar,isnull(Value,'')) as [Field3],
	convert(varchar,isnull(IsAllDiv,0)) as [Field4],
	convert(varchar,isnull(TempID,0)) as [Field5],
	convert(varchar,isnull(Colour,'')) as [Field6],
	convert(varchar,isnull(info,'')) as [Field7],
	convert(varchar,isnull(value2,'')) as [Field8],
	convert(varchar,isnull(Hierarchy,0)) as [Field9],
	convert(varchar,isnull(IsDefault,0)) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
from Lookup

UNION ALL

select 
	'Linklookup' as [TableName],
	convert(varchar,isnull(LinkLookupID,0)) as [Field1],
	convert(varchar,isnull(Value,'')) as [Field2],
	convert(varchar,isnull(class,'')) as [Field3],
	convert(varchar,isnull(LinkedTo,0)) as [Field4],
	convert(varchar,isnull(Comments,'')) as [Field5],
	convert(varchar,isnull(LocationID,0)) as [Field6],
	convert(varchar,isnull(InActive,0)) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Linklookup
 
UNION ALL

select 
	'LookupDivision' as [TableName],
	convert(varchar,isnull(LookupDivisionID,0)) as [Field1],
	convert(varchar,isnull(LookupID,0)) as [Field2],
	convert(varchar,isnull(DivisionID,0)) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from LookupDivision
 
UNION ALL

select 
	'Options' as [TableName],
	convert(varchar,isnull(OptName,0)) as [Field1],
	convert(varchar,isnull(OptVal,'')) as [Field2],
	convert(varchar,isnull(OptNumVal,0)) as [Field3],
	convert(varchar,isnull(OptStrVal,'')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Options 

UNION ALL

select 
	'MatrixGroup' as [TableName],
	convert(varchar,isnull(MatrixGroupID,0)) as [Field1],
	convert(varchar,isnull([Group],'')) as [Field2],
	convert(varchar,isnull([Rank],0)) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from MatrixGroup

UNION ALL

select 
	'MatrixItem' as [TableName],
	convert(varchar,isnull(MatrixItemID,0)) as [Field1],
	convert(varchar,isnull(MatrixGroupID,0)) as [Field2],
	convert(varchar,isnull(Item,'')) as [Field3],
	convert(varchar,isnull(Rank,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from MatrixItem

UNION ALL

select 
	'ActionTemplate' as [TableName],
	convert(varchar,isnull(ActionTemplateID,0)) as [Field1],
	convert(varchar,isnull(TemplateName,'')) as [Field2],
	convert(varchar,isnull('','')) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from ActionTemplate

UNION ALL

select 
	'Ticketescalations' as [TableName],
	convert(varchar,isnull(TicketIDs,0)) as [Field1],
	convert(varchar,isnull(Severenity,'')) as [Field2],
	convert(varchar,isnull(TimeEsc,0)) as [Field3],
	convert(varchar,isnull(stafflist,'')) as [Field4],
	convert(varchar,isnull(Severenityid,0)) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Ticketescalations

UNION ALL

select 
	'activitytype' as [TableName],
	convert(varchar,isnull(ActivityTypeID,0)) as [Field1],
	convert(varchar,isnull(ActivityType,'')) as [Field2],
	convert(varchar,isnull(Number,0)) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from activitytype

UNION ALL

select 
	'paymenttype' as [TableName],
	convert(varchar,isnull(PaymentTypeID,0)) as [Field1],
	convert(varchar,isnull(Type,'')) as [Field2],
	convert(varchar,isnull(Number,0)) as [Field3],
	convert(varchar,isnull(HostID,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from paymenttype

UNION ALL

select 
	'priority' as [TableName],
	convert(varchar,isnull(PriorityID,0)) as [Field1],
	convert(varchar,isnull(PriorityType,'')) as [Field2],
	convert(varchar,isnull(Actionid,0)) as [Field3],
	convert(varchar,isnull(Number,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from priority

UNION ALL

select 
	'projectTypes' as [TableName],
	convert(varchar,isnull(ProjectTypeID,0)) as [Field1],
	convert(varchar,isnull(ProjectType,'')) as [Field2],
	convert(varchar,isnull('','')) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from projectTypes

UNION ALL

select 
	'projectmodules' as [TableName],
	convert(varchar,isnull(ProjectModuleID,0)) as [Field1],
	convert(varchar,isnull(ProjectModule,'')) as [Field2],
	convert(varchar,isnull(ProjectTypeID,0)) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from projectmodules

UNION ALL

select 
	'LeaveType' as [TableName],
	convert(varchar,isnull(LeaveTypeID,0)) as [Field1],
	convert(varchar,isnull(LeaveType,'')) as [Field2],
	convert(varchar,isnull(cr,0)) as [Field3],
	convert(varchar,isnull(IsStd,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from leavetype

UNION ALL

select 
	'publicholiday' as [TableName],
	convert(varchar,isnull(PublicHolidayID,0)) as [Field1],
	convert(varchar,isnull(Description,'')) as [Field2],
	convert(varchar,isnull(Date,'')) as [Field3],
	convert(varchar,isnull(CompanyOpen,0)) as [Field4],
	convert(varchar,isnull(thisYear,0)) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from publicholiday

UNION ALL

select 
	'ACCAccountingPeriod' as [TableName],
	convert(varchar,isnull(AccPeriodID,0)) as [Field1],
	convert(varchar,isnull(StartDate,'')) as [Field2],
	convert(varchar,isnull(EndDate,'')) as [Field3],
	convert(varchar,isnull(IsClosed,0)) as [Field4],
	convert(varchar,isnull(PNumber,0)) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from ACCAccountingPeriod

UNION ALL

select 
	'accBankAccount' as [TableName],
	convert(varchar,isnull(BankAccountID,0)) as [Field1],
	convert(varchar,isnull(AccName,'')) as [Field2],
	convert(varchar,isnull(OpeningBal,0)) as [Field3],
	convert(varchar,isnull(OBDate,'')) as [Field4],
	convert(varchar,isnull(AccountNo,'')) as [Field5],
	convert(varchar,isnull(Branch,'')) as [Field6],
	convert(varchar,isnull(Bank,'')) as [Field7],
	convert(varchar,isnull(BranchCode,'')) as [Field8],
	convert(varchar,isnull(AccountType,'')) as [Field9],
	convert(varchar,isnull(isDefault,0)) as [Field10],
	convert(varchar,isnull(Currency,0)) as [Field11],
	convert(varchar,isnull(Descr,'')) as [Field12],
	convert(varchar,isnull(GLCodeID,0)) as [Field13],
	convert(varchar,isnull(DivisionID,0)) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from accBankAccount

UNION ALL

select 
	'UserAccount' as [TableName],
	convert(varchar,isnull(UserAccountID,0)) as [Field1],
	convert(varchar,isnull(BankAccountID,0)) as [Field2],
	convert(varchar,isnull(UserID,0)) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from UserAccount

UNION ALL

select 
	'accopeningbalance' as [TableName],
	convert(varchar,isnull(Entityid,0)) as [Field1],
	convert(varchar,isnull(DateCreated,'')) as [Field2],
	convert(varchar,isnull(AmtCurrent,0)) as [Field3],
	convert(varchar,isnull(Amt30,0)) as [Field4],
	convert(varchar,isnull(Amt60,0)) as [Field5],
	convert(varchar,isnull(Amt90,0)) as [Field6],
	convert(varchar,isnull(Amt120,0)) as [Field7],
	convert(varchar,isnull(UseEC,0)) as [Field8],
	convert(varchar,isnull(Currency,'')) as [Field9],
	convert(varchar,isnull(DivisionID,0)) as [Field10],
	convert(varchar,isnull(ROE,0)) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from accopeningbalance

UNION ALL

select 
	'ClientRatingSets' as [TableName],
	convert(varchar,isnull(set1from,0)) as [Field1],
	convert(varchar,isnull(set1To,0)) as [Field2],
	convert(varchar,isnull(set2From,0)) as [Field3],
	convert(varchar,isnull(set2to,0)) as [Field4],
	convert(varchar,isnull(set3from,0)) as [Field5],
	convert(varchar,isnull(set3to,0)) as [Field6],
	convert(varchar,isnull(set4from,0)) as [Field7],
	convert(varchar,isnull(set4to,0)) as [Field8],
	convert(varchar,isnull(set5from,0)) as [Field9],
	convert(varchar,isnull(set5to,0)) as [Field10],
	convert(varchar,isnull(set6from,0)) as [Field11],
	convert(varchar,isnull(set6to,0)) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from ClientRatingSets

UNION ALL

select 
	'ExchangeRates' as [TableName],
	convert(varchar,isnull(ExchangeRateID,0)) as [Field1],
	convert(varchar,isnull(Currency,'')) as [Field2],
	convert(varchar,isnull(Rate,0)) as [Field3],
	convert(varchar,isnull(IsDefault,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from ExchangeRates

UNION ALL

select 
	'AccDocRules' as [TableName],
	convert(varchar,isnull(DocRulesID,0)) as [Field1],
	convert(varchar,isnull(RuleName,'')) as [Field2],
	convert(varchar,isnull(RuleDescription,'')) as [Field3],
	convert(varchar,isnull(ReduceByPerc,0)) as [Field4],
	convert(varchar,isnull(AdjustStock,0)) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from AccDocRules

UNION ALL

select 
	'AccGLCode' as [TableName],
	convert(varchar,isnull(GLCodeID,0)) as [Field1],
	convert(varchar,isnull(GLCategoryID,0)) as [Field2],
	convert(varchar,isnull(GLType,'')) as [Field3],
	convert(varchar,isnull(DivisionID,0)) as [Field4],
	convert(varchar,isnull(GLCode,0)) as [Field5],
	convert(varchar,isnull(GLNotes,'')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from AccGLCode

UNION ALL

select 
	'AccDocumentSetup' as [TableName],
	convert(varchar,isnull(DivisionID,0)) as [Field1],
	convert(varchar,isnull(CoRegNo,'')) as [Field2],
	convert(varchar,isnull(VatRegNo,'')) as [Field3],
	convert(varchar,isnull(Terms,'')) as [Field4],
	convert(varchar,isnull(Banking,'')) as [Field5],
	convert(varchar,isnull(Footer,'')) as [Field6],
	convert(varchar,isnull(LogoPath,'')) as [Field7],
	convert(varchar,isnull(Prefix,'')) as [Field8],
	convert(varchar,isnull(URL,'')) as [Field9],
	convert(varchar,isnull(EmailBody,'')) as [Field10],
	convert(varchar,isnull(SeperateDocNo,0)) as [Field11],
	convert(varchar,isnull(ContactDetails,'')) as [Field12],
	convert(varchar,isnull(Emails,'')) as [Field13],
	convert(varchar,isnull(Telephone,'')) as [Field14],
	convert(varchar,isnull(Faxno,'')) as [Field15],
	convert(varchar,isnull(NoOfRowsToPad,'')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from AccDocumentSetup

UNION ALL

select 
	'accdoctemplates' as [TableName],
	convert(varchar,isnull(DocTemplateID,0)) as [Field1],
	convert(varchar,isnull(TemplateFileName,'')) as [Field2],
	convert(varchar,isnull(TemplatePath,'')) as [Field3],
	convert(varchar,isnull(DivisionID,0)) as [Field4],
	convert(varchar,isnull(TemplateDescr,'')) as [Field5],
	convert(varchar,isnull(isActive,0)) as [Field6],
	convert(varchar,isnull(ProjectID,0)) as [Field7],
	convert(varchar,isnull(TemplateCategoryID,0)) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from accdoctemplates

UNION ALL

select 
	'AccTaxType' as [TableName],
	convert(varchar,isnull(TaxTypeID,0)) as [Field1],
	convert(varchar,isnull(TaxTypeName,'')) as [Field2],
	convert(varchar,isnull(TaxPercentage,0)) as [Field3],
	convert(varchar,isnull(IsDefault,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from AccTaxType

UNION ALL

select 
	'shipping_master' as [TableName],
	convert(varchar,isnull(ShippingDocID,0)) as [Field1],
	convert(varchar,isnull(ShippingTypeID,0)) as [Field2],
	convert(varchar,isnull(TransporterID,0)) as [Field3],
	convert(varchar,isnull(TransporterRefNo,'')) as [Field4],
	convert(varchar,isnull(DocID,0)) as [Field5],
	convert(varchar,isnull(StockID,0)) as [Field6],
	convert(varchar,isnull(StockQty,0)) as [Field7],
	convert(varchar,isnull(BasePriceEx,0)) as [Field8],
	convert(varchar,isnull(DocDate,'')) as [Field9],
	convert(varchar,isnull(Origin,'')) as [Field10],
	convert(varchar,isnull(Destination,'')) as [Field11],
	convert(varchar,isnull(DateToShip,'')) as [Field12],
	convert(varchar,isnull(DateArriving,'')) as [Field13],
	convert(varchar,isnull(DeliveryTerms,'')) as [Field14],
	convert(varchar,isnull(NoOfPackages,0)) as [Field15],
	convert(varchar,isnull(PackageTypeID,0)) as [Field16],
	convert(varchar,isnull(Length,0)) as [Field17],
	convert(varchar,isnull(Width,0)) as [Field18],
	convert(varchar,isnull(Height,0)) as [Field19],
	convert(varchar,isnull(Weight,0)) as [Field20],
	convert(varchar,isnull(PackageWeight,0)) as [Field21],
	convert(varchar,isnull(IsTemplate,0)) as [Field22],
	convert(varchar,isnull(CalcTotalEx,0)) as [Field23],
	convert(varchar,isnull(CalcTotalVat,0)) as [Field24],
	convert(varchar,isnull(LineID,0)) as [Field25],
	convert(varchar,isnull(BaseCostPriceEx,0)) as [Field26],
	convert(varchar,isnull(BasePriceIncl,0)) as [Field27],
	convert(varchar,isnull(UsePercWeight,0)) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from shipping_master

UNION ALL

select 
	'shipping_Detail' as [TableName],
	convert(varchar,isnull(ShippingLineID,0)) as [Field1],
	convert(varchar,isnull(ShippingDocID,0)) as [Field2],
	convert(varchar,isnull(LineDescription,0)) as [Field3],
	convert(varchar,isnull(LineGroup,'')) as [Field4],
	convert(varchar,isnull(MinValue,0)) as [Field5],
	convert(varchar,isnull(Units,0)) as [Field6],
	convert(varchar,isnull(Rate,0)) as [Field7],
	convert(varchar,isnull(Currency,0)) as [Field8],
	convert(varchar,isnull(VATRate,0)) as [Field9],
	convert(varchar,isnull(UsePercUnit,0)) as [Field10],
	convert(varchar,isnull(UsePercRate,0)) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from shipping_Detail

UNION ALL

select 
	'Shipping_Currency' as [TableName],
	convert(varchar,isnull(ShippingCurrencyID,0)) as [Field1],
	convert(varchar,isnull(ShippingDocID,0)) as [Field2],
	convert(varchar,isnull(Currency,'')) as [Field3],
	convert(varchar,isnull(ROE,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Shipping_Currency

UNION ALL

select 
	'Shipping_StockType' as [TableName],
	convert(varchar,isnull(ShippingDocID,0)) as [Field1],
	convert(varchar,isnull(StockTypeID,0)) as [Field2],
	convert(varchar,isnull('','')) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Shipping_StockType

UNION ALL

select 
	'customfieldforms' as [TableName],
	convert(varchar,isnull(formID,0)) as [Field1],
	convert(varchar,isnull(DisplayName,'')) as [Field2],
	convert(varchar,isnull(formName,'')) as [Field3],
	convert(varchar,isnull(isActive,'')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from customfieldforms

UNION ALL

select 
	'CustomFields' as [TableName],
	convert(varchar,isnull(CustomFieldID,0)) as [Field1],
	convert(varchar,isnull(FormName,0)) as [Field2],
	convert(varchar,isnull(GroupID,0)) as [Field3],
	convert(varchar,isnull(SubGroupID,0)) as [Field4],
	convert(varchar,isnull(Fieldname,'')) as [Field5],
	convert(varchar,isnull(FieldType,'')) as [Field6],
	convert(varchar,isnull(ControlType,'')) as [Field7],
	convert(varchar,isnull(ListItems,'')) as [Field8],
	convert(varchar,isnull(DefaultVal,'')) as [Field9],
	convert(varchar,isnull(qfSQL,'')) as [Field10],
	convert(varchar,isnull(qfType,'')) as [Field11],
	convert(varchar,isnull(FieldDescription,'')) as [Field12],
	convert(varchar,isnull(isRequired,0)) as [Field13],
	convert(varchar,isnull(LineColour,'')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from CustomFields

UNION ALL

select 
	'ActionTemplateUsers' as [TableName],
	convert(varchar,isnull(ActionTemplateUserID,0)) as [Field1],
	convert(varchar,isnull(ActionTemplateID,0)) as [Field2],
	convert(varchar,isnull(UserID,0)) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from ActionTemplateUsers

UNION ALL

select 
	'ActionTemplates' as [TableName],
	convert(varchar,isnull(ActionTemplateID,0)) as [Field1],
	convert(varchar,isnull(ActionName,'')) as [Field2],
	convert(varchar,isnull(Lookupid,0)) as [Field3],
	convert(varchar,isnull(ActionTypeID,0)) as [Field4],
	convert(varchar,isnull(AssignUserID,0)) as [Field5],
	convert(varchar,isnull(HoursDue,0)) as [Field6],
	convert(varchar,isnull(Comments,'')) as [Field7],
	convert(varchar,isnull(CommentsNextAction,'')) as [Field8],
	convert(varchar,isnull(SendEmail,0)) as [Field9],
	convert(varchar,isnull(SendReminder,0)) as [Field10],
	convert(varchar,isnull(Area,'')) as [Field11],
	convert(varchar,isnull(NotifyUserIDs,'')) as [Field12],
	convert(varchar,isnull(SendClientEmail,0)) as [Field13],
	convert(varchar,isnull(EmailTemplateBody,'')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from ActionTemplates

UNION ALL

select 
	'Risk_Bill_Item' as [TableName],
	convert(varchar,isnull(BillDetailID,0)) as [Field1],
	convert(varchar,isnull(BillTemplateID,'')) as [Field2],
	convert(varchar,isnull(StockID,0)) as [Field3],
	convert(varchar,isnull(MinValue,0)) as [Field4],
	convert(varchar,isnull(HasBreakPoint,0)) as [Field5],
	convert(varchar,isnull(BreakPointValue,0)) as [Field6],
	convert(varchar,isnull(AfterBreakPointRate,0)) as [Field7],
	convert(varchar,isnull(AfterBreakPointPer,0)) as [Field8],
	convert(varchar,isnull(SetValue,0)) as [Field9],
	convert(varchar,isnull(MaxValue,0)) as [Field10],
	convert(varchar,isnull(BreakPointType,0)) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Risk_Bill_Item

UNION ALL

select 
	'Risk_Bill_Template' as [TableName],
	convert(varchar,isnull(BillTemplateID,0)) as [Field1],
	convert(varchar,isnull(TemplateName,'')) as [Field2],
	convert(varchar,isnull(ValidFrom,'')) as [Field3],
	convert(varchar,isnull(ValidTo,'')) as [Field4],
	convert(varchar,isnull(CreatedBy,0)) as [Field5],
	convert(varchar,isnull(DateCreated,'')) as [Field6],
	convert(varchar,isnull(AssessmentTypeID,0)) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Risk_Bill_Template

UNION ALL

select 
	'EntityDocumentRequired' as [TableName],
	convert(varchar,isnull(DocReqID,0)) as [Field1],
	convert(varchar,isnull(DocTypeID,0)) as [Field2],
	convert(varchar,isnull(FormID,0)) as [Field3],
	convert(varchar,isnull(ReqNum,0)) as [Field4],
	convert(varchar,isnull(IsOnceOff,0)) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from EntityDocumentRequired","0","","1","LRA-FUSION","0","0","fusion"
"40276","Create_cust_table","","drop table _custImport

create Table _custImport
(
	ID int  IDENTITY(1,1) NOT NULL ,
	TableName[varchar](500) NULL,
	Field1 [varchar](500) NULL,
	Field2 [varchar](500) NULL,
	Field3 [varchar](500) NULL,
	Field4 [varchar](500) NULL,
	Field5 [varchar](500) NULL,
	Field6 [varchar](500) NULL,
	Field7 [varchar](500) NULL,
	Field8 [varchar](500) NULL,
	Field9 [varchar](500) NULL,
	Field10 [varchar](500) NULL,
	Field11 [varchar](500) NULL,
	Field12 [varchar](500) NULL,
	Field13 [varchar](500) NULL,
	Field14 [varchar](500) NULL,
	Field15 [varchar](500) NULL,
	Field16 [varchar](500) NULL,
	Field17 [varchar](500) NULL,
	Field18 [varchar](500) NULL,
	Field19 [varchar](500) NULL,
	Field20 [varchar](500) NULL,
	Field21 [varchar](500) NULL,
	Field22 [varchar](500) NULL,
	Field23 [varchar](500) NULL,
	Field24 [varchar](500) NULL,
	Field25 [varchar](500) NULL,
	Field26 [varchar](500) NULL,
	Field27 [varchar](500) NULL,
	Field28  [varchar](500) NULL,
	Field29  [varchar](500) NULL
)

--**********************************************************************FOR BACKING UP*********************************************************************************
drop table _CustomisationBackup

create Table _CustomisationBackup
(
	ID int  IDENTITY(1,1) NOT NULL ,
	TableName[varchar](500) NULL,
	Field1 [varchar](500) NULL,
	Field2 [varchar](500) NULL,
	Field3 [varchar](500) NULL,
	Field4 [varchar](500) NULL,
	Field5 [varchar](500) NULL,
	Field6 [varchar](500) NULL,
	Field7 [varchar](500) NULL,
	Field8 [varchar](500) NULL,
	Field9 [varchar](500) NULL,
	Field10 [varchar](500) NULL,
	Field11 [varchar](500) NULL,
	Field12 [varchar](500) NULL,
	Field13 [varchar](500) NULL,
	Field14 [varchar](500) NULL,
	Field15 [varchar](500) NULL,
	Field16 [varchar](500) NULL,
	Field17 [varchar](500) NULL,
	Field18 [varchar](500) NULL,
	Field19 [varchar](500) NULL,
	Field20 [varchar](500) NULL,
	Field21 [varchar](500) NULL,
	Field22 [varchar](500) NULL,
	Field23 [varchar](500) NULL,
	Field24 [varchar](500) NULL,
	Field25 [varchar](500) NULL,
	Field26 [varchar](500) NULL,
	Field27 [varchar](500) NULL,
	Field28  [varchar](500) NULL,
	Field29  [varchar](500) NULL
)","0","","1","LRA-FUSION","0","0","fusion"
"40277","LookupDivision_cleanup","","select distinct 
LookupID,
DivisionID  
into #temp
from LookupDivision
where (LookupID in (
select 
	LookupID 
from 
lookup) AND 
divisionID in (
select 
	LookupID 
from lookup 
where class = 'divisions')) 
order by  LookupID
truncate table LookupDivision

insert into LookupDivision (LookupID,DivisionID)

select * from #temp 

drop table #temp","0","","1","LRA-FUSION","0","0","fusion"
"40278","cv_Acc_QuickSale_Man2","","
Declare @Date as datetime
DECLARE @PriceCat as int
DECLARE @Qty as float

set @Date = GETDATE()
Set @PriceCat = {PriceCatID}
SET @Qty = 1



SELECT {top}
	STK.StockID
	, STK.StockCode as [Stock Code]
	, STK.StockDescription as [Stock Description] 
	, dbo.fnFormatNumber(STKC.[On Sales Order]) as [On Sales Order]
	, dbo.fnFormatNumber(STKC.[Required For Manufacture]) as [Required For Manufacture]
	, dbo.fnFormatNumber(STKC.[On Purchase Order]) as [On Purchase Order]
	, dbo.fnFormatNumber(STKC.[Total Available]) as [Total Available]
	
	, dbo.fnFormatNumber(STKC.[Under Manufacture] + STKC.[On Purchase Order]) as [YTD IN]
	, dbo.fnFormatNumber(DMI.[YTD OUT]) as [YTD OUT]
	
	, dbo.fnFormatNumber([AVG Movement ({AVGMonth} Months)]) as [AVG Movement ({AVGMonth} Months)]
	, STKP.[Cost Price] as [Cost Price]
	
	{MainPriceCatSQL}
		
	
	, AQS.QTY as [Selling QTY]
	, AQS.SellingPrice as [Selling Price]
	
	
FROM AccStock STK
LEFT JOIN (

	SELECT 
		StockID,
        dbo.fnFormatNumber(ISNULL(Max(Case When PriceCategoryID = @PriceCat  Then isnull(ForexDepTotal, CostPriceEx) END),0)) AS [Cost Price] ,
		{PriceCatSQL}
	FROM AccStockPrice
	GROUP BY StockID
	
) STKP
ON STKP.StockID = STK.StockID

LEFT JOIN (

	SELECT 
		Stk.StockID ,
		'' as [ ],
		LL.Value as [Type], 
		LLL.Value as [Sub Type] ,
		Stk.StockCode as [Code], 
		Stk.StockDescription as [Description],
		L.Value as [Unit], 
		ISNULL(ASP.CostPriceEx,0) as [Bulk Cost Price Ex. VAT],
		sum(isnull(SC.QtyStores,0) * Isnull(STK.Weight,0) / 1000) as [Total Weight (KG)] ,
		sum(isnull(SC.QtyStores,0)) as [Total In Stores] ,
		sum(isnull(qtySO,0)) - SUM(ISNULL([QtyINV], 0)) as [On Sales Order],
		/*dbo.fnFormatNumber(sum(isnull(qtySO,0))) as [On Sales Order],*/
		sum(isnull(qtyForManuf,0)) + sum(isnull(SplitInput,0)) as [Required For Manufacture],
		sum(isnull(SC.QtyStores,0)  - isnull(qtySO,0)  - isnull(qtyForManuf,0) - isnull(SplitInput,0)) as [Total Available],
		sum(isnull(qtyPO,0)) - SUM(ISNULL([QtyGRN],0)) as [On Purchase Order],
		sum(isnull(qtyUnderManuf,0)) + sum(isnull(SplitOutput,0)) as [Under Manufacture],
		isnull(Stk.LeadTime,0) as [Lead Time (Hrs)],
		isnull(convert(Varchar,min(PO.ETA),111),'') as [Next Arrival],
		stk.ReOrderLevel as [Re-Order Level],
		stk.FulFillment as [Fulfillment Level],
		CONVERT(VARCHAR,
			CAST(
				CASE WHEN 
				round(
				sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - 
				sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + 
				sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0)) + 
				sum(isnull(SplitOutput,0))
				,4) -  ISNULL(stk.ReOrderLevel,0) > 0 
				Then
				0
				ELSE
				ISNULL(stk.FulFillment,0) - 
				round(
				sum(isnull(SC.QtyStores,0))  - sum(isnull(qtySO,0))  - 
				sum(isnull(qtyForManuf,0)) - sum(isnull(SplitInput,0)) + 
				sum(isnull(qtyPO,0)) + sum(isnull(qtyUnderManuf,0)) + 
				sum(isnull(SplitOutput,0))
				,4)
				END
			AS MONEY)
		,1)
		as [Recommended Qty For Purchase]

	FROM AccStock STK
	Cross Join (SELECT LookupID from Lookup where class like 'Divisions') Div
	--In Stores
	LEFT JOIN (SELECT StockID, sum(qty * Ratio ) as [QtyStores],DivisionID FROM AccStockControl where Adjustdate <= @Date  group by StockID,DivisionID) SC
	ON STK.StockID = SC.StockID AND Div.LookupID = SC.DivisionID
	--On Purchase Order
	LEFT JOIN (SELECT CD.StockID, sum(CD.Qty * SoldByToPurchasedByRatio) as [QtyPO], min(DateCompleted) as [ETA],
	CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END AS [DivisionID]
	from CREDITOR_DETAIL CD 
	LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID,Deliverydate FROM CREDITOR_MASTER) CM
	ON CD.DocID = CM.DocID
	LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock) Stk
	ON CD.StockID = Stk.StockID 
	where DocType = 'Purchase Order' AND CONVERT(VARCHAR,isnull(Datecreated, @Date),111) <= CONVERT(VARCHAR,@Date,111) AND CONVERT(VARCHAR,isnull(Deliverydate, @Date),111)  >= CONVERT(VARCHAR,@Date,111)
	--where DocType = 'Purchase Order' AND isnull(Datecreated, @Date) <= @Date AND isnull(Deliverydate, @Date)  >= @Date  
	Group By CD.StockID,CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END) PO
	ON Stk.StockID = PO.StockID  AND Div.LookupID = PO.DivisionID
	--On GRN
	LEFT JOIN (SELECT CD.StockID, sum(CD.Qty * SoldByToPurchasedByRatio) as [QtyGRN], min(DateCompleted) as [ETA],
	CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END AS [DivisionID]
	from CREDITOR_DETAIL CD 
	LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID,Deliverydate FROM CREDITOR_MASTER) CM
	ON CD.DocID = CM.DocID
	LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock) Stk
	ON CD.StockID = Stk.StockID 
	where DocType = 'Goods Received Note' AND CONVERT(VARCHAR,isnull(Datecreated, @Date),111) <= CONVERT(VARCHAR,@Date,111) AND CONVERT(VARCHAR,isnull(Deliverydate, @Date),111)  >= CONVERT(VARCHAR,@Date,111)
	--where DocType = 'Purchase Order' AND isnull(Datecreated, @Date) <= @Date AND isnull(Deliverydate, @Date)  >= @Date  
	Group By CD.StockID,CASE WHEN isnull(CD.DivisionID,0) = 0 THEN CM.DivisionID ELSE CD.DivisionID END) GRN
	ON Stk.StockID = GRN.StockID  AND Div.LookupID = GRN.DivisionID
	--On Sales Order
	LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtySO],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID]
	from DEBTOR_DETAIL DD
	LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER) DM
	ON DD.DocID = DM.DocID
	where DocType = 'Sales Order' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
	Group By DD.StockID,CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) SO
	ON Stk.StockID = SO.StockID  AND Div.LookupID = SO.DivisionID
	--On Invoice
	LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtyINV],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID]
	from DEBTOR_DETAIL DD
	LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER) DM
	ON DD.DocID = DM.DocID
	where DocType = 'Invoice' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
	Group By DD.StockID,CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) INV
	ON Stk.StockID = INV.StockID  AND Div.LookupID = INV.DivisionID
	--Required For Manufacture
	LEFT JOIN (SELECT MD.StockID, Sum(MD.Qty * M.Qty) as [QtyForManuf],DivisionID FROM AccManufacture_Detail MD 
	LEFT JOIN AccManufacture M ON MD.DocID = M.DocID
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date 
	Group by  MD.StockID,DivisionID )Manuf
	ON Stk.StockID = Manuf.StockID  AND Div.LookupID = Manuf.DivisionID
	--Under Manufacture
	LEFT JOIN (SELECT M.StockID, Sum(M.Qty) as [QtyUnderManuf],DivisionID FROM AccManufacture M
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= @Date AND DateCreated < = @Date  
	GROUP By M.StockID,DivisionID) UManuf
	ON Stk.StockID = UManuf.StockID  AND Div.LookupID = uManuf.DivisionID
	--Split Stock Manufacturing
	LEFT JOIN (SELECT SD.StockID, LL.LinkedTo as [DivID],
	sum(Case when isnull(SD.IsInput,0) = 1 THEN Qty * Length ELSE 0 END) as [SplitInput],
	sum(Case when isnull(SD.IsInput,0) = 0 THEN Qty * Length ELSE 0 END) as [SplitOutput]
	FROM ACCStock_Split_Master SM
	LEFT JOIN (SELECT * FROM AccStock_Split_Detail) SD ON SM.DocID = SD.DocID
	LEFT JOIN LinkLookup LL ON SD.ContainerID = LL.LinkLookupID
	WHERE SM.DocStatus <> 'Completed' AND SM.DateCreated <= @Date
	Group by SD.StockID, LL.LinkedTo)  SS
	ON STK.StockID = SS.StockID and Div.LookupID = SS.DivID
	LEFT JOIN Lookup L on  STK.SoldBy = L.LookupID 
	LEFT JOIN Lookup LL on STK.StockType = LL.LookupID
	LEFT JOIN LinkLookup LLL on STK.SubTypeID = LLL.Linklookupid 
	LEFT JOIN AccStockPrice ASP ON ASP.StockId = STK.StockID
	--WHERE  (ISNULL(ASP.PriceCategoryID,13794) = 13794)  AND  (isnull(Stk.IsTangible,0) = 1)  
	Group by STK.StockId, LL.Value, LLL.Value, STK.StockCode,STK.StockDescription,L.Value,STK.LeadTime,stk.ReOrderLevel, stk.FulFillment, ASP.CostPriceEx

) STKC ON STKC.StockID = STK.StockID
LEFT JOIN (
	SELECT * FROM AccQuickSale
) AQS ON AQS.StockID = STK.StockID
LEFT JOIN (
	SELECT DD.StockID, SUM(DD.QTY) as [YTD OUT] FROM Debtor_Master DM
	LEFT JOIN (
		SELECT * FROM Debtor_Detail
	) DD ON DD.DocID = DM.DocID
	WHERE DM.DocType LIKE 'Invoice' AND DocStatus LIKE 'Completed'
	GROUP BY DD.StockID	
) DMI ON DMI.StockID = STK.StockID
LEFT JOIN (
	SELECT A.StockID, (SUM(DD.QTY) / {AVGMonth}) as [AVG Movement ({AVGMonth} Months)] FROM Debtor_Detail DD
	LEFT JOIN (
	SELECT DocID, DateCompleted, DocType, DocStatus FROM Debtor_Master
	) DM ON DM.DocID = DD.DocID
	LEFT JOIN (
	SELECT * FROM AccStock
	) A ON A.StockID = DD.StockID
	WHERE  (DM.DocType LIKE 'Invoice' AND DM.DocStatus LIKE 'Completed')  
	AND (DateCompleted Between DATEADD(MONTH, - {AVGMonth}, GETDATE()) AND GETDATE())
	GROUP BY A.StockID
) SAM ON SAM.StockID = STK.StockID

LEFT JOIN (
	SELECT 
		STK.StockID
		, STKP.SellingPriceEx
		, STKP.PriceCategoryID
		, ED.DiscountPercent 
		, 
		dbo.fnFormatNumber(
		ISNULL(
		CASE ISNULL(ED.DiscountPercent,0) WHEN 0 Then
		Stkp.SellingPriceEx
		ELSE
		Stkp.SellingPriceEx - (Stkp.SellingPriceEx * ( ISNULL(ED.DiscountPercent,0) / 100))
		End,0)) as  [{Company1}]
	
	FROM AccStock STK
	LEFT JOIN (
		SELECT * FROM AccStockPrice WHERE PriceCategoryID = @PriceCat
	) STKP ON STKP.StockID = STK.StockID
	LEFT JOIN (


		SELECT EDS.StockID, ED.* 
		FROM AccEntityDiscount ED
		LEFT JOIN (SELECT * FROM AccEntityDiscountStock) EDS
		ON ED.EntityDiscountID = EDS.EntityDiscountID
		LEFT JOIN (SELECT StockID, StockType, SubTypeID FROM AccStock) STK
		ON EDS.StockID = STK.StockID
		LEFT JOIN (SELECT * FROM AccEntityDiscountPriceCategory WHERE PriceCategoryID IN (0, @PriceCat)) EDPC
		ON ED.EntityDiscountID = EDPC.EntityDiscountID
		LEFT JOIN (SELECT * FROM AccEntityDiscountStockType) EDST
		ON ED.EntityDiscountID = EDST.EntityDiscountID AND (STK.StockType = EDST.StockTypeID OR EDST.StockTypeID = 0)
		LEFT JOIN (SELECT * FROM AccEntityDiscountStockSubType) EDSST
		ON ED.EntityDiscountID = EDSST.EntityDiscountID AND (STK.SubTypeID = EDSST.StockSubTypeID OR   EDSST.StockSubTypeID = 0)
		where ED.Entityid = {QEntityID1}


		AND ED.DiscountType = 1
		AND EDS.StockID is not null
		AND EDPC.PriceCategoryID is not null
		AND EDST.StockTypeID is not null
		AND EDSST.StockSubTypeID is not null
		AND (isnull(DiscountPercent,0) > 0 OR isnull(discountFixed,0) > 0)
		AND (
		(isnull(ED.MinQty,0) <= @Qty AND isnull(ED.BreakPointType,1) = 1) 
		OR (isnull(ED.MinAmt,0) <= @Qty AND isnull(ED.BreakPointType,1) = 2)
		)

	) ED ON (ED.StockID = STK.StockID OR ISNULL(ED.StockID,0) = 0)

) ED1 ON (ED1.StockID = STK.StockID OR ISNULL(ED1.StockID,0) = 0)
LEFT JOIN (
	SELECT 
		STK.StockID
		, STKP.SellingPriceEx
		, STKP.PriceCategoryID
		, ED.DiscountPercent 
		, 
		dbo.fnFormatNumber(
		ISNULL(
		CASE ISNULL(ED.DiscountPercent,0) WHEN 0 Then
		Stkp.SellingPriceEx
		ELSE
		Stkp.SellingPriceEx - (Stkp.SellingPriceEx * ( ISNULL(ED.DiscountPercent,0) / 100))
		End,0)) as  [{Company2}]
	
	FROM AccStock STK
	LEFT JOIN (
		SELECT * FROM AccStockPrice WHERE PriceCategoryID = @PriceCat
	) STKP ON STKP.StockID = STK.StockID
	LEFT JOIN (


		SELECT EDS.StockID, ED.* 
		FROM AccEntityDiscount ED
		LEFT JOIN (SELECT * FROM AccEntityDiscountStock) EDS
		ON ED.EntityDiscountID = EDS.EntityDiscountID
		LEFT JOIN (SELECT StockID, StockType, SubTypeID FROM AccStock) STK
		ON EDS.StockID = STK.StockID
		LEFT JOIN (SELECT * FROM AccEntityDiscountPriceCategory WHERE PriceCategoryID IN (0, @PriceCat)) EDPC
		ON ED.EntityDiscountID = EDPC.EntityDiscountID
		LEFT JOIN (SELECT * FROM AccEntityDiscountStockType) EDST
		ON ED.EntityDiscountID = EDST.EntityDiscountID AND (STK.StockType = EDST.StockTypeID OR EDST.StockTypeID = 0)
		LEFT JOIN (SELECT * FROM AccEntityDiscountStockSubType) EDSST
		ON ED.EntityDiscountID = EDSST.EntityDiscountID AND (STK.SubTypeID = EDSST.StockSubTypeID OR   EDSST.StockSubTypeID = 0)
		where ED.Entityid = {QEntityID2}


		AND ED.DiscountType = 1
		AND EDS.StockID is not null
		AND EDPC.PriceCategoryID is not null
		AND EDST.StockTypeID is not null
		AND EDSST.StockSubTypeID is not null
		AND (isnull(DiscountPercent,0) > 0 OR isnull(discountFixed,0) > 0)
		AND (
		(isnull(ED.MinQty,0) <= @Qty AND isnull(ED.BreakPointType,1) = 1) 
		OR (isnull(ED.MinAmt,0) <= @Qty AND isnull(ED.BreakPointType,1) = 2)
		)

	) ED ON (ED.StockID = STK.StockID OR ISNULL(ED.StockID,0) = 0)

) ED2 ON (ED2.StockID = STK.StockID OR ISNULL(ED2.StockID,0) = 0)
LEFT JOIN (
	SELECT 
		STK.StockID
		, STKP.SellingPriceEx
		, STKP.PriceCategoryID
		, ED.DiscountPercent 
		,
		dbo.fnFormatNumber(
		ISNULL( 
		CASE ISNULL(ED.DiscountPercent,0) WHEN 0 Then
		Stkp.SellingPriceEx
		ELSE
		Stkp.SellingPriceEx - (Stkp.SellingPriceEx * ( ISNULL(ED.DiscountPercent,0) / 100))
		End,0)) as  [{Company3}]

	FROM AccStock STK
	LEFT JOIN (
		SELECT * FROM AccStockPrice WHERE PriceCategoryID = @PriceCat
	) STKP ON STKP.StockID = STK.StockID
	LEFT JOIN (


		SELECT EDS.StockID, ED.* 
		FROM AccEntityDiscount ED
		LEFT JOIN (SELECT * FROM AccEntityDiscountStock) EDS
		ON ED.EntityDiscountID = EDS.EntityDiscountID
		LEFT JOIN (SELECT StockID, StockType, SubTypeID FROM AccStock) STK
		ON EDS.StockID = STK.StockID
		LEFT JOIN (SELECT * FROM AccEntityDiscountPriceCategory WHERE PriceCategoryID IN (0, @PriceCat)) EDPC
		ON ED.EntityDiscountID = EDPC.EntityDiscountID
		LEFT JOIN (SELECT * FROM AccEntityDiscountStockType) EDST
		ON ED.EntityDiscountID = EDST.EntityDiscountID AND (STK.StockType = EDST.StockTypeID OR EDST.StockTypeID = 0)
		LEFT JOIN (SELECT * FROM AccEntityDiscountStockSubType) EDSST
		ON ED.EntityDiscountID = EDSST.EntityDiscountID AND (STK.SubTypeID = EDSST.StockSubTypeID OR   EDSST.StockSubTypeID = 0)
		where ED.Entityid = {QEntityID3}


		AND ED.DiscountType = 1
		AND EDS.StockID is not null
		AND EDPC.PriceCategoryID is not null
		AND EDST.StockTypeID is not null
		AND EDSST.StockSubTypeID is not null
		AND (isnull(DiscountPercent,0) > 0 OR isnull(discountFixed,0) > 0)
		AND (
		(isnull(ED.MinQty,0) <= @Qty AND isnull(ED.BreakPointType,1) = 1) 
		OR (isnull(ED.MinAmt,0) <= @Qty AND isnull(ED.BreakPointType,1) = 2)
		)

	) ED ON (ED.StockID = STK.StockID OR ISNULL(ED.StockID,0) = 0)

) ED3 ON (ED3.StockID = STK.StockID OR ISNULL(ED3.StockID,0) = 0)


{where}
","0","","1","LRA-FUSION","0","0","fusion"
"40279","cv_EntityDisc_Companies_Per_User","","SELECT DISTINCT
	E.EntityID
	, ISNULL(E.Accountnum,'') + ' - ' + ISNULL(E.Company,'')  as [Company]
	, ISNULL(UE.[SelectedEntityID],0) as [Assigned]
FROM Entity E
LEFT JOIN (
	SELECT DISTINCT UserID, [SelectedEntityID] FROM (
		SELECT UserID, QEntityID1 as [SelectedEntityID] FROM Users
		UNION ALL
		SELECT UserID, QEntityID2 FROM Users
		UNION ALL
		SELECT UserID, QEntityID3 FROM Users
	) X WHERE X.UserID = {UserID}
) UE ON UE.[SelectedEntityID] = E.EntityID
WHERE ISNULL(E.Issupplier,0) = 0
ORDER BY ISNULL(E.Accountnum,'') + ' - ' + ISNULL(E.Company,'') ASC
","0","","1","LRA-FUSION","0","0","fusion"
"40280","export_Cus_Backing_up","","--**********************************************************************FOR BACKING UP*********************************************************************************
TRUNCATE TABLE _CustomisationBackup


Insert into _CustomisationBackup (TableName,Field1,Field2,Field3,Field4,Field5,Field6,Field7,Field8,Field9,Field10,Field11,Field12,Field13,Field14,Field15,Field16,Field17,Field18,Field19,Field20,Field21,Field22,Field23,Field24,Field25,Field26,Field27,Field28,Field29)
select 
	'Lookup' as [TableName],
	convert(varchar,isnull(LookupID,0)) as [Field1],
	convert(varchar,isnull(Class,'')) as [Field2],
	convert(varchar,isnull(Value,'')) as [Field3],
	convert(varchar,isnull(IsAllDiv,0)) as [Field4],
	convert(varchar,isnull(TempID,0)) as [Field5],
	convert(varchar,isnull(Colour,'')) as [Field6],
	convert(varchar,isnull(info,'')) as [Field7],
	convert(varchar,isnull(value2,'')) as [Field8],
	convert(varchar,isnull(Hierarchy,0)) as [Field9],
	convert(varchar,isnull(IsDefault,0)) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
from Lookup

UNION ALL

select 
	'Linklookup' as [TableName],
	convert(varchar,isnull(LinkLookupID,0)) as [Field1],
	convert(varchar,isnull(Value,'')) as [Field2],
	convert(varchar,isnull(class,'')) as [Field3],
	convert(varchar,isnull(LinkedTo,0)) as [Field4],
	convert(varchar,isnull(Comments,'')) as [Field5],
	convert(varchar,isnull(LocationID,0)) as [Field6],
	convert(varchar,isnull(InActive,0)) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Linklookup
 
UNION ALL

select 
	'LookupDivision' as [TableName],
	convert(varchar,isnull(LookupDivisionID,0)) as [Field1],
	convert(varchar,isnull(LookupID,0)) as [Field2],
	convert(varchar,isnull(DivisionID,0)) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from LookupDivision
 
UNION ALL

select 
	'Options' as [TableName],
	convert(varchar,isnull(OptName,0)) as [Field1],
	convert(varchar,isnull(OptVal,'')) as [Field2],
	convert(varchar,isnull(OptNumVal,0)) as [Field3],
	convert(varchar,isnull(OptStrVal,'')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Options 

UNION ALL

select 
	'MatrixGroup' as [TableName],
	convert(varchar,isnull(MatrixGroupID,0)) as [Field1],
	convert(varchar,isnull([Group],'')) as [Field2],
	convert(varchar,isnull([Rank],0)) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from MatrixGroup

UNION ALL

select 
	'MatrixItem' as [TableName],
	convert(varchar,isnull(MatrixItemID,0)) as [Field1],
	convert(varchar,isnull(MatrixGroupID,0)) as [Field2],
	convert(varchar,isnull(Item,'')) as [Field3],
	convert(varchar,isnull(Rank,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from MatrixItem

UNION ALL

select 
	'ActionTemplate' as [TableName],
	convert(varchar,isnull(ActionTemplateID,0)) as [Field1],
	convert(varchar,isnull(TemplateName,'')) as [Field2],
	convert(varchar,isnull('','')) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from ActionTemplate

UNION ALL

select 
	'Ticketescalations' as [TableName],
	convert(varchar,isnull(TicketIDs,0)) as [Field1],
	convert(varchar,isnull(Severenity,'')) as [Field2],
	convert(varchar,isnull(TimeEsc,0)) as [Field3],
	convert(varchar,isnull(stafflist,'')) as [Field4],
	convert(varchar,isnull(Severenityid,0)) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Ticketescalations

UNION ALL

select 
	'activitytype' as [TableName],
	convert(varchar,isnull(ActivityTypeID,0)) as [Field1],
	convert(varchar,isnull(ActivityType,'')) as [Field2],
	convert(varchar,isnull(Number,0)) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from activitytype

UNION ALL

select 
	'paymenttype' as [TableName],
	convert(varchar,isnull(PaymentTypeID,0)) as [Field1],
	convert(varchar,isnull(Type,'')) as [Field2],
	convert(varchar,isnull(Number,0)) as [Field3],
	convert(varchar,isnull(HostID,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from paymenttype

UNION ALL

select 
	'priority' as [TableName],
	convert(varchar,isnull(PriorityID,0)) as [Field1],
	convert(varchar,isnull(PriorityType,'')) as [Field2],
	convert(varchar,isnull(Actionid,0)) as [Field3],
	convert(varchar,isnull(Number,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from priority

UNION ALL

select 
	'projectTypes' as [TableName],
	convert(varchar,isnull(ProjectTypeID,0)) as [Field1],
	convert(varchar,isnull(ProjectType,'')) as [Field2],
	convert(varchar,isnull('','')) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from projectTypes

UNION ALL

select 
	'projectmodules' as [TableName],
	convert(varchar,isnull(ProjectModuleID,0)) as [Field1],
	convert(varchar,isnull(ProjectModule,'')) as [Field2],
	convert(varchar,isnull(ProjectTypeID,0)) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from projectmodules

UNION ALL

select 
	'LeaveType' as [TableName],
	convert(varchar,isnull(LeaveTypeID,0)) as [Field1],
	convert(varchar,isnull(LeaveType,'')) as [Field2],
	convert(varchar,isnull(cr,0)) as [Field3],
	convert(varchar,isnull(IsStd,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from leavetype

UNION ALL

select 
	'publicholiday' as [TableName],
	convert(varchar,isnull(PublicHolidayID,0)) as [Field1],
	convert(varchar,isnull(Description,'')) as [Field2],
	convert(varchar,isnull(Date,'')) as [Field3],
	convert(varchar,isnull(CompanyOpen,0)) as [Field4],
	convert(varchar,isnull(thisYear,0)) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from publicholiday

UNION ALL

select 
	'ACCAccountingPeriod' as [TableName],
	convert(varchar,isnull(AccPeriodID,0)) as [Field1],
	convert(varchar,isnull(StartDate,'')) as [Field2],
	convert(varchar,isnull(EndDate,'')) as [Field3],
	convert(varchar,isnull(IsClosed,0)) as [Field4],
	convert(varchar,isnull(PNumber,0)) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from ACCAccountingPeriod

UNION ALL

select 
	'accBankAccount' as [TableName],
	convert(varchar,isnull(BankAccountID,0)) as [Field1],
	convert(varchar,isnull(AccName,'')) as [Field2],
	convert(varchar,isnull(OpeningBal,0)) as [Field3],
	convert(varchar,isnull(OBDate,'')) as [Field4],
	convert(varchar,isnull(AccountNo,'')) as [Field5],
	convert(varchar,isnull(Branch,'')) as [Field6],
	convert(varchar,isnull(Bank,'')) as [Field7],
	convert(varchar,isnull(BranchCode,'')) as [Field8],
	convert(varchar,isnull(AccountType,'')) as [Field9],
	convert(varchar,isnull(isDefault,0)) as [Field10],
	convert(varchar,isnull(Currency,0)) as [Field11],
	convert(varchar,isnull(Descr,'')) as [Field12],
	convert(varchar,isnull(GLCodeID,0)) as [Field13],
	convert(varchar,isnull(DivisionID,0)) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from accBankAccount

UNION ALL

select 
	'UserAccount' as [TableName],
	convert(varchar,isnull(UserAccountID,0)) as [Field1],
	convert(varchar,isnull(BankAccountID,0)) as [Field2],
	convert(varchar,isnull(UserID,0)) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from UserAccount

UNION ALL

select 
	'accopeningbalance' as [TableName],
	convert(varchar,isnull(Entityid,0)) as [Field1],
	convert(varchar,isnull(DateCreated,'')) as [Field2],
	convert(varchar,isnull(AmtCurrent,0)) as [Field3],
	convert(varchar,isnull(Amt30,0)) as [Field4],
	convert(varchar,isnull(Amt60,0)) as [Field5],
	convert(varchar,isnull(Amt90,0)) as [Field6],
	convert(varchar,isnull(Amt120,0)) as [Field7],
	convert(varchar,isnull(UseEC,0)) as [Field8],
	convert(varchar,isnull(Currency,'')) as [Field9],
	convert(varchar,isnull(DivisionID,0)) as [Field10],
	convert(varchar,isnull(ROE,0)) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from accopeningbalance

UNION ALL

select 
	'ClientRatingSets' as [TableName],
	convert(varchar,isnull(set1from,0)) as [Field1],
	convert(varchar,isnull(set1To,0)) as [Field2],
	convert(varchar,isnull(set2From,0)) as [Field3],
	convert(varchar,isnull(set2to,0)) as [Field4],
	convert(varchar,isnull(set3from,0)) as [Field5],
	convert(varchar,isnull(set3to,0)) as [Field6],
	convert(varchar,isnull(set4from,0)) as [Field7],
	convert(varchar,isnull(set4to,0)) as [Field8],
	convert(varchar,isnull(set5from,0)) as [Field9],
	convert(varchar,isnull(set5to,0)) as [Field10],
	convert(varchar,isnull(set6from,0)) as [Field11],
	convert(varchar,isnull(set6to,0)) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from ClientRatingSets

UNION ALL

select 
	'ExchangeRates' as [TableName],
	convert(varchar,isnull(ExchangeRateID,0)) as [Field1],
	convert(varchar,isnull(Currency,'')) as [Field2],
	convert(varchar,isnull(Rate,0)) as [Field3],
	convert(varchar,isnull(IsDefault,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from ExchangeRates

UNION ALL

select 
	'AccDocRules' as [TableName],
	convert(varchar,isnull(DocRulesID,0)) as [Field1],
	convert(varchar,isnull(RuleName,'')) as [Field2],
	convert(varchar,isnull(RuleDescription,'')) as [Field3],
	convert(varchar,isnull(ReduceByPerc,0)) as [Field4],
	convert(varchar,isnull(AdjustStock,0)) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from AccDocRules

UNION ALL

select 
	'AccGLCode' as [TableName],
	convert(varchar,isnull(GLCodeID,0)) as [Field1],
	convert(varchar,isnull(GLCategoryID,0)) as [Field2],
	convert(varchar,isnull(GLType,'')) as [Field3],
	convert(varchar,isnull(DivisionID,0)) as [Field4],
	convert(varchar,isnull(GLCode,0)) as [Field5],
	convert(varchar,isnull(GLNotes,'')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from AccGLCode

UNION ALL

select 
	'AccDocumentSetup' as [TableName],
	convert(varchar,isnull(DivisionID,0)) as [Field1],
	convert(varchar,isnull(CoRegNo,'')) as [Field2],
	convert(varchar,isnull(VatRegNo,'')) as [Field3],
	convert(varchar,isnull(Terms,'')) as [Field4],
	convert(varchar,isnull(Banking,'')) as [Field5],
	convert(varchar,isnull(Footer,'')) as [Field6],
	convert(varchar,isnull(LogoPath,'')) as [Field7],
	convert(varchar,isnull(Prefix,'')) as [Field8],
	convert(varchar,isnull(URL,'')) as [Field9],
	convert(varchar,isnull(EmailBody,'')) as [Field10],
	convert(varchar,isnull(SeperateDocNo,0)) as [Field11],
	convert(varchar,isnull(ContactDetails,'')) as [Field12],
	convert(varchar,isnull(Emails,'')) as [Field13],
	convert(varchar,isnull(Telephone,'')) as [Field14],
	convert(varchar,isnull(Faxno,'')) as [Field15],
	convert(varchar,isnull(NoOfRowsToPad,'')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from AccDocumentSetup

UNION ALL

select 
	'accdoctemplates' as [TableName],
	convert(varchar,isnull(DocTemplateID,0)) as [Field1],
	convert(varchar,isnull(TemplateFileName,'')) as [Field2],
	convert(varchar,isnull(TemplatePath,'')) as [Field3],
	convert(varchar,isnull(DivisionID,0)) as [Field4],
	convert(varchar,isnull(TemplateDescr,'')) as [Field5],
	convert(varchar,isnull(isActive,0)) as [Field6],
	convert(varchar,isnull(ProjectID,0)) as [Field7],
	convert(varchar,isnull(TemplateCategoryID,0)) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from accdoctemplates

UNION ALL

select 
	'AccTaxType' as [TableName],
	convert(varchar,isnull(TaxTypeID,0)) as [Field1],
	convert(varchar,isnull(TaxTypeName,'')) as [Field2],
	convert(varchar,isnull(TaxPercentage,0)) as [Field3],
	convert(varchar,isnull(IsDefault,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from AccTaxType

UNION ALL

select 
	'shipping_master' as [TableName],
	convert(varchar,isnull(ShippingDocID,0)) as [Field1],
	convert(varchar,isnull(ShippingTypeID,0)) as [Field2],
	convert(varchar,isnull(TransporterID,0)) as [Field3],
	convert(varchar,isnull(TransporterRefNo,'')) as [Field4],
	convert(varchar,isnull(DocID,0)) as [Field5],
	convert(varchar,isnull(StockID,0)) as [Field6],
	convert(varchar,isnull(StockQty,0)) as [Field7],
	convert(varchar,isnull(BasePriceEx,0)) as [Field8],
	convert(varchar,isnull(DocDate,'')) as [Field9],
	convert(varchar,isnull(Origin,'')) as [Field10],
	convert(varchar,isnull(Destination,'')) as [Field11],
	convert(varchar,isnull(DateToShip,'')) as [Field12],
	convert(varchar,isnull(DateArriving,'')) as [Field13],
	convert(varchar,isnull(DeliveryTerms,'')) as [Field14],
	convert(varchar,isnull(NoOfPackages,0)) as [Field15],
	convert(varchar,isnull(PackageTypeID,0)) as [Field16],
	convert(varchar,isnull(Length,0)) as [Field17],
	convert(varchar,isnull(Width,0)) as [Field18],
	convert(varchar,isnull(Height,0)) as [Field19],
	convert(varchar,isnull(Weight,0)) as [Field20],
	convert(varchar,isnull(PackageWeight,0)) as [Field21],
	convert(varchar,isnull(IsTemplate,0)) as [Field22],
	convert(varchar,isnull(CalcTotalEx,0)) as [Field23],
	convert(varchar,isnull(CalcTotalVat,0)) as [Field24],
	convert(varchar,isnull(LineID,0)) as [Field25],
	convert(varchar,isnull(BaseCostPriceEx,0)) as [Field26],
	convert(varchar,isnull(BasePriceIncl,0)) as [Field27],
	convert(varchar,isnull(UsePercWeight,0)) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from shipping_master

UNION ALL

select 
	'shipping_Detail' as [TableName],
	convert(varchar,isnull(ShippingLineID,0)) as [Field1],
	convert(varchar,isnull(ShippingDocID,0)) as [Field2],
	convert(varchar,isnull(LineDescription,0)) as [Field3],
	convert(varchar,isnull(LineGroup,'')) as [Field4],
	convert(varchar,isnull(MinValue,0)) as [Field5],
	convert(varchar,isnull(Units,0)) as [Field6],
	convert(varchar,isnull(Rate,0)) as [Field7],
	convert(varchar,isnull(Currency,0)) as [Field8],
	convert(varchar,isnull(VATRate,0)) as [Field9],
	convert(varchar,isnull(UsePercUnit,0)) as [Field10],
	convert(varchar,isnull(UsePercRate,0)) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from shipping_Detail

UNION ALL

select 
	'Shipping_Currency' as [TableName],
	convert(varchar,isnull(ShippingCurrencyID,0)) as [Field1],
	convert(varchar,isnull(ShippingDocID,0)) as [Field2],
	convert(varchar,isnull(Currency,'')) as [Field3],
	convert(varchar,isnull(ROE,0)) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Shipping_Currency

UNION ALL

select 
	'Shipping_StockType' as [TableName],
	convert(varchar,isnull(ShippingDocID,0)) as [Field1],
	convert(varchar,isnull(StockTypeID,0)) as [Field2],
	convert(varchar,isnull('','')) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Shipping_StockType

UNION ALL

select 
	'customfieldforms' as [TableName],
	convert(varchar,isnull(formID,0)) as [Field1],
	convert(varchar,isnull(DisplayName,'')) as [Field2],
	convert(varchar,isnull(formName,'')) as [Field3],
	convert(varchar,isnull(isActive,'')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from customfieldforms

UNION ALL

select 
	'CustomFields' as [TableName],
	convert(varchar,isnull(CustomFieldID,0)) as [Field1],
	convert(varchar,isnull(FormName,0)) as [Field2],
	convert(varchar,isnull(GroupID,0)) as [Field3],
	convert(varchar,isnull(SubGroupID,0)) as [Field4],
	convert(varchar,isnull(Fieldname,'')) as [Field5],
	convert(varchar,isnull(FieldType,'')) as [Field6],
	convert(varchar,isnull(ControlType,'')) as [Field7],
	convert(varchar,isnull(ListItems,'')) as [Field8],
	convert(varchar,isnull(DefaultVal,'')) as [Field9],
	convert(varchar,isnull(qfSQL,'')) as [Field10],
	convert(varchar,isnull(qfType,'')) as [Field11],
	convert(varchar,isnull(FieldDescription,'')) as [Field12],
	convert(varchar,isnull(isRequired,0)) as [Field13],
	convert(varchar,isnull(LineColour,'')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from CustomFields

UNION ALL

select 
	'ActionTemplateUsers' as [TableName],
	convert(varchar,isnull(ActionTemplateUserID,0)) as [Field1],
	convert(varchar,isnull(ActionTemplateID,0)) as [Field2],
	convert(varchar,isnull(UserID,0)) as [Field3],
	convert(varchar,isnull('','')) as [Field4],
	convert(varchar,isnull('','')) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from ActionTemplateUsers

UNION ALL

select 
	'ActionTemplates' as [TableName],
	convert(varchar,isnull(ActionTemplateID,0)) as [Field1],
	convert(varchar,isnull(ActionName,'')) as [Field2],
	convert(varchar,isnull(Lookupid,0)) as [Field3],
	convert(varchar,isnull(ActionTypeID,0)) as [Field4],
	convert(varchar,isnull(AssignUserID,0)) as [Field5],
	convert(varchar,isnull(HoursDue,0)) as [Field6],
	convert(varchar,isnull(Comments,'')) as [Field7],
	convert(varchar,isnull(CommentsNextAction,'')) as [Field8],
	convert(varchar,isnull(SendEmail,0)) as [Field9],
	convert(varchar,isnull(SendReminder,0)) as [Field10],
	convert(varchar,isnull(Area,'')) as [Field11],
	convert(varchar,isnull(NotifyUserIDs,'')) as [Field12],
	convert(varchar,isnull(SendClientEmail,0)) as [Field13],
	convert(varchar,isnull(EmailTemplateBody,'')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from ActionTemplates

UNION ALL

select 
	'Risk_Bill_Item' as [TableName],
	convert(varchar,isnull(BillDetailID,0)) as [Field1],
	convert(varchar,isnull(BillTemplateID,'')) as [Field2],
	convert(varchar,isnull(StockID,0)) as [Field3],
	convert(varchar,isnull(MinValue,0)) as [Field4],
	convert(varchar,isnull(HasBreakPoint,0)) as [Field5],
	convert(varchar,isnull(BreakPointValue,0)) as [Field6],
	convert(varchar,isnull(AfterBreakPointRate,0)) as [Field7],
	convert(varchar,isnull(AfterBreakPointPer,0)) as [Field8],
	convert(varchar,isnull(SetValue,0)) as [Field9],
	convert(varchar,isnull(MaxValue,0)) as [Field10],
	convert(varchar,isnull(BreakPointType,0)) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Risk_Bill_Item

UNION ALL

select 
	'Risk_Bill_Template' as [TableName],
	convert(varchar,isnull(BillTemplateID,0)) as [Field1],
	convert(varchar,isnull(TemplateName,'')) as [Field2],
	convert(varchar,isnull(ValidFrom,'')) as [Field3],
	convert(varchar,isnull(ValidTo,'')) as [Field4],
	convert(varchar,isnull(CreatedBy,0)) as [Field5],
	convert(varchar,isnull(DateCreated,'')) as [Field6],
	convert(varchar,isnull(AssessmentTypeID,0)) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from Risk_Bill_Template

UNION ALL

select 
	'EntityDocumentRequired' as [TableName],
	convert(varchar,isnull(DocReqID,0)) as [Field1],
	convert(varchar,isnull(DocTypeID,0)) as [Field2],
	convert(varchar,isnull(FormID,0)) as [Field3],
	convert(varchar,isnull(ReqNum,0)) as [Field4],
	convert(varchar,isnull(IsOnceOff,0)) as [Field5],
	convert(varchar,isnull('','')) as [Field6],
	convert(varchar,isnull('','')) as [Field7],
	convert(varchar,isnull('','')) as [Field8],
	convert(varchar,isnull('','')) as [Field9],
	convert(varchar,isnull('','')) as [Field10],
	convert(varchar,isnull('','')) as [Field11],
	convert(varchar,isnull('','')) as [Field12],
	convert(varchar,isnull('','')) as [Field13],
	convert(varchar,isnull('','')) as [Field14],
	convert(varchar,isnull('','')) as [Field15],
	convert(varchar,isnull('','')) as [Field16],
	convert(varchar,isnull('','')) as [Field17],
	convert(varchar,isnull('','')) as [Field18],
	convert(varchar,isnull('','')) as [Field19],
	convert(varchar,isnull('','')) as [Field20],
	convert(varchar,isnull('','')) as [Field21],
	convert(varchar,isnull('','')) as [Field22],
	convert(varchar,isnull('','')) as [Field23],
	convert(varchar,isnull('','')) as [Field24],
	convert(varchar,isnull('','')) as [Field25],
	convert(varchar,isnull('','')) as [Field26],
	convert(varchar,isnull('','')) as [Field27],
	convert(varchar,isnull('','')) as [Field28],
	convert(varchar,isnull('','')) as [Field29]
 from EntityDocumentRequired","0","","1","LRA-FUSION","0","0","fusion"
"40281","cv_Insert_Project_Containers_Debtors","","INSERT INTO projectcontainers (ProjectID,ContainerID)    
SELECT DISTINCT {ProjectID},CED.ContainerID 
FROM DEBTOR_DETAIL CED  
LEFT JOIN (SELECT * FROM projectcontainers) PC  ON PC.ContainerID = CED.ContainerID 
AND PC.ProjectID = {ProjectID}  
WHERE PC.ProjectContainerID IS NULL AND  CED.ContainerID IS NOT NULL","0","","1","LRA-FUSION","0","0","fusion"
"40282","cv_Refresh_Disc_Entity","","SELECT 
	EntityDiscountID, 
	DiscountDescription as [Description], 
	convert(varchar,cast(DiscountPercent as money),1) +'%' as [Discount],
	convert(varchar,cast(DiscountFixed as money),1)  as [Fixed Price],
	convert(varchar,cast(isnull(MinQty,0) as money),1) as [Min Qty]   
FROM AccEntityDiscount 
{where}  
order by DiscountDescription","0","","1","LRA-FUSION","0","0","fusion"
"40283","cv_Refresh_Accounting_History","","SELECT 
 [DocType],
dbo.fnFormatNumber([Total Incl. VAT]) as [Total]
FROM 
(
	SELECT Convert(Varchar,DM.DocID) + '#' + DocType as [DocID], DocType as [DocType], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
	DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
	[ClientPO], P.ProjectName  as [Project],	isnull(DM.Memo,'') as Notes, 
	DateCreated as [Created],DateCompleted as [Doc. Date],DocStatus as [Status], DM.SalesRepID as [SalesRepID],DM.CreatedBy,
	DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1)) as [Total Ex. VAT], 
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * (([Total Incl. VAT] - [Total Ex. VAT])  / isnull(DM.ROE,1)) as [Total VAT], 
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT]  / isnull(DM.ROE,1))  as [Total Incl. VAT],
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))  as [Est. Cost],
	DM.Period, DM.BatchID
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
	             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
	             FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
	ON DM.DocID = DD.Docid
	LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
	ON DM.DocID = SD.DocID
	LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
	ON DM.ProjectID = P.ProjectID
		
	UNION ALL

	SELECT convert(varchar,DM.DocID) + '#Transfer##' + Convert(varchar,DD.LineID) as [DocID], 
	CASE WHEN isnull(DM.IsInterAccountTransfer,0) = 1 THEN 'Inter-Account Transfer' WHEN isnull(DM.IsInterLedgerTransfer,0) = 1 THEN 'Inter-Ledger Transfer' END as [DocType],
	left('00000000', 8- len(DM.Docid)) + convert(varchar,DM.Docid) as [Doc. No.],
	DD.DivisionID as [DivisionID],	DD.EntityID, 0 as [UseEC], 
	DD.Notes as [ClientPO], null as [Project], DM.TransNotes , DM.DateCreated as [Created],DD.AdjustDate as [Doc. Date],
	CASE WHEN isnull(DM.IsComplete,0) = 1 then 'Completed' else 'Open' END as [Status],
	DM.CreatedBy,DM.CreatedBy,
	isnull(DM.Currency,'') as [Currency],
	DM.ROE as [R.O.E.],
	(isnull(DD.Debit,0) - isnull(DD.Credit,0)) / isnull(DM.ROE,1) as [Total Ex. VAT],
	0 as [Total VAT],
	(isnull(DD.Debit,0) - isnull(DD.Credit,0)) / isnull(DM.ROE,1) as [Total Incl. VAT],
	0 as [Est. Cost],
	(SELECT top 1 AccPeriodID FROM ACCAccountingPeriod where DD.AdjustDate between StartDate and EndDate), null as [BatchId]
	FROM LEDGER_ADJUST_MASTER DM
	LEFT JOIN LEDGER_ADJUST_DETAIL DD 
	ON DM.DocID = DD.DocID
	LEFT JOIN (SELECT EntityID, Company, Issupplier FROM Entity) E 
	ON DD.Entityid = E.Entityid
	WHERE (isnull(DM.IsInterAccountTransfer,0) = 1 OR isnull(DM.IsInterLedgerTransfer,0) = 1 )
	AND isnull(E.Issupplier,0) = 0
	AND isnull(DD.EntityID,0) <> 0
) A
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
	On A.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
	ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
	ON A.EntityID = E.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
	ON E.AlternateCompanyID = EH.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
	ON A.Entityid = EC.EntityContactID AND isnull(A.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
	ON E.SalesConsID = ExtSal.lookupid
{where}
ORDER BY A.DocID desc
","0","","1","LRA-FUSION","0","0","fusion"
"40284","Refresh_Stock_Codes_Entity","","SELECT
	EntityStockCodeID,
	STK.StockCode as [System Stock Code],
	STK.StockDescription as [System Stock Description], 
	EntityStockCode as [Substitute Stock Code], 
	EntityStockDescription as [Substitute Stock Description]  
 FROM EntityStockCode ESC 
 LEFT JOIN (
 SELECT 
	 StockID, 
	 StockCode,
	 StockDescription 
 from AccStock) STK 
	ON ESC.StockID = STK.StockID 
{where}
ORDER BY STK.StockCode ","0","","1","LRA-FUSION","0","0","fusion"
"40285","cv_Acc_Stock_History_Statistics","","DECLARE @StockID as int
DECLARE @TotalMonthsActive as int
SET @StockID =  {stockid}
SET @TotalMonthsActive = (SELECT Datediff(M,(SELECT min(AdjustDate) FROM AccStockControlValuation WHERE StockID = @StockID),getdate()))

SELECT
SCV.StockID,
SUM(CASE WHEN AdjustQty > 0 THEN abs(AdjustQty) ELSE 0 END) as [TotalIn],
SUM(CASE WHEN AdjustQty < 0 THEN abs(AdjustQty) ELSE 0 END) as [TotalOut],
@TotalMonthsActive as [TotalMonthsActive],
SUM(CASE WHEN SCV.AdjustDate between dateadd(m, -6,GetDate()) AND GetDate() THEN Abs(AdjustQty) ELSE 0 END) / 6  as [AvgMove6Months],
SUM(Abs(AdjustQty)) / CASE WHEN isnull(@TotalMonthsActive,1) =0 then 1 ELSE isnull(@TotalMonthsActive,1) END  as [AvgMoveLife],
SUM(CASE WHEN LastUnitPrice > 0 AND AdjustDate between dateadd(m, -6,GetDate()) AND GetDate()  THEN LastUnitPrice ELSE 0 END)
/
CASE WHEN isnull(SUM(CASE WHEN LastUnitPrice > 0 AND AdjustDate between dateadd(m, -6,GetDate()) AND GetDate() THEN 1 ELSE 0 END),1) = 0 then 1 else isnull(SUM(CASE WHEN LastUnitPrice > 0 AND AdjustDate between dateadd(m, -6,GetDate()) AND GetDate() THEN 1 ELSE 0 END),1) END as [AvgCost6Months],

SUM(CASE WHEN LastUnitPrice > 0 THEN LastUnitPrice ELSE 0 END)
/
CASE WHEN isnull(SUM(CASE WHEN LastUnitPrice > 0 THEN 1 ELSE 0 END),1) = 0 THEN 1 ELSE isnull(SUM(CASE WHEN LastUnitPrice > 0 THEN 1 ELSE 0 END),1) END as [AvgCostLife],


SUM(CASE WHEN UnitSellingPriceEx > 0 AND AdjustDate between dateadd(m, -6,GetDate()) AND GetDate()  THEN UnitSellingPriceEx ELSE 0 END)
/
CASE WHEN isnull(SUM(CASE WHEN UnitSellingPriceEx > 0 AND AdjustDate between dateadd(m, -6,GetDate()) AND GetDate() THEN 1 ELSE 0 END),1) = 0 THEN 1 ELSE isnull(SUM(CASE WHEN UnitSellingPriceEx > 0 AND AdjustDate between dateadd(m, -6,GetDate()) AND GetDate() THEN 1 ELSE 0 END),1) END as [AvgPrice6Months],

SUM(CASE WHEN UnitSellingPriceEx > 0 THEN UnitSellingPriceEx ELSE 0 END)
/
CASE WHEN  isnull(SUM(CASE WHEN UnitSellingPriceEx > 0 THEN 1 ELSE 0 END),1) = 0 THEN 1 ELSE  isnull(SUM(CASE WHEN UnitSellingPriceEx > 0 THEN 1 ELSE 0 END),1) END  as [AvgPriceLife]

FROM AccStockControlValuation SCV
LEFT JOIN (SELECT StockControlID,  UnitSellingPriceEx FROM AccStockControl) SC
ON SCV.StockControlID = SC.StockControlID
WHERE StockID = @StockID
GROUP BY SCV.StockID

","0","","1","LRA-FUSION","0","0","fusion"
"40286","cv_Acc_Stock_History_Out","","SELECT 
StockControlID,
Convert(varchar, AdjustDate,111) as [Date],
DocType as [Doc. Type],
Qty * Ratio as [Qty],
L.Value as [Units]
FROM AccStockControl SC
LEFT JOIN Lookup L
ON SC.SoldBy = L.LookupID
WHERE Qty < 0 
AND STockid = {stockid}
ORDER BY AdjustDate","0","","1","LRA-FUSION","0","0","fusion"
"40287","cv_Acc_Stock_History_In","","SELECT 
StockControlID,
Convert(varchar, AdjustDate,111) as [Date],
DocType as [Doc. Type],
Qty * Ratio as [Qty],
L.Value as [Units]
FROM AccStockControl SC
LEFT JOIN Lookup L
ON SC.SoldBy = L.LookupID
WHERE Qty > 0 
AND STockid = {stockid}
ORDER BY AdjustDate","0","","1","LRA-FUSION","0","0","fusion"
"40288","cv_ImportResources17072013","","--cv_importResources
INSERT INTO Lookup (Value, Class)
SELECT Distinct DefaultGroupName, 'quoteGroup' FROM _ResourceImport A WITH (NOLOCK)
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'quoteGroup'
) L ON L.Value = A.DefaultGroupName
WHERE L.LookupID IS NULL AND ISNULL(A.DefaultGroupName,'') <> ''


INSERT INTO Lookup (Value, Class)
SELECT Distinct Manufacturer, 'Manufaturer'  FROM _ResourceImport A WITH (NOLOCK)
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'Manufaturer' 
) L ON L.Value = A.Manufacturer
WHERE L.LookupID IS NULL AND ISNULL(A.Manufacturer,'') <> ''



INSERT INTO AccTaxType (TaxTypeName,TaxPercentage)
SELECT TaxType,CAST(TaxPerc as decimal(12,2)) FROM _ResourceImport A WITH (NOLOCK)
LEFT JOIN (SELECT TaxTypeID, TaxTypeName FROM AccTaxType) AT 
ON A.TaxType = AT.TaxTypeName
WHERE AT.TaxTypeID IS NULL AND ISNULL(A.TaxType,'') <> ''

insert into Lookup (value,class)
select distinct 
	[Source]
	,'ResourceSource' 
from _ResourceImport A WITH (NOLOCK)
LEFT JOIN  lookup cl WITH (NOLOCK) 
ON A.[Source] = cl.Value    
AND cl.class = 'ResourceSource' 
WHERE CL.LookupID is null
and ISNULL([Source] ,'') <> ''
 
insert into Lookup (value,class,info)
select distinct 
	[ResourceType]
	,'StockType'
	,'Resource' 
from _ResourceImport A WITH (NOLOCK)
LEFT JOIN  lookup cl WITH (NOLOCK) 
ON A.[ResourceType] = cl.Value    
AND cl.class = 'StockType'
WHERE CL.LookupID is null
and ISNULL([ResourceType],'') <> ''
 
insert into entity (company,issupplier)
select distinct 
	preferredsupplier
	,1 
from _Resourceimport RI WITH (NOLOCK) 
LEFT JOIN (
	SELECT 
		EntityID
		, Company
		, issupplier 
	FROM Entity WITH (NOLOCK)  
	WHERE ISNULL(issupplier,0) = 1
) E 
ON E.Company = RI.preferredsupplier
WHERE E.EntityID IS NULL AND ISNULL(preferredsupplier,'') <> ''

  
insert into  linklookup (value,class,linkedto)
select distinct 
	[ResourceSubType]
	,'stocksubtype'
	,l.LookupID 
from _ResourceImport simp WITH (NOLOCK)
left join  Lookup l WITH (NOLOCK) on
l.Value = simp.[ResourceType]   
and l.Class = 'StockType'
left join  linklookup ll WITH (NOLOCK) on
ll.Value = [ResourceSubType]   
and ll.class = 'stocksubtype'
where ll.LinkLookupID  is null  
and [ResourceSubType] is not null
and ISNULL([ResourceSubType],'') <> '' 
AND l.LookupID  IS NOT NULL
 
 
INSERT INTO Lookup (Value, Class)
SELECT 
	GLGroup
	, 'JournalType'  
FROM _ResourceImport simp WITH (NOLOCK) 
LEFT JOIN (
	SELECT 
		LookupID
		,Value 
		,'JournalType' as Class
	FROM Lookup WITH (NOLOCK) 
	where class like 'JournalType' 
	 
	UNION ALL

	SELECT -1, 'ACCOUNTS RECEIVABLE','JournalType' 

	UNION ALL

	SELECT -2, 'OUTPUT VAT CONTROL','JournalType'  

	UNION ALL

	SELECT -3, 'COST OF SALES' ,'JournalType' 

	UNION ALL

	SELECT -4, 'INVENTORY' ,'JournalType' 

	UNION ALL

	SELECT -5, 'INPUT VAT CONTROL' ,'JournalType' 

	UNION ALL

	SELECT -6, 'BANK' ,'JournalType' 

	UNION ALL

	SELECT -8, 'FOREIGN EXCHANGE' ,'JournalType' 

	UNION ALL

	SELECT -9, 'ACCOUNTS PAYABLE' ,'JournalType' 

	UNION ALL

	SELECT -10, 'UN-RECEIVED INVENTORY' ,'JournalType' 

	UNION ALL

	SELECT -11, 'PREPAID EXPENSE' ,'JournalType' 

	UNION ALL

	SELECT -12, 'CAPITAL' ,'JournalType' 

	UNION ALL

	SELECT -13, 'INVENTORY EXPENSE' ,'JournalType' 

	UNION ALL

	SELECT -14, 'CAPITAL INPUT VAT CONTROL' ,'JournalType' 

	UNION ALL

	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' ,'JournalType' 

	UNION ALL

	SELECT -16, 'DISCOUNT ALLOWED' ,'JournalType' 

	UNION ALL

	SELECT -17, 'DISCOUNT RECEIVED' ,'JournalType' 

	UNION ALL

	SELECT -18, 'OPENING BALANCE' ,'JournalType' 
) LJ 
ON LJ.Value = simp.GLGroup	 
WHERE LJ.LookupID IS NULL 
AND ISNULL(simp.GLGroup,'') <> ''
--and LJ.Class = 'JournalType'

INSERT INTO lookup (Value, Class)
SELECT distinct 
	soldin
	, 'buysellunits' 
FROM _ResourceImport simp WITH (NOLOCK) 
left join lookup l3 WITH (NOLOCK) on
l3.value = simp.soldin 
and l3.class = 'buysellunits'
WHERE l3.LookupID IS NULL 
AND ISNULL(soldin,'') <> ''
 
INSERT INTO lookup (Value, Class)
SELECT distinct 
	purchasedin
	, 'buysellunits' 
FROM _ResourceImport simp WITH (NOLOCK) 
left join lookup l4 WITH (NOLOCK) on
l4.value = simp.purchasedin 
and l4.class = 'buysellunits'
WHERE l4.LookupID IS NULL 
AND ISNULL(purchasedin,'') <> ''
 
insert into accstock (
	extraspecifications
	,brochurepath
	,stockcode
	,stockdescription
	,StockType 
	,SubTypeID
	,IsTangible
	,soldbytopurchasedbyratio
	,ReOrderLevel
	,LeadTime
	,Warranty
	,JournalID 
	,SoldBy
	,PurchasedBy
	,requiresscanning
	,istaxpayment
	,ispipeline
	,barcode
	,specifications
	,quoteGroupID
	,TaxTypeID
	,DateCreated
	,DateModified
     ,Fulfillment
      ,StockValuationMethod
,ReportCategory
,BalanceSheetOnly
,IsRentable
,RentalDuration
,RentalPeriodType
,CommFlatPerc
,DefaultBinName
,IsHidden
,IsSplittable
,ResourceSource
,ManufacureID
,Commtype
)
 
 
select DISTINCT
	simp.extraspecifications
	,simp.brochurepath

	,code
	,description
	,l.LookupID
	,ll.LinkLookupID
	--,bulkcostpriceexvat
	,simp.istangible
	,soldinpurchasedinratio
	,stockreorderlevel
	,reorderleadtime
	,warrantyperiod
	,l2.LookupID as GL
	,l3.lookupid
	,l4.lookupid
	--,entityid
	,simp.requiresserialnumber
	,simp.isvatexempt
	,ShowInSalesPipeline
	,simp.barcode
	,simp.comments
	,LQ.Lookupid
	,AT.TaxTypeID
	,GETDATE()
	,GETDATE()
        ,Fulfillment
        ,Valuation
,ReportCategory
,BalanceSheet
,Rented
,Period
,[RentType]
 ,CONVERT(FLOAT, CASE WHEN ISNUMERIC([Commision]) = 1 THEN [Commision] ELSE '0' END) as[Commision]
--,[Commision]
,[DefaultBinName]
,[Active]
,[Split]
,LP.LookupID
,LPM.LookupID
,[CommissionType]
from _ResourceImport simp WITH (NOLOCK) 
left join  lookup l WITH (NOLOCK) on 
l.Value = simp.[ResourceType]    
and l.Class = 'StockType'
left join  linklookup ll WITH (NOLOCK) on
ll.Value = simp.[ResourceSubType ]    
and ll.class = 'stocksubtype'
and ll.LinkedTo = l.LookupID 
left join (SELECT StockID, StockCode FROM accstock WITH (NOLOCK)) acc on 
acc.StockCode = simp.Code  
left join (
	SELECT  distinct 
		LookupID
		,Value 
		,Class
	FROM Lookup WITH (NOLOCK) 
	where class like 'JournalType' 

	UNION ALL

	SELECT -1, 'ACCOUNTS RECEIVABLE', 'JournalType'

	UNION ALL

	SELECT -2, 'OUTPUT VAT CONTROL' , 'JournalType'

	UNION ALL

	SELECT -3, 'COST OF SALES' , 'JournalType'

	UNION ALL

	SELECT -4, 'INVENTORY' , 'JournalType'

	UNION ALL

	SELECT -5, 'INPUT VAT CONTROL' , 'JournalType'

	UNION ALL

	SELECT -6, 'BANK' , 'JournalType'

	UNION ALL

	SELECT -8, 'FOREIGN EXCHANGE' , 'JournalType'

	UNION ALL

	SELECT -9, 'ACCOUNTS PAYABLE' , 'JournalType'

	UNION ALL

	SELECT -10, 'UN-RECEIVED INVENTORY' , 'JournalType'

	UNION ALL

	SELECT -11, 'PREPAID EXPENSE' , 'JournalType'

	UNION ALL

	SELECT -12, 'CAPITAL' , 'JournalType'

	UNION ALL

	SELECT -13, 'INVENTORY EXPENSE' , 'JournalType'

	UNION ALL

	SELECT -14, 'CAPITAL INPUT VAT CONTROL' , 'JournalType'

	UNION ALL

	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' , 'JournalType'

	UNION ALL

	SELECT -16, 'DISCOUNT ALLOWED' , 'JournalType'

	UNION ALL

	SELECT -17, 'DISCOUNT RECEIVED' , 'JournalType'

	UNION ALL

	SELECT -18, 'OPENING BALANCE' , 'JournalType'
) l2 on
l2.Value = simp.GLGroup 
and l2.Class = 'JournalType'
left join lookup l3 WITH (NOLOCK) on
l3.value = simp.soldin and l3.class = 'buysellunits'
left join lookup l4 WITH (NOLOCK) on
l4.value = simp.purchasedin and l4.class = 'buysellunits'
left join (SELECT EntityID,Company FROM entity WITH (NOLOCK) WHERE ISNULL(Issupplier,0) = 1) e 
on e.Company = simp.PreferredSupplier and simp.PreferredSupplier <> ''
left join exchangerates ex WITH (NOLOCK) on
ex.Currency = simp.ForexCurrency
left join exchangerates ex2 WITH (NOLOCK) on
ex2.Currency = simp.ConvertBackUsing
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'quoteGroup'
) LQ 
ON LQ.Value = simp.DefaultGroupName
LEFT JOIN (SELECT TaxTypeID, TaxTypeName FROM AccTaxType) AT 
ON simp.TaxType = AT.TaxTypeName
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'ResourceSource' 
) LP
ON LP.Value = simp.[Source]
 LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'Manufaturer' 
) LPM
ON LPM.Value = simp.[Manufacturer]
 where  acc.StockID is null 
 
 
INSERT INTO Lookup (Value, Class)
SELECT distinct 
	Division
	,'Divisions' 
FROM _resourceimport simp WITH (NOLOCK)
LEFT JOIN (
SELECT * FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Divisions'
) LD ON LD.Value = simp.Division
WHERE LD.LookupID IS NULL 
AND ISNULL(Division,'') <> ''
 
 
insert into linklookup (value,class,LinkedTo)
select distinct 
	container
	,'StockContainer'
	,LD.LookupID 
from 
_ResourceImport RI WITH (NOLOCK)
LEFT JOIN (
	SELECT 
		LookupID
		,Value 
	FROM Lookup WITH (NOLOCK) 
	WHERE Class LIKE 'Divisions'
) LD 
ON LD.Value = RI.Division
LEFT JOIN (SELECT * FROM linklookup WHERE Class LIKE 'StockContainer'
) LL ON LL.Value = RI.container AND LL.LinkedTo = LD.LookupID
where LL.LinkLookupID IS NULL 
and ISNULL(container,'') <> '' AND LD.LookupID IS NOT NULL



insert into accstockcontainer(
	stockid
	,containerid
)
select DISTINCT 
	ac.stockid
	,linklookupid
from _resourceimport impr 
left join
(
	SELECT 
		StockID
		, StockCode 
	FROM accstock
) ac on
impr.Code = ac.StockCode
left join (
SELECT 
	LinkLookupID,
	Value,
	class,
	LinkedTo,
	Comments,
	LocationID,
	IsActive
FROM linklookup
WHERE Class  = 'StockContainer'
) l 
on l.Value = impr.Container
LEFT JOIN (
	SELECT 
		StockContainerID,
		StockID,
		ContainerID
	FROM accstockcontainer
) SC ON SC.StockID = AC.StockID AND SC.ContainerID = l.LinkLookupID 
WHERE SC.StockContainerID IS NULL AND AC.StockID IS NOT NULL AND l.LinkLookupID IS NOT NULL
AND ISNULL(impr.Container,'') <> ''


-- update accstock set markup = sellingpriceex/costpriceex
--update accstock set forexdeptotal =  (sellingpriceex / markup ) where isforexdependant = 1  

","0","","1","LRA-FUSION","0","0","fusion"
"40289","cv_pickinglist_export","","SELECT 
	(SELECT TOP 1 DocID FROM DEBTOR_DETAIL WHERE LineID = A.LineID) as [Sales Order],
	convert(varchar,A.DateCreated,111) as [Created],
	convert(varchar,A.[LastDate],111) as [Date],
	ISNULL(E.AccountNum,'') + '/'  + ISNULL(E.Company,'') as [Client],
	A.StockCode as [Code],
	A.StockDescription as [Description],
	A.[Bin Location],
	dbo.fnFormatNumber(SOQty - InvQty) as [Qty to Pick],
	dbo.fnFormatNumber(sum(isnull(SC.QtyStores,0)  - isnull(qtySO,0)  - isnull(qtyForManuf,0) - isnull(SplitInput,0))) as [Level],
	'' as [Released]
FROM (
	SELECT 
		min(DD.LineID) as [LineID], 
		DM.EntityID, 
		DD.StockCode, 
		DD.StockDescription, 
		DD.StockID,
		ISNULL(ACC.DefaultBinName,'')  as [Bin Location],
		sum(CASE WHEN DM.DocType = 'Sales Order' THEN DD.Qty Else 0 END) as [SOQty],
		sum(CASE WHEN DM.DocType = 'Invoice' THEN DD.Qty Else 0 END) as [InvQty],
		sum(CASE WHEN DM.DocType = 'Sales Order' THEN  PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ELSE 0 END) as [SOVal],
		sum(CASE WHEN DM.DocType = 'Invoice' THEN  PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ELSE 0 END) as [InvVal],
		min(DateCreated) as [DateCreated],
		max(DateCompleted) as [LastDate],
		isnull(DD.ProjectID, DM.ProjectID) as [ProjectID],
		DM.DivisionID,
		ClientPO
	FROM DEBTOR_DETAIL DD
	LEFT JOIN (SELECT DocID, DocType, DocStatus,DateCreated, DateCompleted, ProjectID,Entityid,ClientPO,DivisionID FROM DEBTOR_MASTER) DM
	ON DD.DocID = DM.DocID
	LEFT JOIN (SELECT StockID,DefaultBinName from accStock) ACC ON ACC.StockID = DD.StockID
	where doctype in ('Sales Order', 'Invoice')
	Group by DM.EntityID, DD.StockCode, DD.StockDescription,isnull(DD.ProjectID, DM.ProjectID),ClientPO,DD.StockID,DM.DivisionID,ACC.DefaultBinName 
	) A
--In Stores
LEFT JOIN (SELECT StockID, sum(qty * Ratio ) as [QtyStores],DivisionID FROM AccStockControl WITH(NOLOCK) where Adjustdate <= getdate()  group by StockID,DivisionID) SC
ON A.StockID = SC.StockID AND A.DivisionID = SC.DivisionID
--On Sales Order
LEFT JOIN (SELECT DD.StockID, sum(DD.Qty) as [QtySO],
	CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END as [DivisionID]
	from DEBTOR_DETAIL DD WITH(NOLOCK)
        LEFT JOIN (SELECT DocID, DocType, DocStatus, DateCompleted,DateCreated,DivisionID FROM DEBTOR_MASTER WITH(NOLOCK)) DM
        ON DD.DocID = DM.DocID
        where DocType = 'Sales Order' AND  (case when docstatus = 'Completed' then DateCompleted else '3000/01/01'  end) >= getdate() AND DateCreated < = getdate()  
        Group By DD.StockID,CASE WHEN isnull(DD.DivisionID,0) = 0 THEN DM.DivisionID ELSE DD.DivisionID END) SO
ON A.StockID = SO.StockID  AND A.DivisionID = SO.DivisionID
--Required For Manufacture
LEFT JOIN (SELECT MD.StockID, Sum(MD.Qty * M.Qty) as [QtyForManuf],DivisionID FROM AccManufacture_Detail MD  WITH(NOLOCK)
	LEFT JOIN AccManufacture M WITH(NOLOCK) ON MD.DocID = M.DocID
	WHERE  (case when isnull(Completed,0) = 1 then DateManufactured else '3000/01/01'  end) >= getdate() AND DateCreated < = getdate() 
	Group by  MD.StockID,DivisionID )Manuf
ON A.StockID = Manuf.StockID  AND A.DivisionID = Manuf.DivisionID
--Split Stock Manufacturing
LEFT JOIN (SELECT SD.StockID, LL.LinkedTo as [DivID],
	sum(Case when isnull(SD.IsInput,0) = 1 THEN Qty * Length ELSE 0 END) as [SplitInput],
	sum(Case when isnull(SD.IsInput,0) = 0 THEN Qty * Length ELSE 0 END) as [SplitOutput]
	FROM ACCStock_Split_Master SM WITH(NOLOCK)
	LEFT JOIN (SELECT * FROM AccStock_Split_Detail WITH(NOLOCK)) SD ON SM.DocID = SD.DocID
	LEFT JOIN LinkLookup LL ON SD.ContainerID = LL.LinkLookupID
	WHERE SM.DocStatus <> 'Completed' AND SM.DateCreated <= getdate()
	Group by SD.StockID, LL.LinkedTo)  SS
ON A.StockID = SS.StockID and A.DivisionID = SS.DivID
LEFT JOIN (SELECT EntityID, AccountNum, Company FROM Entity) E
ON A.EntityID = E.EntityID
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
ON A.ProjectID = P.ProjectID
WHERE (SoQty <> 0 AND (InvQty - SOQty < 0))
{where}
Group by 
	A.LineID, 
	E.Company, 
	A.ProjectID,
	P.ProjectName,
	A.ClientPo,
	A.StockCode,
	A.StockDescription,
	SOQty,
	InvQty,
	SoVal,
	InvVal,
	A.DateCreated,
	[LastDate],
	E.AccountNum,
	A.[Bin Location]
{having}
ORDER BY E.Company, DateCreated  ","0","","1","LRA-FUSION","0","0","fusion"
"40290","qf_Job_DocFind","","select 
	CONVERT(VARCHAR, DocID) + 'CE' as [ID],
	left('00000000', 8- len(DocID)) + convert(varchar,DocID) as [Doc. No.],
	'Quote' as [Doc. Type]
from cost_estimate_master cem 
left join entity e on e.entityid = cem.entityid 
where cem.docid like '%<%replace%>%'
and e.EntityID = {entityid}

UNION ALL 

SELECT 
	CONVERT(VARCHAR, DocID) + 'SO',
	left('00000000', 8- len(DocNo)) + convert(varchar,DocNo),
	DocType
FROM DEBTOR_MASTER DM
LEFT JOIN Entity E ON E.EntityID = DM.EntityID 
WHERE DM.DocNo like '%<%replace%>%'
AND DM.DocType = 'Sales Order'
AND E.EntityID = {entityid}
","0","","1","LRA-FUSION","0","0","fusion"
"40291","cv_ImportDebtorToJob","","Declare @IsAdd As Bit
Set @IsAdd = {isadd}

Declare @ProjectID As Integer
Set @ProjectID = {projectid}

Declare @Vat AS Float
Set @Vat = (select top 1 custvalue from crmsetup where variable = 'defaultvat')


insert into job_stock 
	(isadditional,comments,costpriceex,containerid,groupname,componentoflineid,[rank],supplierid,addtobudget,budgetdate
,projectid,shippingdocid,stockid,stockcode,stockdescription,qty,discperc,priceex,pricecategoryid,taxtypeid,tax,ismarginbased,markupperc,wasteperc,clientid,divisionid,reportcategoryid,guardlineid,uselandedcost,rentallineid)
select 
	@IsAdd,
	comments,
	costpriceex,
	containerid,
	groupname,
	componentoflineid,
	[rank],
	supplierid,
	null,
	null,
	@projectid,
	null,
	stockid,
	stockcode,
	stockdescription,
	qty,
	discperc,
	priceex,
	pricecategoryid,
	taxtypeid,
	tax,
	ismarginbased,
	markupperc,
	wasteperc,
	clientid,
	divisionid,
	reportcategoryid,
	null,
	uselandedcost,
	rentallineid
from DEBTOR_DETAIL 
where docid = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40292","cv_Job_Manufacture_Schedule","","SELECT StockManufTypeID,L.Value as [Type],
Convert(Varchar, StartTime, 111) + ' ' + Convert(Varchar, StartTime, 108)  as [Start],
Convert(Varchar, EndTime, 111) + ' ' + Convert(Varchar, EndTime, 108)  as [End],
MA.Descr as [Machine/Area],
CASE WHEN ISNULL(IsComplete,0) = 0 Then 'Not Complete' ELSE 'Complete' END AS [Status]
FROM Job_Manufacture_Process MP
LEFT JOIN Lookup L ON MP.ManufType = L.LookupID
LEFT JOIN AccMANUFACTURE_MachArea MA ON MP.MachineAreaID = MA.MachineAreaID
{where}
ORDER BY StockManufTypeID
","0","","1","LRA-FUSION","0","0","fusion"
"40293","cv_Job_Manufacture_QC","","SELECT ManufQCID,StockDescription as [Output], TestName as [Test], MinVal as [Min], TypVal as [Typ], MaxVal as [Max],UOM as [Units], Results  
FROM Job_Manufacture_QC QC
LEFT JOIN (SELECT OutPutID, StockID FROM AccManufacture_Output) MO
ON QC.OutputID = MO.OutPutID
LEFT JOIN (SELECT StockID, StockDescription FROM AccStock) STK
ON MO.StockID = STK.StockID
{where}
ORDER BY ManufQCID","0","","1","LRA-FUSION","0","0","fusion"
"40294","cv_Job_Manufacture_Results","","SELECT ResultID,BatchNo as [Batch No.],  L.Value as [Type],Descr as [Description of materials / Short description],isnull(Results,'') as [Results]
FROM Job_Manufacture_Results MR 
LEFT JOIN Lookup L on MR.ResultTypeID = L.Lookupid
Where JobID = {jobid}
Order By BatchNo, ResultID
","0","","1","LRA-FUSION","0","0","fusion"
"40295","cv_Acc_Debtor_JobCheck","","SELECT * 
FROM DEBTOR_DETAIL 
WHERE StockID NOT IN (
	SELECT DISTINCT
		J.StockID
	FROM Job_Stock J
	LEFT JOIN Projects P ON P.ProjectID = J.ProjectID
	LEFT JOIN DEBTOR_DETAIL DD ON DD.DocID = P.FromDocID 
	WHERE P.FromDoc = 'Sales Order'
	AND P.FromDocID = {docid} 
	AND ISNULL(P.IsJob,0) = 1
) 
AND DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40296","cv_Acc_Debtor_LinkedJobs","","SELECT 
	ProjectID,
	ClientPO as [Client Order],
	ProjectName as [Job Name]
FROM Projects
WHERE FromDoc = 'Sales Order'
AND FromDocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40297","cv_Job_Trans","","Select 
	SC.StockControlID,
	StockCode as [Code],
	StockDescription as [Description],
	Adjustdate as [Date],
	case when Qty > 0 then Qty else null end as [IN],
	case when Qty < 0 then Qty*-1 else null end as [OUT]
from AccStockControl Sc
left join AccStock STK on STK.StockID = SC.StockID
where DocType like 'JOB' /*<%And%>*/
order by AdjustDate,Qty desc","0","","1","LRA-FUSION","0","0","fusion"
"40298","cv_ImportResources","","--cv_importResources
INSERT INTO Lookup (Value, Class)
SELECT Distinct DefaultGroupName, 'quoteGroup' FROM _ResourceImport A WITH (NOLOCK)
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'quoteGroup'
) L ON L.Value = A.DefaultGroupName
WHERE L.LookupID IS NULL AND ISNULL(A.DefaultGroupName,'') <> ''


INSERT INTO Lookup (Value, Class)
SELECT Distinct Manufacturer, 'Manufaturer'  FROM _ResourceImport A WITH (NOLOCK)
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'Manufaturer' 
) L ON L.Value = A.Manufacturer
WHERE L.LookupID IS NULL AND ISNULL(A.Manufacturer,'') <> ''

INSERT INTO Lookup (Value, Class)
SELECT Distinct PrefferedPakage, 'PackagingType'  FROM _ResourceImport A WITH (NOLOCK)
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'PackagingType' 
) L ON L.Value = A.PrefferedPakage
WHERE L.LookupID IS NULL AND ISNULL(A.PrefferedPakage,'') <> ''

INSERT INTO Lookup (Value, Class)
SELECT Distinct Addition5, 'STKAdditional5'  FROM _ResourceImport A WITH (NOLOCK)
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'STKAdditional5' 
) L ON L.Value = A.Addition5
WHERE L.LookupID IS NULL AND ISNULL(A.Addition5,'') <> ''

INSERT INTO Lookup (Value, Class)
SELECT Distinct Addition6, 'STKAdditional6'  FROM _ResourceImport A WITH (NOLOCK)
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'STKAdditional6' 
) L ON L.Value = A.Addition6
WHERE L.LookupID IS NULL AND ISNULL(A.Addition6,'') <> ''



INSERT INTO AccTaxType (TaxTypeName,TaxPercentage)
SELECT DISTINCT TaxType,CAST(CASE TaxPerc WHEN '' THEN 0 ELSE TaxPerc END as decimal(12,2)) FROM _ResourceImport A WITH (NOLOCK)
LEFT JOIN (SELECT TaxTypeID, TaxTypeName FROM AccTaxType) AT 
ON A.TaxType = AT.TaxTypeName
WHERE AT.TaxTypeID IS NULL AND ISNULL(A.TaxType,'') <> ''

insert into Lookup (value,class)
select distinct 
	[Source]
	,'ResourceSource' 
from _ResourceImport A WITH (NOLOCK)
LEFT JOIN  lookup cl WITH (NOLOCK) 
ON A.[Source] = cl.Value    
AND cl.class = 'ResourceSource' 
WHERE CL.LookupID is null
and ISNULL([Source] ,'') <> ''
 
insert into Lookup (value,class,info)
select distinct 
	[ResourceType]
	,'StockType'
	,'Resource' 
from _ResourceImport A WITH (NOLOCK)
LEFT JOIN  lookup cl WITH (NOLOCK) 
ON A.[ResourceType] = cl.Value    
AND cl.class = 'StockType'
WHERE CL.LookupID is null
and ISNULL([ResourceType],'') <> ''
 
insert into entity (company,issupplier)
select distinct 
	preferredsupplier
	,1 
from _Resourceimport RI WITH (NOLOCK) 
LEFT JOIN (
	SELECT 
		EntityID
		, Company
		, issupplier 
	FROM Entity WITH (NOLOCK)  
	WHERE ISNULL(issupplier,0) = 1
) E 
ON E.Company = RI.preferredsupplier
WHERE E.EntityID IS NULL AND ISNULL(preferredsupplier,'') <> ''

  
insert into  linklookup (value,class,linkedto)
select distinct 
	[ResourceSubType]
	,'stocksubtype'
	,l.LookupID 
from _ResourceImport simp WITH (NOLOCK)
left join  Lookup l WITH (NOLOCK) on
l.Value = simp.[ResourceType]   
and l.Class = 'StockType'
left join  linklookup ll WITH (NOLOCK) on
ll.Value = [ResourceSubType]   
and ll.class = 'stocksubtype'
where ll.LinkLookupID  is null  
and [ResourceSubType] is not null
and ISNULL([ResourceSubType],'') <> '' 
AND l.LookupID  IS NOT NULL
 
 
INSERT INTO Lookup (Value, Class)
SELECT distinct
	GLGroup
	, 'JournalType'  
FROM _ResourceImport simp WITH (NOLOCK) 
LEFT JOIN (
	SELECT 
		LookupID
		,Value 
		,'JournalType' as Class
	FROM Lookup WITH (NOLOCK) 
	where class like 'JournalType' 
	 
	UNION ALL

	SELECT -1, 'ACCOUNTS RECEIVABLE','JournalType' 

	UNION ALL

	SELECT -2, 'OUTPUT VAT CONTROL','JournalType'  

	UNION ALL

	SELECT -3, 'COST OF SALES' ,'JournalType' 

	UNION ALL

	SELECT -4, 'INVENTORY' ,'JournalType' 

	UNION ALL

	SELECT -5, 'INPUT VAT CONTROL' ,'JournalType' 

	UNION ALL

	SELECT -6, 'BANK' ,'JournalType' 

	UNION ALL

	SELECT -8, 'FOREIGN EXCHANGE' ,'JournalType' 

	UNION ALL

	SELECT -9, 'ACCOUNTS PAYABLE' ,'JournalType' 

	UNION ALL

	SELECT -10, 'UN-RECEIVED INVENTORY' ,'JournalType' 

	UNION ALL

	SELECT -11, 'PREPAID EXPENSE' ,'JournalType' 

	UNION ALL

	SELECT -12, 'CAPITAL' ,'JournalType' 

	UNION ALL

	SELECT -13, 'INVENTORY EXPENSE' ,'JournalType' 

	UNION ALL

	SELECT -14, 'CAPITAL INPUT VAT CONTROL' ,'JournalType' 

	UNION ALL

	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' ,'JournalType' 

	UNION ALL

	SELECT -16, 'DISCOUNT ALLOWED' ,'JournalType' 

	UNION ALL

	SELECT -17, 'DISCOUNT RECEIVED' ,'JournalType' 

	UNION ALL

	SELECT -18, 'OPENING BALANCE' ,'JournalType' 
) LJ 
ON LJ.Value = simp.GLGroup	 
WHERE LJ.LookupID IS NULL 
AND ISNULL(simp.GLGroup,'') <> ''
--and LJ.Class = 'JournalType'

INSERT INTO lookup (Value, Class)
SELECT distinct 
	soldin
	, 'buysellunits' 
FROM _ResourceImport simp WITH (NOLOCK) 
left join lookup l3 WITH (NOLOCK) on
l3.value = simp.soldin 
and l3.class = 'buysellunits'
WHERE l3.LookupID IS NULL 
AND ISNULL(soldin,'') <> ''
 
INSERT INTO lookup (Value, Class)
SELECT distinct 
	purchasedin
	, 'buysellunits' 
FROM _ResourceImport simp WITH (NOLOCK) 
left join lookup l4 WITH (NOLOCK) on
l4.value = simp.purchasedin 
and l4.class = 'buysellunits'
WHERE l4.LookupID IS NULL 
AND ISNULL(purchasedin,'') <> ''
 
insert into accstock (
	extraspecifications
	,brochurepath
	,stockcode
	,stockdescription
	,StockType 
	,SubTypeID
	,IsTangible
	,soldbytopurchasedbyratio
	,ReOrderLevel
	,LeadTime
	,Warranty
	,JournalID 
	,SoldBy
	,PurchasedBy
	,requiresscanning
	,istaxpayment
	,ispipeline
	,barcode
	,specifications
	,quoteGroupID
	,TaxTypeID
	,DateCreated
	,DateModified
     ,Fulfillment
      ,StockValuationMethod
,ReportCategory
,BalanceSheetOnly
,IsRentable
,RentalDuration
,RentalPeriodType
,CommFlatPerc
,DefaultBinName
,IsHidden
,IsSplittable
,ResourceSource
,ManufacureID
,Commtype
,PackagingID
,Additional5
,Additional6
,[Length]
,Width
,Height
,[Weight]
,Additional1
,Additional2
,Additional3
,Additional4
,MinReOrderAmt
)
 
 
select DISTINCT
	simp.extraspecifications
	,simp.brochurepath

	,code
	,description
	,l.LookupID
	,ll.LinkLookupID
	--,bulkcostpriceexvat
	,simp.istangible
	,soldinpurchasedinratio
	,stockreorderlevel
	,reorderleadtime
	,warrantyperiod
	,l2.LookupID as GL
	,l3.lookupid
	,l4.lookupid
	--,entityid
	,simp.requiresserialnumber
	,simp.isvatexempt
	,ShowInSalesPipeline
	,simp.barcode
	,simp.comments
	,LQ.Lookupid
	,AT.TaxTypeID
	,GETDATE()
	,GETDATE()
        ,Fulfillment
        ,Valuation
,ReportCategory
,BalanceSheet
,Rented
,Period
,[RentType]
 ,CONVERT(FLOAT, CASE WHEN ISNUMERIC([Commision]) = 1 THEN [Commision] ELSE '0' END) as[Commision]
--,[Commision]
,[DefaultBinName]
,[Active]
,[Split]
,LP.LookupID
,LPM.LookupID
,[CommissionType]
,l22.lookupid
,l21.lookupid
,l20.lookupid
,CASE WHEN ISNUMERIC(UnitLenth) = 1 THEN CAST(UnitLenth AS FLOAT) 	ELSE NULL END as UnitLength
,CASE WHEN ISNUMERIC(UnitWidth) = 1 THEN CAST(UnitWidth AS FLOAT) 	ELSE NULL END as UnitWidth
,CASE WHEN ISNUMERIC(UnitHeight) = 1 THEN CAST(UnitHeight AS FLOAT) 	ELSE NULL END as UnitHeight
,CASE WHEN ISNUMERIC(UnitWeight) = 1 THEN CAST(UnitWeight AS FLOAT) 	ELSE NULL END as UnitWeight
,Addition1
,Addition2
,Addition3
,Addition4
,CASE WHEN ISNUMERIC(orderamount) = 1 THEN CAST(orderamount AS FLOAT) 	ELSE NULL END as [Order Amount]
from _ResourceImport simp WITH (NOLOCK) 
left join  lookup l WITH (NOLOCK) on 
l.Value = simp.[ResourceType]    
and l.Class = 'StockType'
left join  linklookup ll WITH (NOLOCK) on
ll.Value = simp.[ResourceSubType ]    
and ll.class = 'stocksubtype'
and ll.LinkedTo = l.LookupID 
left join (SELECT StockID, StockCode FROM accstock WITH (NOLOCK)) acc on 
acc.StockCode = simp.Code  
left join (
	SELECT  distinct 
		LookupID
		,Value 
		,Class
	FROM Lookup WITH (NOLOCK) 
	where class like 'JournalType' 

	UNION ALL

	SELECT -1, 'ACCOUNTS RECEIVABLE', 'JournalType'

	UNION ALL

	SELECT -2, 'OUTPUT VAT CONTROL' , 'JournalType'

	UNION ALL

	SELECT -3, 'COST OF SALES' , 'JournalType'

	UNION ALL

	SELECT -4, 'INVENTORY' , 'JournalType'

	UNION ALL

	SELECT -5, 'INPUT VAT CONTROL' , 'JournalType'

	UNION ALL

	SELECT -6, 'BANK' , 'JournalType'

	UNION ALL

	SELECT -8, 'FOREIGN EXCHANGE' , 'JournalType'

	UNION ALL

	SELECT -9, 'ACCOUNTS PAYABLE' , 'JournalType'

	UNION ALL

	SELECT -10, 'UN-RECEIVED INVENTORY' , 'JournalType'

	UNION ALL

	SELECT -11, 'PREPAID EXPENSE' , 'JournalType'

	UNION ALL

	SELECT -12, 'CAPITAL' , 'JournalType'

	UNION ALL

	SELECT -13, 'INVENTORY EXPENSE' , 'JournalType'

	UNION ALL

	SELECT -14, 'CAPITAL INPUT VAT CONTROL' , 'JournalType'

	UNION ALL

	SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' , 'JournalType'

	UNION ALL

	SELECT -16, 'DISCOUNT ALLOWED' , 'JournalType'

	UNION ALL

	SELECT -17, 'DISCOUNT RECEIVED' , 'JournalType'

	UNION ALL

	SELECT -18, 'OPENING BALANCE' , 'JournalType'
) l2 on
l2.Value = simp.GLGroup 
and l2.Class = 'JournalType'
left join lookup l3 WITH (NOLOCK) on
l3.value = simp.soldin and l3.class = 'buysellunits'
left join lookup l4 WITH (NOLOCK) on
l4.value = simp.purchasedin and l4.class = 'buysellunits'

left join lookup l20 WITH (NOLOCK) on
l20.value = simp.Addition6 and l20.class = 'STKAdditional6'

left join lookup l21 WITH (NOLOCK) on
l21.value = simp.Addition5 and l21.class = 'STKAdditional5'

left join lookup l22 WITH (NOLOCK) on
l22.value = simp.PrefferedPakage and l22.class = 'PackagingType'

left join (SELECT EntityID,Company FROM entity WITH (NOLOCK) WHERE ISNULL(Issupplier,0) = 1) e 
on e.Company = simp.PreferredSupplier and simp.PreferredSupplier <> ''
left join exchangerates ex WITH (NOLOCK) on
ex.Currency = simp.ForexCurrency
left join exchangerates ex2 WITH (NOLOCK) on
ex2.Currency = simp.ConvertBackUsing
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'quoteGroup'
) LQ 
ON LQ.Value = simp.DefaultGroupName
LEFT JOIN (SELECT TaxTypeID, TaxTypeName FROM AccTaxType) AT 
ON simp.TaxType = AT.TaxTypeName
LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'ResourceSource' 
) LP
ON LP.Value = simp.[Source]
 LEFT JOIN (
SELECT Lookupid, Value From Lookup where class like 'Manufaturer' 
) LPM
ON LPM.Value = simp.[Manufacturer]
 where  acc.StockID is null 
 
 
INSERT INTO Lookup (Value, Class)
SELECT distinct 
	Division
	,'Divisions' 
FROM _resourceimport simp WITH (NOLOCK)
LEFT JOIN (
SELECT * FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'Divisions'
) LD ON LD.Value = simp.Division
WHERE LD.LookupID IS NULL 
AND ISNULL(Division,'') <> ''
 
 
insert into linklookup (value,class,LinkedTo)
select distinct 
	container
	,'StockContainer'
	,LD.LookupID 
from 
_ResourceImport RI WITH (NOLOCK)
LEFT JOIN (
	SELECT 
		LookupID
		,Value 
	FROM Lookup WITH (NOLOCK) 
	WHERE Class LIKE 'Divisions'
) LD 
ON LD.Value = RI.Division
LEFT JOIN (SELECT * FROM linklookup WHERE Class LIKE 'StockContainer'
) LL ON LL.Value = RI.container AND LL.LinkedTo = LD.LookupID
where LL.LinkLookupID IS NULL 
and ISNULL(container,'') <> '' AND LD.LookupID IS NOT NULL



insert into accstockcontainer(
	stockid
	,containerid
)
select DISTINCT 
	ac.stockid
	,linklookupid
from _resourceimport impr 
left join
(
	SELECT 
		StockID
		, StockCode 
	FROM accstock
) ac on
impr.Code = ac.StockCode
left join (
SELECT 
	LinkLookupID,
	Value,
	class,
	LinkedTo,
	Comments,
	LocationID,
	InActive
FROM linklookup
WHERE Class  = 'StockContainer'
) l 
on l.Value = impr.Container
LEFT JOIN (
	SELECT 
		StockContainerID,
		StockID,
		ContainerID
	FROM accstockcontainer
) SC ON SC.StockID = AC.StockID AND SC.ContainerID = l.LinkLookupID 
WHERE SC.StockContainerID IS NULL AND AC.StockID IS NOT NULL AND l.LinkLookupID IS NOT NULL
AND ISNULL(impr.Container,'') <> ''


-- update accstock set markup = sellingpriceex/costpriceex
--update accstock set forexdeptotal =  (sellingpriceex / markup ) where isforexdependant = 1  

","0","","1","LRA-FUSION","0","0","fusion"
"40299","cv_Acc_Inventory_Shortfall_Job","","--cv_Acc_Inventory_Shortfall_Job
DECLARE @DocID as int
SET @DocID =   {docid}

SELECT 
Convert(varchar,D.LineID) + '#' + Convert(varchar,isnull(D.PriceCategoryID,0))  as [ID], 
CASE WHEN D.ComponentOfLineID > 0 THEN '-    ' ELSE '' END + D.StockCode as [Code], 
CASE WHEN D.ComponentOfLineID > 0 THEN '-    ' ELSE '' END + D.StockDescription as [Description],
LR.Value as [Resource Source],
E.Company as [Supplier],
LL.Value as [Container],
LU.Value as [Unit],
isnull(convert(varchar,ETA.ETA,111),'') as [Next ETA],
D.Qty * isnull(DDM.Qty,1) as [Qty On Doc.],
isnull(SO.Qty,0) - isnull(DN.Qty,0) -(D.Qty * isnull(DDM.Qty,1) ) as [On S.O.],
isnull(MC.Qty,0) as [For Manufacturing], 

isnull([Qty In Container],0) as [Qty In Container],
(isnull(PO.Qty,0) - isnull(GRN.Qty,0)) * SoldByToPurchasedByRatio  as [On P.O.],
isnull(MO.Qty,0) as [Being Manufactured],
isnull(STK.Fulfillment,0) as [Fulfillment],

isnull([Qty In Container],0) --In Container
-
(isnull(SO.Qty,0) - isnull(DN.Qty,0)) --On S.O. & Required
-
CASE WHEN isnull(MC.RaisedByDocType,'') ='Sales Order' then  0 ELSE isnull(MC.Qty,0) END  --For Manufacturing 
as [Available],
isnull(STK.Fulfillment,0) --Fulfillment
-
isnull(MO.Qty,0) --Being Manufactured
- 
((isnull(PO.Qty,0) - isnull(GRN.Qty,0)) * SoldByToPurchasedByRatio ) --On P.O.
-
(
    isnull([Qty In Container],0) --In Container
    -
    (isnull(SO.Qty,0) - isnull(DN.Qty,0)) --On S.O. & Required
    -
    CASE WHEN isnull(MC.RaisedByDocType,'') ='Sales Order' then  0 ELSE isnull(MC.Qty,0) END --For Manufacturing 
) as [Recommended]
FROM Job_Stock D 
LEFT JOIN (SELECT LineID, Qty FROM Job_Stock) DDM
ON D.ComponentOfLineID = DDM.LineID
LEFT JOIN (SELECT StockID,ResourceSource, IsTangible, SoldBy,MinReorderAmt, Fulfillment, ReOrderLevel,SoldByToPurchasedByRatio FROM AccStock) STK
ON D.StockID = STK.StockID
LEFT JOIN (Select Value,LookupID from Lookup) LR
ON STK.ResourceSource = LR.LookupID
LEFT JOIN (SELECT * FROM Lookup) LU
ON STK.SoldBy = LU.LookupID
LEFT JOIN (SELECT * FROM LinkLookup) LL 
ON D.ContainerID = LL.LinkLookupID
LEFT JOIN (SELECT StockID,ContainerID, sum(Qty * Ratio) as [Qty In Container] FROM AccStockControl Group by StockID,ContainerID) SC
ON D.StockID = SC.StockID AND D.ContainerID = SC.ContainerID
LEFT JOIN (SELECT EntityID, Company FROM Entity)  E
ON D.SupplierID = E.EntityID
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
            LEFT JOIN (SELECT DOCID, DocType FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
            ON DD.DocID = DM.DocID
            LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*DEBTOR_DETAIL*/) DDM
            ON DD.ComponentOfLineID = DDM.LineID
            WHERE DM.DocType in ('Sales Order','Quote')
            Group by StockID, ContainerID ) SO
ON D.StockID = SO.StockID AND D.ContainerID = SO.ContainerID    
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
            LEFT JOIN (SELECT DOCID, DocType FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
            ON DD.DocID = DM.DocID
            LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*DEBTOR_DETAIL*/) DDM
            ON isnull(DD.ComponentOfLineID,0) = DDM.LineID
            WHERE DM.DocType = 'Dispatch Note'
            Group by StockID, ContainerID ) DN
ON D.StockID = DN.StockID AND D.ContainerID = DN.ContainerID    
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Purchase Order'
            Group by StockID, ContainerID ) PO
ON D.StockID = PO.StockID AND D.ContainerID = PO.ContainerID  
LEFT JOIN (SELECT StockID, ContainerID, min(CD.ETADate) as [ETA] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Purchase Order'
            AND CD.ETADate is not null
            AND CD.ETADate >= getdate()
            Group by StockID, ContainerID ) ETA
ON D.StockID = ETA.StockID AND D.ContainerID = ETA.ContainerID  
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Goods Received Note'
            Group by StockID, ContainerID ) GRN
ON D.StockID = GRN.StockID AND D.ContainerID = GRN.ContainerID  
LEFT JOIN (SELECT MD.StockID, MD.ContainerID, Sum(MD.Qty) as [Qty],MM.RaisedByDocType FROM AccMANUFACTURE_DETAIL MD
            LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType FROM AccMANUFACTURE) MM
            ON MD.DocID = MM.DocID
            WHERE isnull(MM.IsComplete,0) = 0 
            Group by MD.StockID, MD.ContainerID, MM.RaisedByDocType) MC
ON D.StockID = MC.StockID AND D.ContainerID = MC.ContainerID
LEFT JOIN (SELECT MO.StockID, MO.ContainerID, sum(MO.Qty) as [Qty],MM.RaisedByDocType FROM AccMANUFACTURE_Output MO
            LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType FROM AccMANUFACTURE) MM
            ON MO.DocID = MM.DocID
            WHERE isnull(MM.IsComplete,0) = 0 
            Group by MO.StockID, MO.ContainerID,MM.RaisedByDocType) MO
ON D.StockID = MO.StockID AND D.ContainerID = MO.ContainerID
WHERE isnull(STK.IsTangible,0) = 1
AND D.ProjectID = @DocID
ORDER BY (CASE WHEN isnull(ComponentofLineID,0) =0 THEN D.LineID ELSE ComponentofLineID END )

","0","","1","LRA-FUSION","0","0","fusion"
"40300","cv_pickinglistimport","","select 
ID,
ID as [Picking List No.],
Replace(Replace(Replace(PLR.Name,'#',''),'%',' '),'_','/') as [File to be imported],
[Date],
U.Username
from PickingListRecord PLR
LEFT JOIN USERS U ON U.userID = PLR.userID
WHERE isnull(Imported,0) = 0 {and}


","0","","1","LRA-FUSION","0","0","fusion"
"40301","PickingListInvoiceImport","","Declare @SalesOrderID	  AS INTEGER
SET @SalesOrderID = {ID}


INSERT INTO DEBTOR_MASTER (
		CreatedBy,
		DateCreated,
		DateCompleted,
		EntityID,
		DocType,
		DocStatus,
		Memo,
		PreviousDocID,
		SalesRepID,
		ClientPO,
		LastUpdated,
		ProjectID,ETA,
		DivisionID,
		Delivery,
		Courier,
		Address,
		City,
		Region,
		Country,
		Code,
		Currency,
		ROE,
		IsBatchInv,
		DisableRetainer,
		DocNo,
		IsOpeningBalance,
		IsNotAllocated,
		IsReversed,
		BankAccountID,
		PrintAltHeader,
		BatchID,
		UseEC,
		Period,
		RuleID,
		PipelineID,
		AttentionOf,
		CEDocID,
		CareOfID,
		TimesheetBatchID,
		TaxTypeID,
		Tax,
		Exported,
		ExportedDoc,
		PaymentTypeID,
		isDelBatch
)
select 
		CreatedBy,
		getdate(),
		NULL,
		EntityID,
		'Invoice',
		DocStatus,
		Memo,
		@SalesOrderID,
		SalesRepID,
		ClientPO,
		LastUpdated,
		ProjectID,ETA,
		DivisionID,
		Delivery,
		Courier,
		Address,
		City,
		Region,
		Country,
		Code,
		Currency,
		ROE,
		IsBatchInv,
		DisableRetainer,
		DocNo,
		IsOpeningBalance,
		IsNotAllocated,
		IsReversed,
		BankAccountID,
		PrintAltHeader,
		BatchID,
		UseEC,
		Period,
		RuleID,
		PipelineID,
		AttentionOf,
		CEDocID,
		CareOfID,
		TimesheetBatchID,
		TaxTypeID,
		Tax,
		Exported,
		ExportedDoc,
		PaymentTypeID,
		isDelBatch
FROM DEBTOR_MASTER
where DocID = @SalesOrderID


INSERT INTO DEBTOR_DETAIL (
		DocID,
		StockID,
		StockCode,
		StockDescription,
		Qty,
		PriceCategoryID,
		CostPriceEx,
		PriceEx,
		DiscPerc,
		TaxTypeID,
		Tax,
		IsMarginBased,
		MarkupPerc,
		WastePerc,
		Comments,
		ContainerID,
		GroupName,
		ComponentOfLineID,
		Rank,
		SupplierID,
		ClientID,
		ProjectID,
		DivisionID,
		ReportCategoryID,
		Timesheetid,
		SerialNumber,
		StockAdjustDate,
		UseLandedCost,
		RentalLineID)
SELECT
		DM.DocID,
		DD.StockID,
		DD.StockCode,
		DD.StockDescription,
		PLI.Released,
		DD.PriceCategoryID,
		DD.CostPriceEx,
		DD.PriceEx,
		DD.DiscPerc,
		DD.TaxTypeID,
		DD.Tax,
		DD.IsMarginBased,
		DD.MarkupPerc,
		DD.WastePerc,
		DD.Comments,
		DD.ContainerID,
		DD.GroupName,
		DD.ComponentOfLineID,
		DD.[Rank],
		DD.SupplierID,
		DD.ClientID,
		DD.ProjectID,
		DD.DivisionID,
		DD.ReportCategoryID,
		DD.Timesheetid,
		DD.SerialNumber,
		DD.StockAdjustDate,
		DD.UseLandedCost,
		DD.RentalLineID
FROM DEBTOR_DETAIL DD
LEFT JOIN _pickinglistImport PLI ON DD.StockCode+DD.StockDescription = PLI.Code+PLI.Description
LEFT JOIN DEBTOR_MASTER DM ON PLI.SalesOrder = DM.PreviousDocID
WHERE PLI.SalesOrder = @SalesOrderID AND CASE WHEN Released = '' THEN  0 ELSE Released END > 0 AND Dm.DocID not in (select docID from DEBTOR_DETAIL)","0","","1","LRA-FUSION","0","0","fusion"
"40302","qf_resourcequickfrind","","select  STK.Stockid, STK.StockCode [Code],STK.StockDescription as [Description],isnull(STK.Barcode,'') as [Barcode]
from AccStock STK
where 
(isnull(stk.IsHidden,0) = 0) AND
(STK.StockCode like '%<%replace%>%') OR (STK.StockDescription Like '%<%replace%>%')OR (STK.Barcode Like '%<%replace%>%')","0","","1","LRA-FUSION","0","0","fusion"
"40303","cv_pickinglist_details","","SELECT 
ID,
	[SalesOrder] as [Sales Order No.],
	[CreatedDate] as [Created Date],
	[Date] as [Date],
	[Client] as [Client],
	[Code] as [Code],
	[Description],
	[BinLocation] as [Bin Location],
	[QtyToPick] as [Qty To Pick],
	[Level],
	[Released] 
FROM pickinglistImport 
where SalesOrder <> '' AND PickingListRecordID = {ID}","0","","1","LRA-FUSION","0","0","fusion"
"40304","qf_QuickCompanyFind","","SELECT 
E.EntityID,
ISNULL(accountnum,'') AS [Account Number],
ISNULL(Company,'') AS [Company Name],
ISNULL(LegalName,'') AS [Legal Name],
ISNULL(Switchboard,'') AS [Telephone],
ISNULL(Fax,'') AS [Fax],
ISNULL(S.FullName,'')AS[Sales Rep],
ISNULL(S.Tel, '') AS[Rep Tel],
ISNULL(S.Cell,'') AS [Rep Cell]
FROM entity e
LEFT JOIN (SELECT StaffID,FullName,Tel,Cell FROM Staff)S ON S.StaffID = E.salesconsID
WHERE 
(ISNULL(IsSupplier,0) = 0) AND 
(((accountnum like '%<%replace%>%') OR (Company LIKE '%<%replace%>%')OR (LegalName LIKE '%<%replace%>%')))
","0","","1","LRA-FUSION","0","0","fusion"
"40305","qf_QuickSupplierFind","","Select EntityID,isnull(accountnum,'') as [Account Number],isnull(Company,'') as [Company Name],isnull(LegalName,'') as [Legal Name]
from entity 
where 
((isnull(IsSupplier,0) = 1) AND
((accountnum like '%<%replace%>%') OR (Company like '%<%replace%>%')OR (LegalName like '%<%replace%>%')))","0","","1","LRA-FUSION","0","0","fusion"
"40306","qf_QuickSupplierContact","","Select EC.EntityContactID,isnull(E.accountnum,'') as [Account Number],isnull(E.Company,'') as [Company Name],isnull(E.LegalName,'') as [Legal Name],
isnull(EC.FirstName,'') + '  '+ isnull(EC.Surname,'') as [Contact]
from Entity E
Left Join EntityContact EC
on EC.EntityID=E.EntityID
where 
((isnull(E.IsSupplier,0) = 1) AND (isnull(EC.EntityContactID,0)<>0)) And
((
(E.accountnum like '%<%replace%>%') OR (E.Company like '%<%replace%>%')OR (E.LegalName like '%<%replace%>%'))
OR (isnull(ec.firstname,'') + ' ' + isnull(ec.surname,'') LIKE '%<%replace%>%'))
","0","","1","LRA-FUSION","0","0","fusion"
"40307","qf_QuickCompanyContact","","Select EC.EntityContactID,isnull(E.accountnum,'') as [Account Number],isnull(E.Company,'') as [Company Name],
isnull(EC.FirstName,'') + '  '+ isnull(EC.Surname,'') as [Contact],
isnull(EC.Phone1,'') as [Phone],
isnull(EC.Cell,'') as [Cell],
isnull(EC.Fax,'') as [Fax],
isnull(EC.Email,'') as [Email],
isnull(EC.birthdate,'') AS [Birthday]
from Entity E
Left Join EntityContact EC
on EC.EntityID=E.EntityID
where 
((isnull(E.IsSupplier,0) = 0) AND (isnull(EC.EntityContactID,0)<>0)) And
((
(E.accountnum like '%<%replace%>%') OR (E.Company like '%<%replace%>%')OR (E.LegalName like '%<%replace%>%'))
OR (isnull(ec.firstname,'') + ' ' + isnull(ec.surname,'') LIKE '%<%replace%>%'))
","0","","1","LRA-FUSION","0","0","fusion"
"40308","cv_StockTrack","","select
 stocktrackid,st.stockid as [Stock Code],s.StockDescription as [Description]
from stocktrack st
LEFT JOIN accstock s ON s.stockid = st.stockid
<%where%>
ORDER BY s.StockDescription","0","","1","LRA-FUSION","0","0","fusion"
"40309","cv_StockTrackMan","","select
 stocktrackdetailsid,tracknum as [Track #],trackname as [Track Name],Side, convert(varchar,tracktime,108) as [Track Time]
from stocktrackdetails
<%where%>
ORDER BY tracknum
","0","","1","LRA-FUSION","0","0","fusion"
"40310","cv_StockTrackTargets","","Select StockTrackTargetID,MinTarget as [Min Target],MaxTarget as [Max Target],Percentage from StockTrackTargets
<%where%>","0","","1","LRA-FUSION","0","0","fusion"
"40311","qf_StckTrack","","select stockid, stockid as [Stock ID], Stockdescription as ""Description""
from accstock
where stockid like '<%replace%>%' 
order by stockid","0","","1","LRA-FUSION","0","0","fusion"
"40312","cv_Acc_Debtors_Invoice_Rpt","","
SELECT DocID, [Delivery Status], Waybill as [Waybill#], Courier, [Doc. No.], LD.Value as [Division], 
CASE WHEN isnull(A.UseEC,0) = 1 then EC.AccountNum ELSE E.AccountNum END as [Account],
CASE WHEN isnull(A.UseEC,0) = 1 then EC.Contact ELSE E.Company END as [Client],

A.ClientPo as [Customer Order Number],
Convert(varchar,Created,111) as [Created],Convert(varchar,[Doc. Date],111) as [Doc. Date],
[Status] as [Invoice Status], ExtSal.Value as [Ext. Consultant], 
dbo.fnFormatNumber([Total Ex. VAT]) as [Total Ex. VAT], 
dbo.fnFormatNumber([Total VAT]) as [Total VAT],
dbo.fnFormatNumber([Total Incl. VAT]) as [Total Incl. VAT]
FROM 
(
	SELECT Convert(Varchar,DM.DocID) + '#' + DocType as [DocID], DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
	DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
	[ClientPO], P.ProjectName  as [Project],	isnull(DM.Memo,'') as Notes, 
	DateCreated as [Created],DateCompleted as [Doc. Date],DocStatus as [Status], DM.SalesRepID as [SalesRepID],DM.CreatedBy,
	DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1)) as [Total Ex. VAT], 
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * (([Total Incl. VAT] - [Total Ex. VAT])  / isnull(DM.ROE,1)) as [Total VAT], 
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT]  / isnull(DM.ROE,1))  as [Total Incl. VAT],
	CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))  as [Est. Cost],
	DM.Period, DM.BatchID, Dm.DeliveryStatus as [Delivery Status], DM.Waybill, C.Company as [Courier]
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
	             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
	             FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
	ON DM.DocID = DD.Docid
	LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
	ON DM.DocID = SD.DocID
	LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
	ON DM.ProjectID = P.ProjectID
	LEFT JOIN (SELECT EntityID, Accountnum, Company FROM Entity) C
	ON DM.Courier = C.EntityID
		
	
) A
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
	On A.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
	ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
	ON A.EntityID = E.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
	ON E.AlternateCompanyID = EH.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
	ON A.Entityid = EC.EntityContactID AND isnull(A.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
	ON E.SalesConsID = ExtSal.lookupid
{where}
ORDER BY A.DocID desc
","0","","1","LRA-FUSION","0","0","fusion"
"40313","cv_StockTrackSongWriter","","SELECT 
 stocktracksongwriterid,l.value as [Song Writer],convert(varchar,songwriterperc) + ' %' as [Percentage] 
FROM stocktracksongwriter s
left join lookup l on l.lookupid = s.songwriterid 
<%where%>
ORDER BY l.value
","0","","1","LRA-FUSION","0","0","fusion"
"40314","cv_StockTrackProducer","","SELECT 
 stocktrackproducerid,l.value as [Producer],convert(varchar,Producerperc) + ' %' as [Percentage] 
FROM stocktrackProducer s
left join lookup l on l.lookupid = s.producerid
<%where%>
ORDER BY l.value ","0","","1","LRA-FUSION","0","0","fusion"
"40315","cv_StockTrackPublisher","","SELECT 
 stocktrackpublisherid,l.value as [Publisher],convert(varchar,publisherperc) + ' %' as [Royalty Percentage],
 convert(varchar,shareperc) + ' %' as [Share Percentage]  
FROM stocktrackpublisher s
left join lookup l on l.lookupid = s.publisherid
<%where%>
ORDER BY l.value  ","0","","1","LRA-FUSION","0","0","fusion"
"40316","cv_StockTrackArtist","","SELECT 
 stocktrackartistid,l.value as [Artist],convert(varchar,artistperc) + ' %' as [Percentage] 
FROM stocktrackartist s
left join lookup l on l.lookupid = s.artistid
<%where%>
ORDER BY l.value","0","","1","LRA-FUSION","0","0","fusion"
"40317","qf_artistsetup","","select lookupid, value as ""Composer""
from lookup
where value like '<%replace%>%' AND  class like 'TrackDetails'
order by value","0","","1","LRA-FUSION","0","0","fusion"
"40318","qf_composersetup","","select lookupid, value as ""Composer""
from lookup
where value like '<%replace%>%' AND  class like 'composers'
order by value","0","","1","LRA-FUSION","0","0","fusion"
"40319","qf_ComposerPublisher","","select distinct stocktrackpublisherid, publisher as ""Publisher"", Admin as [Administrator], SharePerc as [Share Percentage]
from stocktrackpublisher
where publisher like '<%replace%>%' AND StockTrackDetailsID = <%stocktrackid%>
order by publisher
","0","","1","LRA-FUSION","0","0","fusion"
"40320","qf_publishersetup","","select lookupid, value as ""Publisher""
from lookup
where value like '<%replace%>%' AND  class like 'publishers'
order by value
","0","","1","LRA-FUSION","0","0","fusion"
"40321","qf_producersetup","","select lookupid, value as ""Composer""
from lookup
where value like '<%replace%>%' AND  class like 'producers'
order by value","0","","1","LRA-FUSION","0","0","fusion"
"40322","qf_Stock_Track_Into","","
select stockid, stockid as [Stock ID], stockdescription as ""Description""
from accstock
where stockid like '<%replace%>%' 
{where} 
order by stockid","0","","1","LRA-FUSION","0","0","fusion"
"40323","qf_stocktrackCopy","","select ST.stocktrackid, ST.stockid as [Stock ID],S.StockDescription
from stockTrack ST
left join AccStock S on ST.StockID = s.StockID
where ST.stockid like '<%replace%>%'
order by ST.stockid


","0","","1","LRA-FUSION","0","0","fusion"
"40324","cv_Acc_Dashboard_Debtors","","	SELECT 
	dbo.fnFormatNumber(sum(([Total Ex. VAT] / isnull(DM.ROE,1)))) as [Total] 
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
	             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
	             FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
	ON DM.DocID = DD.Docid
	{where}
		
	


","0","","1","LRA-FUSION","0","0","fusion"
"40325","cv_Acc_Dashboard_Creditors","","	SELECT 
	dbo.fnFormatNumber(sum(([Total Ex. VAT] / isnull(DM.ROE,1)))) as [Total] 
	FROM CREDITOR_MASTER DM
	LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
	             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
	             FROM CREDITOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
	ON DM.DocID = DD.Docid
	{where}
		
	


","0","","1","LRA-FUSION","0","0","fusion"
"40326","TicketSeverity","","IF NOT EXISTS (SELECT * FROM Lookup where Class = 'ticketseverity' and value = 'High'  ) 
Insert into Lookup(Class,value) select 'ticketseverity','High'

IF NOT EXISTS (SELECT * FROM Lookup where Class = 'ticketseverity' and value = 'Medium'  ) 
Insert into Lookup(Class,value) select 'ticketseverity','Medium'

IF NOT EXISTS (SELECT * FROM Lookup where Class = 'ticketseverity' and value = 'Low'  ) 
Insert into Lookup(Class,value) select 'ticketseverity','Low'
 
update Tickets 
set SeverityID = l.lookupid
from Tickets t left join Lookup l 
on t.Severity = l.value and l.Class = 'ticketseverity'
","0","","1","LRA-FUSION","1","1","fusion"
"40327","cv_Acc_Price_Continuity","","SELECT DD.StockID, DD.StockCode, DD.StockDescription, DD.CostPriceEx, DD.PriceEx, DDi.CostPriceEx as [PrevCostPriceEx], DDi.PriceEx  as [PrevPriceEx]
FROM DEBTOR_DETAIL DD
LEFT JOIN (SELECT DocID, PreviousDocID FROM DEBTOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT DocID, StockID , CostPriceEx , PriceEx FROM DEBTOR_DETAIL) DDi
ON DM.PreviousDocID = DDi.DocID AND DD.StockID = DDi.StockID
WHERE DD.DocID = {docid}
AND DM.PreviousDocID is not null
AND DDi.StockID is not null
AND (DD.CostPriceEx <> DDi.CostPriceEx OR DD.PriceEx <> DDi.PriceEx)","0","","1","LRA-FUSION","0","0","fusion"
"40328","cv_UpdateResourcePrices","","Update AccStockPrice

set 
	
	CostPriceEx = Z.CostPrice,
	SellingPriceEx=Z.UnitSellingPriceExVat,
	MinSellingPriceEx=Z.MinUnitSellingPrice,
	CostPriceExBuffer=Z.CostPriceBuffer,
	IsMarginBased=Z.MarkupBased ,
	Markup=Z.MarkupField


From
(
SELECT DISTINCT
    A.StockID as [ID]
    ,LD.LookupID as [DivisionID]
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(bulkcostpriceexvat) = 1 THEN BulkCostPriceExVat ELSE '0' END ) as CostPrice
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(UnitSellingPriceExVat) = 1 THEN UnitSellingPriceExVat ELSE '0' END) as UnitSellingPriceExVat
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(MinUnitSellingPrice) = 1 THEN MinUnitSellingPrice ELSE '0' END) as MinUnitSellingPrice
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.CostPriceBuffer) = 1 THEN RI.CostPriceBuffer ELSE '0' END) as CostPriceBuffer
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.RentalPriceEx) = 1 THEN RI.RentalPriceEx ELSE '0' END) as RentalPriceEx
    --,CONVERT(BIT, CASE WHEN ISNULL(RI.MarkUP,'') <> '' Then 0 ELSE 1 END) as MarkupBased 
    ,IsMarginBased   as MarkupBased 
    ,CONVERT(FLOAT, ISNULL(RI.MarkUP,Margin)) as MarkupField
    ,CostDependsOnForex  as CostDependsOnForex --BIT
    ,ex.ExchangeRateID as ExchangeRateIDs
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.ForExMultiplier) = 1 THEN RI.ForExMultiplier ELSE '0' END) as ForExMultiplier
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.ForexBasePrice) = 1 THEN RI.ForexBasePrice ELSE '0' END) as ForexBasePrice
    ,ex2.ExchangeRateID
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.ForexDepTotal) = 1 THEN RI.ForexDepTotal ELSE '0' END) as ForexDepTotal
    ,RI.PriceFromDocTotals as PriceFromDocTotalss--BIT
    ,(CASE RI.CalcPriceUsing 
        WHEN 'All Items'
        THEN 0
        WHEN 'Tangible Items'
        THEN 1
        WHEN 'Intangible Items'
        THEN 2
        WHEN 'Manufactured Items'
        THEN 3
        END
    ) as PriceFromDocTotals
    ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.CalcPriceUsingPerc) = 1 THEN RI.CalcPriceUsingPerc ELSE '0' END) as CalcPriceUsingPerc
    ,RI.uselandedcost as uselandedcost --BIT
    ,CASE WHEN ISNULL(RI.LastUpdated, '') = '' THEN GETDATE() ELSE CONVERT(DATETIME, RI.LastUpdated) END as LastUpdated
    ,LPC.LookupID as PriceCat
    ,RI.ValidFrom as ValidFrom
    ,RI.ValidTo as ValidTo
    ,E.EntityID as EntityID
    ,RI.IsContract as IsContract--BIT
    ,RI.SupplierProductCode as SupplierProductCode
     ,CONVERT(FLOAT, CASE WHEN ISNUMERIC(RI.wastage) = 1 THEN RI.wastage ELSE '0' END) as Wastage
FROM _ResourceImport RI  WITH(NOLOCK)
LEFT JOIN (
    SELECT 
        StockID
        , StockCode 
    FROM AccStock WITH(NOLOCK)
) A ON A.StockCode = RI.Code
LEFT JOIN (
    SELECT StockID,StockPriceId FROM AccStockPrice WITH(NOLOCK)
) ASP ON ASP.StockID = A.StockID
LEFT JOIN (
    SELECT 
        LookupID
        , Value 
    FROM Lookup WITH (NOLOCK) 
    WHERE Class LIKE 'divisions'
) LD ON LD.Value = RI.Division
left join exchangerates ex WITH (NOLOCK) on
ex.Currency = RI.ForexCurrency
left join exchangerates ex2 WITH (NOLOCK) on
ex2.Currency = RI.ConvertBackUsing
LEFT JOIN (
    SELECT 
        Lookupid
        , Value 
    FROM Lookup WITH(NOLOCK) 
    where class like 'PriceCategory'
) LPC
ON LPC.Value = RI.PriceCategory
LEFT JOIN (
    SELECT 
        EntityID
        , Company 
        , IsSupplier
    FROM Entity WITH(NOLOCK)
) E 
ON E.Company = RI.PreferredSupplier
WHERE
--E.IsSupplier = 1 and
ASP.StockPriceId IS not NULL 
--RI.Code IS NOT NULL
)Z
WHERE AccStockPrice.StockId = Z.[ID]
and PriceCategoryID =Z.PriceCat","0","","1","LRA-FUSION","0","0","fusion"
"40329","cv_Acc_Stock_History_Pricing","","DECLARE @StockID as int
SET @StockID = {stockid}

SELECT 
newid() as [ID],
[Date], 
dbo.fnformatnumber(Sum(isnull([Cost Price Ex.],0))) as [Cost Price Ex.], 
dbo.fnformatnumber(Sum(isnull([Selling Price Ex.],0))) as [Selling Price Ex.] 
FROM (
	SELECT  convert(varchar,MIN(CM.DateCompleted),111) as [Date], (CD.PriceEx / SoldByToPurchasedByRatio) * CM.ROE    as [Cost Price Ex.], Null as [Selling Price Ex.]
	FROM CREDITOR_DETAIL CD
	LEFT JOIN (SELECT DocID, EntityID, DocType, DateCompleted, ROE FROM CREDITOR_MASTER) CM
	ON CD.DocID = CM.DocID
	LEFT JOIN (SELECT StockID, SoldByToPurchasedByRatio FROM AccStock)  STK
	ON CD.StockID = STK.StockID
	WHERE CD.StockID = @StockID
	GRoup By  (CD.PriceEx / SoldByToPurchasedByRatio) * CM.ROE 

	UNION ALL

	SELECT  convert(varchar,MIN(DM.DateCompleted),111) as [Date], Null as [Cost Price Ex.], DD.PriceEx  as [Selling Price Ex.]
	FROM DEBTOR_DETAIL DD
	LEFT JOIN (SELECT DocID, EntityID, DocType, DateCompleted FROM DEBTOR_MASTER) DM
	ON DD.DocID = DM.DocID
	WHERE DD.StockID = @StockID
	GRoup By  DD.PriceEx 
)
A
GROUP BY A.[Date]
ORDER BY A.[Date]","0","","1","LRA-FUSION","0","0","fusion"
"40330","cv_EntityProcessFlow","","select Company as [<company>],Legalname as [<legalname>],l.Value as [<companytype>],
Email as [<email>]
from entity e left join lookup l
on l.LookupID = e.EntityTypeID
where e.entityid = {entityid}","0","","1","LRA-FUSION","0","0","fusion"
"40331","cv_Acc_Stock_Forecast","","DECLARE @Date as Datetime
DECLARE @NoOfMonths as float
SET @Date =  '{date}'
SET @NoOfMonths = {noofmonths}


SELECT 
ID, [Type], [Sub Type], Code, [Description], [Barcode], [Source], [Unit], 
dbo.fnFormatNumber([Qty In Containers]) as [Level],
dbo.fnFormatNumber(isnull([On S.O.] ,0) + isnull([For Manufacturing],0)) as [Reserved],
dbo.fnFormatNumber(CASE WHEN [Available] < 0 THEN 0 ELSE [Available] END) as [Available],
dbo.fnFormatNumber(isnull([On P.O.],0) + isnull([Being Manufactured],0)) as [On Order],
dbo.fnFormatNumber(CASE WHEN [Available] < 0 THEN abs([Available]) ELSE 0 END) as [Shortfall],
dbo.fnFormatNumber([Fulfillment]) as [Fulfillment],
dbo.fnFormatNumber([Avg 12 Month Turnover]) as [Avg 12 Month Turnover],
dbo.fnFormatNumber(CASE WHEN [Reorder Qty.] < 0 THEN 0 ELSE [Reorder Qty.] END) as [Reorder Qty.],
dbo.fnFormatNumber(isnull(ForecastQty ,CASE WHEN [Reorder Qty.] < 0 THEN 0 ELSE [Reorder Qty.] END)) as [Qty. To Order],
dbo.fnFormatNumber([Req. Over Forecast Months]) as [Req. Over {noofmonths} Months],
[Preferred Supplier]
FROM (
	SELECT 
	Convert(varchar,STK.StockID) + '#' + Convert(varchar,isnull(SF.SupplierID,isnull(SP.SupplierID,0)))  as [ID], 
	ST.Value as [Type],
	SST.Value as [Sub Type],
	STK.StockCode as [Code], 
	STK.StockDescription as [Description],
	STK.Barcode,
	isnull(LS.Value,'') as [Source],
	LU.Value as [Unit],
	(sum(isnull(SO.Qty,0)) - sum(isnull(DN.Qty,0)))  as [On S.O.],
	(sum(isnull(MC.Qty,0))) as [For Manufacturing],
	(sum(isnull([Qty In Container],0))) as [Qty In Containers],
	((sum(isnull(PO.Qty,0)) - sum(isnull(GRN.Qty,0))) * SoldByToPurchasedByRatio)  as [On P.O.],
	(sum(isnull(MO.Qty,0))) as [Being Manufactured],
	(isnull(STK.Fulfillment,0)) as [Fulfillment],
	(
	sum(isnull([Qty In Container],0)) --In Container
	-
	(sum(isnull(SO.Qty,0)) - sum(isnull(DN.Qty,0))) --On S.O. & Required
	-
	sum(CASE WHEN isnull(MC.RaisedByDocType,'') ='Sales Order' then  0 ELSE isnull(MC.Qty,0) END)  --For Manufacturing 
	)as [Available],
	round(isnull(SC12.[Avg 12 Month Turnover],0),3) as [Avg 12 Month Turnover],
	(
	isnull(STK.Fulfillment,0) --Fulfillment
	-
	sum(isnull(MO.Qty,0)) --Being Manufactured
	- 
	((sum(isnull(PO.Qty,0)) - sum(isnull(GRN.Qty,0))) * SoldByToPurchasedByRatio ) --On P.O.
	-
	(
		sum(isnull([Qty In Container],0)) --In Container
		-
		(sum(isnull(SO.Qty,0)) - sum(isnull(DN.Qty,0))) --On S.O. & Required
		-
		sum(CASE WHEN isnull(MC.RaisedByDocType,'') ='Sales Order' then  0 ELSE isnull(MC.Qty,0) END) --For Manufacturing 
	) + round(isnull(SC12.[Avg 12 Month Turnover],0) * @NoOfMonths,3)) as [Reorder Qty.],
	round(isnull(SC12.[Avg 12 Month Turnover],0) * @NoOfMonths,3) as [Req. Over Forecast Months],
	SF.ForecastQty,
	E.company as [Preferred Supplier]
	FROM  AccStock STK
	CROSS JOIN (SELECT * FROM LinkLookup where class like 'StockContainer') LL
	LEFT JOIN (SELECT * FROM Lookup) LU
	ON STK.SoldBy = LU.LookupID
	LEFT JOIN (SELECT * FROM Lookup where class like 'StockType') ST
	ON STK.StockType= ST.Lookupid
	LEFT JOIN (SELECT * FROM LinkLookup where class like 'StockSubType') SST
	ON STK.SubTypeID = SST.LinkLookupid
	LEFT JOIN (SELECT StockID,ContainerID, sum(Qty * Ratio) as [Qty In Container] FROM AccStockControl WHERE AdjustDate <= @Date  Group by StockID,ContainerID) SC
	ON STK.StockID = SC.StockID AND LL.LinkLookupID = SC.ContainerID
	LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
				LEFT JOIN (SELECT DOCID, DocType, DateCompleted FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
				ON DD.DocID = DM.DocID
				LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*DEBTOR_DETAIL*/) DDM
				ON DD.ComponentOfLineID = DDM.LineID
				WHERE DM.DocType = 'Sales Order'
				AND DM.DateCompleted <= @Date
				Group by StockID, ContainerID ) SO
	ON STK.StockID = SO.StockID AND LL.LinkLookupID = SO.ContainerID    
	LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
				LEFT JOIN (SELECT DOCID, DocType, DateCompleted FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
				ON DD.DocID = DM.DocID
				LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*DEBTOR_DETAIL*/) DDM
				ON DD.ComponentOfLineID = DDM.LineID
				WHERE DM.DocType = 'Dispatch Note'
				AND DM.DateCompleted <= @Date
				Group by StockID, ContainerID ) DN
	ON STK.StockID = DN.StockID AND LL.LinkLookupID = DN.ContainerID    
	LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
				LEFT JOIN (SELECT DOCID, DocType,DateCompleted FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
				ON CD.DocID = CM.DocID
				WHERE CM.DocType = 'Purchase Order'
				AND CM.DateCompleted <= @Date
				Group by StockID, ContainerID ) PO
	ON STK.StockID = PO.StockID AND LL.LinkLookupID = PO.ContainerID    
	LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
				LEFT JOIN (SELECT DOCID, DocType, DateCompleted FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
				ON CD.DocID = CM.DocID
				WHERE CM.DocType = 'Goods Received Note'
				AND CM.DateCompleted <= @Date
				Group by StockID, ContainerID ) GRN
	ON STK.StockID = GRN.StockID AND LL.LinkLookupID = GRN.ContainerID  
	LEFT JOIN (SELECT MD.StockID, MD.ContainerID, Sum(MD.Qty) as [Qty],MM.RaisedByDocType FROM AccMANUFACTURE_DETAIL MD
				LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType ,DateCompleted FROM AccMANUFACTURE) MM
				ON MD.DocID = MM.DocID
				WHERE isnull(MM.IsComplete,0) = 0 
				AND MM.DateCompleted <= @Date
				Group by MD.StockID, MD.ContainerID, MM.RaisedByDocType) MC
	ON STK.StockID = MC.StockID AND LL.LinkLookupID = MC.ContainerID
	LEFT JOIN (SELECT MO.StockID, MO.ContainerID, sum(MO.Qty) as [Qty],MM.RaisedByDocType FROM AccMANUFACTURE_Output MO
				LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType FROM AccMANUFACTURE) MM
				ON MO.DocID = MM.DocID
				WHERE isnull(MM.IsComplete,0) = 0 
				Group by MO.StockID, MO.ContainerID,MM.RaisedByDocType) MO
	ON STK.StockID = MO.StockID AND LL.LinkLookupID = MO.ContainerID
	LEFT JOIN (SELECT StockID, DivisionID, PriceCategoryID, max( CostPriceEx) as [CostPriceEx], max(SellingPriceEx) as [SellingPriceEx] FROM AccStockPrice WHERE @Date between ValidFrom AND ValidTo GROUP BY  StockID, DivisionID, PriceCategoryID) ASP
	ON STK.StockID = ASP.StockID AND  ASP.DivisionID = LL.LinkedTo
	LEFT JOIN (SELECT StockID, abs(sum(Qty * Ratio)) / 12 as [Avg 12 Month Turnover] FROM AccStockControl where Qty < 0/* AND adjustdate between dateadd(y,-1,@Date) and @Date*/ GROUP BY StockID ) SC12
	ON STK.StockID = SC12.StockID
	LEFT JOIN (SELECT StockID, Max(SupplierID) as [SupplierID] FROM AccStockPrice where @Date between ValidFrom AND ValidTo Group By StockID) SP
	ON STK.StockID = SP.StockID
	LEFT JOIN AccStockForecast SF
	ON STK.StockID = SF.StockID AND convert(varchar,@Date,111) = convert(varchar,SF.ForecastDate,111) 
	LEFT JOIN (SELECT EntityID, Company FROM Entity) E
	ON isnull(SF.SupplierID,SP.SupplierID) = E.EntityID
	LEFT JOIN (SELECT * FROM Lookup) LS
	ON STK.ResourceSource = LS.LookupID
	
	{where}

	GROUP BY STK.StockId, ST.Value, SST.Value, STK.StockCode, STK.StockDescription, LU.Value,SoldByToPurchasedByRatio, STK.Fulfillment, STK.LeadTime, SC12.[Avg 12 Month Turnover],E.company , SF.SupplierID,SP.SupplierID,SF.ForecastQty,STK.Barcode,LS.Value 
) A
ORDER BY Code","0","","1","LRA-FUSION","0","0","fusion"
"40332","cv_LeadProcessFlow","","select
Company as [<company>],
Firstname as [<firstname>],
Lastname as [<surname>],
Phone1 as[<phone1>],
Email as [<email>],
l.Value as [<leadstatus>]
from lead 
left join lookup l
on l.LookupID = lead.LeadStatus
where leadid = {leadid}
order by leadid desc","0","","1","LRA-FUSION","0","0","fusion"
"40333","cv_Acc_Check_Un-Allocated_Expenditure_Transfer","","--cv_Acc_Check_Un-Allocated_Expenditure
DECLARE @docid as integer
SET @DocID = {docid}

SELECT sum(DD.Qty) - isnull(Scanned,0) as [Un-Allocated], DD.StockDescription 
FROM EXPENDITURE_MASTER DD
LEFT JOIN AccStock STK ON DD.StockID = STK.StockID
LEFT JOIN (SELECT StockID, DocID, DocType, abs(sum(qty * ratio)) as [Scanned] FROM AccStockControl WHERE DocID = @DocID AND  Qty < 0 GROUP BY StockID, DocID, DocType ) SC
ON DD.StockID = SC.StockID AND DD.DocType = Sc.DocType AND DD.DocID = SC.DocID 
Where DD.docID = @DocID
AND isnull(Stk.RequiresScanning,0) = 1
Group by SC.Scanned, DD.StockDescription
HAVING sum(DD.Qty) > isnull(Scanned,0) 
","0","","1","LRA-FUSION","0","0","fusion"
"40334","cv_SalesByQuote","","Declare @DocType Varchar(100)
Set @DocType = 'Quote' 
--Quotes table doesn't use doctype, so I hard coded it
 
SELECT 
    DocID, 
    A.StockCode as [Code], 
    A.StockDescription as [Description],
    [QTY],
    dbo.fnFormatNumber([Est. Cost]) as [Total Cost Price(ex vat)],
    dbo.fnFormatNumber([Total Ex. VAT]) as [Total Selling Price(ex vat)], 
    dbo.fnFormatNumber([Profit]) as [Profit],
    dbo.fnFormatNumber(CASE [Est. Cost] WHEN 0 THEN 0 ELSE [Profit] / [Est. Cost] END * 100) as [Margin %],
    dbo.fnFormatNumber(
        CASE [Total Ex. VAT] WHEN 0 THEN 0 ELSE 
        (CASE [Est. Cost] WHEN 0 THEN 0 ELSE ([Total Ex. VAT] - [Est. Cost]) / [Total Ex. VAT] END * 100) 
        END) as [GP]


/*

    ,[Doc. No.],
    LD.Value as [Division], 
    CASE WHEN isnull(A.UseEC,0) = 1 then EC.AccountNum ELSE E.AccountNum END as [Account],
    CASE WHEN isnull(A.UseEC,0) = 1 then EC.Contact ELSE E.Company END as [Client],
    isnull(EH.Company,'') as [Holding Company],
    A.ClientPo as [Customer Order Number], Project,Notes, 
    Convert(varchar,Created,111) as [Created],Convert(varchar,[Doc. Date],111) as [Doc. Date],
    [Status], U.Consultant,ExtSal.Value as [Ext. Consultant], 
    ST.Value as [Stock Type],
    LL.Value as [Sub Type],
    Currency, [R.O.E.], 
    dbo.fnFormatNumber([Total VAT]) as [Total VAT]
*/
FROM 
(
    SELECT DD.DocID as [DocID2],Convert(Varchar,DD.LineID) + '#' + @DocType as [DocID], @DocType as [Doc. Type], left('00000000', 8- len(DM.DocID)) + convert(varchar,DM.DocID) as [Doc. No.], 
    DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
    [ClientPO], P.ProjectName  as [Project],    isnull(DM.Memo,'') as Notes, 
    DateCreated as [Created],
    DateCompleted as [Doc. Date],
    DocStatus as [Status], 
    DM.SalesRepID as [SalesRepID],
    DM.CreatedBy,
    DM.Currency,convert(varchar,cast(DM.ROE as money),1) as [R.O.E.],
    DD.StockCode, 
    DD.StockDescription,
    DD.QTY,
    CASE @doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1)) as [Total Ex. VAT], 
    CASE @doctype when 'Credit Note' then -1 ELSE 1 END * (([Total Incl. VAT] - [Total Ex. VAT])  / isnull(DM.ROE,1)) as [Total VAT], 
    CASE @doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT]  / isnull(DM.ROE,1))  as [Total Incl. VAT],
    CASE @doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))  as [Est. Cost],
     (
        CASE @doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1))
        -
        CASE @doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))
    ) as [Profit],
    DM.Period,
    -- DM.BatchID,
      DD.StockID
    FROM Cost_Estimate_MASTER DM
    LEFT JOIN (SELECT LineID, DocID, StockID, StockCode,StockDescription,
                Qty,
                (PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
                 (PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
                 Cast((isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
                 (PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
                 --FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 ) DD
                 FROM Cost_estimate_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 ) DD
    ON DM.DocID = DD.Docid
    --LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
    LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM COST_Estimate_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
    ON DM.DocID = SD.DocID
    LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
    ON DM.ProjectID = P.ProjectID
        

) A
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
    On A.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
    ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
    ON A.EntityID = E.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
    ON E.AlternateCompanyID = EH.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
    ON A.Entityid = EC.EntityContactID AND isnull(A.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
    ON E.SalesConsID = ExtSal.lookupid
LEFT JOIN AccStock STK ON STK.StockID = A.StockID
LEFT JOIN Lookup ST ON ST.LookupID = STK.StockType
LEFT JOIN LinkLookup LL ON LL.LinkedTo = STK.SubTypeID AND LL.LinkedTo = ST.LookupID
WHERE  -- ([Doc. Type] = 'Sales Order')   AND 
-- (DocID is not null)  and
 docid2 = {docid}
ORDER BY A.DocID desc
 ","0","","1","LRA-FUSION","0","0","fusion"
"40335","cv_UpdatePricesImportedResources","","update RIMP
set unitsellingpriceexvat = unitsellingpriceexvat * ER.Rate
from _resourceImport RIMP 
left join 
exchangerates ER
on
RIMP.ForexCurrency = ER.Currency
Where RIMP.CostDependsOnForex = 1
","0","","1","LRA-FUSION","0","0","fusion"
"40336","CV_Directory_Contacts","","select ec.entitycontactid, isnull(firstname,'') + ' ' + isnull(surname,'') as [contact],
 isnull(ac.EntityContactID,0) as [Assigned]
from entitycontact ec
left join DirectoryContact ac
on ac.entitycontactid = ec.entitycontactid and ac.DirectoryID = <%apptid%>
where ec.entityID = <%eid%> ","0","","1","LRA-FUSION","0","0","fusion"
"40337","CV_DirectoryMan",""," select 
 D.DirectoryID
 ,D.DirectoryID as [ID]
 ,E.Company as Company
 ,isnull(D.Switchboard,'') as [Tel]
 ,isnull(D.Fax,'') as [Fax]
 ,isnull(D.Email,'') as [Email]
 ,isnull(D.Website,'') as [Website]
 ,isnull(EH.Company,'') as [Holding Company]
  ,isnull(D.HolSwitchboard,'') as [Tel]
 ,isnull(D.HoFax,'') as [Fax]
 ,isnull(D.HoEmail,'') as [Email]
 ,isnull(D.HoWebsite,'') as [Website]
 ,L.Value as [Year of Publicaton]
 ,D.CompanyDesc as [Company Description]
 ,isnull(U.FirstName,'') + ' ' +isnull(U.Surname,'') as [Created By]
 ,convert(varchar(20),D.Datecreated,103) as [Date Created]
 ,isnull(DS.FirstName,'') + ' ' +isnull(DS.Surname,'') as [Modified By]
  ,convert(varchar(20),D.Datemodified,103) as [Date Created]
 from Directory D
 Left Join Entity E
 on E.EntityID=D.EntityID
 Left Join Entity EH on EH.EntityID=D.HoldingCompanyID
 Left Join Lookup L on L.LookupID=D.PublicationYear
 Left join Users U on U.UserID=D.CreadtedBy
 Left Join Users DS on DS.UserID = D.ModifiedBy
 
 {where}","0","","1","LRA-FUSION","0","0","fusion"
"40338","CV_DirectoryHistory",""," select 
 D.HistoryID
 ,D.HistoryID as [ID]
 ,E.Company as Company
 ,isnull(EH.Company,'') as [Holding Company]
 ,L.Value as [Year of Publicaton]
 ,D.CompanyDesc as [Company Description]
 ,isnull(U.FirstName,'') + ' ' +isnull(U.Surname,'') as [Created By]
 ,convert(varchar(20),D.Datecreated,103) as [Date Created]
 ,isnull(DS.FirstName,'') + ' ' +isnull(DS.Surname,'') as [Modified By]
  ,convert(varchar(20),D.Datemodified,103) as [Date Created]
 from HistoryDirectory D
 Left Join Entity E
 on E.EntityID=D.EntityID
 Left Join Entity EH on EH.EntityID=D.HoldingCompanyID
 Left Join Lookup L on L.LookupID=D.PublicationYear
 Left join Users U on U.UserID=D.CreadtedBy
 Left Join Users DS on DS.UserID = D.ModifiedBy
 {where}","0","","1","LRA-FUSION","0","0","fusion"
"40339","qf_OrderformCotacts","","select 
	C.entitycontactid, 
	ltrim(isnull(C.firstname,'')+' '+isnull(C.surname,'')) as [Contact],
	E.Company,
	[Address],
	E.vendornumber as [Policy Number]
from entitycontact C
LEFT JOIN entity E on E.entityid = C.entityid
LEFT JOIN (
SELECT DISTINCT
	entityID,
	ISNULL(Address1,'')
	+ISNULL(' '+ Address2,'')
	+ISNULL(' '+ Address3,'')
	+ISNULL(' '+ City,'')
	+ISNULL(' '+ Region,'')
	+ISNULL(' '+ Code,'')
	+ISNULL(' '+ Country,'') as [Address]
FROM EntityAddress 
Where IsDefault = 1 AND AddressType like '%Physical%')  EA ON EA.EntityID = E.EntityID
where (isnull(c.firstname,'')+' '+isnull(c.surname,'') like '%<%replace%>%') OR (isnull(E.Company,'') like '%<%replace%>%')
order by ltrim(isnull(c.firstname,'')+' '+isnull(c.surname,'')), e.company

","0","","1","LRA-FUSION","0","0","fusion"
"40340","cv_Inventory_Movement_Rpt_6months","","

DECLARE @StartDate as datetime
DECLARE @EndDate as datetime 
DECLARE @atMonth as int

SET @StartDate ='{StartDate}'

SET @atMonth = Month(@startDate)


SET @EndDate = '{EndDate}'


SELECT  NEWID()
    , StockCode
    , StockDescription
    
    ,SUM(ISNULL([Month 1],0)) as [Month 1]
    , SUM(ISNULL([Month 2],0)) as [Month 2]
    , SUM(ISNULL([Month 3],0)) as [Month 3]
    , SUM(ISNULL([Month 4],0)) as [Month 4]
    , SUM(ISNULL([Month 5],0)) as [Month 5]
    , SUM(ISNULL([Month 6],0)) as [Month 6]
    ,round((SUM(ISNULL([Month 1],0))+SUM(ISNULL([Month 2],0))+SUM(ISNULL([Month 3],0))+SUM(ISNULL([Month 4],0))+ SUM(ISNULL([Month 5],0))+ SUM(ISNULL([Month 6],0))) 
	/6,0) as [Average]
FROM 
	(
	SELECT 
  
    StockCode, StockDescription,
    ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -5 Then SUM(QTY) END,0) as [Month 1],
    ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -4 Then SUM(QTY) END,0) as [Month 2],
    ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -3 Then SUM(QTY) END,0) as [Month 3],
    ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -2 Then SUM(QTY) END,0) as [Month 4],
    ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -1 Then SUM(QTY) END,0) as [Month 5],
    ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth Then SUM(QTY) END,0) as [Month 6]
    FROM (

        SELECT A.StockCode, A.StockDescription, DateCompleted, QTY FROM Debtor_Detail DD
        LEFT JOIN (
            SELECT DocID, DateCompleted, DocType, DocStatus FROM Debtor_Master
        ) DM ON DM.DocID = DD.DocID
        LEFT JOIN (
            SELECT * FROM AccStock
        ) A ON A.StockID = DD.StockID
          {where} 
         
      --GROUP BY A.StockCode, A.StockDescription,DD.Qty
    ) X
    GROUP BY MONTH(DateCompleted)
  , StockCode, StockDescription
    )A
--)X 
GROUP BY StockCode, StockDescription

Union all

SELECT  NEWID()
    ,  'TOTAL : '
    ,null
    
    ,SUM(ISNULL([Month 1],0)) as [Month 1]
    , SUM(ISNULL([Month 2],0)) as [Month 2]
    , SUM(ISNULL([Month 3],0)) as [Month 3]
    , SUM(ISNULL([Month 4],0)) as [Month 4]
    , SUM(ISNULL([Month 5],0)) as [Month 5]
    , SUM(ISNULL([Month 6],0)) as [Month 6]
   ,Round((SUM(ISNULL([Month 1],0))+SUM(ISNULL([Month 2],0))+SUM(ISNULL([Month 3],0))+SUM(ISNULL([Month 4],0))+ SUM(ISNULL([Month 5],0))+ SUM(ISNULL([Month 6],0))) 
	/6,0) as [Avarage]
FROM (
SELECT 
   
    Sum(ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -5 Then QTY END,0)) as [Month 1],
    Sum(ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -4 Then QTY END,0)) as [Month 2],
    Sum(ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -3 Then QTY END,0)) as [Month 3],
    Sum(ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -2 Then QTY END,0)) as [Month 4],
    Sum(ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth -1 Then QTY END,0)) as [Month 5],
    Sum(ISNULL(CASE WHEN MONTH(DateCompleted) = @atMonth Then QTY END,0)) as [Month 6]
   
    FROM (

        SELECT DateCompleted, sum(QTY) as QTY FROM Debtor_Detail DD
        LEFT JOIN (
            SELECT DocID, DateCompleted, DocType, DocStatus FROM Debtor_Master
        ) DM ON DM.DocID = DD.DocID
        LEFT JOIN (
            SELECT * FROM AccStock
        ) A ON A.StockID = DD.StockID
         {where}
  GROUP BY Dm.DateCompleted
    ) X
    GROUP BY MONTH(DateCompleted)

    )A
--)X 
--GROUP BY StockCode, StockDescription
","0","","1","LRA-FUSION","0","0","fusion"
"40341","cv_Job_Stock_Adjust","","DECLARE @JobID as int
SET @JobID = {jobid}

DELETE FROM AccStockControl WHERE DocType ='Job' AND DocID = @JobID

INSERT INTO AccStockControl (StockId, DocID, DocType, LineID, AdjustDate, Qty, PurchasedBy, SoldBy, Ratio, UnitSellingPriceEx, DivisionID, containerID, ReportCategoryID, ProjectID)
--Components to be used up
SELECT JS.StockID, JS.ProjectID, 'Job', JS.LineID, P.DateCompleted, 
(-JS.Qty * isnull(JSc.Qty,1)) / STK.SoldByToPurchasedByRatio as [Qty],
STK.PurchasedBy, Stk.SoldBy, STK.SoldByToPurchasedByRatio, 
JS.PriceEx as [UnitSellingPriceEx],P.DivID, JS.ContainerID, JS.ReportCategoryID,
JS.ProjectID
FROM Job_Stock JS
LEFT JOIN (SELECT ProjectID, DateCompleted, IsComplete, DivID From Projects) P
ON JS.ProjectID  = P.ProjectID
LEFT JOIN (SELECT LineID, Qty FROM Job_Stock) JSc
ON JS.ComponentOfLineID = JSC.LineID
LEFT JOIN (SELECT StockID, PurchasedBy,SoldBy, SoldByToPurchasedByRatio FROM AccStock) STK
ON JS.StockID = STK.StockID
where JS.projectID = @JobID
AND  (isnull(JS.componentOfLineID,0) > 0 OR JS.LineID NOT IN (SELECT isnull(ComponentOfLineID,0) FROM Job_Stock) )
AND isnull(P.IsComplete,0) = 1

UNION ALL

--Manufactured items to be booked in for repair and dispatched later
SELECT JS.StockID, JS.ProjectID, 'Job', JS.LineID, P.DateAdded, 
JS.Qty  / STK.SoldByToPurchasedByRatio as [Qty],
STK.PurchasedBy, Stk.SoldBy, STK.SoldByToPurchasedByRatio, 
null as [UnitSellingPriceEx],P.DivID, JS.ContainerID, JS.ReportCategoryID,
JS.ProjectID
FROM Job_Stock JS
LEFT JOIN (SELECT ProjectID, DateCompleted, DateAdded ,IsComplete, DivID From Projects) P
ON JS.ProjectID  = P.ProjectID
LEFT JOIN (SELECT LineID, Qty FROM Job_Stock) JSc
ON JS.ComponentOfLineID = JSC.LineID
LEFT JOIN (SELECT StockID, PurchasedBy,SoldBy, SoldByToPurchasedByRatio FROM AccStock) STK
ON JS.StockID = STK.StockID
where JS.projectID = @JobID
AND isnull(componentOfLineID,0) = 0 
AND isnull(JS.LineID,0) IN (SELECT ComponentOfLineID FROM Job_Stock)
AND isnull(P.IsComplete,0) = 1","0","","1","LRA-FUSION","0","0","fusion"
"40342","cv_Acc_Check_Un-Allocated_Manufacturing","","DECLARE @docid as integer
SET @DocID = {docid}

SELECT sum(DD.Qty) - isnull(Scanned,0) as [Un-Allocated], DD.StockDescription 
FROM AccMANUFACTURE_DETAIL DD
LEFT JOIN AccMANUFACTURE DM ON DD.DocID =DM.DocID 
LEFT JOIN AccStock STK ON DD.StockID = STK.StockID
LEFT JOIN (SELECT StockID, DocID, DocType, abs(sum(qty * ratio)) as [Scanned] FROM AccStockControl WHERE DocID = @DocID GROUP BY StockID, DocID, DocType ) SC
ON DD.StockID = SC.StockID AND 'Manufacturing' = Sc.DocType AND DD.DocID = SC.DocID 
Where DD.docID = @DocID
AND isnull(Stk.RequiresScanning,0) = 1
Group by SC.Scanned, DD.StockDescription
HAVING sum(DD.Qty) > isnull(Scanned,0) 


UNION ALL

SELECT sum(DD.Qty) - isnull(Scanned,0) as [Un-Allocated], Stk.StockDescription 
FROM AccMANUFACTURE_OUTPUT DD
LEFT JOIN AccMANUFACTURE DM ON DD.DocID =DM.DocID 
LEFT JOIN AccStock STK ON DD.StockID = STK.StockID
LEFT JOIN (SELECT StockID, DocID, DocType, abs(sum(qty * ratio)) as [Scanned] FROM AccStockControl WHERE DocID = @DocID GROUP BY StockID, DocID, DocType ) SC
ON DD.StockID = SC.StockID AND 'Manufacturing' = Sc.DocType AND DD.DocID = SC.DocID 
Where DD.docID = @DocID
AND isnull(Stk.RequiresScanning,0) = 1
Group by SC.Scanned, Stk.StockDescription
HAVING sum(DD.Qty) > isnull(Scanned,0) ","0","","1","LRA-FUSION","0","0","fusion"
"40343","cv_Acc_Scan_Manufacturing","","Declare @DocID as integer
Set @DocID = {docid}

--Inputs
SELECT convert(varchar,DD.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, Sum(Qty) - isnull(SC.[QtyScanned],0) as [Qty], 'NOT SCANNED' as [S/N] 
FROM AccMANUFACTURE_DETAIL DD
LEFT JOIN (SELECT DocID FROM AccMANUFACTURE) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON DD.StockID = STK.StockID
LEFT JOIN (SELECT DocID, DocType, StockID,  sum(abs(Qty * Ratio)) as [QtyScanned] FROM  AccStockControl where DocID = @DocID Group by DocID, DocType, StockID) SC
ON DD.DocID = SC.DocID  AND 'Manufacturing' = SC.DocType
WHERE DD.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1
GROUP BY STK.StockDescription,SC.[QtyScanned], DD.StockID
HAVING Sum(Qty) - isnull(SC.[QtyScanned],0) > 0

UNION ALL

--Outputs
SELECT convert(varchar,DD.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, Sum(Qty) - isnull(SC.[QtyScanned],0) as [Qty], 'NOT SCANNED' as [S/N] 
FROM AccMANUFACTURE_OUTPUT DD
LEFT JOIN (SELECT DocID FROM AccMANUFACTURE) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON DD.StockID = STK.StockID
LEFT JOIN (SELECT DocID, DocType, StockID,  sum(abs(Qty * Ratio)) as [QtyScanned] FROM  AccStockControl where DocID = @DocID Group by DocID, DocType, StockID) SC
ON DD.DocID = SC.DocID AND DD.StockID = SC.StockID   AND 'Manufacturing' = SC.DocType
WHERE DD.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1
GROUP BY STK.StockDescription,SC.[QtyScanned], DD.StockID
HAVING Sum(Qty) - isnull(SC.[QtyScanned],0) > 0

UNION ALL

SELECT convert(varchar,STK.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, [QtyScanned], SC.SerialNumber
FROM AccMANUFACTURE DM
LEFT JOIN (SELECT  DocID, DocType, StockID, SerialNumber,abs(Qty * Ratio) as [QtyScanned]  FROM AccStockControl) SC
ON DM.DocID = SC.DocID  AND 'Manufacturing'  = SC.DocType
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON SC.StockID = STK.StockID
WHERE DM.DocID = @DocID
AND isnull(STK.RequiresScanning,0) = 1


","0","","1","LRA-FUSION","0","0","fusion"
"40344","cv_Acc_Scan_Get_Line_Creditor","","SELECT Top 1 DD.LineID FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType FROM CREDITOR_MASTER) DM
ON DD.docID = DM.DocID
LEFT JOIN (SELECT DocID, DocType, LineID, sum(abs(Qty * Ratio)) as [QtyScanned], Ratio FROM AccStockControl Group By LineID, DocID, DocType, Ratio) SC
ON DD.LineID = SC.LineID  AND DD.DocID = SC.DocID AND DM.DocType = SC.DocType
where DD.docid = {docid}
AND DD.stockid =  {stockid}
AND DD.Qty * isnull(Ratio,1) - isnull([QtyScanned],0) > 0","0","","1","LRA-FUSION","0","0","fusion"
"40345","cv_Acc_Scan_Get_Line_Manuf","","SELECT Top 1 DD.LineID FROM 
(
SELECT LineID, DocID, StockID,Qty FROM AccMANUFACTURE_DETAIL 
UNION ALL
SELECT OutputID, DocID, StockID,Qty FROM AccMANUFACTURE_OUTPUT 
)DD
LEFT JOIN (SELECT DocID FROM AccMANUFACTURE) DM
ON DD.docID = DM.DocID
LEFT JOIN (SELECT DocID, DocType, LineID, sum(abs(Qty * Ratio)) as [QtyScanned] FROM AccStockControl Group By LineID, DocID, DocType) SC
ON DD.LineID = SC.LineID  AND DD.DocID = SC.DocID AND 'Manufacturing' = SC.DocType
where DD.docid = {docid}
AND DD.stockid =  {stockid}
AND DD.Qty - isnull([QtyScanned],0) > 0","0","","1","LRA-FUSION","0","0","fusion"
"40346","cv_Job_Tickets","","SELECT 
	ID,
	[Job No.],
	[Sales Order Number],
	[Holding Company],
	Company,
	[Job Name],
	[Date Created],
	[Date Released],
	[Date Manufactured],
	[Due Date],
	[No. of Appointments],
	[Client Order Number],
	[Status], 
	[Total Ex.],
	[Total Incl.]
FROM (
	select distinct 
		CONVERT(VARCHAR, projects.projectid) + 'P' as ID
		,isnull(ProjectNum,projects.projectid) as [Job No.]
		,[Sales Order Number]
		,e.company as ""Holding Company""
		,ea.company as ""Company""
		,projects.projectname as ""Job Name""
		,/*p.projectstate*/ ls.value as [State]
		,l.value as [Job Type]
		--,convert(varchar,PDS.[Start Date], 111) as [Start Date]
		--,convert(varchar,PDE.[End Date],111) as [End Date]
		,convert(varchar,projects.dateadded,111) as ""Date Created""
		,CONVERT(VARCHAR,projects.ReleaseDate, 111) as [Date Released]
		,CONVERT(VARCHAR,projects.DateManufactured, 111) as [Date Manufactured]
		,CONVERT(VARCHAR,projects.CustomerDueDate, 111) as [Due Date]
		,isnull( [NoAppts], 0 ) as [No. of Appointments]
		,ClientPO as [Client Order Number]
		,CASE ISNULL(isComplete,0) WHEN 0 Then 'Open' ELSE 
		'Complete' END as [Status],
		CONVERT(VARCHAR, CAST(SUM(ISNULL(JS.PriceEx,0) * ISNULL(JS.QTY, 1)) as MONEY),1) as [Total Ex.],
		CONVERT(VARCHAR, CAST(SUM((ISNULL(js.PriceEx,0) * ISNULL(JS.QTY, 1)) * ((ISNULL(js.Tax,1) / 100) + 1)) as MONEY),1) as [Total Incl.],
		1 as [Rank]
	from projects
	left join entitycontact on entitycontact.entitycontactid = projects.entitycontactid
	left join projectstate p on p.projectstateid = projects.projectstateid
	left join entity e on e.entityid = projects.entityid
	LEFT JOIN Entity EA ON EA.EntityID = Projects.AddEntityID
	left join modules m on m.projectid = projects.projectid
	left join timesheet t on t.moduleid = m.moduleid
	Left join lookup l on l.lookupid = projects.ProjectTypeID
	left join (SELECT ProjectID, Min(ProjDate) as [Start Date] FROM ProjectDates group by ProjectID) PDS
	ON Projects.ProjectID  = PDS.ProjectID
	left join (SELECT ProjectID, Max(ProjDate) as [End Date] FROM ProjectDates group by ProjectID) PDE
	ON Projects.ProjectID  = PDE.ProjectID
	Left Join lookup ls on ls.lookupid = projects.ProjectStateID
	LEFT JOIN (SELECT Count(AppointmentID) as [NoAppts],ProjectID FROM Appointment where ProjectID is not null Group by ProjectID) A 
	ON Projects.ProjectID = A.ProjectID
	left join job_stock js on js.ProjectID = Projects.ProjectID --AND js.[Rank] = 1
	left join jobtechnician jt on jt.ProjectID = Projects.ProjectID
	LEFT JOIN (SELECT DocID, DocNo as [Sales Order Number] FROM Debtor_Master WHERE DocType LIKE 'Sales Order') DM ON DM.DocID = projects.FromDocID
	{where}
	GROUP BY Projects.ProjectID, projects.ProjectNum, [Sales Order Number], E.Company, EA.Company, Projects.ProjectName, l.value, ls.value,projects.dateadded,
		projects.DateManufactured,projects.CustomerDueDate, [NoAppts], ClientPO, isComplete, projects.ReleaseDate
		
	UNION ALL

	SELECT '0X', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 2

	UNION ALL

	select distinct 
		'1X'
		,NULL
		,NULL
		,NULL
		,NULL
		,NULL
		,NULL
		,NULL
		,NULL
		,NULL
		,NULL
		,NULL
		,NULL
		,NULL
		,'TOTAL:',
		CONVERT(VARCHAR, CAST(SUM(ISNULL(JS.PriceEx,0) * ISNULL(JS.QTY, 1)) as MONEY),1) as [Total Ex.],
		CONVERT(VARCHAR, CAST(SUM((ISNULL(js.PriceEx,0) * ISNULL(JS.QTY, 1)) * ((ISNULL(js.Tax,1) / 100) + 1)) as MONEY),1) as [Total Incl.],
		3 as [Rank]
	from projects
	left join entitycontact on entitycontact.entitycontactid = projects.entitycontactid
	left join projectstate p on p.projectstateid = projects.projectstateid
	left join entity e on e.entityid = projects.entityid
	LEFT JOIN Entity EA ON EA.EntityID = Projects.AddEntityID
	left join modules m on m.projectid = projects.projectid
	left join timesheet t on t.moduleid = m.moduleid
	Left join lookup l on l.lookupid = projects.ProjectTypeID
	left join (SELECT ProjectID, Min(ProjDate) as [Start Date] FROM ProjectDates group by ProjectID) PDS
	ON Projects.ProjectID  = PDS.ProjectID
	left join (SELECT ProjectID, Max(ProjDate) as [End Date] FROM ProjectDates group by ProjectID) PDE
	ON Projects.ProjectID  = PDE.ProjectID
	Left Join lookup ls on ls.lookupid = projects.ProjectStateID
	LEFT JOIN (SELECT Count(AppointmentID) as [NoAppts],ProjectID FROM Appointment where ProjectID is not null Group by ProjectID) A 
	ON Projects.ProjectID = A.ProjectID
	left join job_stock js on js.ProjectID = Projects.ProjectID --AND js.[Rank] = 1
	left join jobtechnician jt on jt.ProjectID = Projects.ProjectID
	LEFT JOIN (SELECT DocID, DocNo as [Sales Order Number] FROM Debtor_Master WHERE DocType LIKE 'Sales Order') DM ON DM.DocID = projects.FromDocID
	{where}
) Z
ORDER BY [Rank], [Job Name]
","0","","1","LRA-FUSION","0","0","fusion"
"40347","cv_entityContractReport_Header","","select 
	ISNULL(E.entityID,'') AS [<companyID>],
	ISNULL(E.LegalName,'') AS [<LegalName>],
	ISNULL(E.Company,'') AS [<TradingAs>],
	ISNULL(E.VendorNumber,'') AS [<VendorNumber>],
	ISNULL(E.Refno,'') AS [<ReferenceNumber>],
	ISNULL(E.Email,'') AS [<email>],
	ISNULL(E.Switchboard,'') AS [<switchboard>],
	ISNULL(E.Fax,'') AS [<fax>],
	ISNULL(BC.Value,'') AS [<businesscat>],
	ISNULL(T.Value,'') AS [<type>],
	ISNULL(ST.Value,'') AS [<subtype>],
	ISNULL(ABC.Value,'') AS [<abcfield>],
	ISNULL(EC.Value,'') AS [<entitycategory>],
	ISNULL(I.Value,'') AS [<industry>],
	ISNULL(SC.Username,'') AS [<salesrep>],
	ISNULL(HC.Company,'') AS [<holdingcompany>],
ISNULL(E.comments,'') AS [<comments>],
	ISNULL(E.URL,'') AS [<website>],
	ISNULL(S.Value,'') AS [<source>],
	ISNULL(E.ClientRating,'') AS [<calculatedrating>],
	ISNULL(E.Manualrating,'') AS [<manualrating>],
	dbo.entityDivisonList(E.EntityID) AS [<div>],
	dbo.entityGroupList(E.EntityID) AS [<group>],
	--Physical
	(SELECT TOP 1 ISNULL(EA.Address1,'') FROM EntityAddress EA WHERE EA.EntityID = E.EntityID AND AddressType like 'Physical%' ) AS [<address1>],
	(SELECT TOP 1 ISNULL(EA.Address2,'') FROM EntityAddress EA WHERE EA.EntityID = E.EntityID AND AddressType like 'Physical%') AS [<address2>],
	(SELECT TOP 1 ISNULL(EA.Address3,'') FROM EntityAddress EA WHERE EA.EntityID = E.EntityID AND AddressType like 'Physical%') AS [<address3>],
	(SELECT TOP 1 ISNULL(EA.City,'') FROM EntityAddress EA WHERE EA.EntityID = E.EntityID AND AddressType like 'Physical%') AS [<address4>],
	(SELECT TOP 1 ISNULL(EA.Region,'') FROM EntityAddress EA WHERE EA.EntityID = E.EntityID AND AddressType like 'Physical%') AS [<address5>],
	--Physical
	(SELECT TOP 1 ISNULL(EA.Address1,'') FROM EntityAddress EA WHERE EA.EntityID = E.EntityID AND AddressType like 'Postal%' ) AS [<paddress1>],
	(SELECT TOP 1 ISNULL(EA.Address2,'') FROM EntityAddress EA WHERE EA.EntityID = E.EntityID AND AddressType like 'Postal%') AS [<paddress2>],
	(SELECT TOP 1 ISNULL(EA.Address3,'') FROM EntityAddress EA WHERE EA.EntityID = E.EntityID AND AddressType like 'Postal%') AS [<paddress3>],
	(SELECT TOP 1 ISNULL(EA.City,'') FROM EntityAddress EA WHERE EA.EntityID = E.EntityID AND AddressType like 'Postal%') AS [<paddress4>],
	(SELECT TOP 1 ISNULL(EA.Region,'') FROM EntityAddress EA WHERE EA.EntityID = E.EntityID AND AddressType like 'Postal%') AS [<paddress5>]
FROM Entity E
LEFT JOIN (SELECT E.EntityID,E.Company FROM Entity E) HC ON HC.EntityID = E.AlternateCompanyID
--BusCatID
LEFT JOIN (SELECT LookupID,Value FROM Lookup) BC ON  BC.LookupID = E.BusCatID
--EntityTypeID
LEFT JOIN (SELECT LookupID,Value FROM Lookup) T ON  T.LookupID = E.EntityTypeID
--entitysubtypeid
LEFT JOIN (Select LinkLookupID,Value from linklookup) ST ON  ST.LinkLookupID = E.entitysubtypeid
--ABCCatID
LEFT JOIN (SELECT LookupID,Value FROM Lookup) ABC ON  BC.LookupID = E.ABCCatID
--EntityCategoryID
LEFT JOIN (SELECT LookupID,Value FROM Lookup) EC ON  EC.LookupID = E.EntityCategoryID
--IndustryID
LEFT JOIN (SELECT LookupID,Value FROM Lookup) I ON  I.LookupID = E.IndustryID
--SourceID
LEFT JOIN (SELECT LookupID,Value FROM Lookup) S ON  S.LookupID = E.SourceID
--SourceID
LEFT JOIN (SELECT Username,StaffID FROM Users) SC ON  SC.StaffID = E.SalesConsID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40348","cv_entityContractReport_Contacts","","{select}   

(
select

    ec.EntityContactID,
	'' as [ ],
    SC.SalesConsultant,
    c.Category,

    AccT.AccType,
    D.Division, 
    t.Type as [Type],
    STB.[Sub Type] as [Sub Type], 
    ec.EntityContactID as [Contact ID],
    AlternateContactID, 
    e.Company, 
	EC.JobTitle as [Job Title], 
    ec.Title ,
    ec.Initials, 
    ec.Firstname, 
    ec.Surname, 
    ec.Phone1, 
    ec.Phone2, 
    [Addition 5],
    [Addition 6],
    [Addition 7],
    [Addition 8] ,
    ec.Phone3, 
    ec.HomePhone, 
    ec.Cell, 
    ec.Fax, 
    ec.Email, 
    Birthdate,
    Ext,
    lbdep.Department as [Department],
     lbind.[Industry] as [Industry],
    Spouse,
    AsstTitle,
    AsstName,
    AsstPhone,
    AsstExt,
    eapy.Address1,
    eapy.Address2,
    eapy.Address3,
    eapy.City,
    eapy.State,
    eapy.Code,
    eapy.Region,
    eapy.Country,
    SendEmail,
    SendSMS,
    ec.AccountNum, 
    [Business Category],
    [ABC],
    right('0'+datename(dd,ec.dateadded),2)+'/'+right('0'+cast(datepart(m,ec.dateadded) as nvarchar), 2)+'/'+datename(yyyy,ec.dateadded) as [Created Date], 
    u.username as [Created by],
    EC.Additional1 as [Addition 1],
    EC.Additional2 as [Addition 2],
    EC.Additional3 as [Addition 3],
    EC.Additional4 as [Addition 4], 
    right('0'+datename(dd,ec.datemodified),2)+'/'+right('0'+cast(datepart(m,ec.datemodified) as nvarchar), 2)+'/'+datename(yyyy,ec.datemodified) as [Last Modified Date],
    OutlookID, uu.username as [Modified By],
    (SELECT TOP 1 CONVERT(VARCHAR, CAST(CallDate as DATETIME),103) FROM CallLog WHERE ISNULL(AdvCall,0) = 1 AND EntityContactID = ec.EntityContactID ORDER BY CallDate DESC) as [Last Call],
    (SELECT TOP 1 CONVERT(VARCHAR, CAST([Date] as DATETIME), 103) FROM Appointment a 
    LEFT JOIN AppointmentContacts ac on ac.apptID = a.AppointmentID
    WHERE ac.EntityContactID = ec.EntityContactID ORDER BY [Date] DESC) as [Last Appointment]
from entitycontact as ec
left join (select lookupid as AccTypeID, value as AccType from lookup where class like 'accounttype') AccT
 on ec.accounttypeid = AccT.AccTypeID
left join (Select lookupid, value from lookup) ls1 on ls1.lookupid = EC.SalesConsID
left join entity e
 on e.entityid = ec.entityid 
left join entitycontactgroup g 
 on ec.entitycontactid = g.entitycontactid 
left join (select lookupid as groupid, value as [Group] from lookup where class like 'group') Gr
 on g.groupid = Gr.groupid 
left join( select staffid as SalesConsid, FirstName + ' ' + IsNull(Surname,'') As SalesConsultant from staff) SC
on ec.salesconsid = SC.SalesConsID
left join (select lookupid as typeid, value as type from lookup where class like 'type') t
 on ec.entitytypeid = t.typeid 
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c
 on ec.entitycategoryid = c.categoryid 
left join (select lookupid as SourceTypeID, value as SourceType from lookup where class like 'Source Type') s
 on ec.ContTypeID = s.SourceTypeID 
left join (select lookupid as InterestID, value as Interest from lookup where class like 'Interest') i
 on ec.InterestID = i.InterestID 
 
left join (select lookupid as ABCID, value as ABC from lookup where class like 'ABC') lABC
 on ec.abccatid = lABC.ABCID  
 
left join (select lookupid as PositionID, value as Position from lookup where class like 'Position') p
 on ec.PositionID = p.PositionID 
left join users u
 on ec.entitycontactcreatorid = u.userid 
left join users uu on ec.EntityContactUpdaterID = uu.userid 
left join entitycontactdivision ed
 on ed.entitycontactid = ec.entitycontactid 
left join (select lookupid as DivisionID, value as Division from lookup where class like 'Divisions') D
 on D.DivisionID = (SELECT TOP 1 DivisionID FROM EntityContactDivision WHERE EntityContactID = EC.EntityContactID)
left join entityaddress eapo
 on eapo.entityaddressid = ec.postaladdrid 
left join entityaddress eapy
 on eapy.entityaddressid = ec.physicaladdrid
left join EntityContactTypes ect
 on ec.entitycontactid = ect.entitycontactid
left join entityContactMOComm ecmc
 on ec.entitycontactid = ecmc.entitycontactid
left join (select lookupid,value as [Business Category] from lookup ) lbcat
on lbcat.lookupid = ec.buscatid
left join (select lookupid,value as [Department] from lookup ) lbdep
on lbdep.lookupid = ec.DepartmentID
left join (select lookupid,value as [Industry] from lookup ) lbind
on lbind.lookupid = ec.IndustryID
left join (select LinkLookupID,value as [Sub Type] from linklookup ) STB
on STB.LinkLookupID = ec.entitysubtypeid
  left join (select lookupid,value as [Addition 5] from lookup ) lbAD1
on lbAD1.lookupid = ec.AdditionalID5
left join (select lookupid,value as [Addition 6] from lookup ) lbAD2
on lbAD2.lookupid = ec.AdditionalID6
left join (select lookupid,value as [Addition 7] from lookup ) lbAD3
on lbAD3.lookupid = ec.AdditionalID7
left join (select lookupid,value as [Addition 8] from lookup ) lbAD4
on lbAD4.lookupid = ec.AdditionalID8
{where} )X","0","","1","LRA-FUSION","0","0","fusion"
"40349","cv_entityContractReport_notes","","{select}   

(
SELECT 
	T.Value AS [Note Type], 
	N.Date AS [Date Added],
	UC.Username as [Created By],
	UM.Username as [Modified By],
	N.[Subject],
	N.[Description],
	N.Notes
FROM Notes N
--NoteTypeID
LEFT JOIN (SELECT LookupID,Value FROM Lookup) T ON  T.LookupID = N.NoteTypeID
LEFT JOIN (SELECT  U.UserID, U.Username FROM Users U) UC ON UC.UserID = N.createbyid
LEFT JOIN (SELECT  U.UserID, U.Username FROM Users U) UM ON UM.UserID = N.ModifiedByID
{where}
) X","0","","1","LRA-FUSION","0","0","fusion"
"40350","cv_entityContractReport_Document","","{select}   

(

SELECT 
T.Value as [Doc Type],
UC.Username,
ED.DateLinked as [Date Added],
ED.[Description],
ED.Keywords,
ED.[Path] as [Location]
FROM EntityDocument ED
--DocTypeID
LEFT JOIN (SELECT LookupID,Value FROM Lookup) T ON  T.LookupID = ED.DocTypeID
LEFT JOIN (SELECT  U.UserID, U.Username,U.StaffID FROM Users U) UC ON UC.StaffID = ED.staffid
{where} )X","0","","1","LRA-FUSION","0","0","fusion"
"40351","cv_entityContractReport_act","","{select}   

(

SELECT 
	LD.Value AS [Division] ,
	[Type],
	SubType AS [Sub Type], 
	[Description], 
	[Subject],
	CASE WHEN A.AssignedTo < 0 THEN CONVERT(VARCHAR,abs(A.AssignedTo)) + ' Assignees' ELSE U.Assignee END AS [Assignee],
	[Status], 
	[Created By]
FROM 
(
--Actions
SELECT 
	CONVERT(VARCHAR, ActivityID) + '##Action' AS [key] , 
	AddedByID AS [CreatedBy], 
	Entityid, 
	Entitycontactid, 
	'Action' AS [Type],
	L.Value AS [SubType],
	U.UserID AS [AssignedTo],
	Comments AS [Description],
	'' AS [Subject], 
	DateAdded AS [DateCreated], 
	DateAction AS [Date],
	LO.Value AS [Status],DivID, U.Firstname + ' ' + U.Surname AS [Created By], AssessmentID
FROM Activity A
LEFT JOIN Lookup L ON A.ActivityTypeID = L.LookupID
LEFT JOIN Lookup LO ON A.ActivityOutcomeID = LO.LookupID
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = A.addedbyid

UNION ALL

--Calls
SELECT 
	CONVERT(VARCHAR, CallLogID) + '##' + case isnull(AdvCall,0) when 0 THEN 'Call' ELSE 'AdvancedCall' END AS [key],
	CallCreatorID, 
	EntityID, 
	CL.EntityContactID,
	case isnull(AdvCall,0) when 0 THEN 'Call' ELSE 'Advanced Call' END, 
	L.Value,
	U.Userid, 
	CallDescription, 
	callsubject AS [Subject],
	null, 
	CallDate, 
	LO.Value,
	DivID, U.firstname + ' ' + u.surname AS [Created BY], AssessmentID
FROM CallLog CL
LEFT JOIN (SELECT EntityContactID, EntityID FROM EntityContact) EC ON  CL.EntityContactID = EC.entityContactID
LEFT JOIN Lookup L ON CL.CallTypeID = L.LookupID
LEFT JOIN Lookup LO ON CL.BusResID = LO.LookupID
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = CL.callcreatorid

UNION ALL

--Appointments
SELECT 
    CONVERT(VARCHAR, AppointmentID) + '##Appointment' AS [key], 
    CreateUserID, 
    Entityid, 
    apc.EntityContactID, 
    'Appointment',
    L.Value,
    ForUserID,
    notes, 
    Subject , 
    null, 
    [Date], 
    case when [Date] < getdate() THEN 'Passed' ELSE CONVERT(VARCHAR,datediff(d,  GetDate(),[Date])) + ' day(s) to go'  end,
    U.DefaultDivisionID, UN.firstname + ' ' + un.surname AS [Created By], AssessmentID
FROM Appointment A
LEFT JOIN Lookup L ON A.ClientRelID = L.LookupID
LEFT JOIN (SELECT UserID, DefaultDivisionID FROM Users) U ON A.ForuserID = U.UserID
LEFT JOIN (Select Entitycontactid,apptid from appointmentcontacts) apc on apc.apptid = a.appointmentid
LEFT JOIN (Select userid, firstname, surname from users) UN on UN.userid = A.createuserid

UNION ALL

--Tasks
SELECT 
	CONVERT(VARCHAR, T.TaskReminderID) + '##Task' AS [key], 
	CreateByID, 
	Entityid, 
	T.Entitycontactid, 
	'Task', 
	'',
	isnull(DeveloperID, -1 * NoOfAssignees), --Uses negatives to denote multiple assignees
	TaskName, 
	'' ,
	null, 
	TaskDate, 
	CONVERT(VARCHAR,isnull(percentageid,0)) + '% completed' ,
	DivID, u.firstname + ' ' + u.surname AS [Created By], AssessmentID
FROM TaskReminder T
LEFT JOIN (SELECT EntityContactID, EntityID FROM EntityContact) EC ON  T.EntityContactID = EC.entityContactID
LEFT JOIN (SELECT TaskReminderID, count(DeveloperID) AS [NoOfAssignees] FROM DeveloperTasks Group By TaskReminderID having  count(DeveloperID) > 1) DT1
ON T.Taskreminderid= DT1.TaskReminderID
LEFT JOIN (SELECT TaskReminderID, DeveloperID  FROM DeveloperTasks ) DT2
ON T.Taskreminderid= DT2.TaskReminderID and DT1.TaskReminderID is null
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = T.createbyid


UNION ALL

--Sub Tasks
SELECT 
	CONVERT(VARCHAR, ActionID) + '##SubTask'  AS [key], 
	CreateByID, 
	Entityid, 
	T.Entitycontactid, 
	'Sub Task', 
	l.value,
	A.AssignedTo,
	comments, 
	null, 
	null,
	NextActionDate, 
	CONVERT(VARCHAR,isnull(A.percentageid,0)) + '% completed' ,
	DivID,'' AS [Created By], AssessmentID
FROM Actions A
LEFT JOIN TaskReminder T ON A.TaskReminderID = T.TaskReminderID
LEFT JOIN (SELECT EntityContactID, EntityID FROM EntityContact) EC ON  T.EntityContactID = EC.entityContactID
LEFT JOIN Lookup L ON A.bittypeID = l.Lookupid
--LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = CL.callcreatorid


UNION ALL 

--Tickets
SELECT 
	CONVERT(VARCHAR, T.TicketID) + '##Ticket'  AS [key],  
	LogByID, 
	Entityid, 
	EntitycontactID, 
	'Ticket',
	TicketType,
	U.UserID, 
	tMessage,
	'',
	DateCaptured,
	DateCaptured,
	TicketStatus,
	DivID, u.firstname + ' ' + u.surname AS [Created By], AssessmentID
FROM Tickets T
LEFT JOIN (SELECT  max(entitycontactid) AS [EntitycontactID], TicketID FROM TicketContacts Group by Ticketid) TC
ON T.TicketID = TC.TicketID
LEFT JOIN (Select userid, firstname, surname from users) U on U.userid = T.logbyid
left join (SELECT LookupID, Value AS TicketStatus FROM Lookup) L ON L.LookupID = T.tStatus

UNION ALL

--Jobs
SELECT 
	CONVERT(VARCHAR, P.ProjectID) + '##Job'  AS [key] , 
	ProjectManagerID, 
	Entityid, 
	EntitycontactID, 
	'Job',
	l.value, 
	U.UserID,
	ProjectName, 
	projectnotes,
	dateAdded, 
	DateAdded, 
	LS.Value, 
	P.DivID, '' AS [Created By], AssessmentID
FROM Projects P
Left JOIN lookup L ON P.ProjectTypeID = L.LookupID
LEFT JOIN (SELECT UserID, StaffID FROM Users) U ON P.TechnicianID = U.StaffID
LEFT JOIN Lookup LS ON P.projectstateid = LS.LookupID
LEFT JOIN (SELECT UserID, DefaultDivisionID FROM Users) UD ON P.ProjectManagerID = UD.UserID


Where isnull(IsJob,0) = 1


)A
LEFT JOIN Lookup LD ON A.DivID = LD.LookupID
LEFT JOIN (SELECT UseriD, isnull(Firstname, '') + ' ' + isnull(surname,'') AS [Assignee] From Users ) U ON A.AssignedTo = U.UserID
{where} )X","0","","1","LRA-FUSION","0","0","fusion"
"40352","cv_entityContractReport_UD","","{select}   

(
SELECT 
	T.Value AS [Type],
	ST.Value AS [Sub Type],
	CF.FieldDescription as [Field],
	CFV.Value as [Value]
FROM CustomFieldForms CFF
LEFT JOIN CustomFields  CF ON CF.FormName = CFF.formID
LEFT JOIN CustomFieldValues CFV ON CFV.CustomFieldID = CF.CustomFieldID
--EntityTypeID
LEFT JOIN (SELECT LookupID,Value FROM Lookup) T ON  T.LookupID = CF.GroupID
--entitysubtypeid
LEFT JOIN (SELECT LinkLookupID,Value FROM LinkLookup) ST ON  ST.LinkLookupID = CF.SubGroupID
WHERE CFF.formName = 'frmEntityDetails' {where} ) X
","0","","1","LRA-FUSION","0","0","fusion"
"40353","CV_DirectoryHolding_Contacts","","select ec.entitycontactid, isnull(firstname,'') + ' ' + isnull(surname,'') as [contact],
 isnull(ac.EntityContactID,0) as [Assigned]
from entitycontact ec
left join DirectoryHoldingContact ac
on ac.entitycontactid = ec.entitycontactid and ac.DirectoryID = <%apptid%>
where ec.entityID = <%eid%> ","0","","1","LRA-FUSION","0","0","fusion"
"40354","CV_UDF",""," select cfv.customfieldvalueid,cfv.customfieldvalueid as [ID],L.Value as [Group],LL.Value as [Sub group],cf.FieldName,cfv.Value 
 from customfieldvalues cfv inner join  customfields cf  on  cf.CustomFieldID = cfv.CustomFieldID 
 and customform = (select top 1 formid from customfieldforms where formname ={Form}) 
 and cfv.EntityID ={EntityID}
 Left Join LookUp L on LookupID=cf.GroupID  Left Join LinkLookup LL on LL.linklookupID=cf.SubGroupID","0","","1","LRA-FUSION","0","0","fusion"
"40355","CV_Directory_Branch","","select E.EntityID,Company ,
isnull(ac.EntityID,0) as [Assigned]
from entity E
left join DirectoryBranch ac
on ac.entityid = e.entityid and ac.DirectoryID = <%apptid%>
where e.AlternateCompanyID = <%eid%> ","0","","1","LRA-FUSION","0","0","fusion"
"40356","CV_Directory_BranchMan","","Select 
DB.[DirectoryBranchID],
DB.[DirectoryBranchID],
isnull(E.Company,'')as Company,
isnull(DB.PhysicalAdress,'') as [Physical Address], 
isnull(DB.Poastaladdress,'') as [Postal Address],   
isnull(DB.Switchboard,'') as Telephone, 
isnull(DB.Fax,'') as [Fax], 
isnull(DB.Email,'') as [Email],
isnull(DB.Website,'') as Website,
isnull(Ec.FirstName,'') + ' ' + isnull(Ec.Surname,'') as [Contact 1],
isnull(DB.Title1,'') as [Title 1],
isnull(DB.Mobile1,'') as [Mobile 1],    
isnull(DB.Email1,'')as [Email 1],
isnull(EA.FirstName,'') + ' ' + isnull(EA.Surname,'') as [Contact 2],
isnull(DB.Title2,'') as [Title 2],  
isnull(DB.Mobile2,'')as [Mobile 2],
isnull(DB.Email2,'') as [Email 2]
From DirectoryBranch DB
Left Join Entity E on E.EntityID = DB.EntityID
Left Join EntityContact EC on EC.EntityContactID=DB.EntityContact1
Left Join EntityContact EA on EA.EntityContactID=DB.EntityContact2
where DirectoryID={where}","0","","1","LRA-FUSION","0","0","fusion"
"40357","CV_Directory_Brand","","SELECT [DirectoryBrandID]
      ,[Brand]
      ,[Products]
  FROM [DirectoryBrand]
  where DirectoryID ={Where}","0","","1","LRA-FUSION","0","0","fusion"
"40358","cv_ClientAnniversaries",""," 
DECLARE @InNextDays INT
SET @InNextDays = {added}

Select entitycontactid, 'Anniversary' as [Type], convert(varchar, AnniversaryDate, 103) as [Date], isnull(firstname,'') + ' ' + isnull(surname,'') as [Contact Name], e.Company as [Company]
From EntityContact ec
Left Join entity e on e.entityid = ec.entityid
WHERE DATEADD( Year, DATEPART( Year, GETDATE()) - DATEPART( Year, AnniversaryDate), AnniversaryDate)
      BETWEEN  GETDATE() AND (GETDATE() + @InNextDays)","0","","1","LRA-FUSION","0","0","fusion"
"40359","CV_Directory_PrintOut","","Select 
 [Main] as [   ]

 from
 (
select '<b></b>'+isnull(E.Company,'#') as [Main],DirectoryID, 1 as [Rank],'0' as BrandNo, 1 as [Ranks] from Directory  D Left Join Entity E on E.EntityID=D.EntityID
union all
Select case when isnull(Poastaladdress,'#')=' ' then '#' else isnull(Poastaladdress,'#') end as [Main],DirectoryID,2 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all	
Select case when  isnull(PhysicalAdress,'#')=' ' then '#' else isnull(PhysicalAdress,'#') end as [Main],DirectoryID,3 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all
select 'Contact 1:'+ Char(9) + Char(9) + case when  isnull(isnull(EC.FirstName,'')+' '+ isnull(EC.Surname,''),'#')=' ' then '#' else isnull(isnull(EC.FirstName,'')+' '+ isnull(EC.Surname,''),'') end  as [Main],DirectoryID,4 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory D Left Join EntityContact EC on EC.EntityContactID=D.EntityContact1
union all
Select 'Cell:'+ Char(9) + Char(9) + Char(9) + case when isnull(Mobile1,'#')=' ' then '#' else isnull(Mobile1,'#') end as [Main],DirectoryID,5 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all				 
Select 'Email:' + Char(9) + Char(9) + Char(9) + case when isnull(Email1,'#')=' ' then '#' else isnull(Email1,'#') end as [Main],DirectoryID,6 as [Rank],'0' as BrandNo, 1 as [Ranks] 	from Directory 
union all
select 'Contact 2:'+ Char(9) + Char(9) + case when isnull(isnull(ECD.FirstName,'')+' '+ isnull(ECD.Surname,''),'#')=' ' then  '#' else isnull(isnull(ECD.FirstName,'')+' '+ isnull(ECD.Surname,''),'#') end  as [Main],DirectoryID, 7 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory D Left Join EntityContact ECD on ECD.EntityContactID=D.EntityContact2
union all
Select 'Cell:'+ Char(9) + Char(9) + Char(9) + case when isnull(Mobile2,'#')=' ' then '#' else isnull(Mobile2,'#') end as [Main],DirectoryID,8 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all				
Select 'Email:' + Char(9) + Char(9) + Char(9) + case when isnull(Email2,'#')=' ' then '#' else isnull(Email2,'#') end as [Main],DirectoryID,9 as [Rank],'0' as BrandNo, 1 as [Ranks] 	from Directory 
union all
Select 'Web:'+ Char(9) + Char(9) + Char(9) +case when isnull(Website,'#')=' ' then '#' else isnull(Website,'#') end as [Main],DirectoryID,10 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all
Select 'Telephone:'+ Char(9) + Char(9) +case when isnull(Switchboard,'#')= ' ' then '#' else isnull(Switchboard,'#') end as [Main],DirectoryID,11 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all
Select 'Fax:'+ Char(9) + Char(9) + Char(9) +case when isnull(Fax,'#')=' ' then '#' else isnull(Fax,'#') end ,DirectoryID,12 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all
Select 
 [Main]
 ,DirectoryID
 ,13 as [Rank]
 , BrandNo
 , [Ranks] 
 from
 (
select '<b></b>'+ case when isnull(BrandNo,'#')='Brand 0' then 'Branch(es)' else '#' end as [Main],DirectoryID, 1 as [Rank],BrandNo, 0 as [Ranks]  from DirectoryBranch  D Left Join Entity E on E.EntityID=D.EntityID
union all
select '<b></b>'+case when isnull(E.Company,'#')=' ' then '#' else isnull(E.Company,'#') end  as [Main],DirectoryID, 1 as [Rank],BrandNo, 1 as [Ranks]  from DirectoryBranch  D Left Join Entity E on E.EntityID=D.EntityID
union all
Select case when isnull(Poastaladdress,'#')=' ' then '#' else isnull(Poastaladdress,'#')end as [Main],DirectoryID,2 as [Rank],BrandNo, 2 as [Ranks]  from DirectoryBranch 
union all	
Select case when isnull(PhysicalAdress,'#')=' ' then '#' else isnull(PhysicalAdress,'#') end as [Main],DirectoryID,3 as [Rank],BrandNo, 3 as [Ranks]  from DirectoryBranch 
union all
select 'Contact 1:'+ Char(9) + Char(9) + case when isnull(isnull(EC.FirstName,'')+' '+ isnull(EC.Surname,''),'#')=' ' then '#' else isnull(isnull(EC.FirstName,'')+' '+ isnull(EC.Surname,''),'#') end as [Main],DirectoryID,4 as [Rank],BrandNo, 4 as [Ranks]  from DirectoryBranch D Left Join EntityContact EC on EC.EntityContactID=D.EntityContact1
union all
Select 'Cell:'+ Char(9) + Char(9) + Char(9) + case when isnull(Mobile1,'#')=' ' then '#' else isnull(Mobile1,'#') end as [Main],DirectoryID,5 as [Rank],BrandNo, 5 as [Ranks]  from DirectoryBranch 
union all			
Select 'Email:' + Char(9) + Char(9) + Char(9) + case when isnull(Email1,'#')=' ' then '#' else isnull(Email1,'#') end as [Main],DirectoryID,6 as [Rank],BrandNo, 6 as [Ranks] 	from DirectoryBranch 
union all
select 'Contact 2:'+ Char(9) + Char(9) + case when  isnull(isnull(ECD.FirstName,'')+' '+ isnull(ECD.Surname,''),'#')=' 'then '#'else isnull(isnull(ECD.FirstName,'')+' '+ isnull(ECD.Surname,''),'#') end  as [Main],DirectoryID, 7 as [Rank],BrandNo, 7 as [Ranks]  from DirectoryBranch D Left Join EntityContact ECD on ECD.EntityContactID=D.EntityContact2
union all
Select 'Cell:'+ Char(9) + Char(9) + Char(9) + case when isnull(Mobile2,'#')=' ' then '#' else isnull(Mobile2,'#') end as [Main],DirectoryID,8 as [Rank],BrandNo, 8 as [Ranks]  from DirectoryBranch 
union all				
Select 'Email:' + Char(9) + Char(9) + Char(9) + case when isnull(Email2,'#')=' ' then '#' else isnull(Email2,'#') end as [Main],DirectoryID,9 as [Rank],BrandNo, 9 as [Ranks] 	from DirectoryBranch 
union all
Select 'Web:'+ Char(9) + Char(9) + Char(9) +case when isnull(Website,'#')=' ' then '#' else isnull(Website,'#') end as [Main],DirectoryID,10 as [Rank],BrandNo, 10 as [Ranks]  from DirectoryBranch 
union all
Select 'Telephone:'+ Char(9) + Char(9) + case when isnull(Switchboard,'#')=' ' then '#' else isnull(Switchboard,'#') end as [Main],DirectoryID,11 as [Rank],BrandNo, 11 as [Ranks]  from DirectoryBranch 
union all
Select 'Fax:'+ Char(9) + Char(9) + Char(9) + case when isnull(Fax,'#') =' ' then '#' else isnull(Fax,'#') end ,DirectoryID,12 as [Rank],BrandNo, 12 as [Ranks]  from DirectoryBranch 
)B
	where replace(Main,' ','') Not like '%#%' and DirectoryID={where}
	
	union all
Select isnull(CompanyDesc,'#')as [Main],DirectoryID,17 as [Rank] ,'Brand 100' as BrandNo, 13 as [Ranks]  from Directory 

	)A
	where A.Main Not like '%#%' and A.DirectoryID={where}
	order by [Rank],Brandno,[Ranks]","0","","1","LRA-FUSION","0","0","fusion"
"40360","TicketStatus","","insert into lookup(value,class,IsAllDiv)
select distinct tStatus,'TicketStatus',1 from Tickets T WITH (NOLOCK)
LEFT JOIN (SELECT LookupID, Value FROM Lookup WITH (NOLOCK) WHERE Class LIKE 'TicketStatus') L 
ON L.Value = T.tStatus
WHERE l.LookupID IS NULL AND ISNULL(T.tStatus,'') <> '' and tStatus not in (select convert(varchar,lookupID) from lookup)
   


update Tickets 
set tStatus = l.lookupid
from Tickets t left join Lookup l 
on t.tStatus = l.value and l.Class = 'TicketStatus'
Where tStatus not in (select convert(varchar,lookupID) from lookup)","0","","1","LRA-FUSION","0","0","fusion"
"40361","CV_Directory_PrintOut2","","
select 
[Category]
,Rank
from
(
select L.Value as Category,1 as [Rank],entityid,CustomFieldValueID
from customfields CF Left Join LinkLookup L on L.LinkLookupID =CF.SubGroupID
Left Join customfieldvalues CV on CV.CustomFieldID =CF.CustomFieldID
where entityid={where}
union all
select CF.FieldName as [Category] ,2 as [Rank],entityid,CustomFieldValueID
from customfields CF Left Join LinkLookup L on L.LinkLookupID =CF.SubGroupID
Left Join customfieldvalues CV on CV.CustomFieldID =CF.CustomFieldID
where entityid={where}
)A


order by CustomFieldValueID,[Rank]","0","","1","LRA-FUSION","0","0","fusion"
"40362","cv_Opportunity_Contacts","","SELECT 
	EC.entitycontactid, 
	ISNULL(firstname,'') + ' ' + ISNULL(surname,'') as [contact], 
	ISNULL(OC.ContactID,0) as [Assigned]
FROM entitycontact EC
LEFT JOIN OpportunitiesContacts OC
ON OC.ContactID = ec.entitycontactid and OC.OpportunityID = <%oppid%>
WHERE EC.entityID = <%eid%> 

ORDER BY firstname,Surname
","0","","1","LRA-FUSION","0","0","fusion"
"40363","CV_Directory_Printout3","","select 
 [Brand] + '- ' +[Products] as [   ]
from [DirectoryBrand]
where [DirectoryID]={where}","0","","1","LRA-FUSION","0","0","fusion"
"40364","cv_Opportunities","","SELECT 
	OpportunityID,
	O.Product,
	E.Company,
	L.Value as [Status],
	convert(varchar,NextDate,111 ) as [Next Date],
	convert(varchar,SaleDate,111 )  as [Next Date],
	isnull(Firstname,'') +  ' ' + isnull(Surname,'') as [Sales Consultant],
	Qty as [Units],
	dbo.fnFormatNumber(CostPrice) as [Cost Price],
	dbo.fnFormatNumber(SellingPrice)  as [Selling Price],
	dbo.fnFormatNumber((Qty * CostPrice))  as [Total],
	dbo.fnFormatNumber(((Qty * SellingPrice) - (Qty * CostPrice)))  as [Est GP]
FROM Opportunities O
LEFT JOIN Entity E ON E.EntityID = O.EntityID
LEFT JOIN Users U ON U.UserID = O.salesconsid
LEFT JOIN Lookup L ON L.lookupID = O.StatusID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40365","cv_GoogleAppointments","","SELECT 
	A.AppointmentID
	, E.Company
	, [Date] as [StartDate]
	, EndDate
	, [Subject]
	, Notes
	, Location
	, GmailEmail
	, GmailPassword
FROM appointment A
LEFT JOIN (SELECT EntityID, Company FROM Entity) E ON E.EntityID = A.EntityID
LEFT JOIN (SELECT * FROM Users) U ON U.UserID = A.ForUserID
WHERE GoogleEntryID IS NULL AND ISNULL(U.UseGmail,0) <> 0","0","","1","LRA-FUSION","0","0","fusion"
"40366","cv_GoogleAppointment_Contacts","","SELECT DISTINCT EC.Email FROM AppointmentContacts AC
LEFT JOIN (SELECT EntityContactID, Email FROM EntityContact) EC 
ON EC.EntityContactID = AC.EntityContactID
WHERE AC.ApptID = {apptID} AND ISNULL(EC.Email,'') <> ''","0","","1","LRA-FUSION","0","0","fusion"
"40367","CV_Directory_PrintOutb","","Select 
 [Main]

 from
 (
select 'CN:<b></b>'+isnull(E.Company,'#') as [Main],DirectoryID, 1 as [Rank],'0' as BrandNo, 1 as [Ranks] from Directory  D Left Join Entity E on E.EntityID=D.EntityID
union all
Select case when isnull(Poastaladdress,'#')=' ' then '#' else isnull(Poastaladdress,'#') end as [Main],DirectoryID,2 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all	
Select case when  isnull(PhysicalAdress,'#')=' ' then '#' else isnull(PhysicalAdress,'#') end as [Main],DirectoryID,3 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all
select 'Contact 1:'+ Char(9) + Char(9) + case when  isnull(isnull(EC.FirstName,'')+' '+ isnull(EC.Surname,''),'#')=' ' then '#' else isnull(isnull(EC.FirstName,'')+' '+ isnull(EC.Surname,''),'') end  as [Main],DirectoryID,4 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory D Left Join EntityContact EC on EC.EntityContactID=D.EntityContact1
union all
Select 'Cell:'+ Char(9) + Char(9) + Char(9) + case when isnull(Mobile1,'#')=' ' then '#' else isnull(Mobile1,'#') end as [Main],DirectoryID,5 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all				 
Select 'Email:' + Char(9) + Char(9) + Char(9) + case when isnull(Email1,'#')=' ' then '#' else isnull(Email1,'#') end as [Main],DirectoryID,6 as [Rank],'0' as BrandNo, 1 as [Ranks] 	from Directory 
union all
select 'Contact 2:'+ Char(9) + Char(9) + case when isnull(isnull(ECD.FirstName,'')+' '+ isnull(ECD.Surname,''),'#')=' ' then  '#' else isnull(isnull(ECD.FirstName,'')+' '+ isnull(ECD.Surname,''),'#') end  as [Main],DirectoryID, 7 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory D Left Join EntityContact ECD on ECD.EntityContactID=D.EntityContact2
union all
Select 'Cell:'+ Char(9) + Char(9) + Char(9) + case when isnull(Mobile2,'#')=' ' then '#' else isnull(Mobile2,'#') end as [Main],DirectoryID,8 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all				
Select 'Email:' + Char(9) + Char(9) + Char(9) + case when isnull(Email2,'#')=' ' then '#' else isnull(Email2,'#') end as [Main],DirectoryID,9 as [Rank],'0' as BrandNo, 1 as [Ranks] 	from Directory 
union all
Select 'Web:'+ Char(9) + Char(9) + Char(9) +case when isnull(Website,'#')=' ' then '#' else isnull(Website,'#') end as [Main],DirectoryID,10 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all
Select 'Telephone:'+ Char(9) + Char(9) +case when isnull(Switchboard,'#')= ' ' then '#' else isnull(Switchboard,'#') end as [Main],DirectoryID,11 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all
Select 'Fax:'+ Char(9) + Char(9) + Char(9) +case when isnull(Fax,'#')=' ' then '#' else isnull(Fax,'#') end ,DirectoryID,12 as [Rank],'0' as BrandNo, 1 as [Ranks]  from Directory 
union all
Select 
 [Main]
 ,DirectoryID
 ,13 as [Rank]
 , BrandNo
 , [Ranks] 
 from
 (
select 'BN:<b></b>'+ case when isnull(BrandNo,'#')='Brand 0' then 'Branch(es)' else '#' end as [Main],DirectoryID, 1 as [Rank],BrandNo, 0 as [Ranks]  from DirectoryBranch  D Left Join Entity E on E.EntityID=D.EntityID
union all
select '<b></b>'+case when isnull(E.Company,'#')=' ' then '#' else isnull(E.Company,'#') end  as [Main],DirectoryID, 1 as [Rank],BrandNo, 1 as [Ranks]  from DirectoryBranch  D Left Join Entity E on E.EntityID=D.EntityID
union all
Select case when isnull(Poastaladdress,'#')=' ' then '#' else isnull(Poastaladdress,'#')end as [Main],DirectoryID,2 as [Rank],BrandNo, 2 as [Ranks]  from DirectoryBranch 
union all	
Select case when isnull(PhysicalAdress,'#')=' ' then '#' else isnull(PhysicalAdress,'#') end as [Main],DirectoryID,3 as [Rank],BrandNo, 3 as [Ranks]  from DirectoryBranch 
union all
select 'Contact 1:'+ Char(9) + Char(9) + case when isnull(isnull(EC.FirstName,'')+' '+ isnull(EC.Surname,''),'#')=' ' then '#' else isnull(isnull(EC.FirstName,'')+' '+ isnull(EC.Surname,''),'#') end as [Main],DirectoryID,4 as [Rank],BrandNo, 4 as [Ranks]  from DirectoryBranch D Left Join EntityContact EC on EC.EntityContactID=D.EntityContact1
union all
Select 'Cell:'+ Char(9) + Char(9) + Char(9) + case when isnull(Mobile1,'#')=' ' then '#' else isnull(Mobile1,'#') end as [Main],DirectoryID,5 as [Rank],BrandNo, 5 as [Ranks]  from DirectoryBranch 
union all			
Select 'Email:' + Char(9) + Char(9) + Char(9) + case when isnull(Email1,'#')=' ' then '#' else isnull(Email1,'#') end as [Main],DirectoryID,6 as [Rank],BrandNo, 6 as [Ranks] 	from DirectoryBranch 
union all
select 'Contact 2:'+ Char(9) + Char(9) + case when  isnull(isnull(ECD.FirstName,'')+' '+ isnull(ECD.Surname,''),'#')=' 'then '#'else isnull(isnull(ECD.FirstName,'')+' '+ isnull(ECD.Surname,''),'#') end  as [Main],DirectoryID, 7 as [Rank],BrandNo, 7 as [Ranks]  from DirectoryBranch D Left Join EntityContact ECD on ECD.EntityContactID=D.EntityContact2
union all
Select 'Cell:'+ Char(9) + Char(9) + Char(9) + case when isnull(Mobile2,'#')=' ' then '#' else isnull(Mobile2,'#') end as [Main],DirectoryID,8 as [Rank],BrandNo, 8 as [Ranks]  from DirectoryBranch 
union all				
Select 'Email:' + Char(9) + Char(9) + Char(9) + case when isnull(Email2,'#')=' ' then '#' else isnull(Email2,'#') end as [Main],DirectoryID,9 as [Rank],BrandNo, 9 as [Ranks] 	from DirectoryBranch 
union all
Select 'Web:'+ Char(9) + Char(9) + Char(9) +case when isnull(Website,'#')=' ' then '#' else isnull(Website,'#') end as [Main],DirectoryID,10 as [Rank],BrandNo, 10 as [Ranks]  from DirectoryBranch 
union all
Select 'Telephone:'+ Char(9) + Char(9) + case when isnull(Switchboard,'#')=' ' then '#' else isnull(Switchboard,'#') end as [Main],DirectoryID,11 as [Rank],BrandNo, 11 as [Ranks]  from DirectoryBranch 
union all
Select 'Fax:'+ Char(9) + Char(9) + Char(9) + case when isnull(Fax,'#') =' ' then '#' else isnull(Fax,'#') end ,DirectoryID,12 as [Rank],BrandNo, 12 as [Ranks]  from DirectoryBranch 
)B
	where replace(Main,' ','') Not like '%#%' and DirectoryID={where}
	
	union all
Select isnull(CompanyDesc,'#')as [Main],DirectoryID,17 as [Rank] ,'Brand 100' as BrandNo, 13 as [Ranks]  from Directory 

	)A
	where A.Main Not like '%#%' and A.DirectoryID={where}
	order by [Rank],Brandno,[Ranks]","0","","1","LRA-FUSION","0","0","fusion"
"40368","CV_Directory_Printout3Ful","","select 
 [Brand] + '- ' +[Products] as [Brand]
from [DirectoryBrand]
where [DirectoryID]={where}","0","","1","LRA-FUSION","0","0","fusion"
"40369","CV_Directory_PrintFUll","","select
[DirectoryData] as [  ]
from
(
SELECT  [ID]
      ,[DirectoryData]
FROM [DirectoryTemp_Print]
)a
Order by [ID]","0","","1","LRA-FUSION","0","0","fusion"
"40370","cv_Competencies_Man","","select 
	CompID,
	Name AS [Competency Name],
	 LL.LookupID AS [Level],
	LC.LookupID AS [Class],
	[Definition],
	CU.Username,
	convert(varchar,DateCreated,111) as [Date Created],
	MU.Username,
	convert(varchar,ModifiedDate,111) as [Modified Date]
from Competencies C
LEFT JOIN (SELECT LookupID, Value FROM Lookup)  LL ON C.LevelID = LL.LookupID
LEFT JOIN (SELECT LookupID, Value FROM Lookup)  LC ON C.ClassID = LC.LookupID
LEFT JOIN Users CU ON C.createbyid = CU.UserID
LEFT JOIN Users MU ON C.createbyid = MU.UserID
<%where%>","0","","1","LRA-FUSION","0","0","fusion"
"40371","cv_Acc_Print_Stock_Transfer_Manifest","","SELECT 
LF.Value as [From Container], LT.Value as [To Container], 
isnull(SLT.Value,'') + isnull(' - ' + LLST.Value,'') as [Type-Sub Type], 
EM.StockCode as [Code], 
EM.StockDescription as [Description], isnull(EM.Memo,'') as [Comments], Qty, L.Value as [UOM], EM.ClientPO as [Ref.],
dbo.fnFOrmatNumber(isnull(EM.CostPriceEx,0)) as [Unit Cost],
dbo.fnFOrmatNumber(isnull(EM.CostPriceEx,0) * isnull(Qty,0)) as [Total Cost],
'     ' as [Qty Received], '     ' [Received By]
FROM Expenditure_Master EM
LEFT JOIN (SELECT StockID, SoldBy, StockType, SubTypeID FROM AccStock) STK
ON EM.StockID = STK.StockID
LEFT JOIN Lookup L ON STK.SoldBy = L.LookupID
LEFT JOIN (SELECT * FROM LinkLookup) LF ON EM.FromContainerID = LF.LinkLookupID
LEFT JOIN (SELECT * FROM LinkLookup) LT ON EM.ToContainerID = LT.LinkLookupID
LEFT JOIN Lookup LDF ON LF.LinkedTo = LDF.LookupID 
LEFT JOIN Lookup LDT ON LT.LinkedTo = LDT.LookupID 
LEFT JOIN Lookup SLT ON STK.StockType = SLT.LookupID
LEFT JOIN LinkLookup LLST on STK.SubTypeID = LLST.LinkLookupID
WHERE 
EM.DocType = 'Stock Transfer'
AND DocID in ({docids})
ORDER BY LDF.Value, LF.Value, LDT.Value, LT.Value, EM.StockCode
","0","","1","LRA-FUSION","0","0","fusion"
"40372","CV_Directory_PrintUDF","","SELECT
[Naming]as [   ]
from 
(

SELECT 
	   [ID]
      ,[Naming]
FROM [DirectoryTempUDF]
)X
order by [ID]","0","","1","LRA-FUSION","0","0","fusion"
"40373","cv_Acc_RFQ","","SELECT 
	STK.StockDescription,
	ASP.SupplierStockCode,
	E.Company, 
	E.Email 
FROM AccStockPrice ASP 
LEFT JOIN AccStock STK ON STK.StockID = ASP.StockID 
LEFT JOIN Entity E ON E.EntityID = ASP.SupplierID 
LEFT JOIN {detailstable} DD ON DD.StockID = STK.StockID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40374","web_TotalCreditsToday","","SELECT sum(([Total Incl. VAT]  / isnull(DM.ROE,1)))  as [TotalIncl]
			FROM DEBTOR_MASTER DM
			LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
					Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
					Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
            FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
			ON DM.DocID = DD.Docid
			WHERE DM.DocType = 'Credit Note'
			AND DM.DocStatus = 'Completed'
			AND convert(varchar,DM.Datecompleted ,111) = convert(varchar,getdate(),111)","0","","1","LRA-FUSION","0","0","fusion"
"40375","web_TotalCreditsThisMonth","","SELECT sum(([Total Incl. VAT]  / isnull(DM.ROE,1)))  as [TotalIncl]
			FROM DEBTOR_MASTER DM
			LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
						 Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
						 Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
						 FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
			ON DM.DocID = DD.Docid
			WHERE DM.DocType = 'Credit Note'
			AND DM.DocStatus = 'Completed'
			AND year(DM.DateCompleted) = year(getdate()) AND Month(DM.DateCompleted) = Month(Getdate())","0","","1","LRA-FUSION","0","0","fusion"
"40376","web_TotalBackOrders","","SELECT 
			sum(SOQty - InvQty) as [BackorderQty],
			sum(SoVal - InvVal) as [BackorderValue]
			FROM (
				 SELECT min(DD.LineID) as [LineID],DD.IsPurchased, 
				max(CASE WHEN DM.DocType = 'Sales Order' THEN DM.DocNo ELSE null END) as [DocNo], 
				DM.EntityID, DD.StockCode, DD.StockDescription, DD.StockID,
				sum(CASE WHEN DM.DocType = 'Sales Order' THEN DD.Qty Else 0 END) as [SOQty],
				sum(CASE WHEN DM.DocType = 'Invoice' THEN DD.Qty Else 0 END) as [InvQty],
				sum(CASE WHEN DM.DocType = 'Sales Order'	THEN  PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ELSE 0 END) as [SOVal],
				sum(CASE WHEN DM.DocType = 'Invoice'	THEN  PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ELSE 0 END) as [InvVal],
				min(DateCreated) as [DateCreated], max(DateCompleted) as [LastDate],
				isnull(DD.ProjectID, DM.ProjectID) as [ProjectID],DM.DivisionID,
				ClientPO,
				max(CASE WHEN DM.DocType = 'Sales Order' THEN DD.ETADate ELSE null END) as [DueDate],
				CASE WHEN isnull(DD.ComponentOfLineID,0)  > 0 THEN 1 ELSE 0 END as [IsComponent]
				FROM DEBTOR_DETAIL DD
				LEFT JOIN (SELECT DocID,DocNo, DocType, DocStatus,DateCreated, DateCompleted, ProjectID,Entityid,ClientPO,DivisionID FROM DEBTOR_MASTER) DM
				ON DD.DocID = DM.DocID
				where doctype in ('Sales Order', 'Invoice')
				Group by DM.EntityID, DD.IsPurchased,DD.StockCode, DD.StockDescription,isnull(DD.ProjectID, DM.ProjectID),ClientPO,DD.StockID,DM.DivisionID,
				CASE WHEN isnull(DD.ComponentOfLineID,0)  > 0 THEN 1 ELSE 0 END 
  				) A
			WHERE (SoQty <> 0 AND (InvQty - SOQty < 0))","0","","1","LRA-FUSION","0","0","fusion"
"40377","web_AvgDaysOrderOutstanding","","SELECT 
			avg(cast(datediff(d,DateCreated, LastDate) as float)) as [AvgDays]
			FROM (
				 SELECT min(DD.LineID) as [LineID],DD.IsPurchased, 
				max(CASE WHEN DM.DocType = 'Sales Order' THEN DM.DocNo ELSE null END) as [DocNo], 
				DM.EntityID, DD.StockCode, DD.StockDescription, DD.StockID,
				sum(CASE WHEN DM.DocType = 'Sales Order' THEN DD.Qty Else 0 END) as [SOQty],
				sum(CASE WHEN DM.DocType = 'Invoice' THEN DD.Qty Else 0 END) as [InvQty],
				sum(CASE WHEN DM.DocType = 'Sales Order'	THEN  PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ELSE 0 END) as [SOVal],
				sum(CASE WHEN DM.DocType = 'Invoice'		THEN  PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ELSE 0 END) as [InvVal],
				min(DateCreated) as [DateCreated], max(DateCompleted) as [LastDate],
				isnull(DD.ProjectID, DM.ProjectID) as [ProjectID],DM.DivisionID,
				ClientPO,
				max(CASE WHEN DM.DocType = 'Sales Order' THEN DD.ETADate ELSE null END) as [DueDate],
				CASE WHEN isnull(DD.ComponentOfLineID,0)  > 0 THEN 1 ELSE 0 END as [IsComponent]
				FROM DEBTOR_DETAIL DD
				LEFT JOIN (SELECT DocID,DocNo, DocType, DocStatus,DateCreated, DateCompleted, ProjectID,Entityid,ClientPO,DivisionID FROM DEBTOR_MASTER) DM
				ON DD.DocID = DM.DocID
				where doctype in ('Sales Order', 'Invoice')
				Group by DM.EntityID, DD.IsPurchased,DD.StockCode, DD.StockDescription,isnull(DD.ProjectID, DM.ProjectID),ClientPO,DD.StockID,DM.DivisionID,
				CASE WHEN isnull(DD.ComponentOfLineID,0)  > 0 THEN 1 ELSE 0 END 
  				) A
			WHERE LastDate is not null","0","","1","LRA-FUSION","0","0","fusion"
"40378","web_DebtorPaymentsThisMonth","","SELECT sum(([Total Incl. VAT]  / isnull(DM.ROE,1)))  as [TotalIncl]
			FROM DEBTOR_MASTER DM
			LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
						 Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
						 Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
						 FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
			ON DM.DocID = DD.Docid
			WHERE DM.DocType = 'Payment Receipt'
			AND DM.DocStatus = 'Completed'
			AND year(DM.DateCompleted) = year(getdate()) AND Month(DM.DateCompleted) = Month(Getdate())","0","","1","LRA-FUSION","0","0","fusion"
"40379","web_CreditorPaymentsThisMonth","","SELECT sum(([Total Incl. VAT]  / isnull(DM.ROE,1)))  as [TotalIncl]
			FROM CREDITOR_MASTER DM
			LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
						 Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
						 Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
						 FROM CREDITOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
			ON DM.DocID = DD.Docid
			WHERE DM.DocType = 'Supplier Payment'
			AND DM.DocStatus = 'Completed'
			AND year(DM.DateCompleted) = year(getdate()) AND Month(DM.DateCompleted) = Month(Getdate())","0","","1","LRA-FUSION","0","0","fusion"
"40380","web_OutstandingDebtorBalance","","DECLARE @Date as Datetime
			DECLARE @IsSupplier as bit
			Set @Date = Getdate()
			Set @IsSupplier = 0

			SELECT sum(isnull(Totalincl,0) ) as [TotalDebtorsBalane]
			FROM (
				--Invoices
				SELECT DM.DocID, DM.DocType, Case when isnull(DM.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(EH.EntityID,DM.Entityid)) As [EntityID] , 
				Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],
				Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], TotalIncl / isnull(DM.ROE,1) as [TotalIncl], 
				DateCompleted,DivisionID,ROE,Currency,
				Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID], isnull(EH.SalesConsID,E.SalesConsID) as [SalesConsID]
				FROM DEBTOR_MASTER DM
				LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by docid) DD
				ON DM.DocID = DD.DocID
				LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID, AlternateCompanyID FROM Entity) E
				ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
				LEFT JOIN (SELECT Entityid, Accountnum, Company	,EntityCategoryID,SalesConsID FROM Entity) EH
				ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
				LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
				ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
				LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
				ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
				WHERE DocType in ('Invoice','Supplier Invoice') And DocStatus = 'Completed'
				AND DM.DateCompleted <@Date 
				AND DM.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01')

				UNION ALL

				--Inter-Account Transfers
				SELECT LAM.DocID, CASE WHEN isnull(LAM.IsInterAccountTransfer,0) = 1 THEN 'Inter-Account Transfer' WHEN isnull(LAM.IsInterLedgerTransfer,0) = 1 THEN 'Inter-Ledger Transfer' END as [Doc. Type],
				'EN' + Convert(varchar,isnull(EH.EntityID,LAD.EntityID)),
				isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) as [Account], isnull(EH.Company,E.Company),
				(isnull(Debit,0) - isnull(Credit,0)) / isnull(LAM.ROE,1),LAD.AdjustDate, LAD.DivisionID,isnull(LAM.ROE,1) as [ROE], 
				isnull(LAM.Currency,'') as [Currency],
				isnull(EH.EntityCategoryID,E.EntityCategoryID),isnull(EH.SalesConsID,E.SalesConsID)
				FROM LEDGER_ADJUST_MASTER LAM
				LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD 
				ON LAM.DocID= LAD.DocID
				LEFT JOIN (SELECT EntityID,AccountNum, Company, IsSupplier, EntityCategoryID, SalesConsID,AlternateCompanyID FROM Entity) E
				ON LAD.EntityID = E.EntityID
				LEFT JOIN (SELECT EntityID,AccountNum, Company, IsSupplier, EntityCategoryID, SalesConsID FROM Entity) EH
				ON E.AlternateCompanyID = EH.EntityID
				WHERE isnull(LAD.EntityID,0) <> 0
				AND isnull(E.IsSupplier,0)  = 0
				AND isnull(LAM.IsComplete,0) = 1
				AND LAD.AdjustDate <@Date 

				Union all

				--Credit Notes
				SELECT DM.DocID, DM.DocType, Case when isnull(DM.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(EH.EntityID,DM.Entityid)) As [EntityID] , 
				Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
				Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
				(-1) *  (TotalIncl / isnull(DM.ROE,1)) as [TotalIncl], 
				Case WHEN PrevCompleted is null then DM.DateCompleted Else PrevCompleted END as [DateCompleted],DivisionID,
				DM.ROE,DM.Currency, 
				Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID],isnull(EH.SalesConsID,E.SalesConsID)
				FROM DEBTOR_MASTER DM
				LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 group by docid) DD
				ON DM.DocID = DD.DocID
				LEFT JOIN (SELECT DocID, DateCompleted as [PrevCompleted] FROM DEBTOR_MASTER ) DM2
				ON DM.PreviousDocid = Dm2.DocID
				LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
				ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
				LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID FROM Entity) EH
				ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
				LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
				ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
				LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
				ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
				WHERE DocType in ('Credit Note', 'Supplier Credit Note') And DocStatus = 'Completed'
				And DM.DateCompleted <@date 
				--AND DM.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01')


				Union all

				--Payments
				SELECT DM.PaymentDocID, 'Payment Receipt', Case when isnull(DM3.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(EH.EntityID,DM.Entityid)) As [EntityID] , 
				Case when isnull(DM3.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
				Case when isnull(DM3.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
				(-1) * (isnull(PaymentPortion,0) + isnull(SettlementDiscount,0) /*/ isnull(DM3.ROE,1)*/ ) as [TotalIncl], 
				Case WHEN PrevCompleted is null then DM3.DateCompleted Else PrevCompleted END as [DateCompleted], DM3.DivisionID,
				DM3.ROE,DM3.Currency,
				Case when isnull(DM3.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID],
				isnull(EH.SalesConsID,E.SalesConsID)
				FROM DEBTOR_PAYMENT DM
				LEFT JOIN (SELECT DocID, DateCompleted as [PrevCompleted],DivisionID FROM DEBTOR_MASTER ) DM2
				ON DM.InvoiceDocID = Dm2.DocID
				LEFT JOIN (SELECT DocID, DateCompleted,DocType,EntityID,UseEC,DivisionID,ROE,Currency,Period FROM DEBTOR_MASTER) DM3
				ON DM.PaymentDocID = DM3.DocID
				LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
				ON DM3.EntityID = E.EntityID AND isnull(DM3.UseEC,0) = 0
				LEFT JOIN (SELECT Entityid, Accountnum,Company,EntityCategoryID,SalesConsID FROM Entity) EH
				ON E.AlternateCompanyID = EH.EntityID AND isnull(DM3.UseEC,0) = 0
				LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
				ON DM3.EntityID = EC.EntityContactID AND isnull(DM3.UseEC,0) = 1
				LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
				ON DM3.Entityid = AOB.EntityID AND isnull(DM3.UseEC,0) = isnull(AOB.UseEC,0) AND DM3.DivisionID = AOB.DivID
				where  dm3.doctype in ('Payment Receipt', 'Supplier Payment')
				and dm3.datecompleted < @date  
				AND DM3.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01') 

	
				UNION ALL
	
				--Opening balances 
				SELECT  OB.EntityID, 'Opening Balance',
				CASE isnull(DM.UseEC,0) when 0 then 'EN' when 1 then 'EC' END + Convert(varchar,isnull(EH.EntityID,DM.EntityID)) as [ID],
				Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
				Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
				OB.TotalIncl,
				OB.[DateCompleted],DM.DivisionID as [DivisionID],
					1 as [ROE],DM.Currency,
				Case when isnull(DM.UseEC,0) = 0 THEN isnull(E.EntityCategoryID,EH.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID],
				isnull(EH.SalesConsID, E.SalesConsID)
				FROM AccOpeningBalance DM
				LEFT JOIN (SELECT Entityid, Accountnum, Company,IsSupplier,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
				ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
				LEFT JOIN (SELECT Entityid, Accountnum,Company,IsSupplier,EntityCategoryID,SalesConsID FROM Entity) EH
				ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
				LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
				ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
				LEFT JOIN (	SELECT Entityid, useec, - isnull(amtcurrent,0) as [TotalIncl], dateadd(d,0,datecreated) as [DateCompleted] FROM AccOpeningBalance
						UNION ALL
						SELECT Entityid, useec, - isnull(amt30,0) as [TotalIncl], dateadd(d,-30,datecreated) as [DateCompleted] FROM AccOpeningBalance
						UNION ALL
						SELECT Entityid, useec, - isnull(amt60,0) as [TotalIncl], dateadd(d,-60,datecreated) as [DateCompleted] FROM AccOpeningBalance
						UNION ALL
						SELECT Entityid, useec, - isnull(amt90,0) as [TotalIncl], dateadd(d,-90,datecreated) as [DateCompleted] FROM AccOpeningBalance
						UNION ALL
						SELECT Entityid, useec, - isnull(amt120,0) as [TotalIncl], dateadd(d,-120,datecreated) as [DateCompleted] FROM AccOpeningBalance
					) OB
				ON DM.Entityid = OB.Entityid AND isnull(dm.Useec,0) = isnull(OB.UseEc,0)
				WHERE isnull(e.IsSupplier, 0) = @IsSupplier
			) A","0","","1","LRA-FUSION","0","0","fusion"
"40381","web_OutstandingCreditorBalance","","DECLARE @Date as Datetime
			DECLARE @Period as integer
			DECLARE @IsSupplier as bit
			Set @Date = getdate()
			Set @IsSupplier =1

			SELECT sum(isnull(TotalIncl,0)) as [CreditorBalance]
				FROM (
					--Supplier Invoices
					SELECT DM.DocID, DM.DocType, Case when isnull(DM.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(EH.EntityID,DM.Entityid)) As [EntityID] , 
					Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],
					Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], TotalIncl /*/ isnull(DM.ROE,1)*/ as [TotalIncl], 
					DateCompleted,DivisionID,ROE,Currency,
					Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID], isnull(EH.SalesConsID,E.SalesConsID) as [SalesConsID]
					FROM CREDITOR_MASTER DM
					LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM CREDITOR_DETAIL /*WHERE isnull(ComponentOfLineID,0) = 0*/ Group by docid) DD
					ON DM.DocID = DD.DocID
					LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID, AlternateCompanyID FROM Entity) E
					ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
					LEFT JOIN (SELECT Entityid, Accountnum, Company	,EntityCategoryID,SalesConsID FROM Entity) EH
					ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
					LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
					ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
					LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
					ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
					WHERE DocType in ('Invoice','Supplier Invoice') And DocStatus = 'Completed'
					AND DM.DateCompleted <@Date 
					AND DM.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01')

					UNION ALL

					--Inter-Account Transfers
					SELECT LAM.DocID, CASE WHEN isnull(LAM.IsInterAccountTransfer,0) = 1 THEN 'Inter-Account Transfer' WHEN isnull(LAM.IsInterLedgerTransfer,0) = 1 THEN 'Inter-Ledger Transfer' END as [Doc. Type],
					'EN' + Convert(varchar,isnull(EH.EntityID,LAD.EntityID)),
					isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) as [Account], isnull(EH.Company,E.Company),
					(isnull(Credit,0) - isnull(Debit,0)) / isnull(LAM.ROE,1),LAD.AdjustDate, LAD.DivisionID,isnull(LAM.ROE,1) as [ROE], 
					isnull(LAM.Currency,'') as [Currency],
					isnull(EH.EntityCategoryID,E.EntityCategoryID),isnull(EH.SalesConsID,E.SalesConsID)
					FROM LEDGER_ADJUST_MASTER LAM
					LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD 
					ON LAM.DocID= LAD.DocID
					LEFT JOIN (SELECT EntityID,AccountNum, Company, IsSupplier, EntityCategoryID, SalesConsID,AlternateCompanyID FROM Entity) E
					ON LAD.EntityID = E.EntityID
					LEFT JOIN (SELECT EntityID,AccountNum, Company, IsSupplier, EntityCategoryID, SalesConsID FROM Entity) EH
					ON E.AlternateCompanyID = EH.EntityID
					WHERE isnull(LAD.EntityID,0) <> 0
					AND isnull(E.IsSupplier,0)  = @IsSupplier
					AND isnull(LAM.IsComplete,0) = 1
					AND LAD.AdjustDate <@Date 

					Union all
	
					--Credit Notes
					SELECT DM.DocID, DM.DocType, Case when isnull(DM.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(EH.EntityID,DM.Entityid)) As [EntityID] , 
					Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
					Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
					(-1) *  (TotalIncl /*/ isnull(DM.ROE,1)*/) as [TotalIncl], 
					Case WHEN PrevCompleted is null then DM.DateCompleted Else PrevCompleted END as [DateCompleted],DivisionID,
					DM.ROE,DM.Currency, 
					Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID],isnull(EH.SalesConsID,E.SalesConsID)
					FROM CREDITOR_MASTER DM
					LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM CREDITOR_DETAIL /*WHERE isnull(ComponentOfLineID,0) = 0*/ group by docid) DD
					ON DM.DocID = DD.DocID
					LEFT JOIN (SELECT DocID, DateCompleted as [PrevCompleted] FROM CREDITOR_MASTER ) DM2
					ON DM.PreviousDocid = Dm2.DocID
					LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
					ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
					LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID FROM Entity) EH
					ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
					LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
					ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
					LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
					ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
					WHERE DocType in ('Credit Note', 'Supplier Credit Note') And DocStatus = 'Completed' 
					And DM.DateCompleted <@date 
					AND DM.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01')

					Union all

					--Payments
					SELECT DM.PaymentDocID, 'Supplier Payment', Case when isnull(DM3.UseEC,0) = 0 THEN 'EN' ELSE 'EC' END + convert(varchar,isnull(EH.EntityID,DM.Entityid)) As [EntityID] , 
					Case when isnull(DM3.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
					Case when isnull(DM3.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
					(-1) * (PaymentPortion /*/ isnull(DM3.ROE,1)*/ ) as [TotalIncl], 
					Case WHEN PrevCompleted is null then DM3.DateCompleted Else PrevCompleted END as [DateCompleted], DM3.DivisionID,
					DM3.ROE,DM3.Currency,
					Case when isnull(DM3.UseEC,0) = 0 THEN isnull(EH.EntityCategoryID,E.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID],
					isnull(EH.SalesConsID,E.SalesConsID)
					FROM CREDITOR_PAYMENT DM
					LEFT JOIN (SELECT DocID, DateCompleted as [PrevCompleted],DivisionID FROM CREDITOR_MASTER ) DM2
					ON DM.InvoiceDocID = Dm2.DocID
					LEFT JOIN (SELECT DocID, DateCompleted,DocType,EntityID,UseEC,DivisionID,ROE,Currency,Period FROM CREDITOR_MASTER) DM3
					ON DM.PaymentDocID = DM3.DocID
					LEFT JOIN (SELECT Entityid, Accountnum, Company,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
					ON DM3.EntityID = E.EntityID AND isnull(DM3.UseEC,0) = 0
					LEFT JOIN (SELECT Entityid, Accountnum,Company,EntityCategoryID,SalesConsID FROM Entity) EH
					ON E.AlternateCompanyID = EH.EntityID AND isnull(DM3.UseEC,0) = 0
					LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
					ON DM3.EntityID = EC.EntityContactID AND isnull(DM3.UseEC,0) = 1
					LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
					ON DM3.Entityid = AOB.EntityID AND isnull(DM3.UseEC,0) = isnull(AOB.UseEC,0) AND DM3.DivisionID = AOB.DivID
					where  dm3.doctype in ('Payment Receipt', 'Supplier Payment')
					and dm3.datecompleted < @date  
					AND DM3.DateCompleted >= isnull(AOB.DateCreated, '1800/01/01') 


					UNION ALL
		
					--Opening balances 
					SELECT  OB.EntityID, 'Supplier Payment',
					CASE isnull(DM.UseEC,0) when 0 then 'EN' when 1 then 'EC' END + Convert(varchar,isnull(EH.EntityID,DM.EntityID)) as [ID],
					Case when isnull(DM.UseEC,0) = 0 THEN isnull(isnull(EH.AccountNum,EH.Entityid),isnull(E.AccountNum,E.Entityid)) ELSE EC.AccountNum END as [Account],        
					Case when isnull(DM.UseEC,0) = 0 THEN isnull(EH.Company,E.Company) ELSE Contact END as [Company], 
					OB.TotalIncl,
					OB.[DateCompleted],DM.DivisionID as [DivisionID],
						1 as [ROE],DM.Currency,
					Case when isnull(DM.UseEC,0) = 0 THEN isnull(E.EntityCategoryID,EH.EntityCategoryID) ELSE EC.EntityCategoryID END as [EntityCategoryID],
					isnull(EH.SalesConsID, E.SalesConsID)
					FROM AccOpeningBalance DM
					LEFT JOIN (SELECT Entityid, Accountnum, Company,IsSupplier,EntityCategoryID,SalesConsID,AlternateCompanyID FROM Entity) E
					ON DM.EntityID = E.EntityID AND isnull(DM.UseEC,0) = 0
					LEFT JOIN (SELECT Entityid, Accountnum,Company,IsSupplier,EntityCategoryID,SalesConsID FROM Entity) EH
					ON E.AlternateCompanyID = EH.EntityID AND isnull(DM.UseEC,0) = 0
					LEFT JOIN (SELECT EntityContactid, AccountNum, isnull(firstname,'')+ ' ' + isnull(Surname,'') as [Contact],EntityCategoryID FROM EntityContact) EC
					ON DM.EntityID = EC.EntityContactID AND isnull(DM.UseEC,0) = 1
					LEFT JOIN (	SELECT Entityid, useec,  isnull(amtcurrent,0) as [TotalIncl], dateadd(d,0,datecreated) as [DateCompleted] FROM AccOpeningBalance
							UNION ALL
							SELECT Entityid, useec,  isnull(amt30,0) as [TotalIncl], dateadd(d,-30,datecreated) as [DateCompleted] FROM AccOpeningBalance
							UNION ALL
							SELECT Entityid, useec,  isnull(amt60,0) as [TotalIncl], dateadd(d,-60,datecreated) as [DateCompleted] FROM AccOpeningBalance
							UNION ALL
							SELECT Entityid, useec,  isnull(amt90,0) as [TotalIncl], dateadd(d,-90,datecreated) as [DateCompleted] FROM AccOpeningBalance
							UNION ALL
							SELECT Entityid, useec,  isnull(amt120,0) as [TotalIncl], dateadd(d,-120,datecreated) as [DateCompleted] FROM AccOpeningBalance
						) OB
					ON DM.Entityid = OB.Entityid AND isnull(dm.Useec,0) = isnull(OB.UseEc,0)
					WHERE isnull(e.IsSupplier, 0) = @IsSupplier
			) A","0","","1","LRA-FUSION","0","0","fusion"
"40382","cv_ProcessFlow_UDList","","SET NOCOUNT ON
DECLARE @List VARCHAR(8000)
DECLARE @Temp TABLE (ID INT IDENTITY(1,1), Value VARCHAR(100))
SET @List = (SELECT ListItems FROm CustomFields WHERE CustomFieldID = {fieldid})

WHILE CHARINDEX(';', @List) > 0
BEGIN
	INSERT INTO @Temp (Value)
	SELECT SUBSTRING(@List, 1, CHARINDEX(';', @List) - 1)
	SET @List = SUBSTRING(@List, CHARINDEX(';', @List) + 1, 8000)
END

INSERT INTO @Temp (Value)
SELECT @List

SET NOCOUNT OFF

SELECT * FROM @Temp","0","","1","LRA-FUSION","0","0","fusion"
"40383","cv_ProcessFlow_UDCheck","","SELECT 
	AT.ActionTemplateID,
        AT.Area,
	CFV.CustomFieldValueID,
	CFV.Value,
	UDStatus,
	Lower(CF.FieldType) as [Type],
	LOWER(CF.ControlType) as [Control],
	ISNULL(CFV.ProcessSent,0) as [Proc]
FROM ActionTemplates AT 
INNER JOIN CustomFieldValues CFV ON CFV.CustomFieldID = AT.LookupID
LEFT JOIN CustomFieldForms CFF ON CFF.formID = CFV.CustomForm 
LEFT JOIN CustomFields CF ON CF.CustomFieldID = CFV.CustomFieldID
WHERE ISNULL(AT.IsUD,0) = 1
AND CFV.EntityID = {entityid}
AND CFF.FormName = '{formname}'
AND CFV.Value <> ''
AND ISNULL(CFV.ProcessSent,0) = 0","0","","1","LRA-FUSION","0","0","fusion"
"40384","cv_Entity_Status_log","","SELECT 
	EntityCatHistID
        ,' ' AS [ ]
	,E.Company
	,E.Accountnum as [Account Number]
	,ChangeDate as [Date Changed]
	,[Change From]
	,[Change To]
	,[Changed by]  
FROM EntityCategoryHist ECH
LEFT JOIN (
	SELECT 
		EntityID
		, Company
		, Accountnum 
	FROM Entity
) E ON E.EntityID = ECH.EntityID
LEFT JOIN (
	SELECT 
		LookupID
		, Value as [Change From] 
	FROM Lookup 
	WHERE Class LIKE 'category'
) ECF 
ON ECF.LookupID = ECH.FromEntityCategoryID
LEFT JOIN (
	SELECT 
		LookupID
		, Value as [Change To] 
	FROM Lookup 
	WHERE Class LIKE 'category'
) ECT 
ON ECT.LookupID = ECH.ToEntityCategoryID
LEFT JOIN (
	SELECT 
		UserID
		, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Changed by] 
	FROM Users
) U ON U.UserID = ECH.ChangedBy
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40385","cv_mod_assigned_pop","","SELECT UserID, isnull(Firstname,'') + ' ' +  isnull(Surname,'') From Users 
where staffID in  (select StaffID from ModuleAssignees where ModuleID = {modID})
ORDER By Firstname,Surname","0","","1","LRA-FUSION","0","0","fusion"
"40386","cv_GetNewProjectCode","","DECLARE @Prefix VARCHAR(50)
SET @Prefix = '{Prefix}'

SELECT 
    ISNULL(@Prefix,'') + LEFT('00', 250 - len(ISNULL(NewCode,''))) + ISNULL(NewCode,'')
as [Code]
FROM
(
	SELECT 
		CAST(CAST(ISNULL(CASE ISNUMERIC(LEFT(ProjectCode,1)) WHEN 0 
			THEN REPLACE(ProjectCode,LEFT(ProjectCode,1),'') 
			ELSE ProjectCode 
			END,0) AS INT) + 1 AS VARCHAR) as NewCode
	FROM (
		SELECT 

		REPLACE(MAX(ISNULL(dbo.fnGetNumbers(ProjectNum),'')), LPT.Value2, '') as ProjectCode

		FROM Projects P
		LEFT JOIN (
		SELECT 
			LookupID
			,Class
			,Value
			,IsAllDiv
			,TempID
			,Colour
			,info
			,value2
		FROM Lookup WHERE Class LIKE 'projecttypes') LPT
		ON LPT.LookupID = P.projectTypeID

		WHERE ProjectTypeID = {typeid}
		AND ISNULL(IsJob,0) = 0
        AND ISNULL(isContract,0) = 0
		GROUP BY LPT.Value2
	) X
) X","0","","1","LRA-FUSION","0","0","fusion"
"40387","cv_MarketingCampaigns","","SELECT MarketingID,CampaignName as [Campaign Name], L.Value as [Campaign Type], MD.Notes FROM MarketingDetails MD
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'CampaignType') L
ON l.LookupID = MD.CampaignTypeID","0","","1","LRA-FUSION","0","0","fusion"
"40388","cv_Inventory_Movement_Rpt2","","SELECT DISTINCT 
	StockID
	, [Stock Code]
	, [Stock Description]
	, [Sold In] as [Unit]
	, [Year]
	{SQLSelect}
FROM (
SELECT 
	StockID
	,[Stock Code]
	, [Stock Description]
	, [Sold In]
	, [Year]
	
	
	,ISNULL(CASE WHEN AdjustMonth = 1 THEN ISNULL(CASE WHEN ISNULL(QTY,0) > 0 THEN ISNULL(QTY,0) END,0)END,0) as [Jan Incoming]
	,(-1) * ISNULL(CASE WHEN AdjustMonth = 1 THEN ISNULL(CASE WHEN ISNULL(QTY,0) < 0 THEN ISNULL(QTY,0) END,0)END,0) as [Jan Outgoing]
	
	,ISNULL(CASE WHEN AdjustMonth = 2 THEN ISNULL(CASE WHEN ISNULL(QTY,0) > 0 THEN ISNULL(QTY,0) END,0)END,0) as [Feb Incoming]
	,(-1) * ISNULL(CASE WHEN AdjustMonth = 2 THEN ISNULL(CASE WHEN ISNULL(QTY,0) < 0 THEN ISNULL(QTY,0) END,0)END,0) as [Feb Outgoing]
	
	,ISNULL(CASE WHEN AdjustMonth = 3 THEN ISNULL(CASE WHEN ISNULL(QTY,0) > 0 THEN ISNULL(QTY,0) END,0)END,0) as [Mar Incoming]
	,(-1) * ISNULL(CASE WHEN AdjustMonth = 3 THEN ISNULL(CASE WHEN ISNULL(QTY,0) < 0 THEN ISNULL(QTY,0) END,0)END,0) as [Mar Outgoing]
	
	,ISNULL(CASE WHEN AdjustMonth = 4 THEN ISNULL(CASE WHEN ISNULL(QTY,0) > 0 THEN ISNULL(QTY,0) END,0)END,0) as [Apr Incoming]
	,(-1) * ISNULL(CASE WHEN AdjustMonth = 4 THEN ISNULL(CASE WHEN ISNULL(QTY,0) < 0 THEN ISNULL(QTY,0) END,0)END,0) as [Apr Outgoing]
	
	,ISNULL(CASE WHEN AdjustMonth = 5 THEN ISNULL(CASE WHEN ISNULL(QTY,0) > 0 THEN ISNULL(QTY,0) END,0)END,0) as [May Incoming]
	,(-1) * ISNULL(CASE WHEN AdjustMonth = 5 THEN ISNULL(CASE WHEN ISNULL(QTY,0) < 0 THEN ISNULL(QTY,0) END,0)END,0) as [May Outgoing]
	
	,ISNULL(CASE WHEN AdjustMonth = 6 THEN ISNULL(CASE WHEN ISNULL(QTY,0) > 0 THEN ISNULL(QTY,0) END,0)END,0) as [Jun Incoming]
	,(-1) * ISNULL(CASE WHEN AdjustMonth = 6 THEN ISNULL(CASE WHEN ISNULL(QTY,0) < 0 THEN ISNULL(QTY,0) END,0)END,0) as [Jun Outgoing]
	
	,ISNULL(CASE WHEN AdjustMonth = 7 THEN ISNULL(CASE WHEN ISNULL(QTY,0) > 0 THEN ISNULL(QTY,0) END,0)END,0) as [Jul Incoming]
	,(-1) * ISNULL(CASE WHEN AdjustMonth = 7 THEN ISNULL(CASE WHEN ISNULL(QTY,0) < 0 THEN ISNULL(QTY,0) END,0)END,0) as [Jul Outgoing]
	
	,ISNULL(CASE WHEN AdjustMonth = 8 THEN ISNULL(CASE WHEN ISNULL(QTY,0) > 0 THEN ISNULL(QTY,0) END,0)END,0) as [Aug Incoming]
	,(-1) * ISNULL(CASE WHEN AdjustMonth = 8 THEN ISNULL(CASE WHEN ISNULL(QTY,0) < 0 THEN ISNULL(QTY,0) END,0)END,0) as [Aug Outgoing]
	
	,ISNULL(CASE WHEN AdjustMonth = 9 THEN ISNULL(CASE WHEN ISNULL(QTY,0) > 0 THEN ISNULL(QTY,0) END,0)END,0) as [Sep Incoming]
	,(-1) * ISNULL(CASE WHEN AdjustMonth = 9 THEN ISNULL(CASE WHEN ISNULL(QTY,0) < 0 THEN ISNULL(QTY,0) END,0)END,0) as [Sep Outgoing]
	
	,ISNULL(CASE WHEN AdjustMonth = 10 THEN ISNULL(CASE WHEN ISNULL(QTY,0) > 0 THEN ISNULL(QTY,0) END,0)END,0) as [Oct Incoming]
	,(-1) * ISNULL(CASE WHEN AdjustMonth = 10 THEN ISNULL(CASE WHEN ISNULL(QTY,0) < 0 THEN ISNULL(QTY,0) END,0)END,0) as [Oct Outgoing]
	
	,ISNULL(CASE WHEN AdjustMonth = 11 THEN ISNULL(CASE WHEN ISNULL(QTY,0) > 0 THEN ISNULL(QTY,0) END,0)END,0) as [Nov Incoming]
	,(-1) * ISNULL(CASE WHEN AdjustMonth = 11 THEN ISNULL(CASE WHEN ISNULL(QTY,0) < 0 THEN ISNULL(QTY,0) END,0)END,0) as [Nov Outgoing]
	
	,ISNULL(CASE WHEN AdjustMonth = 12 THEN ISNULL(CASE WHEN ISNULL(QTY,0) > 0 THEN ISNULL(QTY,0) END,0)END,0) as [Dec Incoming]
	,(-1) * ISNULL(CASE WHEN AdjustMonth = 12 THEN ISNULL(CASE WHEN ISNULL(QTY,0) < 0 THEN ISNULL(QTY,0) END,0)END,0) as [Dec Outgoing]
	
	
	
FROM (
		SELECT 
			A.StockID
			,A.StockCode as [Stock Code]
			,A.StockDescription as [Stock Description]
			,MONTH(AdjustDate) as AdjustMonth
			,YEAR(AdjustDate) as [Year]
			,Qty as QTY
			,[Sold In]
			,Ratio
			,Container
			
		FROM AccStockControl AC
		LEFT JOIN (
			SELECT * FROM AccStock
		) A ON A.StockID = AC.StockID
		LEFT JOIN (
			SELECT Value as Container,LinkLookupID FROM LinkLookup WHERE Class LIKE 'StockContainer'
		) SC ON SC.LinkLookupID = AC.ContainerID
		LEFT JOIN (
			SELECT LookupID, Value as [Sold In] FROM Lookup WHERE Class LIKE 'BuySellUnits'
		) LS ON LS.LookupID = AC.SoldBy
		LEFT JOIN (
			SELECT LookupID, Value as [Purchased In] FROM Lookup WHERE Class LIKE 'BuySellUnits'
		) LB ON LB.LookupID = AC.PurchasedBy
		{where}
		
	) X
) A
GROUP BY StockID,[Stock Code],[Stock Description],[Sold In],[Year]","0","","1","LRA-FUSION","0","0","fusion"
"40389","cv_Client_Hours","","SET ANSI_WARNINGS OFF
SET NOCOUNT ON

DECLARE @StartDate as datetime
DECLARE @EndDate as datetime
DECLARE @CurrentDate as datetime
SET @StartDate = '{startdate}'
SET @EndDate = '{enddate}'
SET @CurrentDate = convert(varchar,year(@StartDate)) + '/' + convert(varchar,month(@Startdate)) + '/' + '15'



IF OBJECT_ID(N'tempdb..#Dates', N'U') IS NOT NULL 
BEGIN
    DROP TABLE #Dates;
END

CREATE TABLE #Dates
(Period Datetime)

WHILE @CurrentDate < @EndDate
BEGIN
    INSERT INTO #Dates
    SELECT convert(varchar,@CurrentDate,111)
    SET @CurrentDate = dateadd(m,1,@CurrentDate)
END


IF OBJECT_ID(N'tempdb..#SLA', N'U') IS NOT NULL 
BEGIN
    DROP TABLE #SLA;
END

CREATE TABLE #SLA
(SLAID Int,
IsAllProjects Bit,
EntityID Int,
HoursExpireAfter Int,
Period Datetime,
SLAResourceTypeID Int,
StartDate DateTime,
EndDate DateTime,
HoursPerMonth float,
Hrs float,
AdjHrs float,
HrsRemaining float,
SLADescription Varchar(250),
ProjectID int
)


--Create dates in range
WHILE @CurrentDate < @EndDate
BEGIN
    INSERT INTO #Dates
    SELECT convert(varchar,@CurrentDate,111)
    SET @CurrentDate = dateadd(m,1,@CurrentDate)
END

--Actual SLAs
INSERT INTO #SLA
SELECT S.SLAID, S.IsAllProjects, S.Entityid,   
S.HoursExpireAfter,
D.Period,
S.SLAResourceTypeID,
S.Startdate,
S.EndDate,
HoursPerMonth,
sum(round(DateDiff(n,DA.[Date],DA.EndDate) / 60.00,2))  as [Hrs], 
sum(round(cast(DateDiff(n,DA.[Date],DA.EndDate)as float) * (isnull(DA.StaffCurrentRate,100.00)/100.00) / 60.00, 2))  as [AdjHrs],
0 as [HrsRemaining],SLADescription, null as [ProjectID]
FROM SLA S
LEFT JOIN #Dates D  on D.Period between S.StartDate AND S.EndDate
LEFT JOIN (SELECT * FROM SLAProject) SP ON S.SLAID  = SP.SLAID
LEFT JOIN (SELECT * FROM SLATaskType) ST ON S.SLAID = ST.TaskTypeID
LEFT JOIN (SELECT * FROM DevAppointment) DA
    ON S.EntityID = DA.EntityID
    AND (year(DA.[Date]) = year(D.Period) AND month(DA.[Date]) = month(D.Period))
    AND (SP.ProjectID = DA.ProjectID OR isnull(S.IsAllProjects,0) = 1)
    AND (ST.TaskTypeID = DA.TaskTypeID OR isnull(S.IsAllTaskTypes,0) = 1)
WHERE D.Period is not null
Group by 
	S.SLAID
	, S.EntityID
	, D.Period
	, S.StartDate
	, S.EndDate
	, S.HoursPerMonth
	,S.SLAResourceTypeID
	, S.HoursExpireAfter
	,S.IsAllProjects
	,S.SLADescription
ORDER BY D.Period

--Virtual SLAs created for all other timesheets
INSERT INTO #SLA
SELECT Distinct
0 as [SLAID], 
1 as [IsAllProjects], 
DA.Entityid,   
0 as [HoursExpireAfter],
D.Period,
0 as [SLAResourceTypeID],
@Startdate,
@EndDate,
0 as [HoursPerMonth],
sum(round(DateDiff(n,DA.[Date],DA.EndDate) / 60.00,2))  - isnull(SLAHrs.Hrs,0) as [Hrs], 
sum(round(cast(DateDiff(n,DA.[Date],DA.EndDate)as float) * (isnull(DA.StaffCurrentRate,100.00)/100.00) / 60.00, 2))  - isnull(SLAHrs.AdjHrs,0)   as [AdjHrs],
0 as [HrsRemaining],
'[None]' as [SLADescription],
DA.ProjectID
FROM DevAppointment DA
LEFT JOIN #Dates D  on year(DA.[Date]) = year(D.Period) AND Month(DA.[Date]) = Month(D.Period)
LEFT JOIN (SELECT EntityID, Period, sum(isnull(Hrs,0)) as [Hrs], sum(isnull(AdjHrs,0)) as [AdjHrs] FROM #SLA GROUP BY EntityID, Period) SLAHrs
ON DA.EntityID = SLAHrs.EntityID AND D.Period = SLAHrs.Period
WHERE D.Period is not null
AND DA.[Date] between @StartDate and @Enddate
Group by DA.EntityID, D.Period,SLAHrs.Hrs,SLAHrs.AdjHrs,DA.ProjectID
HAVING sum(round(DateDiff(n,DA.[Date],DA.EndDate) / 60.00,2))  - isnull(SLAHrs.Hrs,0) <> 0
ORDER BY D.Period


SET ANSI_WARNINGS ON
SELECT 
	E.Company as [Client],
	S1.HoursPerMonth as [SLA Hours],
	S1.Hrs as [Hours Done]
FROM #SLA S1
LEFT JOIN (SELECT SLAID, Period,HoursPerMonth - AdjHrs  as [RemHrs]  FROM #SLA) S2
    ON S1.SLAID = S2.SLAID AND S2.Period between dateadd(M, - isnull(S1.HoursExpireAfter,0) +1, S1.Period) and  S1.Period
LEFT JOIN (SELECT entityID, Company FROM Entity) E 
    ON S1.Entityid = E.EntityId
LEFT JOIN (SELECT * FROM Lookup where Class like 'SLAResourceType') LRT
    ON S1.SLAResourceTypeID = LRT.Lookupid
LEFT JOIN (SELECT * FROM SLAProject) SP
    ON S1.SLAID = SP.SLAID
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON SP.ProjectID = P.ProjectID
    
{where}
GROUP BY S1.SLAID, E.Company, S1.Period, S1.HoursExpireAfter,S1.StartDate, S1.EndDate,LRT.Value, S1.HoursPermonth,S1.Hrs, S1.AdjHrs, SLADescription
Order by  e.Company, s1.Period
    
SET NOCOUNT OFF","0","","1","LRA-FUSION","0","0","fusion"
"40390","cv_fleetman","","select f.fleetID,
	   f.Caryear as [Year of Car],
	   S.Driver AS [CAP Assistance],
	   B.Value as [BranchID],
	   f.OldRegNum as [Old Registration Number],
	   f.NewRegnum as [New Registration Number],
	   cm.Value as [Car make],
	   f.Carmodel as [Car Model],
	   f.EngineCapacity as [Engine Capacity],
	   f.VINNum as [VIN Number],
	   f.TrackingDevice as  [Tracking Device],
	   f.CurrentKM as [Current KM],
	   f.TermDate as [Term Date],
	   f.CurrentDate as [Current Date],
	   dbo.fnFormatNumber(f.RentalPrice) as [Rental Price],
	   dbo.fnFormatNumber(f.PurchasePrice) as [Purchase Price],
	   dbo.fnFormatNumber(f.Insurance) as [Insurance],
	   dbo.fnFormatNumber(f.TrackerCost) as [Tracker Cost],
	   dbo.fnFormatNumber(ft.Fuelcost) as [Fuel Cost],
	   dbo.fnFormatNumber(R.[service]) as [Sevice Cost],
	   f.LicenseExp as [Licence Expirey Date],
	   f.allocationID as [Allocation]
	   from fleetdetails f
LEFT JOIN (SELECT StaffId, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as Driver FROM Staff WHERE Isnull(isdriver,0) = 1) S ON S.StaffID = F.DriverID
left join lookup cm on cm.lookupID = f.Carmake
left join lookup B on b.lookupid = f.branchID
left join (select Sum(Cost) as Fuelcost,FleetID from Fueltour group by FleetID)FT on FT.FleetID=F.FleetID
Left Join (select  Sum(Cost) as [service],FleetID from repairs group by FleetID) R on R.FleetID=F.FleetID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40391","cv_Parts","","select partID, (select isnull(value,'') from lookup L where lookupid = P.partTypeID) as [Type], 'R '+convert(varchar,Cost) as Cost, [Desc] as [Description]
from partDetails P
where FleetID = {fleetid}","0","","1","LRA-FUSION","0","0","fusion"
"40392","cv_Fleet_Incidents","","select incidentid
	,incdate [Date of Incident]
	,s.[Driver]
	,l.value [Branch]
	
	,IncType [Type of Incident]
	,case isnull(SapReport,0) when 1 then 'Yes' else 'No' end [Reported to NAMPOL]
	,case isnull(phototaken,0) when 1 then 'Yes' else 'No' end [Photos Taken]
from incidentDetails i
left join(select staffid, isnull(firstname,'') + ' ' + isnull(surname,'') [Driver] from staff) s
	on s.staffid = i.driverid
left join (select lookupid,value from lookup) l
	on l.lookupid = i.branchid
where fleetid = {fleetid}","0","","1","LRA-FUSION","0","0","fusion"
"40393","cv_FleetFines","","select fineid
	,FineDate [Date of Fine]
	,'R ' + convert(varchar,convert(decimal(12,2),replace(Cost,'R',''))) [Cost of Fine]
	,Descr as [Description]
	,lF.value [Status]
	,duedate [Date Due]
	,nextdate [Next Action Date]
	,l.value [Next Action]
from fines f
left join (select lookupid,value from lookup) l
	on l.lookupid = f.nextactionid
left join (select lookupid,value from lookup) lf
	on lf.lookupid = f.fineStatusID
where fleetid = {fleetid}","0","","1","LRA-FUSION","0","0","fusion"
"40394","cv_FleetRepairs","","select RepairID
    
    ,IncDate [Incident Date]
    ,Descr [Description]
    ,l.Value [Status]
    ,DueDate [Date Due]
    ,incType [Type]
    ,'R' + convert(varchar,convert(decimal(12,2),replace(cost,'R',''))) [Cost]
from repairs r
left join(select staffid,isnull(firstname,'') + ' ' + isnull(surname,'') [Driver] from staff) s
    on s.staffid = r.driverid
left join (select lookupid, value from lookup) l
    on l.lookupid = r.statusID
where fleetid = {fleetid}","0","","1","LRA-FUSION","0","0","fusion"
"40395","CV_FuelTour","","SELECT     dbo.Fueltour.IDFuelTour, dbo.Entity.Company AS Supplier, dbo.Fueltour.Datefuel AS [Date fuelled], dbo.Fueltour.Litres, dbo.Fueltour.cost, dbo.Fueltour.comments, 
                      dbo.Staff.Firstname + ' ' + dbo.Staff.Surname AS [Fuelled by]
FROM         dbo.Staff INNER JOIN
                      dbo.Fueltour ON dbo.Staff.StaffID = dbo.Fueltour.DriverID INNER JOIN
                      dbo.Entity ON dbo.Fueltour.IDSuplier = dbo.Entity.EntityID
WHERE     dbo.Fueltour.FleetID ={where}","0","","1","LRA-FUSION","0","0","fusion"
"40396","cv_licence","","select l.licencemanid, e.company as [Company], ec.firstname + ' ' + ec.surname as [Contact], l1.value as [Type], 
'R ' + convert(varchar,cast(Amount as money)) as [Amount], l.BillingDate As [Billing Date]
from licenceman l
left join entity e on e.entityid = l.entityid 
left join entitycontact ec on ec.entitycontactid = l.entitycontactid
left join lookup l1 on l1.lookupid = l.paymenttypeid {where}","0","","1","LRA-FUSION","0","0","fusion"
"40397","cv_InvolvedPeople","","select InvolvedID
	,isnull(firstname,'') + ' ' + isnull(surname,'') as [Person]
	,IDNumber [ID Number] 
	,case isnull(IsInjured,0) when 0 then 'No' else 'Yes' end [Injured]
	,L.value [Injury Type]
from involvedPeople p
left join lookup L on p.injtypeid = L.lookupid
where incidentID = {incid}","0","","1","LRA-FUSION","0","0","fusion"
"40398","CV_Accomodation_Calender","","SELECT DocID,StockID,StockCode, StockDescription, isnull([Booked],'') as [Booked],StartDate,EndDate, [Rental Period Type],[Rank], [Client]
from 
(

SELECT distinct null as DocID,null as StockID,A.StockCode, A.StockDescription, null as [Booked],null as   StartDate,null as EndDate, RPT.[Rental Period Type] ,1 as [Rank],null as [Client] FROM AccStock A
LEFT JOIN (

    SELECT 
    DocNo
    ,DD.LineID
    ,DD.StockID
    ,DD.StockCode
    ,R.StartDate
    ,R.EndDate
    ,CASE ISNULL(INV.DocID,0) WHEN 0 THEN 'Provisionally Booked' ELSE 'Booked' END As [Booked]
,DM.DocID
,E.company
   FROM Debtor_Master DM
    LEFT JOIN (SELECT EntityID, company, AccountNum FROM Entity) E
ON DM.EntityID = E.EntityID
  	LEFT JOIN (
		SELECT * FROM Debtor_Detail
	) DD ON DD.DocID = DM.DociD
	LEFT JOIN (
	
		SELECT * FROM Rental
	) R ON R.LineID = DD.LineID AND R.DocID = DD.DocID

	LEFT JOIN (
		SELECT DM.DocID, DM.PreviousDocID, DD.StockID FROM Debtor_Master DM
		LEFT JOIN (
			SELECT * FROM Debtor_Detail
		) DD ON DD.DocID = DM.DociD
		where DM.DocType like 'Invoice'
	) INV ON INV.PreviousDocID = DM.DocID AND INV.StockID = DD.StockID
	 
	LEFT JOIN (
		SELECT * FROM Debtor_Payment
	) DP ON DP.InvoiceDocID = INV.DocID

	LEFT JOIN (
		SELECT * FROM AccStock
	) A ON A.StockID = DD.StockID
	WHERE DM.DocType LIKE 'Sales Order' 
	AND R.DocID IS NOT NULL

) X ON X.StockID = A.StockID
LEFT JOIN (
    SELECT 1 as RentalPeriodType, 'Hours' as [Rental Period Type] UNION ALL SELECT 2, 'Days' UNION ALL SELECT 3, 'Nights' UNION ALL SELECT 4, 'Weeks' UNION ALL SELECT 5, 'Months'
) RPT ON RPT.RentalPeriodType = A.RentalPeriodType
WHERE  ISNULL(A.IsRentable,0) <> 0 {Date1}{where}

Union all

SELECT DocID,A.StockID,A.StockCode, A.StockDescription, isnull([Booked],'') as [Booked],StartDate,EndDate, RPT.[Rental Period Type] , 2 as [Rank],Company as [Client] FROM AccStock A
LEFT JOIN (

    SELECT 
    DocNo
    ,DD.LineID
    ,DD.StockID
    ,DD.StockCode
    ,R.StartDate
    ,R.EndDate
    ,CASE ISNULL(INV.DocID,0) WHEN 0 THEN 'Provisionally Booked' ELSE 'Booked' END As [Booked]
	,E.company
,DM.DocID
    FROM Debtor_Master DM
    LEFT JOIN (SELECT EntityID, company, AccountNum FROM Entity) E
ON DM.EntityID = E.EntityID
  	LEFT JOIN (
		SELECT * FROM Debtor_Detail
	) DD ON DD.DocID = DM.DociD
	LEFT JOIN (
	
		SELECT * FROM Rental
	) R ON R.LineID = DD.LineID AND R.DocID = DD.DocID

	LEFT JOIN (
		SELECT DM.DocID, DM.PreviousDocID, DD.StockID FROM Debtor_Master DM
		LEFT JOIN (
			SELECT * FROM Debtor_Detail
		) DD ON DD.DocID = DM.DociD
		where DM.DocType like 'Invoice'
	) INV ON INV.PreviousDocID = DM.DocID AND INV.StockID = DD.StockID
	 
	LEFT JOIN (
		SELECT * FROM Debtor_Payment
	) DP ON DP.InvoiceDocID = INV.DocID

	LEFT JOIN (
		SELECT * FROM AccStock
	) A ON A.StockID = DD.StockID
	WHERE DM.DocType LIKE 'Sales Order' 
	AND R.DocID IS NOT NULL

) X ON X.StockID = A.StockID
LEFT JOIN (
    SELECT 1 as RentalPeriodType, 'Hours' as [Rental Period Type] UNION ALL SELECT 2, 'Days' UNION ALL SELECT 3, 'Nights' UNION ALL SELECT 4, 'Weeks' UNION ALL SELECT 5, 'Months'
) RPT ON RPT.RentalPeriodType = A.RentalPeriodType
WHERE  ISNULL(A.IsRentable,0) <> 0 {Date2}
{where}
)P

 Order By StockDescription,[Rank]","0","","1","LRA-FUSION","0","0","fusion"
"40399","cv_Staff_Competency","","SELECT L.LookupID, L.Value, ISNULL(SC.StaffCompID,0) as [Competent] FROM Lookup L
LEFT JOIN (
SELECT * FROM StaffCompetency WHERE StaffID = {staffid}
) SC ON SC.CompetencyID = L.LookupID
WHERE L.Class LIKE 'StaffCompetencies' 
","0","","1","LRA-FUSION","0","0","fusion"
"40400","cv_License","","select LicenseID, LicenseNum as [License Number], convert(varchar,testdate,111) as [Date of Test], 
convert(varchar,ExpiryDate,111) as [Date of Expiry], NumPersons as [Persons], EngineNum as [Engine Number],
Notes, (select isnull(value,'') from lookup LO where lookupid = L.TypeID) as [Type]  
from licensedetails L
where fleetID = {fleetid}","0","","1","LRA-FUSION","0","0","fusion"
"40401","cv_Check_module_Assignees","","SELECT 
	M.ModuleID
	, P.ProjectName
	, M.ModuleName
	, M.StartDate 
	, M.EndDate 
	,[Employee]
FROM Modules M
LEFT JOIN (
	SELECT ModuleID, StaffID FROM ModuleAssignees
) MA ON MA.ModuleID = M.ModuleID
LEFT JOIN (
	SELECT UserID, StaffID FROM Users
) U ON U.StaffID = MA.StaffID
LEFT JOIN (SELECT StaffID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Employee] FROM Staff) S ON S.StaffID = MA.StaffID
LEFT JOIN (
	SELECT ProjectID, ProjectName FROM Projects
) P ON P.ProjectID = M.ProjectID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40402","cv_Project_Teams","","SELECT DISTINCT 
	S.StaffID
	, S.Firstname
	, S.Surname
	{SQLSelect}
FROM Staff S
LEFT JOIN (
SELECT * FROM StaffCompetency
) SC ON SC.StaffID = S.StaffID
LEFT JOIN (
	SELECT LookupID, Value as Competency FROM Lookup WHERE Class LIKE 'StaffCompetencies'
) L ON L.LookupID = SC.CompetencyID
GROUP BY S.StaffID
	, S.Firstname
	, S.Surname","0","","1","LRA-FUSION","0","0","fusion"
"40403","cv_Asset_Containers","","
SELECT LinkLookupID, Value FROM LinkLookup where class like 'StockContainer' ORDER BY Value","0","","1","LRA-FUSION","0","0","fusion"
"40404","qf_companies_leads","","SELECT LeadID, Company FROM Lead
WHERE (company LIKE '<%replace%>%') 
ORDER BY Company","0","","1","LRA-FUSION","0","0","fusion"
"40405","CV_AccommodationMan","","select
[AccommodationID]
,[AccommodationID] as [ID],
AC.StockCode as [Room]
,E.Company as [Client]
,isnull(EC.FirstName,'') + ' ' + isnull(EC.Surname,'') as [Contact]
,convert(varchar(20),[DateFrom],103) as [Date From]
,convert(varchar(20),[DateTo],103) as [Date To]
,A.Comments as [Comment]
,isnull(U.FirstName,'') + ' ' + isnull(U.Surname,'') as [Booked By]
,isnull(US.FirstName,'') + ' ' + isnull(US.Surname,'') as [Modified By]
,convert(varchar(20),A.[DateCreated],103) as [Date Created]
,convert(varchar(20),A.[DateModified],103) as [Date Modified]
,isnull(A.Statuses,'') as Status
From
[Accommodation] A
Left Join Entity E on E.[EntityID]= A.[EntityID]
Left Join AccStock AC on AC.StockID=A.RoomID
Left Join EntityContact EC on EC.EntityContactID= A.EntityContactID
Left Join Users U on U.UserID = A.[CreatedBy]
Left Join Users US on US.UserID = A.[ModifiedBy]
--Left Join Lookup L on L.LookupID = A.StatusID and L.class='AccommodationStatus'
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40406","CV_AccommodationManHistory","","select
AccommodationHistoryID
,AccommodationHistoryID as [ID],
AC.StockCode + '  ' + StockDescription as [Room]
,E.Company as [Client]
,isnull(EC.FirstName,'') + ' ' + isnull(EC.Surname,'') as [Contact]
,convert(varchar(20),[DateFrom],103) as [Date From]
,convert(varchar(20),[DateTo],103) as [Date To]
,A.Comments as [Comment]
,isnull(U.FirstName,'') + ' ' + isnull(U.Surname,'') as [Booked By]
,isnull(US.FirstName,'') + ' ' + isnull(US.Surname,'') as [Modified By]
,convert(varchar(20),A.[DateCreated],103) as [Date Created]
,convert(varchar(20),A.[DateModified],103) as [Date Modified]
,isnull(A.Statuses,'') as Status
From
AccommodationHistory A
Left Join Entity E on E.[EntityID]= A.[EntityID]
Left Join AccStock AC on AC.StockID=A.RoomID
Left Join EntityContact EC on EC.EntityContactID= A.EntityContactID
Left Join Users U on U.UserID = A.[CreatedBy]
Left Join Users US on US.UserID = A.[ModifiedBy]
--Left Join Lookup L on L.LookupID = A.StatusID and L.class='AccommodationStatus'
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40407","CV_AccommodationMain_calender","","
select
AccommodationID
 ,StockID
 ,StockCode
 ,StockDescription
 ,DateFrom
 ,DateTo
 , [Client]
 ,[Status]
 ,rank
,[ID]
 from 
 (
select distinct
null as AccommodationID
 ,null as StockID
 ,A.StockCode
 ,A.StockDescription
 ,null as DateFrom
 ,null as DateTo
 ,null as [Client]
 ,null as [Status]
 , 1 as rank
,A.StockID as [ID]
from Accstock A
Left Join accommodation ACC on  ACC.RoomID=A.StockID
Left Join Entity E on E.EntityID=ACC.EntityID
where ISNULL(A.IsRentable,0) <> 0 {Date1}{where}

Union All

select 
AccommodationID
 ,A.StockID
 ,A.StockCode
 ,A.StockDescription
 ,ACC.DateFrom
 ,ACC.DateTo
 ,isnull(E.Company,'') as [Client]
 ,Isnull([Statuses],'') as [Status]
 ,2 as rank 
,A.StockID as [ID]
from Accstock A
Left Join accommodation ACC on  ACC.RoomID=A.StockID
Left Join Entity E on E.EntityID=ACC.EntityID
where ISNULL(A.IsRentable,0) <> 0 {Date2}
{where}
)x

 Order By StockDescription,[Rank]","0","","1","LRA-FUSION","0","0","fusion"
"40408","cvJobStockDocuments","","select acb.brochureid,acc.StockCode,acc.StockDescription,acb.BrochurePath from job_stock js inner join accstockbrochure acb
on acb.StockID = js.StockID
inner join accstock acc
on acc.stockid = js.stockid
and js.projectid = {projectid}
","0","","1","LRA-FUSION","0","0","fusion"
"40409","cvManufactureStockDocuments","","--Returns documents linked to output items of Manufacture Details

select acb.BrochureID,acc.StockCode,acb.BrochurePath from accmanufacture am
left join accmanufacture_output amo 
on amo.docid = am.docid
inner join accstockbrochure acb 
on acb.stockid = amo.stockid
left join accstock acc
on acc.stockid = amo.stockid
where am.DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40410","cv_Contract_Rental_Detailsbk","","declare @DocID as int
set @DocID = {docid}

--SELECT LineID,[Start], [End], Duration, [Group], [Stock Code] as [Code], [Description], Qty, Discount, [Price Ex.], [Price Incl.],[Total Incl.] 
SELECT LineID, [Stock Code] as [Code], [Description], QTY, Duration as [Period], [Price Ex.] as [Rate], Discount, [Total Incl.], [Start] as [Date Out],
	[StartTime] as [Time Out],/*[End] as [Date In], [EndTime] as [Time In],*/ ISNULL(RetrunQty,0) as [QTY Returned], Qty - ISNULL(RetrunQty,0) as [Still Out]
FROM	(
	--Select Main items
	SELECT DISTINCT convert(varchar,CED.lineid) + 'M'  as [LineID],
	convert(varchar,R.StartDate,111) as [Start], convert(varchar,R.Enddate,111) as [End],
	convert(varchar,R.StartDate,108) as [StartTime], convert(varchar,R.Enddate,108) as [EndTime],
	Convert(varchar,R.Duration) + ' ' + Case R.RentalPeriodType WHEN 1 THEN 'Hours' WHEN 2 THEN 'Days' WHEN 3 then 'Nights' WHEN 4 then 'Weeks' WHEN 5 THEN 'Months' END as [Duration],
	GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	CED.Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * CED.Qty * (TAX /100 + 1) ) as [Total Incl.],
	Rank, -1000 as [Rank2], 0 as [IsComponent],
	CED.LineID as ItemID,
	CR.Qty as [RetrunQty]
	FROM CONTRACT_DETAIL CED
	LEFT JOIN Rental R
	ON CED.RentalLineID = R.RentalID AND R.DocType = 'Contract'
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	LEFT JOIN (SELECT StockID, ProjectID, LineID, SUM(Qty) as [Qty] FROM AccStockControl WHERE DocType = 'Stock Take' GROUP BY StockID, ProjectID, LineID) CR
	ON CR.StockID = CED.StockID AND CR.ProjectID = CED.DocID AND CR.LineID = CED.LineID 
	where isnull(ComponentOfLineID,0)  = 0
	AND CED.DocID =  @DocID
	AND isnull(CED.RentalLineID,0) > 0 	
	
	UNION ALL
	
	--Select component items
	SELECT DISTINCT convert(varchar,CED.lineid) + 'C'  as [LineID],
	convert(varchar,R.StartDate,111) as [Start], convert(varchar,R.Enddate,111) as [End],
	convert(varchar,R.StartDate,108) as [StartTime], convert(varchar,R.Enddate,108) as [EndTime],
	Convert(varchar,R.Duration) + ' ' + Case R.RentalPeriodType WHEN 1 THEN 'Hours' WHEN 2 THEN 'Days' WHEN 3 then 'Nights' WHEN 4 then 'Weeks' WHEN 5 THEN 'Months' END as [Duration],
	Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	CED.Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * CED.Qty * (TAX /100 + 1)) as [Total Incl.], 
	(SELECT Top 1 Rank From CONTRACT_DETAIL Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2], 1 as [IsComponent],
	ComponentOfLineID,
	CR.Qty
	FROM CONTRACT_DETAIL CED
	LEFT JOIN (SELECT * FROM Rental) R
	ON CED.RentalLineID = R.RentalID AND R.DocType = 'Contract'
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 	
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT StockID, ProjectID, SUM(Qty) as [Qty] FROM AccStockControl WHERE DocType = 'Stock Take' GROUP BY StockID, ProjectID) CR
	ON CR.StockID = CED.StockID AND CR.ProjectID = CED.DocID 
	where isnull(ComponentOfLineID,0)  > 0
	AND CED.DocID =  @DocID
	AND (isnull(CED.RentalLineID,0) > 0 OR CED.ComponentOfLineID in (SELECT LineID FROM Contract_Detail where isnull(RentalLineID,0) > 0))
	) A
{where}
ORDER BY  ItemID, Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"40411","cv_Contract_Accessory_Detailsbk","","declare @DocID as int
set @DocID = {docid}

SELECT LineID, [Group], [Stock Code] as [Code], [Description], [Comments], Qty, Discount, [Price Ex.], [Price Incl.],[Total Incl.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1) ) as [Total Incl.],
	Rank, -1000 as [Rank2], 0 as [IsComponent],
	ISNULL(CED.IsDelivery,0) as [IsDelivery]
	FROM CONTRACT_DETAIL  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND DocID =  @DocID
	AND isnull(CED.RentalLineID,0) = 0 
	
	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
	dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
	dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
	dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1)) as [Total Incl.], 
	(SELECT Top 1 Rank From CONTRACT_DETAIL Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2], 1 as [IsComponent],
	ISNULL(CED.IsDelivery,0) as [IsDelivery]
	FROM CONTRACT_DETAIL CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND DocID =  @DocID
	AND (isnull(CED.RentalLineID,0) > 0 OR CED.ComponentOfLineID NOT IN (SELECT LineID FROM Contract_Detail where isnull(RentalLineID,0) > 0))
	) A
{where}
ORDER BY  Rank,Rank2
","0","","1","LRA-FUSION","0","0","fusion"
"40412","cv_Acc_Cost_Project_Pop","","declare @ProjectID as int
declare @StockType as int

SET @ProjectID = {projectid}
SET @StockType = {stocktypeid}
SELECT LineID,Qty, [Price Ex.]
FROM	(
	--Select Main items
	SELECT 
		convert(varchar,CED.Docid) + '#' + convert(varchar,lineid) + 'M'  as [LineID]
		,left('00000000', 8- len(CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END)) + convert(varchar,CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END) as [Doc. No.]
		,GroupName as [Group]
		,ProjectName as [Project]
		,StockCode as [Stock Code]
		,StockDescription as [Description]
		,Comments
		,Company as [Supplier]
		,Qty
		,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount]
		,dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.]
		,dbo.fnFormatNumber(PriceEx ) as [Price Ex.]
		,dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.]
		,dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1) ) as [Total Incl.]
		,Rank
		,-1000 as [Rank2]
	FROM Cost_Estimate_Detail  CED
	LEFT JOIN (SELECT DocID	,PreviousDocID,RevisedToDoc,Revision	,DocStatus	,ProjectID 	FROM Cost_Estimate_Master) CEM
		ON CED.DocID  = CEM.DocID
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
		ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
		ON CED.ProjectID = P.projectID
	LEFT JOIN (	SELECT StockID,StockType FROM AccStock) S
		ON CED.StockID  = S.StockID
	where isnull(ComponentOfLineID,0)  = 0
	AND isnull(CEM.RevisedToDoc,0) = 0
	AND S.StockType = @StockType 
	AND CEM.DocStatus <> 'Rejected'
	AND isnull(CED.ProjectID, CEM.ProjectID) =  @ProjectID
	AND CEM.DocID NOT IN (SELECT DocID FROM ProjectBudgetQuotes WHERE ProjectID = @ProjectID)
	
	UNION ALL
	
	--Select component items
	SELECT 
		convert(varchar,CED.Docid) + '#' + convert(varchar,lineid) + 'C'  as [LineID]
		,left('00000000', 8- len(CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END)) + convert(varchar,CASE WHEN isnull(CEM.Revision,0) > 0 then isnull(CEM.PreviousDocID,CEM.DocID) ELSE  CEM.DocID END) as [Doc. No.]
		,Null as [Group]
		,null as [Project]
		,'-    ' + StockCode as [Stock Code]
		,'-    ' + StockDescription as [Description]
		, Comments
		,Company as [Supplier]
		,Qty
		,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount]
		,dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.]
		,dbo.fnFormatNumber(PriceEx ) as [Price Ex.]
		,dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.]
		,dbo.fnFormatNumber(PriceEx * Qty * (TAX /100 + 1)) as [Total Incl.]
		,(SELECT Top 1 Rank From Cost_Estimate_Detail Where LineID = CED.ComponentOfLineID) 
		,Rank as [Rank2]
	FROM Cost_Estimate_Detail CED
	LEFT JOIN (
		SELECT 
			DocID
			, PreviousDocID
			, RevisedToDoc
			, Revision
			, DocStatus
			, ProjectID 
		FROM Cost_Estimate_Master
	) CEM
	ON CED.DocID  = CEM.DocID
	LEFT JOIN (	SELECT StockID,StockType FROM AccStock	) S
			ON CED.StockID  = S.StockID
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND isnull(CEM.RevisedToDoc,0) = 0
	AND S.StockType = @StockType 
	AND CEM.DocStatus <> 'Rejected'
	AND isnull(CED.ProjectID, CEM.ProjectID) =  @ProjectID
	AND CEM.DocID NOT IN (SELECT DocID FROM ProjectBudgetQuotes WHERE ProjectID = @ProjectID)
	) A
	{where}
ORDER BY  [Doc. No.],Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"40413","cvPrintJobSubBuilds","","select '' as LineID,'' As [Group],'' As Project
,acc.StockCode as [Stock Code]
,acc.StockDescription as [Description]
,acc.Specifications as [Comments]
,e.Company as [Supplier]
,accdep.DepSellingQTY as [Qty]
,0 As Discount
 from accstock_dep accdep
left join accstock acc on
acc.stockid = accdep.depstockid

left join accstockprice accp on
accp.StockID = accdep.Pristockid 

left join entity e on 
e.EntityID = accp.SupplierID
where accdep.pristockid = {stockid}
and accp.PriceCategoryID = {pricecategoryid}","0","","1","LRA-FUSION","0","0","fusion"
"40414","cv_Batch_SLA","","SET ANSI_WARNINGS OFF
SET NOCOUNT ON

DECLARE @EntityID as int
DECLARE @StartDate as datetime
DECLARE @EndDate as datetime
DECLARE @CurrentDate as datetime
SET @EntityID = {entityid}
SET @StartDate = (SELECT min(startDate) FROM SLA where EntityID = @EntityID)
SET @EndDate = (SELECT max(EndDate) FROM SLA where EntityID = @EntityID)
SET @CurrentDate = convert(varchar,year(@StartDate)) + '/' + convert(varchar,month(@Startdate)) + '/' + '15'




IF OBJECT_ID(N'tempdb..#Dates', N'U') IS NOT NULL 
BEGIN
    DROP TABLE #Dates;
END

CREATE TABLE #Dates
(Period Datetime)

WHILE @CurrentDate < @EndDate
BEGIN
    INSERT INTO #Dates
    SELECT convert(varchar,@CurrentDate,111)
    SET @CurrentDate = dateadd(m,1,@CurrentDate)
END


IF OBJECT_ID(N'tempdb..#SLA', N'U') IS NOT NULL 
BEGIN
    DROP TABLE #SLA;
END

CREATE TABLE #SLA
(SLAID Int,
IsAllProjects Bit,
EntityID Int,
HoursExpireAfter Int,
Period Datetime,
SLAResourceTypeID Int,
StartDate DateTime,
EndDate DateTime,
HoursPerMonth float,
Hrs float,
AdjHrs float,
HrsRemaining float,
SLADescription Varchar(250),
ProjectID int
)


--Create dates in range
WHILE @CurrentDate < @EndDate
BEGIN
    INSERT INTO #Dates
    SELECT convert(varchar,@CurrentDate,111)
    SET @CurrentDate = dateadd(m,1,@CurrentDate)
END

--Actual SLAs
INSERT INTO #SLA
SELECT S.SLAID, S.IsAllProjects, S.Entityid,   
S.HoursExpireAfter,
D.Period,
S.SLAResourceTypeID,
S.Startdate,
S.EndDate,
HoursPerMonth,
sum(round(DateDiff(n,DA.[Date],DA.EndDate) / 60.00,2))  as [Hrs], 
sum(round(cast(DateDiff(n,DA.[Date],DA.EndDate)as float) * (isnull(DA.StaffCurrentRate,100.00)/100.00) / 60.00, 2))  as [AdjHrs],
0 as [HrsRemaining],SLADescription, P.ProjectID as [ProjectID]
FROM Projects P
LEFT JOIN (SELECT * FROM SLAProject) SP ON P.ProjectID  = SP.ProjectID
LEFT JOIN (SELECT * FROM SLA) S ON S.SLAID = SP.SLAID OR S.IsAllProjects = 1
LEFT JOIN #Dates D  on D.Period between S.StartDate AND S.EndDate
LEFT JOIN (SELECT * FROM SLATaskType) ST ON S.SLAID = ST.SLAID
LEFT JOIN (SELECT * FROM DevAppointment) DA
    ON S.EntityID = DA.EntityID
    AND (year(DA.[Date]) = year(D.Period) AND month(DA.[Date]) = month(D.Period))
    AND (P.ProjectID = DA.ProjectID )
    AND (ST.TaskTypeID = DA.TaskTypeID OR isnull(S.IsAllTaskTypes,0) = 1)
WHERE D.Period is not null
AND P.EntityID = @Entityid
Group by S.SLAID, S.EntityID, D.Period, S.StartDate, S.EndDate, S.HoursPerMonth,S.SLAResourceTypeID, S.HoursExpireAfter,S.IsAllProjects,S.SLADescription, P.ProjectID
ORDER BY D.Period

SET ANSI_WARNINGS ON


SELECT SLA, [Start], [End], [Total Hours], [Total Used], [Available] FROM (
      --SLA Header
      SELECT SLADescription as [SLA], convert(varchar,StartDate,111) as [Start],convert(varchar,EndDate,111) as [End], 
      datediff(m,StartDate,EndDate) * HoursPerMonth as [Total Hours], sum(isnull(AdjHrs,0)) as [Total Used], 
      datediff(m,StartDate,EndDate) * HoursPerMonth - sum(isnull(AdjHrs,0)) as [Available],
      SLAID as [Rank1], 0 as [Rank2], 0 as [Rank3], '0' as [Rank4]
      FROM #SLA
      Group by SLADescription,StartDate,EndDate,HoursPerMonth,SLAID


      UNION ALL

      --Project Header
      SELECT null as [SLA], ProjectName as [Start], null as [End], null as [Total Hours], null as [Total Used], null as [Available],
      S.SLAID as [Rank1], P.ProjectID as [Rank2], 0 as [Rank3], '0' as [Rank4]
      FROM Projects P 
      LEFT JOIN (SELECT * FROM SLAProject) SP
      ON P.ProjectID = SP.ProjectID
      LEFT JOIN (SELECT SLAID, IsAllProjects,EntityID FROM SLA) S
      ON P.EntityID = S.EntityID AND (S.SLAID = SP.SLAID OR S.ISAllProjects = 1)
      where P.EntityID = @EntityID

      UNION ALL

      --Timesheet Hours
      SELECT null as [SLA], null as [Start], 
      convert(varchar,year(Period)) + '/' + Case WHEN len(convert(varchar,month(Period))) = 1 then '0' ELSE '' END + convert(varchar,month(Period))  as [End],
      sum(isnull(AdjHrs,0)) as [Total Hours], null as [Total Used], null as [Available],
      S.SLAID as [Rank1], S.ProjectID as [Rank2],0  as [Rank3], convert(varchar,year(Period)) + '/' + Case WHEN len(convert(varchar,month(Period))) = 1 then '0' ELSE '' END + convert(varchar,month(Period))  as [Rank4]
      FROM #SLA S
      Group by convert(varchar,year(Period)) + '/' + Case WHEN len(convert(varchar,month(Period))) = 1 then '0' ELSE '' END + convert(varchar,month(Period))  , S.SLAID, S.ProjectID

      UNION ALL
      
      --Total Hours
      SELECT null as [SLA], null as [Start], 
      'TOTAL:' as [End],
      sum(isnull(AdjHrs,0)) as [Total Hours], null as [Total Used], null as [Available],
      S.SLAID as [Rank1], S.ProjectID as [Rank2], 1 as [Rank3], '99999'  as [Rank4]
      FROM #SLA S
      Group by  S.SLAID, S.ProjectID
) A
ORDER BY Rank1, Rank2, Rank3,Rank4



SET NOCOUNT OFF

","0","","1","LRA-FUSION","0","0","fusion"
"40415","cv_Batch_SLA_Header","","SELECT 
	ISNULL(E.Company,'') as [<client>],
	ISNULL(FirstName,'') + ' ' + ISNULL(Surname,'') as [<contact>],
	ISNULL(EC.Email,'') as [<email>],
	convert(varchar,GETDATE(),11) AS [<docdate>]
FROM EntityContact EC
LEFT JOIN Entity E ON E.EntityID = EC.EntityID
where entityContactID = {entityContactID} OR E.EntityID = {entityID}","0","","1","LRA-FUSION","0","0","fusion"
"40416","cv_UDF_DrillDown","","SELECT 
	Z.[Key],
	Z.ID,
	Z.[Group],
	Z.[Sub Group],
	Z.[Field Name],
	Z.[Value]
FROM (
	SELECT DISTINCT
		'SG' + CONVERT(VARCHAR, LL.LinkLookupID) as [Key],
		'' as [ID],
		L.Value as [Group],
		LL.Value as [Sub group],
		'' as [Field Name],
		'' as [Value],
		1 as [Rank],
		LL.LinkLookupID
	FROM customfieldvalues cfv 
	INNER JOIN  customfields cf  on  cf.CustomFieldID = cfv.CustomFieldID 
	AND customform = (SELECT TOP 1 formid FROM customfieldforms WHERE formname ={Form}) 
	AND cfv.EntityID = {EntityID}
	LEFT JOIN Lookup L on LookupID=cf.GroupID  
	LEFT JOIN LinkLookup LL on LL.linklookupID=cf.SubGroupID

	UNION ALL

	SELECT 
		'' + CONVERT(VARCHAR, cfv.customfieldvalueid),
		CONVERT(VARCHAR,cfv.customfieldvalueid) as [ID],
		'' as [SubGroupID],
		'' as [Sub group],
		cf.FieldName,
		cfv.Value,
		2 as [Rank],
		LL.LinkLookupID
	 FROM customfieldvalues cfv 
	 INNER JOIN  customfields cf  on  cf.CustomFieldID = cfv.CustomFieldID 
		AND customform = (select top 1 formid from customfieldforms where formname ={Form}) 
		AND cfv.EntityID = {EntityID}
	 LEFT JOIN Lookup L on LookupID = cf.GroupID  
	 LEFT JOIN LinkLookup LL on LL.linklookupID = cf.SubGroupID
	 WHERE LL.LinkLookupID = {linklookupid}	 
 )Z
 WHERE Z.[Key] is not null
 ORDER BY LinkLookupID, [Rank]","0","","1","LRA-FUSION","0","0","fusion"
"40417","qf_Tickets","","SELECT 
	T.TicketID,
	T.TicketID as [Ticket No],
	CONVERT(VARCHAR, DateCaptured, 111) + ' ' + CONVERT(VARCHAR, DateCaptured, 108) as [Date Captured],
	E.Company as [Holding Company],   
	EA.Company as [Company]
FROM Tickets T 
LEFT JOIN (SELECT EntityID, Company,Switchboard,Fax,AccountNum FROM Entity) E on E.EntityID = T.EntityID  
LEFT JOIN (SELECT EntityID, Company,Switchboard,Fax,AccountNum FROM Entity) EA on EA.EntityID = T.AddEntityID 
WHERE (CONVERT(VARCHAR, T.TicketID) Like '<%replace%>%'
OR (E.Company like '%<%replace%>%' 
OR EA.Company like '%<%replace%>%'))","0","","1","LRA-FUSION","0","0","fusion"
"40418","qf_Jobs","","SELECT 
	p.projectid, 
	p.ProjectID as [Job Number],
	P.ProjectName as [Job Name]
FROM projects p
LEFT JOIN entitycontact ec on ec.entitycontactid = p.entitycontactid
WHERE ISNULL(IsJob,0) = 1
AND p.projectname like '<%replace%>%'
{where}
ORDER BY p.projectname","0","","1","LRA-FUSION","0","0","fusion"
"40419","cv_SalesByProduct_Consolidated","","SELECT 
	newid(), 
	A.StockCode as [Code], 
	A.StockDescription as [Description],
	ST.Value as [Stock Type],
	LL.Value as [Sub Type],
	Currency, convert(varchar,avg([R.O.E.]),1) as [Avg. R.O.E], 
	sum([QTY]) as [Qty],
	dbo.fnFormatNumber(sum([Total Ex. VAT])) as [Total Ex. VAT], 
	dbo.fnFormatNumber(sum([Total VAT])) as [Total VAT],
	dbo.fnFormatNumber(sum([Total Incl. VAT])) as [Total Incl. VAT],
	dbo.fnFormatNumber(sum([Est. Cost])) as [Est. Cost],
	dbo.fnFormatNumber(sum([Profit])) as [Profit],
	dbo.fnFormatNumber(sum(CASE [Est. Cost] WHEN 0 THEN 0 ELSE [Profit] / [Est. Cost] END * 100)) as [Margin %],
	dbo.fnFormatNumber(sum(
		CASE [Total Ex. VAT] WHEN 0 THEN 0 ELSE 
		(CASE [Est. Cost] WHEN 0 THEN 0 ELSE ([Total Ex. VAT] - [Est. Cost]) / [Total Ex. VAT] END * 100) 
		END)) as [GP]
FROM 
(
    SELECT Convert(Varchar,DD.LineID) + '#' + DocType as [DocID], DocType as [Doc. Type], left('00000000', 8- len(DM.DocNo)) + convert(varchar,DM.DocNo) as [Doc. No.], 
    DM.DivisionID as [DivisionID], DM.EntityID ,isnull(DM.UseEC,0) as [UseEC],
    [ClientPO], P.ProjectName  as [Project],    isnull(DM.Memo,'') as Notes, 
    DateCreated as [Created],
    DateCompleted as [Doc. Date],
    DocStatus as [Status], 
    DM.SalesRepID as [SalesRepID],
    DM.CreatedBy,
    DM.Currency,cast(DM.ROE as money) as [R.O.E.],
    DD.StockCode, 
    DD.StockDescription,
    DD.QTY,
    CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1)) as [Total Ex. VAT], 
    CASE doctype when 'Credit Note' then -1 ELSE 1 END * (([Total Incl. VAT] - [Total Ex. VAT])  / isnull(DM.ROE,1)) as [Total VAT], 
    CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Incl. VAT]  / isnull(DM.ROE,1))  as [Total Incl. VAT],
    CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))  as [Est. Cost],
     (
        CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Total Ex. VAT] / isnull(DM.ROE,1))
        -
        CASE doctype when 'Credit Note' then -1 ELSE 1 END * ([Est. Cost]  / isnull(DM.ROE,1))
    ) as [Profit],
    DM.Period, DM.BatchID, DD.StockID
    FROM DEBTOR_MASTER DM
    LEFT JOIN (SELECT LineID, DocID, StockID, StockCode,StockDescription,
				Qty,
                (PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
                 (PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
                 Cast((isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
                 (PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
                 FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 ) DD
    ON DM.DocID = DD.Docid
    LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
    ON DM.DocID = SD.DocID
    LEFT JOIN (SELECT ProjectID, ProjectName From Projects) P
    ON DM.ProjectID = P.ProjectID
        

) A
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Consultant] FROM Users) U
    On A.SalesRepID = U.UserID
LEFT JOIN (SELECT LookupID, Value FROM Lookup where class ='Divisions') LD
    ON A.DivisionID = LD.LookupID
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID, AlternateCompanyID FROM Entity) E
    ON A.EntityID = E.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityID) ELSE Accountnum END as [AccountNum], Company,SalesConsID FROM Entity) EH
    ON E.AlternateCompanyID = EH.EntityID AND isnull(A.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, CASE WHEN isnull(Accountnum,'') ='' THEN Convert(varchar,EntityContactID) ELSE Accountnum END as [AccountNum],isnull(Firstname,'') + ' ' + isnull(surname,'') as [Contact] FROM EntityContact) EC
    ON A.Entityid = EC.EntityContactID AND isnull(A.useEC,0) = 1
LEFT JOIN (SELECT lookupid,value FROM Lookup where class = 'salescons') ExtSal
    ON E.SalesConsID = ExtSal.lookupid
LEFT JOIN AccStock STK ON STK.StockID = A.StockID
LEFT JOIN Lookup ST ON ST.LookupID = STK.StockType
LEFT JOIN LinkLookup LL ON LL.LinkedTo = STK.SubTypeID AND LL.LinkedTo = ST.LookupID
{where}
GROUP BY  A.StockCode,A.StockDescription,ST.Value,LL.Value,A.Currency
ORDER BY A.StockCode desc","0","","1","LRA-FUSION","0","0","fusion"
"40420","CV_Skills","","SELECT Distinct L.LookupID, L.Value, Case WHEN isnull(E.StockType,0)> 0 THEN 1 ELSE 0 END as [Ticked] FROM Lookup L
LEFT JOIN (SELECT * FROM AccomodationType WHERE StockType ={StockType} ) E ON L.LookupID = E.StockType
where 
(L.class like 'JobTitle')","0","","1","LRA-FUSION","0","0","fusion"
"40421","CV_Foods","","SELECT Distinct L.LookupID, L.Value, Case WHEN isnull(E.LookupID,0)> 0 THEN 1 ELSE 0 END as [Ticked] FROM Lookup L
LEFT JOIN (SELECT * FROM AccommodationFood WHERE AccomodationID={StockType} ) E ON L.LookupID = E.LookupID
where 
(L.class like 'FoodServices')","0","","1","LRA-FUSION","0","0","fusion"
"40422","CV_RoomInventory","","SELECT [RoomInventoryID]
    ,[RoomInventoryID] as [ID]
      ,[Stockcode]
      ,[StockDesc]
      ,isnull(QTY,0) as QTY
  FROM [AccommodationInventory]
  where [AccommodationID]={where}","0","","1","LRA-FUSION","0","0","fusion"
"40423","CV_PopulateAccomodationContacts","","select 
AC.AccommodationContactID
,AC.AccommodationContactID as [ID]
,isnull(EC.FirstName,'') as [First Name]
,isnull(EC.Surname,'') as [Surname]
--,isnull(EC.JobTitle,'') as [Skill]
,convert(varchar(20),[DateFrom],103) as [Arrival Date]
,convert(varchar(20),[DateTo],103) as [Departure Date]
,Case when DATEDIFF(day,[DateFrom],[DateTo])=0 then 1 else DATEDIFF(day,[DateFrom],[DateTo]) end AS [Days Booked]
,isnull([Status],'Pending') as [Status]
,convert(varchar(20),isnull([CheckedinDate],Null),103) as [Checked In Date]
,convert(varchar(20),isnull([CheckedoutDate],Null),103) as [Checked out Date]
,Case when isnull([Status],'Pending') <> 'Pending' then
Case when DATEDIFF(day,[CheckedinDate],isnull([CheckedoutDate],getdate()))=0 then 1 else DATEDIFF(day,[DateFrom],[DateTo]) end
 else
 0
end as [Actual Days]
from accommodationcontact AC
Left Join EntityContact EC on EC.EntityContactID=AC.EntityContactID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40424","cv_ticket_stock_lines","","declare @TicketID as int
declare @isAdd	as int
set @TicketID = {ticketid}
Set @isAdd = {isadd}

SELECT LineID, [Group],Project, [Stock Code], [Description], [Comments], [Supplier], Qty, Discount, [Cost Ex.], [Price Ex.], [Price Incl.],[Total Incl.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.],
	dbo.fnFormatNumber(cast(PriceEx as money) * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1))) as [Total Incl.],
	Rank, -1000 as [Rank2]
	FROM TicketStock  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT TicketID, ProjectName FROM Projects) P
	ON CED.TicketID = P.TicketID
	where isnull(ComponentOfLineID,0)  = 0
	AND ced.TicketID =  @TicketID
	AND isnull(ced.IsAdditional,0) = @isAdd

	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.],
	dbo.fnFormatNumber(cast(PriceEx as money) * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1))) as [Total Incl.],
	--convert(varchar,cast(TotalIncl as money),1) as [Total Incl.], 
	ISNULL((SELECT Top 1 Rank From Job_Stock Where LineID = CED.ComponentOfLineID),1) ,Rank as [Rank2]
	FROM TicketStock CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND ced.TicketID =  @TicketID
	AND isnull(ced.IsAdditional,0) = @isAdd

	) A
{where}
ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"40425","qf_Ticket_DocFind","","select 
	CONVERT(VARCHAR, DocID) + 'CE' as [ID],
	left('00000000', 8- len(DocID)) + convert(varchar,DocID) as [Doc. No.],
	'Quote' as [Doc. Type]
from cost_estimate_master cem 
left join entity e on e.entityid = cem.entityid 
where cem.docid like '%<%replace%>%'
and e.EntityID = {entityid}

UNION ALL 

SELECT 
	CONVERT(VARCHAR, DocID) + 'SO',
	left('00000000', 8- len(DocNo)) + convert(varchar,DocNo),
	DocType
FROM DEBTOR_MASTER DM
LEFT JOIN Entity E ON E.EntityID = DM.EntityID 
WHERE DM.DocNo like '%<%replace%>%'
AND DM.DocType = 'Sales Order'
AND E.EntityID = {entityid}
","0","","1","LRA-FUSION","0","0","fusion"
"40426","cv_ImportQuoteToTicket","","Declare @IsAdd As Bit
Set @IsAdd = {isadd}

Declare @TicketID As Integer
Set @TicketID = {ticketid}

Declare @Vat AS Float
Set @Vat = (select top 1 custvalue from crmsetup where variable = 'defaultvat')


insert into TicketStock
	(isadditional,comments,costpriceex,containerid,groupname,componentoflineid,[rank],supplierid,addtobudget,budgetdate
,ticketid,shippingdocid,stockid,stockcode,stockdescription,qty,discperc,priceex,pricecategoryid,taxtypeid,tax,ismarginbased,markupperc,wasteperc,clientid,divisionid,reportcategoryid,guardlineid,uselandedcost,rentallineid)
select 
	@IsAdd,
	comments,
	costpriceex,
	containerid,
	groupname,
	componentoflineid,
	[rank],
	supplierid,
	addtobudget,
	budgetdate,
	@ticketid,
	shippingdocid,
	stockid,
	stockcode,
	stockdescription,
	qty,
	discperc,
	priceex,
	pricecategoryid,
	taxtypeid,
	tax,
	ismarginbased,
	markupperc,
	wasteperc,
	clientid,
	divisionid,
	reportcategoryid,
	guardlineid,
	uselandedcost,
	rentallineid
from cost_estimate_detail 
where docid = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40427","cv_ImportDebtorToTicket","","Declare @IsAdd As Bit
Set @IsAdd = {isadd}

Declare @TicketID As Integer
Set @TicketID = {ticketid}

Declare @Vat AS Float
Set @Vat = (select top 1 custvalue from crmsetup where variable = 'defaultvat')


insert into TicketStock 
	(isadditional,comments,costpriceex,containerid,groupname,componentoflineid,[rank],supplierid,addtobudget,budgetdate
,ticketid,shippingdocid,stockid,stockcode,stockdescription,qty,discperc,priceex,pricecategoryid,taxtypeid,tax,ismarginbased,markupperc,wasteperc,clientid,divisionid,reportcategoryid,guardlineid,uselandedcost,rentallineid)
select 
	@IsAdd,
	comments,
	costpriceex,
	containerid,
	groupname,
	componentoflineid,
	[rank],
	supplierid,
	null,
	null,
	@ticketid,
	null,
	stockid,
	stockcode,
	stockdescription,
	qty,
	discperc,
	priceex,
	pricecategoryid,
	taxtypeid,
	tax,
	ismarginbased,
	markupperc,
	wasteperc,
	clientid,
	divisionid,
	reportcategoryid,
	null,
	uselandedcost,
	rentallineid
from DEBTOR_DETAIL 
where docid = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40428","cv_Room_stock_lines","","declare @ProjectID as int
declare @isAdd	as int
set @ProjectID = {pid}
Set @isAdd = {isadd}

SELECT LineID, [Group],Project, [Stock Code], [Description], [Comments], [Supplier], Qty, Discount, [Cost Ex.], [Price Ex.], [Price Incl.],[Total Incl.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.],
	dbo.fnFormatNumber(cast(PriceEx as money) * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1))) as [Total Incl.],
	Rank, -1000 as [Rank2]
	FROM Job_Stock  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND ced.AccommodationID=  @ProjectID
	AND isnull(ced.IsAdditional,0) = @isAdd

	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.],
	dbo.fnFormatNumber(cast(PriceEx as money) * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1))) as [Total Incl.],
	--convert(varchar,cast(TotalIncl as money),1) as [Total Incl.], 
	ISNULL((SELECT Top 1 Rank From Job_Stock Where LineID = CED.ComponentOfLineID),1) ,Rank as [Rank2]
	FROM job_stock CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND ced.AccommodationID =  @ProjectID
	AND isnull(ced.IsAdditional,0) = @isAdd

	) A
{where}
ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"40429","cv_MarketingCampaignContact","","SELECT 
		'MC'+  CAST(MA.MarketingAssignID as VARCHAR) as 'ID'
		,MA.EntityContactID as 'ContactID'
		,MA.AssignedByID as 'UserID'
		,'Marketing Campaign' as 'Type'
		,[AssignedTo] as  'AssignedTo'
		,MD.CampaignName as 'Description'
		,MA.AssignDate as 'Date'
		,'' as 'DivID'
		,NULL as 'Priority'
		,'' as [Percentage Complete]
		,NULL as [Visit Report]
		,EC.EntityID as 'EntityID',
		'' as [leadID]
		,null as [Action Date]
		,NULL as [Next Action Date]
		, '' As [Action Type]
		,'' as 'Reference Number'
		,'' as [Client Relationship]
		,'' as [Action Outcome]
		,'' as [Form Name]
		,'' as [Changed From ]
		,'' as [Changed To]
		,'' as [Date Changed]
		,'' as [Call Direction]   
		,'1900/01/01 00:00:00' as [Start Time] 
		,'1900/01/01 00:00:00' as [End Time]   
	FROM MarketingAssigned MA
	LEFT JOIN (
		SELECT * FROM MarketingDetails
	) MD ON MD.MarketingID = MA.MarketingID
	LEFT JOIN (
		SELECT * FROM EntityContact
	) EC ON EC.EntityContactID = MA.EntityContactID
	LEFT JOIN (
		SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [AssignedTo] FROM Users
	) U ON U.UserID = MA.AssignedByID 
 WHERE MA.EntityContactID = {entitycontactid}

","0","","1","LRA-FUSION","0","0","fusion"
"40430","CV_AccommodationCheclist_Print","","select 
    case when JC.[Questions]<>'' then JC.[Questions] else L.Value end as [Question]
      ,Case When JC.[IsYes] = 0 Then 'No' Else 'Yes' End as [SetUp]
      ,JC.[Comments] as [Comment]
     from JobChecklist JC
Left Join Users U on 
U.UserID= JC.[CreatedBy]
Left Join Users US on 
US.UserID= JC.[ModifiedBy]
left join Lookup L on L.LookupID=JC.QuestionID
 {projectid}","0","","1","LRA-FUSION","0","0","fusion"
"40431","CV_AccomodationCheclist_Print_Header","","--select * from accommodation 

select Top 1
A.AccommodationID
,E.Company as [<company>]
,isnull(EC.FirstName,'') + ' ' +isnull(EC.Surname,'') as [<contact>]
,Convert(Varchar, A.DateCreated,103) as [<datecreated>]
,Convert(Varchar, A.DateFrom,103) as [<datefrom>]
,Convert(Varchar, A.Dateto,103) as [<dateto>]
,isnull(A.Comments,'') as [<comment>]
,isnull(A.Notes,'')as [<notes>]
,isnull(A.Statuses,'') as [<status>]
,isnull(A.Roomsleep,'') as [<sleeps>]
from accommodation A 
Left Join Entity E on E.EntityID = A.EntityID
Left Join EntityContact EC on EC.EntityContactID=A.EntityContactID
where A.AccommodationID={projectid}
","0","","1","LRA-FUSION","0","0","fusion"
"40432","qf_Address","","Select TOP 50
EntityAddressID
,AddressType
,Address1	
,Address2	
,Address3	
,City	
,Region	
,Code	
,Country
From EntityAddress
where entityID = {entityID} and ( (isnull(Address1,'') like '%<%replace%>%') OR (isnull(Address2,'') like '%<%replace%>%') OR (isnull(Address3,'') like '%<%replace%>%')or
(isnull(City,'') like '%<%replace%>%') or (isnull(Code,'') like '%<%replace%>%')or (isnull(Country,'') like '%<%replace%>%') or (isnull(AddressType,'') like '%<%replace%>%'))","0","","1","LRA-FUSION","0","0","fusion"
"40433","cv_Acc_Return_Stock","","Declare @DocID as integer
Set @DocID = {docid}


SELECT convert(varchar,DD.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, (Sum(Qty) * SoldbyToPurchasedByRatio) - (isnull(SC.[QtyScanned],0) ) as [Qty], 
CASE WHEN isnull(STK.RequiresScanning,0) = 1 THEN 'NOT SCANNED' ELSE 'NOT RETURNED' END as [S/N] 
FROM CREDITOR_DETAIL DD
LEFT JOIN (SELECT DocID, DocType FROM CREDITOR_MASTER) DM
ON DD.DocID = DM.DocID
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning, SoldbyToPurchasedByRatio FROM AccStock) STK
ON DD.StockID = STK.StockID
LEFT JOIN (SELECT DocID, DocType, StockID,  sum(abs(Qty * Ratio)) as [QtyScanned] FROM  AccStockControl where DocID = @DocID Group by DocID, DocType, StockID) SC
ON DD.DocID = SC.DocID  AND DM.DocType = SC.DocType AND DD.StockID = SC.StockID
WHERE DD.DocID = @DocID
--AND isnull(STK.RequiresScanning,0) = 1
GROUP BY STK.StockDescription,SC.[QtyScanned], DD.StockID,SoldbyToPurchasedByRatio,STK.RequiresScanning
HAVING Sum(Qty * SoldbyToPurchasedByRatio ) - isnull(SC.[QtyScanned],0) > 0

UNION ALL

SELECT convert(varchar,STK.StockID) + '#' +  convert(varchar(36),newid()) as [StockKey], STK.StockDescription, [QtyScanned], SC.SerialNumber
FROM CREDITOR_MASTER DM
LEFT JOIN (SELECT  DocID, DocType, StockID, SerialNumber,abs(Qty * Ratio) as [QtyScanned]  FROM AccStockControl) SC
ON DM.DocID = SC.DocID AND DM.DocType = SC.DocType
LEFT JOIN (SELECT StockID, StockCode,StockDescription,RequiresScanning FROM AccStock) STK
ON SC.StockID = STK.StockID
WHERE DM.DocID = @DocID
--AND isnull(STK.RequiresScanning,0) = 1","0","","1","LRA-FUSION","0","0","fusion"
"40434","CV_AccommodationRoomService","","Select
A.AccommodationID
,A.AccommodationID as [ID]
,AC.StockCode as [Room No]
,A.Statuses as [Status]
,convert(varchar(10),NotificationDate,103) as [Room Service]
,convert(varchar(20),[DateFrom],103) as [Arrival Date]
,isnull(NotificationPeriod,0) as [Notification Period]
from Accommodation A
Left Join AccStock AC on AC.StockID=A.RoomID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40435","CV_Accommodation_Replinishment","","select
AR.IDReplinishment
,AR.IDReplinishment as [ID]
,AC.StockCode as [Room No]
,convert(varchar(10),DateToReplenish,103) as [Room Replinishment]
From AccommodationReplenish AR
Left Join  Accommodation A on A.AccommodationID=AR.AccommodationID
Left Join  AccStock AC on AC.StockID=A.RoomID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40436","Risk_Assessment_Item_Insert","","DECLARE @catID as int

SET @catID = {catID}
delete from Risk_Assessment_Item where RiskAssessmentCategoryID = @catID

INSERT INTO Risk_Assessment_Item (RiskAssessmentCategoryID,I.ItemPrompt,I.ItemType,I.Rank,I.CommaSeparatedList,AssessmentRegisterTypeID)

select 
@catID,
I.ItemPrompt,
I.ItemType,
I.Rank,
I.CommaSeparatedList,
AssessmentRegisterTypeID
 from Risk_Template_Item I
LEFT JOIN Risk_Template_Category C ON I.RiskTemplateCategoryID = C.RiskTemplateCategoryID
LEFT JOIN Risk_Template_Section S ON S.RiskTemplateSectionID = C.RiskTemplateSectionID
WHERE C.CategoryName = '{cat}' AND S.SectionName = '{sec}' 
","0","","1","LRA-FUSION","0","0","fusion"
"40437","CV_CourseBudget","","select BudgetID,Items, Aproved, Indicativeprice,
Actualprice,convert(varchar,Datepurchased,103) as [Date Purchased] ,
Actualprice-Indicativeprice as Variance
from Coursebudget

where CourseID={where}","0","","1","LRA-FUSION","0","0","fusion"
"40438","cv_LearnerMaterials","","declare @ProjectID as int
set @ProjectID = {pid}

SELECT LineID, [Group], [Stock Code], [Description], [Comments], [Supplier], Qty, Discount, [Cost Ex.], [Price Ex.], [Price Incl.],[Total Incl.] 
FROM	(
	--Select Main items
	SELECT convert(varchar,lineid) + 'M'  as [LineID],GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.],
	dbo.fnFormatNumber(cast(PriceEx as money) * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1))) as [Total Incl.],
	Rank, -1000 as [Rank2]
	FROM pfcoursematerial  CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON CED.ProjectID = P.projectID
	where isnull(ComponentOfLineID,0)  = 0
	AND ced.PFLearnProgramID =  @ProjectID


	UNION ALL
	
	--Select component items
	SELECT convert(varchar,lineid) + 'C'  as [LineID],Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
	Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],convert(varchar,cast(CostPriceEx as money),1) as [Cost Ex.],
	convert(varchar,cast(PriceEx as money),1) as [Price Ex.],
	dbo.fnFormatNumber(cast(PriceEx as money) * (TAX /100 + 1)) as [Price Incl.],
	dbo.fnFormatNumber(((PriceEx * Qty * ((100 - isnull(Discperc,0)) /100 ))  * (TAX /100 + 1))) as [Total Incl.],
	--convert(varchar,cast(TotalIncl as money),1) as [Total Incl.], 
	ISNULL((SELECT Top 1 Rank From pfcoursematerial Where LineID = CED.ComponentOfLineID),1) ,Rank as [Rank2]
	FROM pfcoursematerial CED
	LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
	ON CED.SupplierID = E.Entityid
	where isnull(ComponentOfLineID,0)  > 0
	AND ced.PFLearnProgramID =  @ProjectID


	) A

ORDER BY  Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"40439","cv_CourseSchedule_RowCall","","SELECT
	'' as [Mail No],
	'' as [Rank],
	ISNULL(EC.Initials, '') as [Initials],
	ISNULL(EC.FirstName, '') + ' ' + ISNULL(EC.Surname, '') as [Name],
	'' as [ 1],
	'' as [ 2],
	'' as [ 3],
	'' as [ 4],
	'' as [ 5],
	'' as [ 6],
	'' as [ 7],
	'' as [ 8],
	'' as [ 9],
	'' as [10],
	'' as [11],
	'' as [12],
	'' as [13],
	'' as [14],
	'' as [15],
	'' as [16],
	'' as [17],
	'' as [18],
	'' as [19],
	'' as [20],
	'' as [21],
	'' as [22],
	'' as [23],
	'' as [24],
	'' as [25],
	'' as [26],
	'' as [27],
	'' as [28]
	{29},'' as [29]
	{30},'' as [30]
	{31},'' as [31]	
FROM AttendanceRegister AR
LEFT JOIN EntityContact EC ON EC.EntityContactID = AR.LearnerID
WHERE CourseScheduleID = {courseid}","0","","1","LRA-FUSION","0","0","fusion"
"40440","cv_Create_TimeTable","","CREATE TABLE TempTimetable{userid}
(
	IID INT IDENTITY(1,1),
	PeriodTime VARCHAR(100),
	[Day1] VARCHAR(200),
	[Day2] VARCHAR(200),
	[Day3] VARCHAR(200),
	[Day4] VARCHAR(200),
	[Day5] VARCHAR(200)
)","0","","1","LRA-FUSION","0","0","fusion"
"40441","cv_Course_TimeTable_Print","","DECLARE @Start DATETIME
DECLARE @End DATETIME
DECLARE @CourseID INT
DECLARE @Diff INT
DECLARE @i INT
DECLARE @ssql VARCHAR(8000)
DECLARE @Date1 DATETIME
DECLARE @Date2 DATETIME
DECLARE @Date3 DATETIME
DECLARE @Date4 DATETIME
DECLARE @Date5 DATETIME
DECLARE @IID INT
DECLARE @DayText VARCHAR(200)
DECLARE @Period VARCHAR(200)
DECLARE @Line CURSOR

SET @Start = '{startdate}'
SET @End = '{enddate}'
SET @CourseID = {courseid}
SET @i = 0 
SET @Diff = DATEDIFF(DAY, @Start, @End)

SET NOCOUNT ON

TRUNCATE TABLE TempTimeTable{userid}

INSERT INTO TempTimeTable{userid} (PeriodTime) SELECT 'Time'
INSERT INTO TempTimeTable{userid} (PeriodTime) SELECT ''

WHILE @i < @Diff + 1
BEGIN
	Set @ssql = DATENAME(WEEKDAY, DATEADD(DAY, @i, @Start))
	
	IF @i = 0 
	BEGIN
		UPDATE TempTimeTable{userid} SET Day1 = @ssql
		WHERE IID = 1
		UPDATE TempTimeTable{userid} SET Day1 = CONVERT(VARCHAR, DATEPART(DAY, DATEADD(DAY, @i, @Start))) + ' ' +  DATENAME(MONTH, DATEADD(DAY, @i, @Start)) + ' ' + CONVERT(VARCHAR, YEAR(DATEADD(DAY, @i, @Start)))
		WHERE IID = 2
		SET @Date1 = DATEADD(DAY, @i, @Start)
	END
	IF @i = 1 
	BEGIN
		UPDATE TempTimeTable{userid} SET Day2 = @ssql
		WHERE IID = 1
		UPDATE TempTimeTable{userid} SET Day2 = CONVERT(VARCHAR, DATEPART(DAY, DATEADD(DAY, @i, @Start))) + ' ' +  DATENAME(MONTH, DATEADD(DAY, @i, @Start)) + ' ' + CONVERT(VARCHAR, YEAR(DATEADD(DAY, @i, @Start)))
		WHERE IID = 2
		SET @Date2 = DATEADD(DAY, @i, @Start)
	END
	IF @i = 2 
	BEGIN
		UPDATE TempTimeTable{userid} SET Day3 = @ssql
		WHERE IID = 1
		UPDATE TempTimeTable{userid} SET Day3 = CONVERT(VARCHAR, DATEPART(DAY, DATEADD(DAY, @i, @Start))) + ' ' +  DATENAME(MONTH, DATEADD(DAY, @i, @Start)) + ' ' + CONVERT(VARCHAR, YEAR(DATEADD(DAY, @i, @Start)))
		WHERE IID = 2
		SET @Date3 = DATEADD(DAY, @i, @Start)
	END
	IF @i = 3
	BEGIN
		UPDATE TempTimeTable{userid} SET Day4 = @ssql
		WHERE IID = 1
		UPDATE TempTimeTable{userid} SET Day4 = CONVERT(VARCHAR, DATEPART(DAY, DATEADD(DAY, @i, @Start))) + ' ' +  DATENAME(MONTH, DATEADD(DAY, @i, @Start)) + ' ' + CONVERT(VARCHAR, YEAR(DATEADD(DAY, @i, @Start)))
		WHERE IID = 2
		SET @Date3 = DATEADD(DAY, @i, @Start)
	END
	IF @i = 4 
	BEGIN
		UPDATE TempTimeTable{userid} SET Day5 = @ssql
		WHERE IID = 1
		UPDATE TempTimeTable{userid} SET Day5 = CONVERT(VARCHAR, DATEPART(DAY, DATEADD(DAY, @i, @Start))) + ' ' +  DATENAME(MONTH, DATEADD(DAY, @i, @Start)) + ' ' + CONVERT(VARCHAR, YEAR(DATEADD(DAY, @i, @Start)))
		WHERE IID = 2
		SET @Date5 = DATEADD(DAY, @i, @Start)
	END
	
	SET @i = @i + 1
END

IF @Date5 is null
BEGIN
	SET @Date5 = DATEADD(DAY, 5, @Date1)
END		


INSERT INTO TempTimeTable{userid} (PeriodTime)
SELECT DISTINCT
	CONVERT(VARCHAR, StartTime, 108) + ' - ' +
	CONVERT(VARCHAR, EndTime, 108) as [Time]/*,
	--Colour,
	ISNULL(EM.ExamDescription, PFA.AssName) + ' - Instuctor: ' +
	ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'')  as [Period Name]*/
FROM Course_TimeTable CTT
LEFT JOIN Staff S ON S.StaffID = CTT.InstructorID
LEFT JOIN PFAssignment PFA ON PFA.PFAssignmentID = CTT.AssignmentID
LEFT JOIN Exam_Master EM ON EM.ExamID = CTT.ExamID
WHERE CTT.PeriodDate BETWEEN @Date1 AND @Date5
AND CTT.CourseID = @CourseID

--////////////////////////////////////////////////Day1
SET @Line = CURSOR FAST_FORWARD FOR 
	SELECT DISTINCT
		CONVERT(VARCHAR, StartTime, 108) + ' - ' +
		CONVERT(VARCHAR, EndTime, 108) as [Time],
		--Colour,
		ISNULL(ISNULL(EM.ExamDescription, PFA.AssName),'') + ' - Instuctor: ' +
		ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'')  as [Period Name]
	FROM Course_TimeTable CTT
	LEFT JOIN Staff S ON S.StaffID = CTT.InstructorID
	LEFT JOIN PFAssignment PFA ON PFA.PFAssignmentID = CTT.AssignmentID
	LEFT JOIN Exam_Master EM ON EM.ExamID = CTT.ExamID
	WHERE CTT.PeriodDate = @Date1
	AND CTT.CourseID = @CourseID
	
OPEN @Line

FETCH NEXT FROM @Line INTO @Period, @DayText

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @IID = 0
	SET @IID = (SELECT IID FROM TempTimeTable{userid} WHERE PeriodTime = @Period)
	
	IF @IID > 0
	BEGIN
		UPDATE TempTimeTable{userid} SET DAY1 = @DayText
		WHERE IID = @IID
	END
	ELSE
	BEGIN
		INSERT INTO TempTimeTable{userid} (PeriodTime, Day1)
		SELECT @Period, @DayText
	END
	
	FETCH NEXT FROM @Line INTO @Period, @DayText
END
CLOSE @Line
DEALLOCATE @Line

--////////////////////////////////////////////////Day2
SET @Line = CURSOR FAST_FORWARD FOR 
	SELECT DISTINCT
		CONVERT(VARCHAR, StartTime, 108) + ' - ' +
		CONVERT(VARCHAR, EndTime, 108) as [Time],
		--Colour,
		ISNULL(EM.ExamDescription, PFA.AssName) + ' - Instuctor: ' +
		ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'')  as [Period Name]
	FROM Course_TimeTable CTT
	LEFT JOIN Staff S ON S.StaffID = CTT.InstructorID
	LEFT JOIN PFAssignment PFA ON PFA.PFAssignmentID = CTT.AssignmentID
	LEFT JOIN Exam_Master EM ON EM.ExamID = CTT.ExamID
	WHERE CTT.PeriodDate = @Date2
	AND CTT.CourseID = @CourseID
	
OPEN @Line

FETCH NEXT FROM @Line INTO @Period, @DayText

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @IID = 0
	SET @IID = (SELECT IID FROM TempTimeTable{userid} WHERE PeriodTime = @Period)
	
	IF @IID > 0
	BEGIN
		UPDATE TempTimeTable{userid} SET DAY2 = @DayText
		WHERE IID = @IID
	END
	ELSE
	BEGIN
		INSERT INTO TempTimeTable{userid} (PeriodTime, Day2)
		SELECT @Period, @DayText
	END
	
	FETCH NEXT FROM @Line INTO @Period, @DayText
END
CLOSE @Line
DEALLOCATE @Line


--////////////////////////////////////////////////Day3
SET @Line = CURSOR FAST_FORWARD FOR 
	SELECT DISTINCT
		CONVERT(VARCHAR, StartTime, 108) + ' - ' +
		CONVERT(VARCHAR, EndTime, 108) as [Time],
		--Colour,
		ISNULL(EM.ExamDescription, PFA.AssName) + ' - Instuctor: ' +
		ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'')  as [Period Name]
	FROM Course_TimeTable CTT
	LEFT JOIN Staff S ON S.StaffID = CTT.InstructorID
	LEFT JOIN PFAssignment PFA ON PFA.PFAssignmentID = CTT.AssignmentID
	LEFT JOIN Exam_Master EM ON EM.ExamID = CTT.ExamID
	WHERE CTT.PeriodDate = @Date3
	AND CTT.CourseID = @CourseID
	
OPEN @Line

FETCH NEXT FROM @Line INTO @Period, @DayText

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @IID = 0
	SET @IID = (SELECT IID FROM TempTimeTable{userid} WHERE PeriodTime = @Period)
	
	IF @IID > 0
	BEGIN
		UPDATE TempTimeTable{userid} SET DAY3 = @DayText
		WHERE IID = @IID
	END
	ELSE
	BEGIN
		INSERT INTO TempTimeTable{userid} (PeriodTime, Day3)
		SELECT @Period, @DayText
	END
	
	FETCH NEXT FROM @Line INTO @Period, @DayText
END
CLOSE @Line
DEALLOCATE @Line


--////////////////////////////////////////////////Day4
SET @Line = CURSOR FAST_FORWARD FOR 
	SELECT DISTINCT
		CONVERT(VARCHAR, StartTime, 108) + ' - ' +
		CONVERT(VARCHAR, EndTime, 108) as [Time],
		--Colour,
		ISNULL(EM.ExamDescription, PFA.AssName) + ' - Instuctor: ' +
		ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'')  as [Period Name]
	FROM Course_TimeTable CTT
	LEFT JOIN Staff S ON S.StaffID = CTT.InstructorID
	LEFT JOIN PFAssignment PFA ON PFA.PFAssignmentID = CTT.AssignmentID
	LEFT JOIN Exam_Master EM ON EM.ExamID = CTT.ExamID
	WHERE CTT.PeriodDate = @Date4
	AND CTT.CourseID = @CourseID
	
OPEN @Line

FETCH NEXT FROM @Line INTO @Period, @DayText

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @IID = 0
	SET @IID = (SELECT IID FROM TempTimeTable{userid} WHERE PeriodTime = @Period)
	
	IF @IID > 0
	BEGIN
		UPDATE TempTimeTable{userid} SET DAY4 = @DayText
		WHERE IID = @IID
	END
	ELSE
	BEGIN
		INSERT INTO TempTimeTable{userid} (PeriodTime, Day4)
		SELECT @Period, @DayText
	END
	
	FETCH NEXT FROM @Line INTO @Period, @DayText
END
CLOSE @Line
DEALLOCATE @Line

--////////////////////////////////////////////////Day5
SET @Line = CURSOR FAST_FORWARD FOR 
	SELECT DISTINCT
		CONVERT(VARCHAR, StartTime, 108) + ' - ' +
		CONVERT(VARCHAR, EndTime, 108) as [Time],
		--Colour,
		ISNULL(EM.ExamDescription, PFA.AssName) + ' - Instuctor: ' +
		ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'')  as [Period Name]
	FROM Course_TimeTable CTT
	LEFT JOIN Staff S ON S.StaffID = CTT.InstructorID
	LEFT JOIN PFAssignment PFA ON PFA.PFAssignmentID = CTT.AssignmentID
	LEFT JOIN Exam_Master EM ON EM.ExamID = CTT.ExamID
	WHERE CTT.PeriodDate = @Date5
	AND CTT.CourseID = @CourseID
	
OPEN @Line

FETCH NEXT FROM @Line INTO @Period, @DayText

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @IID = 0
	SET @IID = (SELECT IID FROM TempTimeTable{userid} WHERE PeriodTime = @Period)
	
	IF @IID > 0
	BEGIN
		UPDATE TempTimeTable{userid} SET DAY5 = @DayText
		WHERE IID = @IID
	END
	ELSE
	BEGIN
		INSERT INTO TempTimeTable{userid} (PeriodTime, Day5)
		SELECT @Period, @DayText
	END
	
	FETCH NEXT FROM @Line INTO @Period, @DayText
END
CLOSE @Line
DEALLOCATE @Line

SET NOCOUNT OFF

SELECT
   *
FROM TempTimeTable{userid}","0","","1","LRA-FUSION","0","0","fusion"
"40442","cv_Course_Timetable","","SELECT
	TimeTableID,
	CONVERT(VARCHAR, PeriodDate, 111) as [Period Date],
	CONVERT(VARCHAR, StartTime, 108) as [Start Time],
	CONVERT(VARCHAR, EndTime, 108) as [End Time],
	OutcomeTitle as [Qualification Outcome], 
	   (isnull(ISNULL(ExamDescription, AssName), '') + '  -  ' + CTT.Topic ) as [Assignment]  	
FROM Course_Timetable CTT
LEFT JOIN OutcomeQual2 OQ ON OQ.OutcomeID = CTT.QualificationID
LEFT JOIN PFAssignment PFA ON PFA.PFAssignmentID = CTT.AssignmentID
LEFT JOIN Exam_Master EM ON EM.ExamID = CTT.ExamID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40443","qf_QualificationOutcom","","SELECT 
	OutcomeID,
	OutcomeTitle as [Title],
	OutcomeType as [Type],
	OutcomeDesc as [Description]
FROM OutcomeQual2
WHERE OutcomeTitle like '%<%replace%>%'","0","","1","LRA-FUSION","0","0","fusion"
"40444","CV_Unitsandards","","SELECT LearnerProgID, SAQAUSID as [SAQA US ID], USTitle as [US Title], NQFLevel as [NQF Level],  Credits FROM LearnerProg WHERE LearnerProgID IN (SELECT LearnerProgID FROM PFQualificationsOutcome WHERE Qualificationid ={where})
","0","","1","LRA-FUSION","0","0","fusion"
"40445","qf_Assignments","","SELECT 
	PFAssignmentID,
	AssName as [Assignment Name],
	L.Value as [Type],
	PassMark as [Pass Mark]
FROM PFAssignment A
LEFT JOIN Lookup L ON L.LookupID = A.AssType
WHERE A.AssName like '%<%replace%>%'","0","","1","LRA-FUSION","0","0","fusion"
"40446","cv_Timesheet_EmailTable","","DECLARE @UseStaff INT
SET @UseStaff = (SELECT TOP 1 ISNULL(Selected,0) FROM CRMSetup WHERE Description = 'Print' AND Variable = 'StaffTimesheets')

SELECT 	
	e.Company,    
	P.ProjectID as [Project No.],
	p.projectname as [Project Name], 
	modules.modulename as [Module Name],
	CONVERT(VARCHAR,timesheetdate,111) as [Timeheet Date], 
	CASE WHEN @UseStaff = 1 THEN ISNULL(SS.Firstname,'') + ' ' + ISNULL(SS.Surname,'') ELSE users.username END as [Developer],
	hoursdone as [Hours Captured],
	case when hoursdone < 1 then 1 else Round(hoursdone,0)end as [Hours Rounded],	
	projectstatus as [Notes]
FROM timesheet t
LEFT JOIN projects p on p.projectid = t.projectid 
LEFT JOIN entity e on e.entityid = p.entityid
LEFT JOIN entitycontact ec on ec.entitycontactid = p.entitycontactid
LEFT JOIN modules on modules.moduleid = t.moduleid
LEFT JOIN users on users.userid = t.developerid
LEFT JOIN Staff S on S.StaffID = CASE WHEN (SELECT Selected FROM crmsetup WHERE Variable = 'StaffTimesheets')  = 0 THEN users.StaffID ELSE t.developerid END
LEFT JOIN Staff SS ON SS.StaffID = t.DeveloperID
LEFT JOIN Devappointment dappt on dappt.DevApptID = t.DevApptID
LEFT JOIN lookup l on l.lookupid = dappt.TASKTYPEID 
Left Join Entity SE on S.SupplierID = SE.EntityID
WHERE dappt.DevApptID IN ({devapptids})
ORDER BY Developer, timesheetdate","0","","1","LRA-FUSION","0","0","fusion"
"40447","qf_Exam","","SELECT
	ExamID,
	ExamDescription as [Description],
	l.Value as [Type]
FROM Exam_Master E
LEFT JOIN Lookup L ON L.LookupID = E.ExamTypeID
WHERE ExamDescription like '%<%replace%>%'","0","","1","LRA-FUSION","0","0","fusion"
"40448","cv_CourseTimeTableDrill","","SELECT 
	[ID],
	[Period Date],
	[Start Time],
	[End Time],
	[Qualification Outcome],
	[Assignment], 
    [Selected]
FROM (
	SELECT
		CONVERT(VARCHAR, TimeTableID) + 'T' as ID,
		CONVERT(VARCHAR, PeriodDate, 111) as [Period Date],
		CONVERT(VARCHAR, StartTime, 108) as [Start Time],
		CONVERT(VARCHAR, EndTime, 108) as [End Time],
		OutcomeTitle as [Qualification Outcome], 
		ISNULL(ExamDescription, AssName) as [Assignment], Null as [Selected],
		1 as [Rank]
	FROM Course_Timetable CTT
	LEFT JOIN OutcomeQual2 OQ ON OQ.OutcomeID = CTT.QualificationID
	LEFT JOIN PFAssignment PFA ON PFA.PFAssignmentID = CTT.AssignmentID
        LEFT JOIN Exam_Master EM ON EM.ExamID = CTT.ExamID
	where courseid = {courseid}
	AND TimeTableID = {timetableid}

	UNION ALL

	SELECT 
		CONVERT(VARCHAR, ar.AttendanceRegisterID) + 'L' as [ID],
		isnull(l.surname,'') + ', ' + isnull(l.firstname,'') As [Learner],
		null, null, null, null, CTA.EntryID
		,2 as Rank
	FROM AttendanceRegister ar
	LEFT JOIN EntityContact l ON l.EntityContactid = ar.learnerid
	LEFT JOIN Course_TimeTable_Attend CTA ON ar.AttendanceRegisterID = AttendanceID
		AND CTA.TimeTableID = {timetableid}
	WHERE coursescheduleid = {courseid}
	
) Z
ORDER BY Rank, [Period Date]","0","","1","LRA-FUSION","0","0","fusion"
"40449","cv_ProjectSummary_Header","","SELECT 
	ISNULL(E.Company,'') AS [<company>],
	ISNULL(P.ProjectName,'') AS [<projectname>],
	ISNULL(EC.Firstname,'') +' '+ ISNULL(EC.Surname,'') AS [<contact>],
	ISNULL(L.Value,'') as [<division>],
	ISNULL(PM.Firstname,'') +' '+ ISNULL(PM.Surname,'') AS [<projectman>],
	ISNULL(PS.Value,'') AS [<projectstatus>],
	ISNULL(QC.Firstname,'') +' '+ ISNULL(QC.Surname,'') AS [<qualitycontroller>] 
FROM Projects P
LEFT JOIN Entity E 
	ON P.EntityID = E.EntityID
LEFT JOIN EntityContact EC 
	ON P.EntityContactID = EC.EntityContactID
LEFT JOIN Lookup L 
	ON P.DivID = L.LookupID
LEFT JOIN Staff PM 
	ON P.ProjectManagerID = PM.StaffID
LEFT JOIN Lookup PS 
	ON P.projectstateid = PS.LookupID
LEFT JOIN Staff QC 
	ON P.ControllerID = QC.StaffID
WHERE P.ProjectID = {projectID}","0","","1","LRA-FUSION","0","0","fusion"
"40450","cv_ProjectSummary_Body","","SELECT 
	ISNULL(M.ModuleName,'') as [Module Name],
	ISNULL(M.EstHours ,0) as [Estimated Hours],
	ISNULL(M.ActHours ,0)as [Actual Hours],
	convert(varchar,M.StartDate,111) as [Start Date],
	convert(varchar,M.EndDate,111) as [End Date]
FROM Modules M
WHERE ProjectID = {projectID}","0","","1","LRA-FUSION","0","0","fusion"
"40451","cv_TimesheetBillingBatchLines2","","SELECT DISTINCT
	SUM(T.HoursDone) as MHours
	,S.StockID
	,S.StockDescription
	,S.StockCode
	,SUM(ISNULL(MR.RateAmount,0)) as CostPriceEx
	--S.SellingPriceEx 
	,SUM(ISNULL(MR.RateAmount,0)) as SellingPriceEx
	,[Consultant] + ' - ' + P.ProjectName + ' - ' + M.modulename as Comment
	,P.ProjectName
	,M.ModuleName
	,[Consultant]
	,T.ProjectID
FROM Timesheet T
LEFT JOIN (SELECT * FROM projects) p on p.projectid = t.projectid
left join Devappointment dappt on dappt.DevApptID = t.DevApptID
left join lookup l on l.lookupid = dappt.TASKTYPEID  
LEFT JOIN (SELECT * FROM modules) M on M.moduleid = t.moduleid
LEFT JOIN (
	SELECT 
		StockID
		, ISNULL(LST.StockType,'') + '-' + ISNULL(LLT.StockSubType,'') + '-' + ISNULL(A.StockDescription,'') as StockModule 
	FROM AccStock A
	LEFT JOIN (SELECT LookupID, Value as StockType FROM Lookup) LST ON LST.LookupID = A.StockType
	LEFT JOIN (SELECT LinkLookupID, Value as StockSubType FROM LinkLookup) LLT ON LLT.LinkLookupID = A.SubTypeID
) A
--ON A.StockModule = M.ModuleName
 
ON A.StockID = M.StockID

LEFT JOIN (
	SELECT * FROM AccStock
) S ON S.StockID = A.StockID
LEFT JOIN (
	SELECT * FROM COST_ESTIMATE_DETAIL
) CED ON CED.DocID = P.CEDocID AND CED.StockID = A.StockID
LEFT JOIN (SELECT UserID, Firstname, Surname, StaffID FROM Users) U2 ON U2.UserID = T.DeveloperID

LEFT JOIN (
	SELECT ModuleID, ConsultantID, ProjectID, RateAmount FROM ratecardamount WHERE ISNULL(IsCostToCompany,0) = 0
) MR ON MR.ModuleID = M.ModuleID AND MR.ConsultantID = U2.StaffID

LEFT JOIN (
SELECT UserID, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Consultant],StaffID FROM Users) U 
ON U.StaffID = MR.ConsultantID
{where}
GROUP BY S.StockID,S.StockDescription,S.StockCode/*,MR.RateAmount*/,[Consultant],M.modulename,P.ProjectName,T.ProjectID
ORDER BY S.StockDescription, P.ProjectName, M.ModuleName, Consultant","0","","1","LRA-FUSION","0","0","fusion"
"40452","cv_schedCourseCal","","Select distinct cs.CourseScheduleID,ec.EntityContactID,isnull(EC.FirstName,'')+' '+isnull(EC.surName,'') as [Assessor],PF.Code,
(select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0) as [Min], 
(select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0) as [Max],
(select top 1 [Date] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 1) as [Followup],cs.Color  
from CourseSchedule cs
left join EntityContact EC on EC.EntityContactId = cs.AssessorID
left join PFLearnProgram PF on PF.PFLearnProgramID = CS.PFLearnProgramID
where  (isnull(EC.FirstName,'')+' '+isnull(EC.surName,'') <> ' ') <%And%>
and /*(Year(<%Month%>) = year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
and Month(<%Month%>) = Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
and Year(<%Month%>) = year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
and Month(<%Month%>) = Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
or ((Month(<%Month%>) > Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)) 
and Month(<%Month%>) < Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
and year(<%Month%>) = Year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
 and year(<%Month%>) = Year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
 )*/
(
	((Year(<%Month%>) = year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
	and
	(
		(Month(<%Month%>) = Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
		or (<%Month%> > (select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
	))
	or
	((Year(<%Month%>) = year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
	and
	(
		(Month(<%Month%>) = Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
		or (<%Month%> < (select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
	))
)
order by [Assessor],ec.EntityContactID,PF.Code




/*Select distinct ec.EntityContactID,isnull(EC.FirstName,'')+' '+isnull(EC.surName,'') as [Assessor],PF.Code,
(select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID) as [Min], 
(select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID) as [Max] 
from CourseSchedule cs
left join EntityContact EC on EC.EntityContactId = cs.AssessorID
left join PFLearnProgram PF on PF.PFLearnProgramID = CS.PFLearnProgramID
where isnull(EC.FirstName,'')+' '+isnull(EC.surName,'') <> ' '
and Year(<%Month%>) = year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID))
and Month(<%Month%>) = Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID))
and Year(<%Month%>) = year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID))
and Month(<%Month%>) = Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID))
or(Month(<%Month%>) > Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID)) and Month(<%Month%>) < Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID)) and year(<%Month%>) = Year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID)) and year(<%Month%>) = Year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID)))
 and (ec.entityContactID in (2224))
order by [Assessor],ec.EntityContactID,PF.Code*/","0","","1","LRA-FUSION","0","0","fusion"
"40453","cv_AnniversarySMS","","Declare @PcDateValue AS DateTime
Set @PcDateValue = '{anniversaryday}'
        insert into EntityContactSMS (Message,SMSType,Sent,EntityContactID,SentBy,DateCreated)
        select 
        'Dear ' + ec.Firstname +
        ', Talisman Hire would like to thank you for doing business with us for another year, Talisman ' + IsNull(l.Value,'<division>') + ', Tel: ' + isnull(ads.Telephone,'<phone>'),
        'Anniversary' as [Type],
        0 as Sent,
        ec.EntityContactID,
        ec.EntityContactID,
        GetDate()
        from entitycontact ec
        left join entitydivision ed on
        ed.EntityID = ec.EntityID and ed.EntityDivisionID = (select max(entitydivisionid) from entitydivision)
        left join lookup l on
        l.LookupID = ed.DivisionID -- and ed.EntityDivisionID = (select top 1 entitydivisionid from entitydivision)
        left join entity e on
        e.EntityID = ec.EntityID
        left join AccDocumentSetup ads on
        ads.divisionid = ed.DivisionId
        left join entitycontactsms sms
        on sms.entitycontactid = ec.entitycontactid and sms.smstype = 'Anniversary'
        where datepart(mm,@PcDateValue) = datepart(mm,anniversarydate)
        and datepart(dd,@PcDateValue) = datepart(dd,anniversarydate)
        and sms.entitycontactid is null 
        and ec.cell is not null","0","","1","LRA-FUSION","0","0","fusion"
"40454","exec_ToolUpdate","","UPDATE ToolDetails 
SET LinkedStockID = StockID
WHERE LinkedStockID IS NULL","0","","1","LRA-FUSION","1","1","fusion"
"40455","cv_CreditLimitSMS","","insert into EntityContactSMS (Message,SMSType,Sent,EntityContactID,SentBy,DateCreated) 
SELECT 'Dear ' + isnull(E.Legalname,'<company>') + ', Talisman Hire ' + IsNull(l2.Value,'<division>') + ', would like to inform you that
your credit limit has been reached. Please make payment on your account. Talisman ' + isnull(l2.Value,'<division>') + ' , Tel: ' + isnull(ads.Telephone,'<telephone>')
As [Message]
,
'Credit Limit Reached',
0,
DM.AttentionOf,
DM.AttentionOf,
GetDate()
--CASE Isnull(DM.UseEC,0) when 0 then isnull(E.CreditLimit,0) ELSE 0 END as [CreditLimit],
--sum(isnull(OBTotal,0)) + sum(CASE doctype when 'Credit Note' then -1 when 'Payment Receipt' then -1 ELSE 1 END * cast(DM.ROE as money) * cast([Total Incl. VAT]   as money)) as [Balance],
--CASE Isnull(DM.UseEC,0) when 0 then isnull(L.Value,'') ELSE '' END as [PaymentTerms]
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT EntityID, 
    case when ltrim(isnull(Accountnum,'')) not like '' then ltrim(isnull(Accountnum,'') + ' - ' + Company) else company end as [Company], 
        isnull(accountnum,'') as [AccountNum],CreditLimit, PaymentTerms,Legalname FROM Entity) E
ON DM.EntityID = E.EntityID AND isnull(DM.useEC,0) = 0
LEFT JOIN (SELECT EntityContactID, rtrim(ltrim(isnull(Accountnum,'') + ' '+ isnull(Firstname,'') + ' ' + isnull(surname,''))) as [Contact] FROM EntityContact) EC
ON DM.Entityid = EC.EntityContactID AND isnull(DM.useEC,0) = 1
LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100)) as [Total Ex. VAT],
             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0) )/100) * (isnull(Tax,0) /100 + 1)) as [Total Incl. VAT], 
             Sum(isnull(CostPriceEx,0) * qty) as [Est. Cost], 
             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
             FROM DEBTOR_DETAIL where isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
ON DM.DocID = DD.Docid
LEFT JOIN (SELECT -1 * (isnull(AmtCurrent,0) + isnull(Amt30,0) + isnull(amt60,0) + isnull(Amt90,0) + isnull(Amt120,0)) * isnull(Roe,1) as [OBTotal], UseEc, Entityid  FROM AccOPENINGBALANCE) AO
ON DM.Entityid = AO.Entityid and isnull(DM.UseEc,0) = isnull(AO.UseEC,0)
LEFT JOIN (SELECT MAX(StockID) as [StockID], DocID, StockDescription FROM DEBTOR_DETAIL where  stockid = -5 group by docid, stockdescription ) SD
ON DM.DocID = SD.DocID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) L
ON E.PaymentTerms = L.LookupID
left join AccDocumentSetup ads
on ads.divisionid = dm.DivisionId
left join lookup l2 on
l2.LookupID = dm.DivisionID
Left Join EntityContactSMS esms
on esms.EntityContactID = dm.AttentionOf and esms.smstype = 'Credit Limit Reached' 
WHERE DM.DocType in ('Invoice', 'Credit Note', 'Payment Receipt')
AND DM.DocStatus = 'Completed'
AND isnull(DM.UseEC,0) = 0
AND ESMS.EntityContactID is null 
And IsNull(DM.AttentionOf,0) > 0
Group By E.CreditLimit, DM.UseEC,L.Value,dm.entityid,E.Company,E.Legalname,ads.Telephone
,l2.Value,DM.AttentionOf
order by dm.entityid","0","","1","LRA-FUSION","0","0","fusion"
"40456","cv_ReturnRequiredSMS","","
insert into EntityContactSMS (Message,SMSType,Sent,EntityContactID,SentBy,DateCreated)
select  
 
'Dear ' + IsNull(e.Company,'') + ', Talisman Hire ' + l.Value + ', Order number  ' + Convert(Varchar,dm.docno)
 + ' expires ' + CONVERT(VARCHAR(10),r.EndDate,110) + ' .Please return goods or reorder. Talisman ' + l.Value + ' , Tel: ' + ads.Telephone,
'Return required',
0,
ec.EntityContactID,
ec.EntityContactID,
GEtDAte()
from
debtor_master dm
left join debtor_detail dd 
on dd.docid = dm.docid
left join debtor_payment dp
on dp.invoicedocid = dd.docid
left join EntityContact ec 
on ec.EntityContactID = dm.AttentionOf
left join Entity e 
on e.EntityID = ec.EntityID
left join AccDocumentSetup ads
on ads.divisionid = dm.DivisionId
left join lookup l on
l.LookupID = dm.DivisionID 
left join Projects p
on p.ProjectID = dm.ProjectID
left join Rental r 
on r.DocID = p.ProjectID
left join EntityContactSMS ESMS on
ESMS.EntityContactID = ec.EntityContactID and ESMS.SmsType = 'Return required'
where dm.doctype = 'Invoice' and dm.docstatus = 'Completed'
and r.EndDate is not null
and
 CONVERT(VARCHAR(10),GETDATE(),110) =  CONVERT(VARCHAR(10),r.EndDate,110)
 and ESMS.EntityContactID is null
--and r.EndDate = GetDate()
--and DateDiff(d,r.EndDate,GetDate()) % 14 = 0
group by dp.invoicedocid,dm.docid,dd.tax,dm.doctype,dm.DateCompleted,e.Company,l.Value,dm.DocNo
,ads.Telephone,ec.EntityContactID,r.EndDate


--having Cast(sum(isnull(dp.paymentportion,0)) As Decimal(9,3)) < Cast(sum(isnull(dd.priceex * dd.qty * (1 + dd.Tax/100) ,0)) as DEcimal(9,3))

 ","0","","1","LRA-FUSION","0","0","fusion"
"40457","cv_BirthdaySMS","","Declare @PcDateValue AS DateTime
        Set @PcDateValue = '{birthday}' 
         
        insert into EntityContactSMS(message,SMSType,Sent,SentBy,EntityContactID,DateCreated)
        select 
        'Dear ' + ec.Firstname +', Talisman Hire would like to wish you a happy birthday, Talisman ' + IsNull(l.Value,'-') + ', Tel: ' + IsNull(ads.Telephone,'-') ,
        'Birthday' as [Type],
         0 as Sent,
        ec.EntityContactID,
        ec.EntityContactID,
        GetDate()
        from entitycontact ec
        left join entitydivision ed on
        ed.EntityID = ec.EntityID and ed.EntityDivisionID = (select max(entitydivisionid) from entitydivision where entityid = ed.entityid)
        left join lookup l on
        l.LookupID = ed.DivisionID 
        left join SMS on
        SMS.Type = 'Birthday' and SMS.UniqueID = ec.IDNumber  
        left join entity e on
        e.EntityID = ec.EntityID
        left join AccDocumentSetup ads on
        ads.divisionid = ed.DivisionId
        left join EntityContactSMS ESMS on
        ESMS.EntityContactID = ec.EntityContactID
        where datepart(mm,@PcDateValue) = datepart(mm,birthdate)
        and datepart(dd,@PcDateValue) = datepart(dd,birthdate)
        and SMS.SMSID is null 
        and ec.cell is not null 
        and ESMS.EntityContactID is null
        and ec.SendSMS = 255","0","","1","LRA-FUSION","0","0","fusion"
"40458","cv_UnpaidInvoiceSMS","","insert into EntityContactSMS(message,SMSType,Sent,SentBy,EntityContactID,DateCreated)
select  
'Dear ' + IsNull(e.Company,'') + ', Talisman Hire ' + l.Value + ' would like to remind you of invoice ' + Convert(Varchar,dm.docno)
 + ' which is due for payment before or on '
+ Convert(Varchar(100),DateAdd(d,30,dm.DateCompleted)) + ' Talisman ' + l.Value + ' , Tel: ' + ads.Telephone,
'23 days after hire',
0,
ec.EntityContactID,
ec.EntityContactID,
GEtDAte()
from
debtor_master dm
left join debtor_detail dd 
on dd.docid = dm.docid
left join debtor_payment dp
on dp.invoicedocid = dd.docid
left join EntityContact ec 
on ec.EntityContactID = dm.AttentionOf
left join Entity e 
on e.EntityID = ec.EntityID
left join AccDocumentSetup ads
on ads.divisionid = dm.DivisionId
left join lookup l on
l.LookupID = dm.DivisionID 
left join EntityContactSMS ESMS on
ESMS.EntityContactID = ec.EntityContactID and esms.SMSType = '23 days after hire'

where dm.doctype = 'Invoice' and DateDiff(dd,dm.DateCompleted,GetDate()) = 23 
 and esms.entitycontactid is null
group by dp.invoicedocid,dm.docid,dd.tax,dm.doctype,dm.DateCompleted,e.Company,l.Value,dm.DocNo
,ads.Telephone,ec.EntityContactID
having Cast(sum(isnull(dp.paymentportion,0)) As Decimal(9,3)) < Cast(sum(isnull(dd.priceex * dd.qty * (1 + dd.Tax/100) ,0)) as DEcimal(9,3))


  ","0","","1","LRA-FUSION","0","0","fusion"
"40459","cv_PaymentsMissedSMS","","
insert into EntityContactSMS (Message,SMSType,Sent,EntityContactID,SentBy,DateCreated)
select  
'Dear ' + IsNull(e.Company,'') + ', Talisman Hire ' + l.Value + ' would like to remind you of invoice ' + Convert(Varchar,dm.docno)
 + ' which is now due for payment. Talisman ' + l.Value + ' , Tel: ' + ads.Telephone,
'Payments missed',
0,
ec.EntityContactID,
ec.EntityContactID,
GEtDAte()
from
debtor_master dm
left join debtor_detail dd 
on dd.docid = dm.docid
left join debtor_payment dp
on dp.invoicedocid = dd.docid
left join EntityContact ec 
on ec.EntityContactID = dm.AttentionOf
left join Entity e 
on e.EntityID = ec.EntityID
left join AccDocumentSetup ads
on ads.divisionid = dm.DivisionId
left join lookup l on
l.LookupID = dm.DivisionID 
left join Projects p
on p.ProjectID = dm.ProjectID
left join Rental r 
on r.DocID = p.ProjectID
left join EntityContactSMS ESMS on
ESMS.EntityContactID = ec.EntityContactID and ESMS.SmsType = 'Payments missed'
where dm.doctype = 'Invoice' and dm.docstatus = 'Completed' --and DateDiff(dd,dm.DateCompleted,GetDate()) = 23 
and r.EndDate is not null
and ESMS.EntityContactID is null
--and DateDiff(d,r.EndDate,GetDate()) % 14 = 0
group by dp.invoicedocid,dm.docid,dd.tax,dm.doctype,dm.DateCompleted,e.Company,l.Value,dm.DocNo
,ads.Telephone,ec.EntityContactID,r.EndDate
having 
DateDiff(d,r.EndDate,GetDate()) % 14 = 0
--Cast(sum(isnull(dp.paymentportion,0)) As Decimal(9,3)) < Cast(sum(isnull(dd.priceex * dd.qty * (1 + dd.Tax/100) ,0)) as DEcimal(9,3))
--work off end date of rental 
  
 
  
   ","0","","1","LRA-FUSION","0","0","fusion"
"40460","cv_FridaySMS","","
begin
Declare @dNextSaturday As Date
Set @dNextSaturday = DateAdd(d,1,GetDate())
if datepart(dw, GetDate()) = 6 -- if day is friday
Insert Into EntityContactSMS(message,SMSType,Sent,SentBy,EntityContactID,DateCreated)
select 'Dear ' + e.Company + ', Talisman Hire would like to remind you of order number ' 
+ Convert(Varchar(100),dm.DocNo) + ' that will be at your premises this weekend, Talisman ' + l.Value + ' , Tel:' + ads.Telephone
,'Friday',0,dm.AttentionOf,dm.AttentionOf,GetDate()
from debtor_master dm
left join projects p on
dm.ProjectID = p.ProjectID
left join Rental r on
r.DocID = p.ProjectID
left join Entity e on
e.EntityID = dm.EntityID 
left join Lookup l on
l.LookupID = dm.DivisionID
left join AccDocumentSetup ads
on ads.divisionid = dm.DivisionId
left join EntityContactSMS ESMS on
ESMS.EntityContactID = dm.AttentionOf
where 
dm.doctype = 'Invoice' and dm.docstatus = 'Completed'
and dm.ProjectId is not null
and p.IsContract = 1
and r.EndDate > GetDate() and r.StartDate <= GetDate()
and ESMS.EntityContactID is null
end","0","","1","LRA-FUSION","0","0","fusion"
"40461","cv_UnpaidInvoiceNotice","","
insert into EntityContactSMS (Message,SMSType,Sent,EntityContactID,SentBy,DateCreated)

select  
'Dear ' + IsNull(e.Company,'') + ', Talisman Hire ' + l.Value + ' would like to remind you of invoice ' + Convert(Varchar,dm.docno)
 + ' which is due for payment before or on the 7th of '
+  datename(month,GetDate()) + '. Talisman ' + l.Value + ' , Tel: ' + ads.Telephone,
'3rd day every month',
0,
ec.EntityContactID,
ec.EntityContactID,
GEtDAte()
from
debtor_master dm
left join debtor_detail dd 
on dd.docid = dm.docid
left join debtor_payment dp
on dp.invoicedocid = dd.docid
left join EntityContact ec 
on ec.EntityContactID = dm.AttentionOf
left join Entity e 
on e.EntityID = ec.EntityID
left join AccDocumentSetup ads
on ads.divisionid = dm.DivisionId
left join lookup l on
l.LookupID = dm.DivisionID 
left join Projects p
on p.ProjectID = dm.ProjectID
left join Rental r 
on r.DocID = p.ProjectID
Left join EntityContactSMS ESMS
on ESMS.EntityContactID = ec.Entitycontactid and ESMS.SMSType = '3rd day every month'
where dm.doctype = 'Invoice' --and DateDiff(dd,dm.DateCompleted,GetDate()) = 23 
and r.EndDate is not null
and GetDate() > r.EndDate 
and DatePart(d,GetDate()) = 3
and ESMS.EntityContactID is null
group by dp.invoicedocid,dm.docid,dd.tax,dm.doctype,dm.DateCompleted,e.Company,l.Value,dm.DocNo
,ads.Telephone,ec.EntityContactID,r.EndDate
having Cast(sum(isnull(dp.paymentportion,0)) As Decimal(9,3)) < Cast(sum(isnull(dd.priceex * dd.qty * (1 + dd.Tax/100) ,0)) as DEcimal(9,3))
","0","","1","LRA-FUSION","0","0","fusion"
"40462","cv_InactiveCustomers","","--Shows customers that have not made a contract/rental within specified period

Declare @StartDate As DateTime
Declare @EndDate As DateTime
/*
Set @StartDate = '01 Jan 2014'
Set @EndDate = '30 Jan 2014'
*/
Set @StartDate = '{startdate}'
Set @EndDate = '{enddate}'
SELECT Company From Entity Where
EntityID not in
(Select 
E.EntityID
FROM Projects P
LEFT JOIN (SELECT EntityID, AccountNum, Company From Entity) E
ON P.EntityID = E.EntityID
LEFT JOIN (SELECT EntityContactID, isnull(Firstname, '') + ' ' + isnull(Surname,'') as [Contact], Phone1, Cell FROM EntityContact) EC
ON P.EntityContactID = EC.EntityContactID
LEFT JOIN (SELECT min(StartDate) AS [Start], DocID FROM Rental where DocType = 'Contract' Group by DocID ) RSD
ON P.ProjectID = RSD.DocID
LEFT JOIN (SELECT max(endDate) AS [End], DocID FROM Rental where DocType = 'Contract' Group by DocID ) RED
ON P.ProjectID = RED.DocID
LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
	             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
	             FROM CONTRACT_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
ON P.ProjectID = DD.Docid
WHERE  ((RSD.[Start] between @StartDate AND @EndDate ) OR (RED.[END] between @StartDate AND @EndDate ) OR (RSD.[Start] <= @StartDate AND RED.[End] >= @EndDate ))   AND  (P.IsContract = 1)  
and
issupplier <> 1
)

order by company

 ","0","","1","LRA-FUSION","0","0","fusion"
"40463","Cv_Certificate","","SELECT     Learners.FirstName + ' ' + Learners.SurName AS [<Lnames>], Learners.NationalID AS [<idNo>], Entity.Company AS [<place>], 
                      CourseSchedule.CourseTitle AS [<training>], 
                      RTRIM(LTRIM(UPPER(EntityContact.FirstName))) + ' ' + 
                      RTRIM(LTRIM(UPPER(EntityContact.Surname))) AS [<Teachers>], 
                      Lookup.Value AS [<location>], CAST(DAY(AttendanceRegister.TrainingDate) AS VARCHAR(2)) + ' ' + DATENAME(MM, AttendanceRegister.TrainingDate) 
                      + ' ' + RIGHT(CAST(YEAR(AttendanceRegister.TrainingDate) AS VARCHAR(4)), 4) AS [<dates>], CONVERT(datetime, AttendanceRegister.TrainingDate, 103) AS [<date2>], 
                      CONVERT(varchar, AttendanceRegister.TrainingDate, 112) + '' + LEFT('00000', 5 - LEN(Learners.LearnerID)) + CONVERT(varchar, Learners.LearnerID) AS [<CertNo>], 
                      Venue.Venue AS [<venue>]
                       ,isnull(Q.NQFLevel,'') as [<NQFLevel>]
                      ,isnull(Q.SAQAQualID,'') as [<SAQAQualID>]
                      ,isnull(Q.MinCredit,0) as [<MinCredit>]
FROM         Learners INNER JOIN
                      AttendanceRegister ON Learners.LearnerID = AttendanceRegister.LearnerID INNER JOIN
                      CourseSchedule ON AttendanceRegister.CourseScheduleID = CourseSchedule.CourseScheduleID Left JOIN
                      Entity ON Learners.entityid = Entity.EntityID inner JOIN
                      Venue ON CourseSchedule.VenueID = Venue.VenueID INNER JOIN
                      EntityContact ON CourseSchedule.AssessorID = EntityContact.EntityContactID left JOIN
                      Lookup ON Lookup.LookupID = Venue.City INNER JOIN
                      CourseScheduleEnrolement ON CourseScheduleEnrolement.CourseScheduleID = AttendanceRegister.CourseScheduleID
                      Left  Join [PFLearnProgram] PQ on PQ.[PFLearnProgramID]=CourseSchedule.[PFLearnProgramID]
                      Left Join qualification Q on Q.[QualificationID] = PQ.[QualificationID]
                      { where}
ORDER BY AttendanceRegister.TrainingDate DESC","0","","1","LRA-FUSION","0","0","fusion"
"40464","CV_SubTask","","declare @TaskID as int
set @TaskID = {ID}
Select 

Col as [  ]
,Val as [  ]
from
(
select Actionid as ActionID, A.TaskReminderID As ID,'<b>Taskname<b>' as Col, ISNULL(Convert(Varchar, TaskName + ' - Sub'),'') as Val,1 as Rank From [Actions] A LEFT JOIN (SELECT TaskreminderID, TaskName From Taskreminder) tr ON tr.TaskReminderID = a.TaskReminderID
union all
select Actionid as ActionID ,TaskReminderID as ID,'Contact' as Col, [Names] as Val,2 as Rank From [Actions] A Left Join(Select UserID,Isnull(Firstname,'') + ' ' + Isnull(Surname,'') as [Names] from  users )U on U.UserID=A.AssignedTo
union all
select Actionid as ActionID , TaskReminderID as ID, 'Due Date' as Col, CONVERT(Varchar(13),nextactiondate,103) as Val,3 as Rank  From [Actions]
union all
select Actionid as ActionID , TaskReminderID as ID, 'Sub Task Group' as Col,isnull([Sub Task Group],'') as Val ,4 as Rank  From [Actions] A Left Join (select LookUpID,Value as [Sub Task Group] from Lookup) L on L.LookUpID=A.SubTaskGroup
union all
select Actionid as ActionID , TaskReminderID as ID, 'Task Type' as Col,isnull([Task Type],'') as Val ,5 as Rank  From [Actions] A Left Join (select LookUpID,Value as [Task Type] from Lookup) L on L.LookUpID=A.bittypeid
union all
select  Actionid as ActionID ,TaskReminderID as ID, 'Priority' as Col,isnull([Priority],'') as Val ,6 as Rank  From [Actions] A Left Join (select LookUpID,Value as [Priority] from Lookup) L on L.LookUpID=A.priorityid
union all
select  Actionid as ActionID ,TaskReminderID as ID, 'Comments' as Col, isnull(comments,'') as Val,7 as Rank  From [Actions]
union all
select  Actionid as ActionID ,TaskReminderID as ID, 'Result' as Col,isnull(Result,'') as Val,8 as Rank   From [Actions]
union all
select  Actionid as ActionID ,TaskReminderID as ID, 'Percentage Done' as Col, ISNULL(Convert(Varchar, PercentageID),'') + '%' as Val,9 as Rank   From [Actions]
union all 
select  Actionid as ActionID ,TaskReminderID as ID, 'Complete' as Col,isnull(Complete,'') as Val,10 as Rank   From [Actions]

)e
where e.ID=@TaskID
order by ActionID,ID,Rank,Col,Val","0","","1","LRA-FUSION","0","0","fusion"
"40465","cv_Project_Transmittal","","SELECT top 1
	ISNULL(E.Company,'') AS [<company>],
	ISNULL(P.ProjectName,'') AS [<projectname>],
	ISNULL(EC.Firstname,'') +' '+ ISNULL(EC.Surname,'') AS [<contact>],
	ISNULL(L.Value,'') as [<division>],
	ISNULL(PM.Firstname,'') +' '+ ISNULL(PM.Surname,'') AS [<projectman>],
	ISNULL(PS.Value,'') AS [<projectstatus>],
	ISNULL(QC.Firstname,'') +' '+ ISNULL(QC.Surname,'') AS [<qualitycontroller>],
	convert(varchar,getdate(),103) as [<docdate>],
	EC.email as [<clientemail>],
	isnull(P.ProjectNum,'') + ' : ' + isnull(P.ProjectName,'') as [<project>],
	P.ClientPO as [<clientorderno>],
	P.ProjectNum as [<companyrefno>],
        P.ProjectNum as [<companyrefno>],
	P.ProjectNotes as [<notes>],
	EC.FirstName + '' + EC.Surname + '' as [<client>],
	P.DeliveryAddress as [<deliveryaddress>]
FROM Projects P
LEFT JOIN Entity E 
	ON P.EntityID = E.EntityID
LEFT JOIN EntityContact EC 
	ON P.EntityContactID = EC.EntityContactID
LEFT JOIN Lookup L 
	ON P.DivID = L.LookupID
LEFT JOIN Staff PM 
	ON P.ProjectManagerID = PM.StaffID
LEFT JOIN Lookup PS 
	ON P.projectstateid = PS.LookupID
LEFT JOIN Staff QC 
	ON P.ControllerID = QC.StaffID","0","","1","LRA-FUSION","0","0","fusion"
"40466","cv_CreateInvoices","","insert into debtor_master
(createdby,
datecreated,
datecompleted,
entityid,
doctype,
docstatus,
memo,
salesrepid,
divisionid,
currency,
neverexpire,
startdate,
enddate,
ocinterval,
tempid,
docno)
select  createdby,transactiondate,transactiondate,
e.entityid,'Invoice','Completed',
memo,salesrepid,divisionid,
'R','0',transactiondate,DateAdd(d,1,transactiondate),'Monthly'
,ID
,ID
from 
temptransactions t
 left JOIN entity e on
Replace(Ltrim(Replace(e.ACCOUNTNUM,'0',' ')),' ','0') = Replace(Ltrim(Replace(t.AccNo,'0',' ')),' ','0')
 where entityid is not null
 
 
insert into debtor_detail(docid,stockid,stockcode,qty,costpriceex,priceex,comments)
select docid,acc.StockID,acc.StockCode,t.Qty,t.Amount,t.Amount,t.Memo from debtor_master bm
inner join temptransactions t 
on t.ID = bm.TempID
inner join accstock acc 
on acc.StockDescription = t.Product
","0","","1","LRA-FUSION","0","0","fusion"
"40467","cv_CreatePaymentReceipts","","insert into debtor_master(createdby,datecreated,datecompleted,entityid,doctype,docstatus,memo,previousdocid,salesrepid,divisionid,startdate,enddate,ocinterval,currency,docno)
select dm.createdby,dm.datecreated,dm.datecompleted,dm.entityid,'Payment Receipt',dm.DocStatus,dm.memo,dm.docid,dm.salesrepid,dm.divisionid,dm.startdate,dm.enddate,dm.ocinterval,dm.currency,dm.docno from debtor_master dm
left join debtor_master dm2 on
dm.docid = dm2.previousdocid
where dm2.docid is null
and dm.doctype = 'Invoice'

insert into debtor_detail (docid,stockid,stockcode,stockdescription,qty,costpriceex,priceex)
select dm.docid,dd2.stockid,dd2.stockcode,dd2.stockdescription,dd2.Qty,
dd2.costpriceex,dd2.priceex from debtor_master dm 
left join debtor_detail dd
on dm.DocID = dd.DocID
left join debtor_master dm2 
on dm2.DocID = dm.PreviousDocID
left join debtor_detail dd2
on dm2.DocID = dd2.DocID
where dm.doctype = 'Payment Receipt'
and dd.LineID is null","0","","1","LRA-FUSION","0","0","fusion"
"40468","cv_CreateCompanies","","insert into entity (company,legalname,vendornumber,accountnum,refno)
select t.company,t.company,t.vendorno,
Replace(Ltrim(Replace(t.accno,'0',' ')),' ','0') ,Convert(Varchar(50),regdate,106)

from temptransactions t left join
entity e on
Replace(Ltrim(Replace(t.accno,'0',' ')),' ','0') = e.accountnum
where e.entityid is null
and t.company is not null
","0","","1","LRA-FUSION","0","0","fusion"
"40469","cv_CreateDebtorPayments",""," insert into debtor_payment (paymentdocid,invoicedocid,paymentportion,entityid)
 select dm.docid,dm.previousdocid,dd.priceex,dm.entityid from debtor_master dm
 left join debtor_payment dp on
 dp.paymentdocid = dm.docid and dp.invoicedocid = dm.previousdocid
 left join debtor_detail dd on
 dm.docid = dd.docid
 where doctype = 'Payment Receipt'
 and dp.debtor_paymentid is null
  ","0","","1","LRA-FUSION","0","0","fusion"
"40470","cv_Entity_Contract","","SELECT  
	P.ProjectID, 
	LD.Value as [Division],
	ProjectID as [Contract No.],
	LS.Value as [Status],
	EC.Contact as [Contact],
	isnull(P.ProjectName,'') as [Contract Description],
	Convert(varchar,P.DateAdded,111) as [Created],
	Convert(varchar,RSD.[Start],111) as [Start],
	Convert(varchar,RED.[End],111) as [End],
	DATEDIFF(DAY, RED.[End], GETDate()) as [Days Over],
	dbo.fnFormatNumber(([Total Ex. VAT] / isnull(P.ROE,1))) as [Total Ex. VAT], 
	dbo.fnFormatNumber((([Total Incl. VAT] - [Total Ex. VAT])  / isnull(P.ROE,1))) as [Total VAT], 
	dbo.fnFormatNumber(([Total Incl. VAT]  / isnull(P.ROE,1)))  as [Total Incl. VAT]
FROM Projects P
LEFT JOIN (SELECT EntityID, AccountNum, Company From Entity) E
ON P.EntityID = E.EntityID
LEFT JOIN (SELECT EntityContactID, isnull(Firstname, '') + ' ' + isnull(Surname,'') as [Contact], Phone1, Cell FROM EntityContact) EC
ON P.EntityContactID = EC.EntityContactID
LEFT JOIN (SELECT min(StartDate) AS [Start], DocID FROM Rental where DocType = 'Contract' Group by DocID ) RSD
ON P.ProjectID = RSD.DocID
LEFT JOIN (SELECT max(endDate) AS [End], DocID FROM Rental where DocType = 'Contract' Group by DocID ) RED
ON P.ProjectID = RED.DocID
LEFT JOIN Lookup LD
ON P.DivID = LD.LookupID
LEFT JOIN Lookup LS
ON P.ProjectStateID = LS.LookupID
LEFT JOIN (SELECT DocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100)) as [Total Ex. VAT],
	             Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [Total Incl. VAT], 
	             Cast(sum(isnull(CostPriceEx,0) * qty) as money) as [Est. Cost], 
	             Sum(PriceEx * Qty * (( isnull(Discperc,0) )/100)) as [Total Discount]
	             FROM CONTRACT_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 Group by Docid) DD
ON P.ProjectID = DD.Docid
{where}
ORDER BY ProjectID desc","0","","1","LRA-FUSION","0","0","fusion"
"40471","cv_Acc_Stock_Find_Availability","","DECLARE @UserID as int
SET @UserID = {userid}

SELECT Distinct Top 500
A.[ID] + '#' + convert(varchar(50),newid()), 
[Type], [Sub Type], [Code], [Description], 
dbo.fnFormatNumber(sum(Available)) as [Available]
FROM (
	SELECT convert(varchar,STK.StockID)  + '#0' as [ID],
	ST.Value as [Type], SST.Value as [Sub Type], STK.StockCode as [Code], 
	STK.StockDescription as [Description],
	PC.Lookupid as [PriceCategoryID],
	ISNULL(IsAccountCode,0) as [IsGLCode],SP.SupplierID,
Barcode as [Barcode],E.Company as [Supplier],
SP.SupplierStockCode as [Supplier's Product Code],
	isnull(STK.IsRentable,0) as [IsRentable],
	(isnull([Qty In Container],0) --In Container
	-
	CASE WHEN (isnull(SO.Qty,0) - isnull(DN.Qty,0)) > 0 THEN (isnull(SO.Qty,0) - isnull(DN.Qty,0))  ELSE 0 END --On S.O. & Required
	-
	isnull(MC.Qty,0)) --For Manufacturing 
	as [Available], SC.ContainerID

	FROM AccStock STK
	LEFT JOIN (SELECT * FROM Lookup where class like 'StockType') ST
	ON STK.StockType = ST.Lookupid
	LEFT JOIN (SELECT * FROM LinkLookup where class like 'StockSubType') SST
	ON STK.SubTypeID = SST.LinkLookupID
	CROSS JOIN (SELECT top 1 * FROM Lookup where class = 'PriceCategory') PC
	LEFT JOIN (SELECT * FROM AccStockPrice 
				Where getdate() between ValidFrom and ValidTo 
				and isnull(IsContract,0) = 0
				and divisionid in (SELECT DivisionID FROM UserDivisions where userid = @userID)) SP
	ON STK.StockID = SP.StockID AND PC.LookupID = SP.PriceCategoryID
	LEFT JOIN (SELECT EntityID, Company FROM Entity) E
	ON SP.SupplierID = E.Entityid	
	CROSS JOIN (SELECT * FROM LinkLookup where class ='StockContainer') LL 	
	LEFT JOIN (SELECT StockID,ContainerID, sum(Qty * Ratio) as [Qty In Container] FROM AccStockControl Group by StockID,ContainerID) SC
	ON STK.StockID = SC.StockID AND LL.LinkLookupID = SC.ContainerID
	LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
				LEFT JOIN (SELECT DOCID, DocType FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
				ON DD.DocID = DM.DocID
				LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*{table}*/) DDM
				ON DD.ComponentOfLineID = DDM.LineID
				WHERE DM.DocType in ('Sales Order', 'Quote')
				Group by StockID, ContainerID ) SO
	ON STK.StockID = SO.StockID AND LL.LinkLookupID = SO.ContainerID	
	LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
				LEFT JOIN (SELECT DOCID, DocType FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
				ON DD.DocID = DM.DocID
				LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*{table}*/) DDM
				ON isnull(DD.ComponentOfLineID,0) = DDM.LineID
				WHERE DM.DocType = 'Dispatch Note'
				Group by StockID, ContainerID ) DN
	ON STK.StockID = DN.StockID AND LL.LinkLookupID = DN.ContainerID	
	LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
				LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
				ON CD.DocID = CM.DocID
				WHERE CM.DocType = 'Purchase Order'
				Group by StockID, ContainerID ) PO
	ON STK.StockID = PO.StockID AND LL.LinkLookupID = PO.ContainerID	
	LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
				LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
				ON CD.DocID = CM.DocID
				WHERE CM.DocType = 'Goods Received Note'
				Group by StockID, ContainerID ) GRN
	ON STK.StockID = GRN.StockID AND LL.LinkLookupID = GRN.ContainerID	
	LEFT JOIN (SELECT MD.StockID, MD.ContainerID, Sum(MD.Qty) as [Qty] FROM AccMANUFACTURE_DETAIL MD
				LEFT JOIN (SELECT DocID, IsComplete FROM AccMANUFACTURE) MM
				ON MD.DocID = MM.DocID
				WHERE isnull(MM.IsComplete,0) = 0 
				Group by MD.StockID, MD.ContainerID) MC
	ON STK.StockID = MC.StockID AND LL.LinkLookupID = MC.ContainerID
	LEFT JOIN (SELECT MO.StockID, MO.ContainerID, sum(MO.Qty) as [Qty] FROM AccMANUFACTURE_Output MO
				LEFT JOIN (SELECT DocID, IsComplete FROM AccMANUFACTURE) MM
				ON MO.DocID = MM.DocID
				WHERE isnull(MM.IsComplete,0) = 0 
				Group by MO.StockID, MO.ContainerID) MO
	ON STK.StockID = MO.StockID AND LL.LinkLookupID = MO.ContainerID
	WHERE isnull(IsHidden,0) = 0

) A
{where}
GROUP BY A.[ID], [Type], [Sub Type], [Code], [Description]
HAVING sum(Available) <> 0 
ORDER By [Code], [Description]
","0","","1","LRA-FUSION","0","0","fusion"
"40472","cv_Print_Contract_Location","","SELECT 
	CASE WHEN Z.[Rank] = 1 THEN [Site] ELSE '' END as [Site],
	[Plant],
	[Description] ,
	[Account],
	[Contract],
	[Serial Number],
	[Date Out],
	[Est Date In],
	Qty
FROM (
	SELECT 
		P.DeliveryAddress,
		P.DeliveryAddress As [Site],	
		CD.StockCode as [Plant],
		CD.StockDescription as [Description],
		E.Accountnum as [Account],
		LEFT('00000000', 8 - LEN(P.ProjectID)) + CONVERT(VARCHAR, P.ProjectID) as [Contract],
		CD.SerialNumber as [Serial Number],
		CONVERT(VARCHAR, R.StartDate, 111) as [Date Out],
		CONVERT(VARCHAR, R.EndDate, 111) as [Est Date In],
		CD.Qty, 
		1 as [rank]
	FROM projects P
	LEFT JOIN CONTRACT_DETAIL CD ON CD.DocID = P.ProjectID
		AND CD.RentalLineID > 0
	LEFT JOIN Entity E ON E.EntityID = P.EntityID
	LEFT JOIN Rental R ON R.LineID = CD.LineID AND R.Duration > 0
	LEFT JOIN AccStock STK ON STK.StockID = CD.StockID
	{where}

	UNION ALL

	SELECT 
		P.DeliveryAddress,
		P.DeliveryAddress,	
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'Count ',
		SUM(CD.Qty), 
		2 as [rank]
	FROM projects P
	LEFT JOIN CONTRACT_DETAIL CD ON CD.DocID = P.ProjectID
		AND CD.RentalLineID > 0
	LEFT JOIN Entity E ON E.EntityID = P.EntityID
	LEFT JOIN Rental R ON R.LineID = CD.LineID AND R.Duration > 0
	LEFT JOIN AccStock STK ON STK.StockID = CD.StockID
	{where}
	GROUP BY P.DeliveryAddress
) Z
ORDER BY Z.DeliveryAddress , Z.[Rank]","0","","1","LRA-FUSION","0","0","fusion"
"40473","cv_Documents_Quote","","Select Distinct
EntityDocumentID
,Name
,[Path]
,Keywords
from EntityDocument
where LinkedCostEstimateDetailID={DOCID}
","0","","1","LRA-FUSION","0","0","fusion"
"40474","cv_Expenditure_PO","","SELECT 
	DocID,
	SupplierID,
	Qty,
	StockID
FROM EXPENDITURE_MASTER EM
WHERE DocStatus = 'COMPLETED' AND Requisition = 'Requisition' AND EM.DocID IN ({IDs})","0","","1","LRA-FUSION","0","0","fusion"
"40475","cv_Importizazitimesheet","","insert into Entity 
(
Company
,LegalName
)
select distinct
Company
,Company
from __TimesheetIzazi
where isnull(Company,'')<>''
and Company  not in (select Company from Entity)


insert into staff
(
Firstname	
,Surname	
,FullName
,isActive
,isTechnician
,ispermanent
)
select Distinct
left(EmployeeName, CHARINDEX(' ', EmployeeName)) as firstname,
substring(EmployeeName, CHARINDEX(' ', EmployeeName)+1, len(EmployeeName)-(CHARINDEX(' ', EmployeeName)-1)) as lastname,
left(EmployeeName, CHARINDEX(' ', EmployeeName)) + ' ' + substring(EmployeeName, CHARINDEX(' ', EmployeeName)+1, len(EmployeeName)-(CHARINDEX(' ', EmployeeName)-1)) as FullName
,1
,1
,1
from __TimesheetIzazi
where isnull(EmployeeName,'')<>''  and 
left(EmployeeName, CHARINDEX(' ', EmployeeName)) not in (select EmployeeName from staff)
and substring(EmployeeName, CHARINDEX(' ', EmployeeName)+1, len(EmployeeName)-(CHARINDEX(' ', EmployeeName)-1)) not in (select Surname from staff)

insert into staff
(
Firstname	
,Surname	
,FullName
,isActive
,isProjectManager
,ispermanent
)


select Distinct
left(ProjectManager, CHARINDEX(' ', ProjectManager)) as firstname,
substring(ProjectManager, CHARINDEX(' ', ProjectManager)+1, len(ProjectManager)-(CHARINDEX(' ', ProjectManager)-1)) as lastname,
left(ProjectManager, CHARINDEX(' ', ProjectManager)) + ' ' + substring(ProjectManager, CHARINDEX(' ', ProjectManager)+1, len(ProjectManager)-(CHARINDEX(' ', ProjectManager)-1)) as FullName
,1
,1
,1
from __TimesheetIzazi
where isnull(ProjectManager,'')<>'' and 
left(ProjectManager, CHARINDEX(' ', ProjectManager)) not in (select Firstname from staff)
and substring(ProjectManager, CHARINDEX(' ', ProjectManager)+1, len(ProjectManager)-(CHARINDEX(' ', ProjectManager)-1)) not in (select Surname from staff)

insert into users
(
FirstName
,Surname
,StaffID
,Username
)
select distinct
left(EmployeeName, CHARINDEX(' ', EmployeeName)) as FirstName
,substring(EmployeeName, CHARINDEX(' ', EmployeeName)+1, len(EmployeeName)-(CHARINDEX(' ', EmployeeName)-1)) as Surname
,S.StaffID
,left(EmployeeName, CHARINDEX(' ', EmployeeName)) as Username
from staff S
left Join __TimesheetIzazi Z on 
left(EmployeeName, CHARINDEX(' ', EmployeeName)) =S.FirstName and 
 substring(EmployeeName, CHARINDEX(' ', EmployeeName)+1, len(EmployeeName)-(CHARINDEX(' ', EmployeeName)-1)) =S.Surname
 where isnull(EmployeeName,'')<>'' and 
 left(EmployeeName, CHARINDEX(' ', EmployeeName)) not in (select Firstname from Users)
and substring(EmployeeName, CHARINDEX(' ', EmployeeName)+1, len(EmployeeName)-(CHARINDEX(' ', EmployeeName)-1)) not in (select Surname from Users)


insert into projects
(
ProjectNum
,ProjectName
,ProjectManagerID
,EntityID
)
SELECT distinct
RTRIM(LTRIM(left(ProjectName, CHARINDEX('_', ProjectName)-1))) as Code,
RTRIM(LTRIM(substring(ProjectName, CHARINDEX('_', ProjectName)+1, len([ProjectName])-(CHARINDEX('_', [ProjectName])-1)))) as Projectname,
S.StaffID,
E.EntityID
from __TimesheetIzazi Z
left Join staff S on
left(ProjectManager, CHARINDEX(' ', ProjectManager)) =S.Firstname 
and 
substring(ProjectManager, CHARINDEX(' ', ProjectManager)+1, len(ProjectManager)-(CHARINDEX(' ', ProjectManager)-1))=S.Surname
Left Join Entity E on E.company = Z.company
where isnull(ProjectName,'') <>'' and 
RTRIM(LTRIM(left(isnull(ProjectName,''), CHARINDEX('_', isnull(ProjectName,''))-1))) not in (select isnull(ProjectNum,'') from projects)
and RTRIM(LTRIM(substring(isnull(ProjectName,''), CHARINDEX('_', isnull(ProjectName,''))+1, len(isnull(ProjectName,''))-(CHARINDEX('_', isnull(ProjectName,''))-1)))) not in (select isnull(ProjectName,'') from projects)


insert into modules
(
projectID
,Modulename
,EntityID
,StartDate	
,EndDate
)
select distinct
P.ProjectID
,Z.ProjectName
,P.EntityID
,J.start
,K.[End]
from Projects P
left join __TimesheetIzazi Z on
RTRIM(LTRIM(substring(Z.ProjectName, CHARINDEX('_', Z.ProjectName)+1, len(Z.[ProjectName])-(CHARINDEX('_', Z.[ProjectName])-1))))=P.ProjectName
left join (Select ProjectName,Max(dateworked)as start from __TimesheetIzazi group by ProjectName) J on J.ProjectName=Z.ProjectName
left join (Select ProjectName,Min(dateworked)as [End] from __TimesheetIzazi group by ProjectName) K on K.ProjectName=Z.ProjectName
where isnull(z.ProjectName,'')<>''

insert into lookup
(
Value
,Class
)
select distinct
TaskName
,'TaskType'
 from __TimesheetIzazi
 where isnull(Taskname,'')<>''
 and TaskName not in (select  Value from lookup where Class like 'TaskType' )


insert into DevAppointment 
(
EntityID
,Date
,enddate
,ProjectID 
,ModuleID 
,approved
,Completed 
,foruserid
,JobTaskName
,TaskTypeID
)
select 
M.EntityID
,DateWorked
,DATEADD(hh, cast(Z.[Hours]as int), DateWorked)
,M.ProjectID
,M.moduleID
,case when Approved='Approved' then 1 else 0 end as Approved
,case when Approved='Approved' then 1 else 0 end as Completed
,U.UserID
, cast(Z.[Hours]as int)
,L.LookupID
from __TimesheetIzazi Z
left Join Modules M on M.ModuleName=Z.ProjectName
Left Join Users U on 
 left(EmployeeName, CHARINDEX(' ', EmployeeName)) =U.Firstname
and substring(EmployeeName, CHARINDEX(' ', EmployeeName)+1, len(EmployeeName)-(CHARINDEX(' ', EmployeeName)-1)) = U.Surname
Left Join Lookup L on L.Value = Z.TaskName and L.Class like 'TaskType'
where isnull(EmployeeName,'')<>''

insert into timesheet
(
TimesheetDate 
,DeveloperID
,ProjectID 
,ModuleID 
,Hoursdone
,EntityID 
,DevApptID
,Approved
)
select distinct
GETDATE()
,ForuserID
,ProjectID 
,ModuleID 
,JobTaskName 
,Entityid
,DevApptID 
,1
from [DevAppointment]
where DevApptID not in (select DevApptID from timesheet)
and isnull(ProjectID,0)<>0

","0","","1","LRA-FUSION","0","0","fusion"
"40476","cv_Food_Man","","SELECT 
	F.FoodServicesID,
	E.Company,
	L.Value as [Division] ,
	CONVERT(VARCHAR, F.[Date], 111) as [Date],
	STK.StockCode as [Stock Code],
	STK.StockDescription as [Description],
	F.Qty,
	ISNULL(U.FirstName, '') + ' ' + ISNULL(U.Surname, '') as [User]
FROM FoodServicesDetails F
LEFT JOIN Entity E ON E.EntityID = F.EntityID 
LEFT JOIN Lookup L ON L.LookupID = F.EntityDivisionID 
LEFT JOIN AccStock STK ON STK.StockID = F.StockID 
LEFT JOIN Users U ON U.UserID = F.UserID 
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40477","cv_scheduleCourseMediatorCal","","Select distinct cs.CourseScheduleID,ec.EntityContactID,isnull(EC.FirstName,'')+' '+isnull(EC.surName,'') as [Mediator],PF.Code,
(select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0) as [Min], 
(select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0) as [Max],
(select top 1 [Date] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 1) as [Followup],cs.Color  
from CourseSchedule cs
left join EntityContact EC on EC.EntityContactId = cs.MediatorID
left join PFLearnProgram PF on PF.PFLearnProgramID = CS.PFLearnProgramID
where  (isnull(EC.FirstName,'')+' '+isnull(EC.surName,'') <> ' ') <%And%>
and /*(Year(<%Month%>) = year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
and Month(<%Month%>) = Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
and Year(<%Month%>) = year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
and Month(<%Month%>) = Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
or ((Month(<%Month%>) > Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)) 
and Month(<%Month%>) < Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
and year(<%Month%>) = Year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
 and year(<%Month%>) = Year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
 )*/
(
	((Year(<%Month%>) = year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
	and
	(
		(Month(<%Month%>) = Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
		or (<%Month%> > (select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
	))
	or
	((Year(<%Month%>) = year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
	and
	(
		(Month(<%Month%>) = Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
		or (<%Month%> < (select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
	))
)
order by [Mediator],ec.EntityContactID,PF.Code




/*Select distinct ec.EntityContactID,isnull(EC.FirstName,'')+' '+isnull(EC.surName,'') as [Assessor],PF.Code,
(select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID) as [Min], 
(select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID) as [Max] 
from CourseSchedule cs
left join EntityContact EC on EC.EntityContactId = cs.AssessorID
left join PFLearnProgram PF on PF.PFLearnProgramID = CS.PFLearnProgramID
where isnull(EC.FirstName,'')+' '+isnull(EC.surName,'') <> ' '
and Year(<%Month%>) = year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID))
and Month(<%Month%>) = Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID))
and Year(<%Month%>) = year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID))
and Month(<%Month%>) = Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID))
or(Month(<%Month%>) > Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID)) and Month(<%Month%>) < Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID)) and year(<%Month%>) = Year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID)) and year(<%Month%>) = Year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID)))
 and (ec.entityContactID in (2224))
order by [Assessor],ec.EntityContactID,PF.Code*/","0","","1","LRA-FUSION","0","0","fusion"
"40478","cv_scheduleCourseFacilitatorCal","","Select distinct cs.CourseScheduleID,ec.EntityContactID,isnull(EC.FirstName,'')+' '+isnull(EC.surName,'') as [Facilitator],PF.Code,
(select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0) as [Min], 
(select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0) as [Max],
(select top 1 [Date] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 1) as [Followup],cs.Color  
from CourseSchedule cs
left join EntityContact EC on EC.EntityContactId = cs.FaccilitatorID
left join PFLearnProgram PF on PF.PFLearnProgramID = CS.PFLearnProgramID
where  (isnull(EC.FirstName,'')+' '+isnull(EC.surName,'') <> ' ') <%And%>
and /*(Year(<%Month%>) = year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
and Month(<%Month%>) = Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
and Year(<%Month%>) = year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
and Month(<%Month%>) = Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
or ((Month(<%Month%>) > Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)) 
and Month(<%Month%>) < Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
and year(<%Month%>) = Year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
 and year(<%Month%>) = Year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
 )*/
(
	((Year(<%Month%>) = year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
	and
	(
		(Month(<%Month%>) = Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
		or (<%Month%> > (select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
	))
	or
	((Year(<%Month%>) = year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0))
	and
	(
		(Month(<%Month%>) = Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
		or (<%Month%> < (select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID and isnull(isfollowup,0) = 0)))
	))
)
order by [Facilitator],ec.EntityContactID,PF.Code




/*Select distinct ec.EntityContactID,isnull(EC.FirstName,'')+' '+isnull(EC.surName,'') as [Assessor],PF.Code,
(select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID) as [Min], 
(select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID) as [Max] 
from CourseSchedule cs
left join EntityContact EC on EC.EntityContactId = cs.AssessorID
left join PFLearnProgram PF on PF.PFLearnProgramID = CS.PFLearnProgramID
where isnull(EC.FirstName,'')+' '+isnull(EC.surName,'') <> ' '
and Year(<%Month%>) = year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID))
and Month(<%Month%>) = Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID))
and Year(<%Month%>) = year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID))
and Month(<%Month%>) = Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID))
or(Month(<%Month%>) > Month((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID)) and Month(<%Month%>) < Month((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID)) and year(<%Month%>) = Year((select min(Date) as [min] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID)) and year(<%Month%>) = Year((select max(Date) as [max] from CourseScheduleDays where CourseScheduleID = CS.CourseScheduleID)))
 and (ec.entityContactID in (2224))
order by [Assessor],ec.EntityContactID,PF.Code*/","0","","1","LRA-FUSION","0","0","fusion"
"40479","cv_Test","","Select * from Test
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40480","cv_ContractContent","","Declare @docID  as integer
Declare @CommentsBelow as bit
Declare @ShowComponents as integer
Declare @HideZeros as bit
Declare @PrintComponentsDQP as Bit
Declare @PrintComponentsDQ as Bit
Declare @PrintComponentsD as Bit
Declare @ProjectName As Varchar(300)
Declare @ProjectID AS integer
Declare @DocType As Varchar(30)


Set @ProjectID = {docid}
Set @ProjectName = (select Convert(Varchar,@DocID) + ' - ' + (Select top 1 projectnum from projects where projectid = @ProjectID))

set @DocType= {DocType}
Set @DocID = {docid}
Set @CommentsBelow  = isnull((SELECT Top 1 Selected from crmSetup where variable = 'CommentsBelow'),0)
SET @ShowComponents = isnull((SELECT top 1 Selected  FROM CRMSetup WHERE [Description]  = 'AccPrint' AND Variable = 'PrintComponents' and custValue = @DocType),0)

SET @HideZeros = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'HideZeroValues')


SET @PrintComponentsDQP = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'PrintComponentsDQP')
SET @PrintComponentsDQ = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'PrintComponentsDQ')
SET @PrintComponentsD = (SELECT Top 1 isnull(Selected,0) FROM CRMSetup where [Description] =  'AccPrint' AND Variable = 'PrintComponentsD')

{select}  

(SELECT LineId, 
	
	isnull(ESC.EntityStockCode,StockCode) as [Code], 

	isnull(ESC.EntityStockDescription,StockDescription)  as [Description],

	comments,
	
	convert(varchar,round((Qty),4))  as [Qty], 
	
	CASE WHEN @HideZeros = 1 AND (PriceEx / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber(PriceEx / isnull(DM.ROE,1)) END as [Price Ex. VAT],
	
	CASE WHEN @HideZeros = 1 AND (PriceEx / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx) / isnull(DM.ROE,1) *Tax/100 ) END as [Unit VAT], 
	
	CASE WHEN @HideZeros = 1 AND ((PriceEx) / isnull(DM.ROE,1) *Tax/100 + (PriceEx) / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx) / isnull(DM.ROE,1) *Tax/100 + (PriceEx) / isnull(DM.ROE,1) ) END as [Price Incl. VAT],
	
	CASE WHEN @HideZeros = 1 AND ((Qty * PriceEx) / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) ) END as [Total Ex. VAT],
	
	CASE WHEN @HideZeros = 1 AND ((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 ) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 ) END as [VAT],
	
	CASE WHEN @HideZeros = 1 AND ((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1) ) END as [Total Incl],
	
	CASE WHEN @HideZeros = 1 AND (SUM((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1) )) = 0 THEN '' ELSE dbo.fnFormatNumber(SUM((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1) )) END as [Sub Total],  
	
	CASE WHEN @HideZeros = 1 AND ((PriceEx * Qty * (isnull(discperc,0))/100)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx * Qty * (isnull(discperc,0))/100)) END as [Discount],
	
	CASE WHEN @HideZeros = 1 AND ((PriceEx * Qty * (isnull(WastePerc,0))/100)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx * Qty * (isnull(WastePerc,0))/100)) END as [Wastage],
	
	1 as [Rank],
	
	CASE WHEN isnull(DD.Comments,'') = '' THEN isnull(ESC.EntityStockDescription,StockDescription) ELSE DD.Comments END  as [Comments Instead Of Description],P.ProjectNum + ' - ' + P.ProjectName As Project
	,CONVERT(VARCHAR, R.StartDate, 111) As [Rental Start Date]
	,CONVERT(VARCHAR, R.EndDate, 111) As [Rental End Date]
	,DD.GroupName as [Group Name]
	,LU.Value as [UNIT]
	,CASE R.RentalPeriodType
		WHEN 1 THEN 'Hours'
		WHEN 2 THEN 'Days'
		WHEN 3 THEN 'Nights'
		WHEN 4 THEN 'Weeks'
		WHEN 5 THEN 'Months'
	END as [Period],
	CR.QTYRET as [Returned]
	FROM CONTRACT_DETAIL DD
	LEFT JOIN (SELECT DocID , ROE, EntityID, ProjectID FROM DEBTOR_MASTER ) DM
	ON DD.DocID = DM.DocID 
        LEFT JOIN (SELECT ProjectNum,ProjectName,ProjectID FROM PROJECTS) AS P
	ON P.ProjectID = DM.ProjectID
	LEFT JOIN (SELECT * FROM EntityStockCode) ESC
	ON DD.StockID = ESC.StockID AND DM.EntityID = ESC.EntityID
        LEFT JOIN (Select StartDate,EndDate,RentalID, RentalPeriodType from RENTAL) R
	on R.RentalID = DD.RentalLineID
	LEFT JOIN (SELECT StockID, SoldBy FROM AccStock) STK ON STK.StockID = DD.StockID
	LEFT JOIN Lookup LU ON LU.LookupID = STK.SoldBy
	LEFT JOIN (SELECT 
				DM.ProjectID,
				DD.StockID,
				SUM(DD.Qty) as QTYRET 
			FROM DEBTOR_DETAIL  DD
			LEFT JOIN DEBTOR_MASTER DM ON DM.DocID = DD.DocID 
			WHERE DM.DocType like 'Credit Note'
			AND DM.DocStatus = 'Completed'
			GROUP BY DM.ProjectID, DD.StockID) CR
	ON CR.StockID = DD.StockID AND CR.ProjectID = DD.DocID
	WHERE DD.DocID = @docid
	AND isnull(ComponentOfLineID,0) = 0
	AND (isnull(ComponentOfLineID,0) = @ShowComponents OR @ShowComponents = 1) 	
	GROUP BY LineId,ComponentOfLineID,EntityStockCode,StockCode,EntityStockDescription,StockDescription,Comments,Qty,PriceEx,ROE,Tax,
	WastePerc,DiscPerc ,ProjectNum,ProjectName,StartDate,EndDate,[GroupName], LU.Value, R.RentalPeriodType,
	CR.QTYRET, DD.StockID, DD.DocID
    
    UNION ALL


	SELECT LineId, 
	
	'-    ' + isnull(ESC.EntityStockCode,StockCode) as [Code], 
	CASE WHEN @PrintComponentsDQ = 1 OR @PrintComponentsD = 1  OR @PrintComponentsDQP = 1 THEN
		'-    ' + isnull(ESC.EntityStockDescription,StockDescription)  
	ELSE
		''
	END
	as [Description],

	comments,
	
	CASE WHEN @PrintComponentsDQ = 1 OR @PrintComponentsDQP = 1 THEN
		convert(varchar,round((Qty),4))  
	ELSE
		''
	END as [Qty], 
	
	CASE WHEN @PrintComponentsDQP = 1 THEN
		CASE WHEN @HideZeros = 1 AND (PriceEx / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber(PriceEx / isnull(DM.ROE,1)) END
	ELSE
		''
	END as [Price Ex. VAT],
	
	CASE WHEN @PrintComponentsDQP = 1 THEN
		--dbo.fnFormatNumber((PriceEx) / isnull(DM.ROE,1) *Tax/100 ) 
		CASE WHEN @HideZeros = 1 AND (PriceEx / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx) / isnull(DM.ROE,1) *Tax/100 ) END
	ELSE
		''
	END as [Unit VAT], 
	
	CASE WHEN @PrintComponentsDQP = 1 THEN
		--dbo.fnFormatNumber((PriceEx) / isnull(DM.ROE,1) *Tax/100 + (PriceEx) / isnull(DM.ROE,1) )  
		CASE WHEN @HideZeros = 1 AND ((PriceEx) / isnull(DM.ROE,1) *Tax/100 + (PriceEx) / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx) / isnull(DM.ROE,1) *Tax/100 + (PriceEx) / isnull(DM.ROE,1) ) END
	ELSE
		''
	END as [Price Incl. VAT],
	
	CASE WHEN @PrintComponentsDQP = 1 THEN
		--dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) )
		CASE WHEN @HideZeros = 1 AND ((Qty * PriceEx) / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) ) END 
	ELSE
		''
	END as [Total Ex. VAT],
	
	CASE WHEN @PrintComponentsDQP = 1 THEN
		--dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 )
		CASE WHEN @HideZeros = 1 AND ((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 ) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 ) END 
	ELSE
		''
	END as [VAT],
	
	CASE WHEN @PrintComponentsDQP = 1 THEN
		--dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1) )
		CASE WHEN @HideZeros = 1 AND ((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1)) = 0 THEN '' ELSE dbo.fnFormatNumber((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1) ) END 
	ELSE
		''
	END as [Total Incl],
	
	CASE WHEN @PrintComponentsDQP = 1 THEN
		--dbo.fnFormatNumber(SUM((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1) ))  
		CASE WHEN @HideZeros = 1 AND (SUM((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1) )) = 0 THEN '' ELSE dbo.fnFormatNumber(SUM((Qty * PriceEx) / isnull(DM.ROE,1) *Tax/100 + (Qty * PriceEx) / isnull(DM.ROE,1) )) END
	ELSE
		''
	END as [Sub Total],  
	
	CASE WHEN @PrintComponentsDQP = 1 THEN
		CASE WHEN @HideZeros = 1 AND ((PriceEx * Qty * (isnull(discperc,0))/100)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx * Qty * (isnull(discperc,0))/100)) END
		--dbo.fnFormatNumber((PriceEx * Qty * (isnull(discperc,0))/100)) 
	ELSE
		''
	END as [Discount],
	
	CASE WHEN @PrintComponentsDQP = 1 THEN
		--dbo.fnFormatNumber((PriceEx * Qty * (isnull(WastePerc,0))/100)) 
		CASE WHEN @HideZeros = 1 AND ((PriceEx * Qty * (isnull(WastePerc,0))/100)) = 0 THEN '' ELSE dbo.fnFormatNumber((PriceEx * Qty * (isnull(WastePerc,0))/100)) END
	ELSE
		''
	END as [Wastage],
	
	1 as [Rank],
	
	CASE WHEN isnull(DD.Comments,'') = '' THEN isnull(ESC.EntityStockDescription,StockDescription) ELSE DD.Comments END  as [Comments Instead Of Description],P.ProjectNum + ' - ' + P.ProjectName As Project
	,'' As [Rental Start Date]
	,'' As [Rental End Date]
	,'' as [Group Name]
	,''
	,''
	,CASE WHEN @PrintComponentsDQ = 1 OR @PrintComponentsDQP = 1 THEN
		convert(varchar,round((CR.[QtyR]),4))  
	ELSE
		''
	END as QTYRET
	FROM CONTRACT_DETAIL DD
	LEFT JOIN (SELECT DocID , ROE, EntityID, ProjectID FROM DEBTOR_MASTER ) DM
	ON DD.DocID = DM.DocID 
        LEFT JOIN (SELECT ProjectNum,ProjectName,ProjectID FROM PROJECTS) AS P
	ON P.ProjectID = DM.ProjectID
	LEFT JOIN (SELECT * FROM EntityStockCode) ESC	
	ON DD.StockID = ESC.StockID AND DM.EntityID = ESC.EntityID
	LEFT JOIN (SELECT StockID, ProjectID, SUM(Qty) as [QtyR] FROM AccStockControl WHERE DocType = 'Stock Take' GROUP BY StockID, ProjectID) CR
	ON CR.StockID = DD.StockID AND CR.ProjectID = DD.DocID 
	WHERE DD.DocID = @docid
	AND isnull(ComponentOfLineID,0) <> 0
	AND (isnull(ComponentOfLineID,0) = @ShowComponents OR @ShowComponents = 1) 
	GROUP BY LineId,ComponentOfLineID,EntityStockCode,StockCode,EntityStockDescription,StockDescription,Comments,Qty,PriceEx,ROE,Tax,
	WastePerc,DiscPerc,ProjectNum,ProjectName ,[GroupName], CR.QtyR    
    
    
    
    
    UNION ALL
 
    SELECT LineId, '' as [Code],'-  ' + Comments as [Description],''as [Comments],  ''  as [Qty], 
    '' as [Price Ex. VAT],
    '' as [Unit VAT],
    '' as [Price Incl. VAT], 
    '' as [Total Ex. VAT],
    '' as [Sub Total] ,
    '' as [VAT],
    '' as  [Total Incl],
    '' as [Discount],
    '' as [Wastage],
    2 as [Rank],
    CASE WHEN isnull(DD.Comments,'') = '' THEN StockDescription ELSE DD.Comments END  as [Comments Instead Of Description],
    '' as Project,
    '' as [Rental Start Date],
    '' As [Rental End Date],
    '' as [Group Name],
    '',
    '',
    ''
    FROM CONTRACT_DETAIL DD
    LEFT JOIN (SELECT DocID , ROE FROM DEBTOR_MASTER ) DM
    ON DD.DocID = DM.DocID 
    WHERE DD.DocID = @docid
    AND @CommentsBelow = 1
    AND ltrim(rtrim(isnull(DD.Comments,''))) <> ''
    AND (isnull(ComponentOfLineID,0) = @ShowComponents OR @ShowComponents = 1) 
    ) A
ORDER By Lineid,Rank","0","","1","LRA-FUSION","0","0","fusion"
"40481","cv_ContractHeader","","SELECT Top 1
	isnull(EH.LegalName,E.Legalname) as [<legalname>],
	Case When isnull(DM.UseEC,0) = 0 then isnull(EH.Company,E.Company) ELSE EC.Contact END as [<client>],
	Case When isnull(DM.UseEC,0) = 0 then isnull(EH.Company,E.Company) ELSE EC.Contact END as [<client1>],
	isnull(E.Switchboard,'') as [<Telephone>]   ,
	isnull(E.Fax,'') as [<fax>],
	EAC.Address1 as [<address11>],
	EAC.Address2 as [<address12>],
	EAC.Address3 as [<address13>],
	EAC.Address1 as [<address1>],
	EAC.Address2 as [<address2>],
	EAC.Address3 as [<address3>],
	EAC.Region as [<region>],
	EAC.Code as [<address4>],
	EAC.city as [<address5>],
	isnull(DM.DeliveryAddress,'') as [<Daddress1>],
	'' as [<Daddress2>],
	'' as [<Daddress3>],
	isnull(EAP.Code,EAC.Code) as [<Daddress4>],
	isnull(EAP.city,EAC.city) as [<Daddress5>],
	isnull(E.compregnum,'') as [<cregno>],
	isnull(E.VATnum,'') as [<cvat>],
	CASE WHEN isnull(EA.Address1,'') <> '' THEN isnull(EA.Address1,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.Address2,'') <> '' THEN isnull(EA.Address2,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.Address3,'') <> '' THEN isnull(EA.Address3,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.City,'') <> '' THEN isnull(EA.City,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.Country,'') <> '' THEN isnull(EA.Country,'') + Char(13) ELSE '' END +
	CASE WHEN isnull(EA.Code,'') <> '' THEN isnull(EA.Code,'') ELSE '' END as [<address>],
	u.[Consultant] as [<consultant>],
	u.staffmail as[<Semail>],
u.staffmail as[<semail>],
	u.staffTel as [<Stel>],
	u.staffFax as [<Sfax>],
	u.staffcell as [<salesrepcell>],
	u.staffext as [<ext>],
	u.staffext as [<sext>],
	DM.ClientPo as [<refno>],
	DM.ClientPo as [<refno1>],
DM.ProjectName as [<description>],
	Case when isnull(DM.UseEC,0) = 0 then isnull(isnull(EH.Accountnum, EH.entityid),isnull(E.AccountNum, E.EntityID)) ELSE isnull(EC.Accountnum, EC.EntitycontactID) END as [<accounts>],
	Case when isnull(DM.UseEC,0) = 0 then isnull(isnull(EH.Accountnum, EH.entityid),isnull(E.AccountNum, E.EntityID)) ELSE isnull(EC.Accountnum, EC.EntitycontactID) END as [<account>],
	isnull(EH.VatNum,E.VatNum) as [<clientvat>],
	isnull(EH.CompRegNum,E.CompRegNum) as [<clientreg>],
	Case when Att.Entitycontactid is not null then Att.[Attention] ELSE
		Case when ECP.Entitycontactid is not null then ECP.[ProjContact] ELSE 
			Case when isnull(DM.UseEC,0) = 0 then AEC.[AccountContact] ELSE EC.Contact END
		END
	END as [<contact1>],
	Att.Cell as [<Cell>],
	Case when Att.Entitycontactid is not null then Att.[Attention] ELSE
		Case when ECP.Entitycontactid is not null then ECP.[ProjContact] ELSE 
			Case when isnull(DM.UseEC,0) = 0 then AEC.[AccountContact] ELSE EC.Contact END
		END
	END as [<contact>],
	P.ProjectID as [<projectno>],
	P.ProjectName as [<projectname>],
	convert(varchar,isnull(DM.DateCompleted, getdate()),103) as [<docdate>],

IsNull(EA.Address1,'') as [<poaddress1>],
IsNull(EA.Address2,'') as  [<poaddress2>],
IsNull(EA.Address3,'') as  [<poaddress3>],
IsNull(EA.City,'') as  [<pocity>],
IsNull(EA.Region,'') as [<poprovince>],
IsNull(EA.Code,'') as [<pocode>],
Isnull(ACT.TaxTypeName,'') as [<exempt>],

	'Contract' as [<doctype>],
	DM.ProjectID as [<docno>],
	DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalEx / isnull(DM.ROE,1)) as [<totalex>],
	DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalEx / isnull(DM.ROE,1))-(DD.Discount / isnull(DM.ROE,1))) as [<totalexcl>],
	DM.Currency + ' ' + dbo.fnFormatNumber(DD.Discount / isnull(DM.ROE,1)) as [<discount>],
	DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl / isnull(DM.ROE,1)) as [<totalincl>],
	DM.Currency + ' ' + dbo.fnFormatNumber(DD.TotalIncl / isnull(DM.ROE,1)) as [<totalincl>],
	DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) ) as [<totalvat>], 
	ISNULL(DM.Currency,'') + ' ' + dbo.fnFormatNumber((DD.TotalEx / ISNULL(DM.ROE,1)) - (DD.Discount / DM.ROE)) as [<totalexdisc>],
	DS.CoRegNo as [<compreg>],
	DS.VatRegNo as [<vatno>],
        isnull(DS.ContactDetails,'')as [<companycontact>],
	isnull(DS.Emails,'')as [<companymail>],
	isnull(DS.Telephone	,'')as [<companytel>],
	isnull(DS.Faxno,'')as [<companyfax>],
	ISNULL(DM.ProjectNotes + ' ', '') + 
	CASE WHEN ISNULL(PAY.EntityID,0) > 0 then 
		PAY.PoNumber + ' ' + PAY.Payment 
	ELSE  '' END
	as [<notes>],
	DS.Terms as [<terms>],
	DS.Banking as [<banking>],
	DS.Footer as [<footer>],
	Case when isnull(DM.UseEC,0) = 0 then 
		(SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = (SELECT Top 1 agnetID FROM EntityContact where entitycontactID = E.InvoiceTo))
	ELSE
		(SELECT Top 1 isnull(firstname,'') + ' ' + isnull(surname,'') from EntityContact where entitycontactid = Ec.agnetID)
	END as [<agent>],
	--isnull(DR.RuleName, 'Standard') as [<documentrule>],
	DV.Division as [<division>],
	DV.Division as [<division>],
	--EC.Phone1 as [<phone>]
	Att.Phone1 as [<phone>],
	LPT.value as [<paymentterms>],
	MDS.Serialno as [<serial>],
	MDS.Licenceno   as [<Licence>],
	MDS.CDNo    as [<CDNO>],
	MDS.CostCentre  as [<cost>],
	MDS.Valuesettings as [<value>], 
	MDS.TownDie as [<Towndie>],
	isnull(DS.URL,'') as [<URL>],
	LJ.VAlue as [<model>],
	convert(varchar,getdate(),106) as [<todays>],

	CASE (DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) WHEN 0
	THEN '0.00 @ 0%'
	ELSE DM.Currency + ' ' + dbo.fnFormatNumber((DD.TotalIncl  - (DD.TotalEx - DD.Discount))  / isnull(DM.ROE,1) ) + ' @ ' + dbo.fnFormatNumber(DM.Tax)
	END as [<vatsummary>],
	--DMP.DocType + ' ' + isnull(DS.Prefix,'') + ' ' + convert(varchar,DMP.DocNo) as [<prevdocno>],
	convert(varchar,getdate(),103) as [<todaydate>],
	DM.Currency as [<currency>],
	'n/a' as [<deliverydate>],
	Att.Email as [<email>],
	--DMP.docno as [<prevdocno2>],
	--isnull(DR.RuleName,'Standard') as [<docrule>],
	 DA.Address1 AS [<coaddr1>],
    DA.Address2 AS [<coaddr2>],
    DA.Code as [<coaddrcode>],
    DA.City as [<coaddrregion>],
    '{totalpaid}' as [<totalpaid>]
FROM Projects DM
LEFT JOIN (
	SELECT 
		Sum(PriceEx * qty) as [TotalEx]
		, sum(PriceEx * Qty * (isnull(discperc,0))/100) as [Discount] 
		, sum(PriceEx * Qty * (1 - (isnull(Discperc,0) / 100)) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl]
		, DocID 
	FROM CONTRACT_DETAIL 
	WHERE isnull(ComponentOfLineID,0) = 0 
	Group By DocID
) DD
ON DM.ProjectID = DD.DocID
LEFT JOIN (
	Select 
		Entitycontactid
		, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Attention]
		, Accountnum
		, AgnetID
		, phone1
		, cell 
		, Email
	FROM EntityContact
) Att
ON DM.EntityContactID = Att.EntityContactID 
LEFT JOIN (
	SELECT 
		EntityID
		, Company
		, LegalName 
		, VATNum
		, AccountNum
		, InvoiceTo
		, CompRegNum
		, AlternateCompanyID
		, PaymentTerms
		, Switchboard
		, Fax 
	From Entity
) E
ON DM.Entityid = E.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN Lookup LPT ON E.PaymentTerms = LPT.LookupID
LEFT JOIN (
	SELECT 
		EntityID
		, Company
		, LegalName 
		, VATNum
		, AccountNum
		, InvoiceTo
		, CompRegNum
		, AlternateCompanyID 
	From Entity
) EH
ON E.AlternateCompanyID = EH.EntityID and isnull(DM.UseEC,0) = 0
LEFT JOIN (
	Select 
		Entitycontactid
		, isnull(firstname,'') +  ' '+ isnull(surname,'') as [Contact]
		, Accountnum
		, AgnetID
		, Phone1 
	FROM EntityContact
) EC
ON DM.Entityid = Ec.EntityContactID and isnull(DM.UseEC,0) = 1
LEFT JOIN (
	Select 
		Entitycontactid
		, isnull(firstname,'') + ' ' + isnull(surname,'') as [AccountContact]
		, Accountnum
		, phone1 
	FROM EntityContact
) AEC
ON isnull(EH.InvoiceTo,E.InvoiceTo) = AEc.EntityContactID 
LEFT JOIN (
	SELECT 
		ProjectID
		, EntityContactID
		, ProjectName 
	FROM Projects
) P
ON DM.ProjectID = P.ProjectID
LEFT JOIN (
	Select 
		Entitycontactid
		, isnull(firstname,'') +  ' '+ isnull(surname,'') as [ProjContact] 
	FROM EntityContact
) ECP
ON P.EntityContactID  = ECP.EntityContactID 
LEFT JOIN (
	SELECT 
		users.userid
		, isnull(users.firstname,'')+ ' ' + isnull(users.surname,'') as [Consultant] 
		, users.StaffID
		, isnull(staff.Tel,'') as [StaffTel]
		, Isnull(Staff.Fax,'') as stafffax
		, Isnull(staff.Email,'') as staffmail
		, isnull(staff.cell,'') as staffcell 
		, isnull(staff.Ext,'') as staffext 
	From users 
	Left Join Staff 
	on users.StaffID=Staff.StaffID
) u
ON DM.CreatedBy = u.userid
LEFT JOIN (
	SELECT 
		* 
	FROM AccDocumentSetup
) DS
ON DM.DivID = DS.DivisionID
LEFT JOIN (
	SELECT 
		* 
	FROM EntityAddress 
	where addresstype like '%postal%'
) EA
ON isnull(EH.Entityid, E.EntityID) = EA.Entityid
--LEFT JOIN (
--	SELECT 
--		* 
--	FROM AccDocRules
--) DR
--ON DM.RuleID = DR.DocRulesID
LEFT JOIN (
	SELECT 
		lookupID
		,Value as Division 
	FROM Lookup
) DV ON DV.LookupID = DM.DivID

Left Join ( SELECT * FROM DivisionAddress) DA ON DM.DivID = DA.DivisionID   
Left Join Machinedetails MDS on MDS.EntityID = E.EntityID
Left Join LinkLookup LJ  on MDS.ModelTypeID= LJ.LinkLookupID
Left Join (select * from Entityaddress where Addresstype like '%physical Address%')EAC 
ON isnull(EH.Entityid, E.EntityID) = EAC.Entityid
Left Join (select * from Entityaddress where Addresstype like '%Delivery Address%')EAP 
ON isnull(EH.Entityid, E.EntityID) = EAP.Entityid
Left Join AccTaxType ACT on ACT.TaxTypeID=DM.TaxTypeID
LEFT JOIN (SELECT
	PDM.ProjectID, 	
	PDM.EntityID,
	PDM.DivisionID ,
	'R ' + dbo.fnFormatNumber(PDP.PaymentPortion / isnull(PDM.ROE,1)) as [Payment], 	
	PDM.ClientPO as [PoNumber]
	FROM DEBTOR_MASTER PDM
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) PE
	ON PDM.EntityID = PE.EntityID
	LEFT JOIN (SELECT * FROM DEBTOR_PAYMENT ) PDP
	ON PDM.DocID = PDP.PaymentDocID and InvoiceDocID  = -2
	LEFT JOIN (SELECT DivisionID, Prefix from AccDocumentSetup ) PDS 
	ON PDM.DivisionID = PDS.DivisionID
	LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) PAOB 
	ON PDM.Entityid = PAOB.EntityID AND isnull(PDM.UseEC,0) = isnull(PAOB.UseEC,0) AND PDM.DivisionID = PAOB.DivID
	WHERE DocType in ('Payment Receipt')  AND DocStatus = 'Completed' AND DateCompleted < GETDATE()
	--and (PDm.Entityid =  @EntityID OR PE.AlternateCompanyID =@EntityID )
	AND isnull(PDM.UseEC,0) = 0
	AND isnull(IsNotAllocated,0) = 1
	--and (Pdm.divisionid =   OR @Div = 0)
	--AND PDM.Currency = @Currency
	and PDM.Period <= 999999
	AND PDM.DateCompleted > isnull(PAOB.DateCreated, '1800/01/01')
	) PAY
	ON PAY.ProjectID = DM.ProjectID AND PAY.DivisionID = DM.DivID 
		AND PAY.EntityID = DM.EntityID 
WHERE DM.ProjectID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40482","cv_Acc_Inventory_Shortfall_Manuf","","--cv_Acc_Inventory_Shortfall
DECLARE @DocID as int
SET @DocID =  {docid}

SELECT 
Convert(varchar,D.LineID) + '#' + Convert(varchar,isnull(SD.PriceCategoryID,0))  as [ID], 
/*CASE WHEN D.OutputID > 0 THEN '-    ' ELSE '' END +*/ D.StockCode as [Code], 
/*CASE WHEN D.OutputID > 0 THEN '-    ' ELSE '' END +*/ D.StockDescription as [Description],
LR.Value as [Resource Source],
E.Company as [Supplier],
LL.Value as [Container],
LU.Value as [Unit],
isnull(convert(varchar,ETA.ETA,111),'') as [Next ETA],
D.Qty /** isnull(DDM.Qty,1)*/ as [Qty On Doc.],
isnull(SO.Qty,0) - isnull(DN.Qty,0) /*-(D.Qty * isnull(DDM.Qty,1) )*/ as [On S.O.],
isnull(MC.Qty,0) as [For Manufacturing], 
isnull([Qty In Container],0) as [Qty In Container],
(isnull(PO.Qty,0) - isnull(GRN.Qty,0)) * SoldByToPurchasedByRatio  as [On P.O.],
isnull(MO.Qty,0) as [Being Manufactured],
isnull(STK.Fulfillment,0) as [Fulfillment],

isnull([Qty In Container],0) --In Container
-
(isnull(SO.Qty,0) - isnull(DN.Qty,0)) --On S.O. & Required
-
isnull(MC.Qty,0) --For Manufacturing 
as [Available],
isnull(STK.Fulfillment,0) --Fulfillment
-
isnull(MO.Qty,0) --Being Manufactured
- 
((isnull(PO.Qty,0) - isnull(GRN.Qty,0)) * SoldByToPurchasedByRatio ) --On P.O.
-
(
    isnull([Qty In Container],0) --In Container
    -
    (isnull(SO.Qty,0) - isnull(DN.Qty,0)) --On S.O. & Required
    -
    isnull(MC.Qty,0)  --For Manufacturing 
) as [Recommended]

FROM AccMANUFACTURE_DETAIL D 
LEFT JOIN (SELECT OutputID, Qty, StockID FROM AccMANUFACTURE_OUTPUT) DDM
ON D.OutputID = DDM.OutputID
LEFT JOIN (SELECT PriStockID, DepStockID, max(PriceCategoryID) as [PriceCategoryID] FROM AccStock_Dep Group by PriStockID, DepStockID) SD
ON D.StockID = SD.DepStockID AND DDM.StockID = SD.PriStockID
LEFT JOIN (SELECT * FROM AccStockPrice where getdate() between ValidFrom and ValidTo AND SupplierID is not null) SP
ON D.StockID = SP.StockID AND SD.PriceCategoryID = SP.PriceCategoryID   
LEFT JOIN (SELECT StockID,ResourceSource, IsTangible, SoldBy,MinReorderAmt, Fulfillment, ReOrderLevel,SoldByToPurchasedByRatio, IsManufactured FROM AccStock) STK
ON D.StockID = STK.StockID
LEFT JOIN (Select Value,LookupID from Lookup) LR
ON STK.ResourceSource = LR.LookupID
LEFT JOIN (SELECT * FROM Lookup) LU
ON STK.SoldBy = LU.LookupID
LEFT JOIN (SELECT * FROM LinkLookup) LL 
ON D.ContainerID = LL.LinkLookupID
LEFT JOIN (SELECT StockID,ContainerID, sum(Qty * Ratio) as [Qty In Container] FROM AccStockControl Group by StockID,ContainerID) SC
ON D.StockID = SC.StockID AND D.ContainerID = SC.ContainerID
LEFT JOIN (SELECT EntityID, Company FROM Entity)  E
ON isnull(D.SupplierID, SP.SupplierID) = E.EntityID
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
            LEFT JOIN (SELECT DOCID, DocType FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
            ON DD.DocID = DM.DocID
            LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*DEBTOR_DETAIL*/) DDM
            ON DD.ComponentOfLineID = DDM.LineID
            WHERE DM.DocType = 'Sales Order'
            Group by StockID, ContainerID ) SO
ON D.StockID = SO.StockID AND D.ContainerID = SO.ContainerID    
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
            LEFT JOIN (SELECT DOCID, DocType FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
            ON DD.DocID = DM.DocID
            LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*DEBTOR_DETAIL*/) DDM
            ON isnull(DD.ComponentOfLineID,0) = DDM.LineID
            WHERE DM.DocType = 'Dispatch Note'
            Group by StockID, ContainerID ) DN
ON D.StockID = DN.StockID AND D.ContainerID = DN.ContainerID    
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Purchase Order'
            Group by StockID, ContainerID ) PO
ON D.StockID = PO.StockID AND D.ContainerID = PO.ContainerID  
LEFT JOIN (SELECT StockID, ContainerID, min(CD.ETADate) as [ETA] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Purchase Order'
            AND CD.ETADate is not null
            AND CD.ETADate >= getdate()
            Group by StockID, ContainerID ) ETA
ON D.StockID = ETA.StockID AND D.ContainerID = ETA.ContainerID  
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
            LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
            ON CD.DocID = CM.DocID
            WHERE CM.DocType = 'Goods Received Note'
            Group by StockID, ContainerID ) GRN
ON D.StockID = GRN.StockID AND D.ContainerID = GRN.ContainerID  
LEFT JOIN (SELECT MD.StockID, MD.ContainerID, Sum(MD.Qty) as [Qty] FROM AccMANUFACTURE_DETAIL MD
            LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType FROM AccMANUFACTURE) MM
            ON MD.DocID = MM.DocID
            WHERE isnull(MM.IsComplete,0) = 0 
            AND isnull(MM.RaisedByDocType,'') <> 'Sales Order'
            Group by MD.StockID, MD.ContainerID) MC
ON D.StockID = MC.StockID AND D.ContainerID = MC.ContainerID
LEFT JOIN (SELECT MO.StockID, MO.ContainerID, sum(MO.Qty) as [Qty],MM.RaisedByDocType FROM AccMANUFACTURE_Output MO
            LEFT JOIN (SELECT DocID, IsComplete,RaisedByDocType FROM AccMANUFACTURE) MM
            ON MO.DocID = MM.DocID
            WHERE isnull(MM.IsComplete,0) = 0 
            Group by MO.StockID, MO.ContainerID,MM.RaisedByDocType) MO
ON D.StockID = MO.StockID AND D.ContainerID = MO.ContainerID
WHERE isnull(STK.IsTangible,0) = 1
AND D.DocID = @DocID
AND isnull(STK.IsManufactured,0) = 0
ORDER BY (CASE WHEN isnull(D.OutputID,0) =0 THEN D.LineID ELSE D.OutputID END )

","0","","1","LRA-FUSION","0","0","fusion"
"40483","qf_ContactSupplier","","select c.entitycontactid, 
ltrim(isnull(c.firstname,'')+' '+isnull(c.surname,'')) as [Contact],
e.Company
from entitycontact c
left join entity e on e.entityid = c.entityid
where( (isnull(c.firstname,'')+' '+isnull(c.surname,'') like '%<%replace%>%') OR (isnull(E.Company,'') like '%<%replace%>%') )AND (ISNULL(C.IsSupplier,0) = {issupplier})
order by ltrim(isnull(c.firstname,'')+' '+isnull(c.surname,'')), e.company
","0","","1","LRA-FUSION","0","0","fusion"
"40484","cv_ImportHR","","INSERT INTO [Staff]
(
		Initials,
		Firstname, 
		Surname,
		StaffNum,
		IDNum,
		BirthDate,
		Tel,
		Cell,
		Email,
		Address1,
		Address2,
		Address3,
		Code,
		CityID,
		StateID,
		CountryID,
		POAddress1,
		POAddress2,
		POAddress3,
		POCode,
		POCityID,
		POStateID,
		POCountryID,
		DateEmployed,
		JobDiscr,
		SName,
		SSurname,
		sTel,
		SCell,
		sEmail,
		SendEmail,
		SendSMS,
		Ext,
		title,
		location,
		periodfrom,
		periodto,
		counsellorname,
		reviewername,
		revieweremail,
		reviewertitle,
		reviewerlocation,
		additionalreviewers,
		counselloremail,
		isPlanPeriod,
		isActive,
		isProjectManager,
		isTicketManager,
		isJobManager,
		isSalesConsultant,
		isTechnician,
		IsStockController,
		isdriver,
		ispermanent,
		CosttoCompany,
		isInstructor,
		StaffRatePerc,
		Relation,
		SupplierID,
		Departmentid,
		position
)
Select Distinct
		HR.Initials,
		HR.Firstname, 
		HR.Surname,
		HR.Staffnum,
		HR.IDnum,
		HR.Birthdate,
		HR.BusinessCell,
		HR.PersonalCell,
		HR.Email,
		HR.Address1,
		HR.Address2,
		HR.Address3,
		HR.Code,
		HR.City,
		HR.Province,
		HR.Country,
		HR.POAddress1,
		HR.POAddress2,
		HR.POAddress3,
		HR.POCode,
		HR.POCity,
		HR.Province,
		HR.Country,
		HR.DateEmployed,
		HR.JobDescription,
		HR.NOKFirstName,
		HR.NOKSurname,
		HR.NOKTel,
		HR.NOKCell,
		HR.NOKEmail,
		HR.SendEmail,
		HR.SendSMS,
		HR.Ext,
		HR.Title,
		HR.OfficeLocation,
		HR.PlanPeriodFrom,
		HR.PlanPeriodTo,
		HR.CounsellorsName,
		HR.ReviewersName,
		HR.ReviewersEmail,
		HR.ReviewersTitle,
		HR.ReviewersOfficeLocation,
		HR.AdditionalReviewers,
		HR.CounsellorsEmail,
		HR.PlanPeriod,
		HR.Active,
		HR.ProjectManager,
		HR.TicketManager,
		HR.JobManager,
		HR.SalesConsultant,
		HR.Technician,
		HR.StockController,
		HR.Driver,
		HR.Permanent,
		HR.CosttoCompany,
		HR.Instructor,
		HR.TimeSheetHoursPercentage,
		HR.NOKRelationship, 
		E.EntityID AS SupplierID, 
		LDivision.LookupID AS Division,
		LJob.LookupID AS position    
from [_ImportHR] HR
		LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'divisions') LDivision on LDivision.Value = HR.Division
		LEFT JOIN (SELECT EntityID, Company FROM Entity) E on E.Company = HR.Supplier
		LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE class LIKE 'jobtitle') LJob on LJob.Value = HR.Position
		
---------------------------------------------------------------------------------------------------------		
		
DECLARE @Skills VARCHAR(50)
DECLARE db_cursor CURSOR FOR  
	SELECT Skills FROM _ImportHR

		OPEN db_cursor   
		FETCH NEXT FROM db_cursor INTO @Skills  

		WHILE @@FETCH_STATUS = 0   
		BEGIN
			IF NOT EXISTS(SELECT Value FROM Lookup WHERE Value = @Skills)
			BEGIN
				INSERT INTO [Lookup]
				(Class,
				Value,
				IsDefault)
				Values(
				'StaffCompetencies',
				@Skills,
				1)
			END		
			FETCH NEXT FROM db_cursor INTO @Skills
		END  
		CLOSE db_cursor   
		DEALLOCATE db_cursor
		
-----------------------------------------------------------------------------------------------------------		

INSERT INTO [StaffCompetency]
(
		StaffID,
		CompetencyID
)
SELECT DISTINCT
		sfID.StaffID AS StaffID,
		skills.LookupID AS Skills
FROM [_ImportHR] HR
		LEFT JOIN (SELECT StaffID, Firstname, Surname FROM Staff) sfID on sfID.Firstname = HR.Firstname AND sfID.Surname = HR.Surname
		LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE class LIKE 'StaffCompetencies') skills on skills.Value = HR.Skills","0","","1","LRA-FUSION","0","0","fusion"
"40485","cv_ImportHRLookupValue","","INSERT INTO [Lookup]
(Class,
Value,
IsDefault)
SELECT Distinct
'StaffCompetencies',
HR.Skills,
1
FROM _ImportHR HR","0","","1","LRA-FUSION","0","0","fusion"
"40486","cv_delivery_addresses","","declare @EntityID int

set @EntityID = {entityID}

SELECT EntityAddressID, E.COMPANY + ' - ' + ISNULL(Address1,'') + ' ' + ISNULL(Address2,'') + ' ' + ISNULL(Address3,'') FROM EntityAddress EA
LEFT JOIN Entity E ON EA.EntityID =  E.EntityID
WHERE EA.EntityID = @EntityID

union all

SELECT EntityAddressID, E.COMPANY + ' - ' + ISNULL(Address1,'') + ' ' + ISNULL(Address2,'') + ' ' + ISNULL(Address3,'') FROM EntityAddress EA
LEFT JOIN Entity E ON EA.EntityID =  E.EntityID
WHERE EA.EntityID in ( select ISNULL(AlternateCompanyID,-9998) from Entity WHERE EntityID = @EntityID)

union all

SELECT EntityAddressID, E.COMPANY + ' - ' + ISNULL(Address1,'') + ' ' + ISNULL(Address2,'') + ' ' + ISNULL(Address3,'') FROM EntityAddress EA
LEFT JOIN Entity E ON EA.EntityID =  E.EntityID 
WHERE EA.EntityID in ( select ISNULL(EntityID,-9998) from Entity WHERE AlternateCompanyID = @EntityID)
","0","","1","LRA-FUSION","0","0","fusion"
"40487","cv_ImportTimesheets","","DECLARE @UseStaff INT
SET @UseStaff = (SELECT TOP 1 ISNULL(Selected,0) FROM CRMSetup WHERE Description = 'Print' AND Variable = 'StaffTimesheets')

INSERT INTO Devappointment (
    EntityID,
    [Date],
    EndDate,
    [Subject],
    Notes,
    CreateUserId,
    ForUserId,
    ProjectID,
    ModuleID,
    TASKTYPEID
)
SELECT DISTINCT
    PE.EntityID,
    convert(varchar,IT.StartDate,111) + ' ' + CONVERT(VARCHAR, CONVERT(DATETIME, convert(varchar,GETDATE(),111) +' '+ IT.StartTime), 108) as [Date],
    convert(varchar,IT.EndDate,111) + ' ' +CONVERT(VARCHAR, CONVERT(DATETIME, convert(varchar,GETDATE(),111) +' '+ IT.EndTime), 108) as [EndDate],
    [Subject],
    Notes,
    '1' as [CreateUserId],
    CASE WHEN @UseStaff = 1 THEN U.StaffID ELSE U.UserID END as [ForUserId],
    PE.ProjectID,
    M.ModuleID,
    LT.LookupID
FROM _ImportTimesheets IT
LEFT JOIN (SELECT E.Company,E.EntityID,P.ProjectName,P.ProjectID FROM Projects P 
                LEFT JOIN (SELECT Company,EntityID FROM Entity) E ON P.EntityID = E.EntityID) PE 
    ON PE.ProjectName = IT.Project AND PE.Company = IT.Company
LEFT JOIN (SELECT * FROM  Modules) M  ON IT.Module = M.ModuleName AND M.ProjectID = PE.ProjectID
LEFT JOIN Staff S 
    ON S.Firstname + ' ' + S.Surname = IT.ForUser 
LEFT JOIN Users U 
    ON U.StaffID = S.StaffID
LEFT JOIN (select LookupID, Value from lookup where Class like 'TaskType') LT 
    ON LT.value = IT.TaskType
WHERE (PE.EntityID IS NOT NULL) AND (PE.ProjectID IS NOT NULL) AND (M.ModuleID IS NOT NULL)

INSERT INTO timesheet (
    EntityID,
    DevApptID,
    TimesheetDate,
    CapturedDate,
    DeveloperID,
    ProjectID,
    ModuleID,
    ProjectStatus,
    DevCurrentRate,
    Approved
)
SELECT DISTINCT
    PE.EntityID,
    AP.DevApptID,
    convert(varchar,IT.StartDate,111) + ' ' + CONVERT(VARCHAR, CONVERT(DATETIME, convert(varchar,GETDATE(),111) +' '+ IT.StartTime), 108) as [Date],
    convert(varchar,GETDATE(),111) + ' ' +CONVERT(VARCHAR, CONVERT(DATETIME, convert(varchar,GETDATE(),111) +' '+ GETDATE()), 108) as [EndDate],
    CASE WHEN @UseStaff = 1 THEN U.StaffID ELSE U.UserID END as [ForUserId],
    PE.ProjectID,
    M.ModuleID,
    IT.[Subject],
    S.StaffRatePerc,
    1
FROM _ImportTimesheets IT
LEFT JOIN (SELECT E.Company,E.EntityID,P.ProjectName,P.ProjectID FROM Projects P 
                LEFT JOIN (SELECT Company,EntityID FROM Entity) E ON P.EntityID = E.EntityID) PE 
    ON PE.ProjectName = IT.Project AND PE.Company = IT.Company
LEFT JOIN (SELECT * FROM  Modules) M  ON IT.Module = M.ModuleName AND M.ProjectID = PE.ProjectID
LEFT JOIN Staff S 
    ON S.Firstname + ' ' + S.Surname = IT.ForUser 
LEFT JOIN Users U 
    ON U.StaffID = S.StaffID
--LEFT JOIN (select LookupID, Value from lookup where Class like 'TaskType') LT 
--  ON LT.value = IT.TaskType
LEFT JOIN Devappointment AP ON 
    AP.EntityID = PE.EntityID AND
    convert(varchar,IT.StartDate,111) + ' ' + CONVERT(VARCHAR, CONVERT(DATETIME, convert(varchar,GETDATE(),111) +' '+ IT.StartTime), 108) = AP.[Date] AND
    convert(varchar,IT.EndDate,111) + ' ' +CONVERT(VARCHAR, CONVERT(DATETIME, convert(varchar,GETDATE(),111) +' '+ IT.EndTime), 108) = AP.EndDate AND
    IT.[Subject] = AP.[Subject] AND
    IT.Notes = AP.Notes AND
    '1' = AP.CreateUserId AND
    CASE WHEN @UseStaff = 1 THEN U.StaffID ELSE U.UserID END = AP.ForUserId AND
    PE.ProjectID = AP.ProjectID AND
    M.ModuleID = AP.ModuleID
WHERE (PE.EntityID IS NOT NULL) AND (PE.ProjectID IS NOT NULL) AND (M.ModuleID IS NOT NULL)","0","","1","LRA-FUSION","0","0","fusion"
"40488","cv_Multi_Level_List","","--Main Table for Product Listing
--cv_Multi_Level_List

DECLARE @DocID AS INTEGER
SET @DocID = {docid}
DECLARE @OverallQty AS FLOAT
SET @OverallQty = (SELECT TOP 1 QTY FROM AccMANUFACTURE_OUTPUT WHERE IsPrimaryOutput = 1 AND DocID = @DocID)


SELECT STK.StockCode AS [Stock Code], 
STK.StockDescription AS [Description],
--CONVERT(VARCHAR,CAST(SellingQty AS MONEY),1) AS [Qty],
ROUND(ISNULL(@OverallQty,1),4) AS [Qty],
--CONVERT(VARCHAR,cast(ISNULL(ActualQty,0) AS MONEY),1) AS [Required],
ROUND(ISNULL(MO.Qty,1),4) AS [Required],
'    ' AS [Qty Picked],
'    ' AS [Date Complete]
FROM AccManufacture_Output MO
LEFT JOIN (SELECT StockID, StockCode,StockDescription,SoldBy FROM AccStock) STK ON MO.StockID = STK.StockID
--LEFT JOIN (SELECT StockID, IsPrimaryOutput FROM AccMANUFACTURE_output) MA ON MO.StockID = STK.StockID
LEFT JOIN Lookup L ON Stk.SoldBy  = L.Lookupid
WHERE MO.DocID = @docid
ORDER BY MO.IsPrimaryOutput DESC","0","","1","LRA-FUSION","0","0","fusion"
"40489","cv_Multi_Link_Header","","--Multi Link Header
SELECT
ISNULL(M.DocID,'') AS [<jobnumber>],
ISNULL(M.Createdby,'') AS [<mcreatedby>],
CONVERT (VARCHAR, M.DateCreated,111) AS [<datecreated>],
CONVERT (VARCHAR, M.DateCompleted, 111) AS [<datestarted>],
ISNULL (U.FirstName, '') + ' ' + ISNULL(U.Surname,'')  AS [<createdby>],
ISNULL (SC.StockCode,'') AS [<stockcode>],
ISNULL(MO.ActualQty,'') AS [<qty>]
FROM AccMANUFACTURE M
LEFT JOIN (SELECT UserID,FirstName,Surname FROM Users)U ON U.UserID = M.Createdby
LEFT JOIN (SELECT DocID, StockID IsPrimaryOutput FROM AccMANUFACTURE_Output WHERE IsPrimaryOutput Like 1) PO ON PO.DocID = M.DocID
LEFT JOIN AccMANUFACTURE_Output MO ON M.DocID = MO.DocID
LEFT JOIN (SELECT StockID, StockCode FROM AccStock )SC ON SC.StockID =MO.StockID
Where M.DocID = {docid}","0","","1","LRA-FUSION","0","0","fusion"
"40490","cv_Multi_List_By_StockType","","DECLARE @DocID AS INTEGER
SET @DocID = {docid}
DECLARE @OverallQty AS FLOAT
SET @OverallQty = (SELECT TOP 1 QTY FROM AccMANUFACTURE_OUTPUT WHERE IsPrimaryOutput = 1 AND DocID = @DocID)


SELECT
STP.Value AS [Stock Type],
MD.StockCode AS [Stock Code], 
MD.StockDescription AS [Stock Description],
--CONVERT(VARCHAR,CAST(MD.Qty AS MONEY),1) AS [Qty],
ROUND(ISNULL(@OverallQty,1),4) AS [Qty],
MD.Unit As [Unit],
--CONVERT(VARCHAR,cast(ISNULL(MO.ActualQty,0) AS MONEY),1) AS [Required],
ROUND(ISNULL(MO.Qty,1),4) AS [Required],
'    ' AS [Qty Picked],
'    ' As [Check]
FROM AccManufacture_Detail MD
LEFT JOIN (SELECT  OutputID, Qty, ActualQty FROM AccManufacture_output) MO ON MD.OutputID = MO.OutputID
--LEFT JOIN (SELECT StockID, StockCode,StockDescription,SoldBy,StockType FROM AccStock) STK ON MD.StockID = STK.StockID
--LEFT JOIN Lookup L ON Stk.SoldBy  = L.LookupID
LEFT JOIN(SELECT StockID, StockType FROM AccStock)ST ON MD.StockID = ST.StockID
LEFT JOIN (SELECT LookupID,Class,Value FROM lookup WHERE Class LIKE 'StockType')STP ON STP.LookupID = ST.StockType
WHERE ST.StockType Like {stocktype} AND  MD.DocID LIKE @docid 
--ORDER BY MD.StockType3 ASC
","0","","1","LRA-FUSION","0","0","fusion"
"40491","cv_ImportTimesheets_Fail","","SELECT 
	[Row],
	CASE WHEN PE.EntityID IS NULL THEN 'Company was incorrect' ELSE '' END AS [Company],
	CASE WHEN PE.ProjectID IS NULL THEN 'Project was incorrect' ELSE '' END AS [Project], 
	CASE WHEN M.ModuleID IS NULL THEN 'Module was incorrect' ELSE '' END AS [Module]
FROM _ImportTimesheets IT
LEFT JOIN (SELECT E.Company,E.EntityID,P.ProjectName,P.ProjectID FROM Projects P 
				LEFT JOIN (SELECT Company,EntityID FROM Entity) E ON P.EntityID = E.EntityID) PE 
	ON PE.ProjectName = IT.Project AND PE.Company = IT.Company
LEFT JOIN (SELECT * FROM  Modules) M  ON IT.Module = M.ModuleName AND M.ProjectID = PE.ProjectID
LEFT JOIN Staff S 
	ON S.Firstname + ' ' + S.Surname = IT.ForUser 
LEFT JOIN Users U 
	ON U.StaffID = S.StaffID
LEFT JOIN (select LookupID, Value from lookup where Class like 'TaskType') LT 
	ON LT.value = IT.TaskType
WHERE (PE.EntityID IS NULL) OR (PE.ProjectID IS NULL) OR (M.ModuleID IS NULL)
","0","","1","LRA-FUSION","0","0","fusion"
"40492","cv_Acc_Stock_Valuation_Detailed_Rpt","","DECLARE @StartDate as datetime
DECLARE @EndDate as datetime 
SET @StartDate = '{startdate}'
SET @EndDate = '{enddate}'

SELECT SC.StockControlID,
LL.Value as [Container],
upper(L.Value) as [GL Group],
STK.StockCode as [Code],
STK.StockDescription as [Description],
LT.Value as [Stock Type],
LSB.Value as [Units],
convert(varchar,cast(sum(CASE WHEN SCV2.AdjustQty > 0 THEN SCV2.AdjustQty ELSE 0 END * isnull(SC.Ratio,0)) as money),1) as [Qty In],
convert(varchar,cast(sum(CASE WHEN SCV2.AdjustQty < 0 THEN SCV2.AdjustQty ELSE 0 END * isnull(SC.Ratio,0)) as money),1) as [Qty Out],
convert(varchar,cast(sum(isnull(SCV2.AdjustQty,0) * isnull(SC.Ratio,0)) as money),1) as [Nett Movement],
convert(varchar,cast(sum(isnull(SCV.AdjustQty,0)* isnull(SC.Ratio,0)) as money),1) as [Qty On Hand],
CASE SCV.StockValuationMethod WHEN 1 THEN 'FIFO' WHEN 2 THEN 'LIFO' WHEN 3 THEN 'Average' END as [Method],
Convert(varchar,cast(isnull(SCV.CalculatedUnitCost,0) + isnull(SCV.LastUnitPrice,0) as money),1) as [Average Unit Cost],
convert(varchar,cast(sum(isnull(SCV.AdjustQty,0) * isnull(SCV.LastUnitPrice,0) + isnull(SCV.AdjustQty,0) * isnull(SCV.CalculatedUnitCost,0)) as money),1) as [Total Value]
FROM AccStockControl SC
LEFT JOIN (SELECT StockID, StockCode, StockDescription, SoldBy, JournalID, StockType FROM AccStock) STK
	ON SC.StockID = STK.StockID
LEFT JOIN (SELECT * FROM Lookup) LT
	ON LT.LookupID = STK.StockType 
LEFT JOIN (SELECT * FROM Lookup) LSB
	ON STK.SoldBy = LSB.LookupID 
LEFT JOIN (SELECT * FROM LinkLookup )LL 
	ON SC.ContainerID = LL.LinkLookupID
LEFT JOIN (SELECT * FROM AccStockControlValuation) SCV
	ON SC.StockControlID = SCV.StockControlID
LEFT JOIN (SELECT * FROM AccStockControlValuation WHERE AdjustDate BETWEEN @StartDate AND @EndDate ) SCV2
	ON SC.StockControlID = SCV2.StockControlID
LEFT JOIN (SELECT LookupID, Value 
		FROM Lookup 
		where class like 'JournalType' 
		UNION ALL
		SELECT -1, 'ACCOUNTS RECEIVABLE'
		UNION ALL
		SELECT -2, 'OUTPUT VAT CONTROL' 
		UNION ALL
		SELECT -3, 'COST OF SALES' 
		UNION ALL
		SELECT -4, 'INVENTORY' 
		UNION ALL
		SELECT -5, 'INPUT VAT CONTROL' 
		UNION ALL
		SELECT -6, 'BANK' 
		UNION ALL
		SELECT -8, 'FOREIGN EXCHANGE' 
		UNION ALL
		SELECT -9, 'ACCOUNTS PAYABLE' 
		UNION ALL
		SELECT -10, 'UN-RECEIVED INVENTORY' 
		UNION ALL
		SELECT -11, 'PREPAID EXPENSE' 
		UNION ALL
		SELECT -12, 'CAPITAL' 
		UNION ALL
		SELECT -13, 'INVENTORY ADJUSTMENT' 
		UNION ALL
		SELECT -14, 'CAPITAL INPUT VAT CONTROL' 
		UNION ALL
		SELECT -15, 'CAPITAL OUTPUT VAT CONTROL' 
		UNION ALL
		SELECT -16, 'DISCOUNT ALLOWED' 
		UNION ALL
		SELECT -17, 'DISCOUNT RECEIVED' 
		UNION ALL
		SELECT -18, 'OPENING BALANCE' 
		) L 
	ON STK.JournalID = L.LookupID
WHERE SC.AdjustDate <= @EndDate
{where}
GROUP BY SC.StockControlID, LL.Value, STK.StockCode, STK.StockDescription, LSB.Value,SCV.StockValuationMethod,L.Value,LT.Value,
Convert(varchar,cast(isnull(SCV.CalculatedUnitCost,0) + isnull(SCV.LastUnitPrice,0) as money),1)
{having}
ORDER BY L.Value,STK.StockCode,LL.Value

","0","","1","LRA-FUSION","0","0","fusion"
"40493","cv_DocumentTypesPopulate","","SELECT
	LookupID, Value
FROM (
	SELECT 
		LookupID, Value, LookupID as [TempID], LookupID as [MainID], 1 as [Rank]
	FROM Lookup WHERE Class like 'DocumentType'

	UNION ALL

	SELECT L2.LookupID, L2.Value, L2.TempID, L1.LookupID, 2 as [Rank] FROM lookup L2
	LEFT JOIN Lookup L1 ON L2.TempID = L1.LookupID 
	WHERE L2.Class like 'DocumentSubtype'
	AND L1.Class = 'DocumentType'

	UNION ALL

	SELECT L3.LookupID, L3.Value, L3.TempID, L1.LookupID, 3 as [Rank] FROM lookup L3
	LEFT JOIN Lookup L2 ON L3.TempID = L2.LookupID
	LEFT JOIN Lookup L1 ON L2.TempID = L1.LookupID
	WHERE L3.Class like 'DocumentSubtype'
	AND L1.Class = 'DocumentType'

	UNION ALL

	SELECT L4.LookupID, L4.Value, L4.TempID, L1.LookupID, 4 as [Rank] FROM lookup L4
	LEFT JOIN Lookup L3 ON L4.TempID = L3.LookupID
	LEFT JOIN Lookup L2 ON L3.TempID = L2.LookupID
	LEFT JOIN Lookup L1 ON L2.TempID = L1.LookupID
	WHERE L3.Class like 'DocumentSubtype'
	AND L1.Class = 'DocumentType'
	
	UNION ALL

	SELECT L5.LookupID, L5.Value, L5.TempID, L1.LookupID, 5 as [Rank] FROM lookup L5
	LEFT JOIN Lookup L4 ON L5.TempID = L4.LookupID
	LEFT JOIN Lookup L3 ON L4.TempID = L3.LookupID
	LEFT JOIN Lookup L2 ON L3.TempID = L2.LookupID
	LEFT JOIN Lookup L1 ON L2.TempID = L1.LookupID
	WHERE L3.Class like 'DocumentSubtype'
	AND L1.Class = 'DocumentType'
	
	UNION ALL

	SELECT L6.LookupID, L6.Value, L6.TempID, L1.LookupID, 6 as [Rank] FROM lookup L6
	LEFT JOIN Lookup L5 ON L6.TempID = L5.LookupID
	LEFT JOIN Lookup L4 ON L5.TempID = L4.LookupID
	LEFT JOIN Lookup L3 ON L4.TempID = L3.LookupID
	LEFT JOIN Lookup L2 ON L3.TempID = L2.LookupID
	LEFT JOIN Lookup L1 ON L2.TempID = L1.LookupID
	WHERE L3.Class like 'DocumentSubtype'
	AND L1.Class = 'DocumentType'
	
	UNION ALL

	SELECT L7.LookupID, L7.Value, L7.TempID, L1.LookupID, 7 as [Rank] FROM lookup L7
	LEFT JOIN lookup L6 ON L7.TempID = L6.LookupID
	LEFT JOIN Lookup L5 ON L6.TempID = L5.LookupID
	LEFT JOIN Lookup L4 ON L5.TempID = L4.LookupID
	LEFT JOIN Lookup L3 ON L4.TempID = L3.LookupID
	LEFT JOIN Lookup L2 ON L3.TempID = L2.LookupID
	LEFT JOIN Lookup L1 ON L2.TempID = L1.LookupID
	WHERE L3.Class like 'DocumentSubtype'
	AND L1.Class = 'DocumentType'
	
	UNION ALL

	SELECT L8.LookupID, L8.Value, L8.TempID, L1.LookupID, 8 as [Rank] FROM lookup L8
	LEFT JOIN Lookup L7 ON L8.TempID = L7.LookupID
	LEFT JOIN lookup L6 ON L7.TempID = L6.LookupID
	LEFT JOIN Lookup L5 ON L6.TempID = L5.LookupID
	LEFT JOIN Lookup L4 ON L5.TempID = L4.LookupID
	LEFT JOIN Lookup L3 ON L4.TempID = L3.LookupID
	LEFT JOIN Lookup L2 ON L3.TempID = L2.LookupID
	LEFT JOIN Lookup L1 ON L2.TempID = L1.LookupID
	WHERE L3.Class like 'DocumentSubtype'
	AND L1.Class = 'DocumentType'
	
	UNION ALL

	SELECT L9.LookupID, L9.Value, L9.TempID, L1.LookupID, 9 as [Rank] FROM lookup L9
	LEFT JOIN Lookup L8 ON L9.TempID = L8.LookupID
	LEFT JOIN Lookup L7 ON L8.TempID = L7.LookupID
	LEFT JOIN lookup L6 ON L7.TempID = L6.LookupID
	LEFT JOIN Lookup L5 ON L6.TempID = L5.LookupID
	LEFT JOIN Lookup L4 ON L5.TempID = L4.LookupID
	LEFT JOIN Lookup L3 ON L4.TempID = L3.LookupID
	LEFT JOIN Lookup L2 ON L3.TempID = L2.LookupID
	LEFT JOIN Lookup L1 ON L2.TempID = L1.LookupID
	WHERE L3.Class like 'DocumentSubtype'
	AND L1.Class = 'DocumentType'
	
	UNION ALL

	SELECT L10.LookupID, L10.Value, L10.TempID, L1.LookupID, 10 as [Rank] FROM lookup L10
	LEFT JOIN Lookup L9 ON L10.TempID = L9.LookupID
	LEFT JOIN Lookup L8 ON L9.TempID = L8.LookupID
	LEFT JOIN Lookup L7 ON L8.TempID = L7.LookupID
	LEFT JOIN lookup L6 ON L7.TempID = L6.LookupID
	LEFT JOIN Lookup L5 ON L6.TempID = L5.LookupID
	LEFT JOIN Lookup L4 ON L5.TempID = L4.LookupID
	LEFT JOIN Lookup L3 ON L4.TempID = L3.LookupID
	LEFT JOIN Lookup L2 ON L3.TempID = L2.LookupID
	LEFT JOIN Lookup L1 ON L2.TempID = L1.LookupID
	WHERE L3.Class like 'DocumentSubtype'
	AND L1.Class = 'DocumentType'
	
	UNION ALL

	SELECT L11.LookupID, L11.Value, L11.TempID, L1.LookupID, 11 as [Rank] FROM lookup L11
	LEFT JOIN lookup L10 ON L11.TempID = L10.LookupID
	LEFT JOIN Lookup L9 ON L10.TempID = L9.LookupID
	LEFT JOIN Lookup L8 ON L9.TempID = L8.LookupID
	LEFT JOIN Lookup L7 ON L8.TempID = L7.LookupID
	LEFT JOIN lookup L6 ON L7.TempID = L6.LookupID
	LEFT JOIN Lookup L5 ON L6.TempID = L5.LookupID
	LEFT JOIN Lookup L4 ON L5.TempID = L4.LookupID
	LEFT JOIN Lookup L3 ON L4.TempID = L3.LookupID
	LEFT JOIN Lookup L2 ON L3.TempID = L2.LookupID
	LEFT JOIN Lookup L1 ON L2.TempID = L1.LookupID
	WHERE L3.Class like 'DocumentSubtype'
	AND L1.Class = 'DocumentType'

) Z
{where}
ORDER BY Value,MainID, [Rank]","0","","1","LRA-FUSION","0","0","fusion"
"40494","cv_multi_detailed_sum","","--cv_Multi_Detailed_Sum
DECLARE @DocID AS INTEGER
DECLARE @OverallQty AS FLOAT
SET @DocID = {docid}
SET @OverallQty = (SELECT Top 1 Qty from AccMANUFACTURE_OUTPUT where IsPrimaryOutput =1 AND DocID = @DocID  )

SELECT
--STO.StockCode AS [Stock Code], 
STO.StockCode + ' ' + STO.StockDescription as [Stock Descr],
--MD.Unit As [Unit],
ROUND(ISNULL(MO.Qty,1),4) / @OverallQty AS [Qty],
CONVERT(VARCHAR,STO.[Length]) + ' x ' + CONVERT(VARCHAR,STO.Width) AS [Size],
ROUND(ISNULL(MO.Qty,1),4) AS [Req],
MD.StockDescription AS [Material],
ROUND(((STO.[Length]/1000) * (STO.Width/1000)) * ISNULL(MO.Qty,1),4)   AS [m2],
--'    ' AS [Qty Picked],
'    ' As [Check]
FROM AccManufacture_Detail MD
LEFT JOIN (SELECT  OutputID, Qty, StockID  FROM AccManufacture_output) MO ON MD.OutputID = MO.OutputID
LEFT JOIN(SELECT StockID,StockCode, StockDescription,  [Length], Width, StockType FROM AccStock) STO ON MO.StockID = STO.StockID
WHERE MD.DocID = @docid And STO.Length IS NOT NULL
AND MD.StockID not in (SELECT StockID FROM AccManufacture_output where DocID = @docid )
--AND STO.StockType = {stocktype} AND  
ORDER BY MD.StockCode
","0","","1","LRA-FUSION","0","0","fusion"
"40495","cv_multi_link_sum","","--cv_Multi_Link_Sum
DECLARE @DocID AS INTEGER
DECLARE @OverallQty AS FLOAT
SET @DocID ={docid}
SET @OverallQty = (SELECT Top 1 Qty from AccMANUFACTURE_OUTPUT where IsPrimaryOutput =1 AND DocID = @DocID  )

SELECT
MD.StockCode as [Code], 
MD.StockDescription AS [Material],
sum(ROUND(((STO.[Length]/1000) * (STO.Width/1000)) * ISNULL(MO.Qty,1),4))   AS [m2],
--'/3.125' as [   ],
round(sum(ROUND(((STO.[Length]/1000) * (STO.Width/1000)) * ISNULL(MO.Qty,1),4)) / 3.125,4)  AS [Total m2]
FROM AccManufacture_Detail MD
LEFT JOIN (SELECT  OutputID, Qty, StockID  FROM AccManufacture_output) MO ON MD.OutputID = MO.OutputID
LEFT JOIN(SELECT StockID,StockCode, StockDescription,  [Length], Width, StockType FROM AccStock) STO ON MO.StockID = STO.StockID
WHERE MD.DocID = @docid And STO.Length IS NOT NULL
AND MD.StockID not in (SELECT StockID FROM AccManufacture_output where DocID = @docid )
--AND STO.StockType = {stocktype} AND  
GROUP BY MD.StockCode, MD.StockDescription
ORDER BY MD.StockCode 
","0","","1","LRA-FUSION","0","0","fusion"
"40496","cv_DocumentCustomPathGetSubTypes","","SET NOCOUNT ON 
DECLARE @TempID INT
DECLARE @TempDocTypeID INT

DECLARE @Table TABLE
(
	IID INT IDENTITY(1,1),
	LookupID INT,
	DocType VARCHAR(255),
	TempID INT
)

DECLARE @DocTypeID INT
DECLARE @DocSubTypeID INT

SET @DocTypeID = {doctypeid}
SET @DocSubTypeID = {docsubtypeid}

SET @TempDocTypeID = @DocSubTypeID
SET @TempID = (SELECT ISNULL(TempID,0) FROM Lookup WHERE LookupID = @TempDocTypeID)

WHILE @TempID > 0 
BEGIN 
	
	INSERT INTO @Table (LookupID, DocType, TempID)
	SELECT LookupID, Value, TempID FROM Lookup WHERE LookupID = @TempDocTypeID
	
	SET @TempDocTypeID = (SELECT ISNULL(TempID,0) FROM Lookup WHERE LookupID = @TempDocTypeID)		
	SET @TempID = (SELECT ISNULL(TempID,0) FROM Lookup WHERE LookupID = @TempDocTypeID)	
END

SELECT * FROm @Table ORDER BY IID DESC
SET NOCOUNT OFF","0","","1","LRA-FUSION","0","0","fusion"
"40497","cv_DocumentManTreeview","","select
	LD.lookupid,
	LD.value,
	LD.tempid,
	ISNULL((SELECT COUNT(entitydocumentid) as DocCount/*,
			d.DocTypeID*/
		from entitydocument d
		left join lookup l on l.lookupid = d.doctypeid
		LEFT JOIN (SELECT EntityID,Company FROM Entity) E
		ON D.EntityID = E.Entityid
		LEFT JOIN (SELECT EntityContactID, Firstname + ' ' + Surname as [Contact] FROM EntityContact ) EC
		ON D.EntityContactID = EC.EntityContactID
		LEFT JOIN Staff s
		on s.StaffID = d.StaffID
		LEFT JOIN Lookup ls
		ON ls.lookupid = d.docsubid
		<%where%>		
		),0) as DocCount
FROM Lookup LD 
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40498","cv_ClientActivityListItemsDeveloperTasks","","SELECT 	 
	CAL.ClientActivityListItemID,
	E.Company,
	M.ModuleName as [Module],
	Case WHEN isnull(isCancelled,0) = 1 then 'Canceled' 
		 WHEN isnull(isComplete,0) = 1 AND isnull(isCancelled,0) = 0 THEN 'Completed'
		 ELSE 'Open' END as [Status],
	CASE WHEN ((ISNULL(uID.FirstName,'') + ' ' + ISNULL(uID.Surname,'') + ' (' + ISNULL(CONVERT(VARCHAR,CAL.IsAuthorisedDate, 120),'')) + ')') = '  ()' THEN 'Not Authorised' ELSE ((ISNULL(uID.FirstName,'') + ' ' + ISNULL(uID.Surname,'') + ' (' + ISNULL(CONVERT(VARCHAR,CAL.IsAuthorisedDate, 120),'')) + ')') END as [Authorised By],
	[Assigned To],
	fName as [Form],
	[Description], 
	[Reason], 
	L.Value as [Type],
	isnull(EstimatedHours,0) as [Est. Hrs.]	
FROM ClientActivityListItem CAL
LEFT JOIN (SELECT * FROM Lookup WHERE Class = 'TaskType') L ON CAL.ChangeTypeID = L.LookupID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Assigned To] FROM Users) U ON CAL.AssignedTo = U.UserID
LEFT JOIN Modules M ON M.ModuleID = CAL.ModuleID
LEFT JOIN (SELECT ProjectID, ClientActivityListID FROM ClientActivityList) CAL1
	ON CAL1.ClientActivityListID = CAL.ClientActivityListID
LEFT JOIN (SELECT ProjectID, EntityID, ProjectName,ProjectTypeID FROM Projects) P
    ON CAL1.ProjectID = P.ProjectID
LEFT JOIN (SELECT EntityID, Company FROM Entity) E
    ON P.EntityID = E.EntityID
LEFT JOIN (SELECT UserID, FirstName, Surname FROM Users) uID
	ON uID.UserID = CAL.IsAuthorisedBy
{where}
ORDER BY ClientActivityListItemID","0","","1","LRA-FUSION","0","0","fusion"
"40499","CV_Overview_Ticket","","{select}   

(

SELECT 
	[TicketID],
	[Ticket No],
	[Date Captured],
	[Time Captured],
	[Logged By],
	[Assigned To],
	[Assigned Date and Time],
	[Holding Company], 
	[Company]
	[Call Type],
	[Ticket Type],
	[Severity], 
	[Severity Escalation],
	[Current Status],
	[Problem Type],
	[Job],
	[Client Order Number],
	Switchboard,
	[Fax],
	[Send Email],
	[Send SMS],
	[Machine type],
	[Model],
	[Division],
	[Ticket Duration],
	[Dispatch Date/Time],
	[Arrival Time],
	[Stock Code],
	[Serial Number],
	[Support Document Added],
	[Account Number],
	EstimatedCost As [Estimated Service Cost],
	Province,
	[Date Captured] + ' ' +	[Time Captured] As [Start Time],
	DateCompleted As [End Time]

FROM (
	Select 
    E.AccountNum as [Account Number],
    T.EstimatedCost,
    Province,
        l.Value as Severity,
	TicketID,
	TicketID AS [Ticket No],
	Convert(Varchar,DateCaptured,111) as [Date Captured],
	Convert(Varchar,DateCaptured,108) as [Time Captured],
	isnull(lb.Firstname,'') + ' ' + isnull(lb.Surname,'') as [Logged By],
	isnull(u.Firstname,'') + ' ' + isnull(u.Surname,'') as [Assigned To],
	ReminderDateTime As [Assigned Date and Time],
	E.Company as [Holding Company],
	EA.Company as [Company],
	CallType as [Call Type],
	TT.Value as [Ticket Type],
	dbo.fn_GetTicketEscalation(Severity) as [Severity Escalation],
	L2.Value as [Current Status],
	ProbType as [Problem Type],
	convert(varchar,P.JobNo) + ' : ' + 'ProjectName' as [Job],
	T.DivID,
	T.UserID,
	T.LogByID,
	T.DateCaptured,
	T.DateCompleted,
	T.DispatchDate,
	T.ClientPO as [Client Order Number],
T.entityID as [ID],
	ISNULL(EA.Switchboard,E.Switchboard) as Switchboard,
	ISNULL(EA.Fax,E.Fax) as [Fax],
	ISNULL(EA.AccountNum, E.AccountNum) as [Branch Code],
	tMessage as [Problem Details],
	Case when isnull(SendEmail,0) = 0 then 'No' else 'Yes' end as [Send Email],
	Case when isnull(SendSMS,0) = 0 then 'No' else 'Yes' end as [Send SMS],
	LM.Value as [Machine type],
	LLM.Value as [Model],
	LD.Value as [Division],
	DATEDIFF(hour,T.DateCaptured,T.DateCompleted) as [Ticket Duration],
	DispatchDate as [Dispatch Date/Time],
	ArrivalDate as [Arrival Time],
	S.StockCode as [Stock Code],
	T.SerialNum as [Serial Number],
	Case when SuppDocAdded = 1 then 'Yes' else 'No' end as [Support Document Added],
	iSNULL(isComplete,0) as isComplete
from Tickets T
Left join (SELECT EntityID, Company,Switchboard,Fax,AccountNum FROM Entity) E on E.EntityID = T.EntityID
Left join (SELECT EntityID, Company,Switchboard,Fax,AccountNum FROM Entity) EA on EA.EntityID = T.AddEntityID
Left Join (Select Region as Province,Entityaddressid,EntityID,AddressType  from EntityAddress) EAD on E.EntityID = EAD.EntityID and ead.EntityAddressID = (select max(entityaddressid) from entityaddress where addresstype like '%physical%' and entityid = e.entityid) and  ead.AddressType like '%Physical%'
Left join (SELECT UserID, FirstName ,Surname  FROM Users) lb on lb.UserID = T.LogByID
Left join (SELECT UserID, FirstName, Surname FROM Users) u on u.UserID = T.UserID
Left join (SELECT lookupid, value from lookup where class like 'StockType') LM on T.StockTypeID = LM.LookupID
Left Join (SELECT LinkLookupID, Value from LinkLookup where class like 'StockSubType') LLM on SubStockTypeID = LLM.LinkLookupID
Left join (SELECT lookupid, value from lookup) LD on T.DivID = LD.LookupID
Left join (SELECT StockID, StockCode, StockDescription  FROM AccStock) s on s.StockID = T.StockID
LEFT JOIN (SELECT max(ProjectID) as [JobNo], TicketID as [TickID] FROM Projects GROUP BY TicketID ) P ON T.TicketID = P.TickID
LEFT JOIN (SELECT ProjectName, ProjectID FROM Projects) PN ON P.JobNo = PN.ProjectID
LEFT JOIN Lookup L on L.LookupID = t.SeverityID and L.Class = 'TicketSeverity'
LEFT JOIN Lookup TT on TT.LookupID =T.TicketType
LEFT JOIN Lookup L2 on l2.LookupID = t.tStatus
) A 

{where} )X","0","","1","LRA-FUSION","0","0","fusion"
"40500","cv_Contract_Returned_Itemsbk","","SET NOCOUNT ON
SET ANSI_WARNINGS OFF
DECLARE @StartDate DATETIME
DECLARE @EndDate DATETIME
DECLARE @OrigEnd DATETIME
DECLARE @TempDate DATETIME
DECLARE @AdjustDate DATETIME
DECLARE @StockContolID INT
DECLARE @ChargeSat BIT
DECLARE @ChargeSun BIT
DECLARE @ChargePublic BIT
DECLARE @DocID INT
DECLARE @Line CURSOR

SET @DocID = {docid}

DECLARE @Temp TABLE 
(
	ID INT IDENTITY(1,1),
	StockControlID INT,
	RentDate DATETIME,
	IsCharged INT
)

SET @ChargeSat = (SELECT ISNULL(isSaturday,0) FROM Projects WHERE ProjectID = @DocID)
SET @ChargeSun = (SELECT ISNULL(isSunday,0) FROM Projects WHERE ProjectID = @DocID)
SET @ChargePublic = (SELECT ISNULL(isPublic,0) FROM Projects WHERE ProjectID = @DocID)

SET @Line = CURSOR FAST_FORWARD FOR
	SELECT DISTINCT
		STKC.StockControlID,
		R.StartDate, 
		R.EndDate,
		STKC.AdjustDate
	FROM CONTRACT_DETAIL CD 
	LEFT JOIN Rental R ON R.DocID = CD.DocID AND R.LineID = CD.LineID AND R.DocType = 'Contract'
	LEFT JOIN AccStockControl STKC ON STKC.StockID = CD.StockID AND STKC.ProjectID = CD.DocID AND STKC.DocType = 'Stock Take' AND STKC.LineID = CD.LineID 
	LEFT JOIN Projects P ON P.ProjectID = CD.DocID
	WHERE CD.DocID = @DocID 
	
OPEN @Line 

FETCH NEXT FROM @Line INTO @StockContolID, @StartDate, @EndDate, @AdjustDate

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @TempDate = @StartDate
	SET @OrigEnd = @EndDate 
	IF @EndDate < @AdjustDate
	BEGIN
		SET @EndDate = @AdjustDate
	END
	IF @AdjustDate > @OrigEnd 
	BEGIN
		SET @AdjustDate = @OrigEnd 
	END
	
	WHILE @TempDate < @EndDate
	BEGIN
		INSERT INTO @Temp (StockControlID, RentDate, IsCharged)
		SELECT @StockContolID,
			@TempDate,
			CASE DATEPART(WEEKDAY, @TempDate)
            WHEN 1 THEN
                @ChargeSun
            WHEN 7 THEN
                @ChargeSat
            ELSE 
                1
        END * CASE WHEN CONVERT(DATETIME, CONVERT(VARCHAR, @TempDate,111)) > CONVERT(DATETIME, CONVERT(VARCHAR, @AdjustDate,111)) THEN 1 ELSE -1 END
		SET @TempDate = DATEADD(DAY, 1, @TempDate)
	END
	
	INSERT INTO @Temp (StockControlID, RentDate, IsCharged)
	SELECT @StockContolID,
		@TempDate,
		CASE DATEPART(WEEKDAY, @TempDate)
        WHEN 1 THEN
            @ChargeSun
        WHEN 7 THEN
            @ChargeSat
        ELSE 
            1
    END * CASE WHEN CONVERT(DATETIME, CONVERT(VARCHAR, @TempDate,111)) > CONVERT(DATETIME, CONVERT(VARCHAR, @AdjustDate,111)) THEN 1 ELSE -1 END
	
	FETCH NEXT FROM @Line INTO @StockContolID, @StartDate, @EndDate, @AdjustDate
END

CLOSE @Line
DEALLOCATE @Line

UPDATE @Temp
    SET IsCharged = Z.Charge
FROM(
    SELECT ID as IDD,
		CASE WHEN STKC.AdjustDate < T.RentDate THEN -1 ELSE 1 END * @ChargePublic as [Charge]
    FROM @Temp T
    INNER JOIN PublicHoliday ON [Date] BETWEEN CONVERT(DATETIME, CONVERT(VARCHAR, RentDate, 111) + ' 00:00:00') AND CONVERT(DATETIME, CONVERT(VARCHAR, RentDate, 111) + ' 23:59:59')
    LEFT JOIN Lookup ON Lookup.LookupID = PublicHoliday.CountryID
    LEFT JOIN AccStockControl STKC ON STKC.StockControlID = T.StockControlID  
    WHERE Lookup.Value like 'South Africa'
    --WHERE DATEPART(WEEKDAY, RentDate) NOT IN (1,7)
) Z
WHERE ID = Z.IDD

SELECT  
    Z.LineID,
    Z.DocID,
    Z.StockID,
    Z.StockCode,
    Z.StockDescription,
    Z.BasePriceEx,
    SUM(Z.[DateDiff]) as [Qty],
    Z.PriceCategoryID,
    --SUM((Z.[DateDiff] * Z.BasePriceEx) * Z.Diff) as [CostPrice],
    --SUM((Z.[DateDiff] * Z.BasePriceEx) * Z.Diff) as [PriceEx],
    Z.BasePriceEx as [CostPrice],
    Z.BasePriceEx as [PriceEx],
    Z.DiscPerc,
    Z.TaxTypeID,
    Z.Tax,
    Z.MarkupPerc,
    Z.Comments,
    Z.ContainerID,
    Z.GroupName,
    Z.ComponentOfLineID,
    Z.[Rank],
    Z.SupplierID,
    Z.ReportCategoryID,
    Z.StockAdjustDate,
    Z.SerialNumber,
    Z.UseLandedCost,
    Z.RentalLineID,
    Z.IsPurchased,
    Z.ETADate,
    Z.StockControlID
FROM (
    SELECT DISTINCT
        CD.LineID,
        CD.DocID,
        CD.StockID,
        CD.StockCode,
        CD.StockDescription,
        R.Qty,
        CD.PriceCategoryID, 
        CONVERT(VARCHAR, R.Duration)  + ' ' +
        CASE R.RentalPeriodType 
            WHEN 1 THEN 'Hours'
            WHEN 2 THEN 'Days'
            WHEN 3 THEN 'Nights'
            WHEN 4 THEN 'Weeks'
            WHEN 5 THEN 'Months'
        END as [OrigPeriod],
        CASE R.RentalPeriodType 
            WHEN 1 THEN 'Hours'
            WHEN 2 THEN 'Days'
            WHEN 3 THEN 'Nights'
            WHEN 4 THEN 'Weeks'
            WHEN 5 THEN 'Months'
        END as [Period],
        dbo.fnFormatNumber(CD.PriceEx) as [Rate],
        convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],   
        CONVERT(VARCHAR, STKC.AdjustDate, 111) as [Date In],
        CONVERT(VARCHAR, STKC.AdjustDate, 108) as [Date Time],
        STKC.Qty as [Diff],
        --CASE WHEN (CASE R.RentalPeriodType
        --    WHEN 1 THEN DATEDIFF(HOUR, R.EndDate, STKC.AdjustDate)
        --    WHEN 2 THEN DATEDIFF(DAY, R.EndDate, STKC.AdjustDate)
        --    WHEN 3 THEN DATEDIFF(DAY, R.EndDate, STKC.AdjustDate)
        --    WHEN 4 THEN (DATEDIFF(DAY, R.EndDate, STKC.AdjustDate) / 7)
        --    WHEN 5 THEN DATEDIFF(MONTH, R.EndDate, STKC.AdjustDate)
        --END) > 0 THEN STKC.Qty ELSE STKC.Qty * -1 END as [QTYtoUse],
        --CASE R.RentalPeriodType
        --    WHEN 1 THEN DATEDIFF(HOUR, R.EndDate, STKC.AdjustDate)
        --    WHEN 2 THEN DATEDIFF(DAY, R.EndDate, STKC.AdjustDate)
        --    WHEN 3 THEN DATEDIFF(DAY, R.EndDate, STKC.AdjustDate)
        --    WHEN 4 THEN (DATEDIFF(DAY, R.EndDate, STKC.AdjustDate) / 7)
        --    WHEN 5 THEN DATEDIFF(MONTH, R.EndDate, STKC.AdjustDate)
        --END as [DateDiff],  
        CASE WHEN STKC.AdjustDate > R.EndDate THEN
			ISNULL((SELECT SUM(IsCharged) FROM @Temp WHERE IsCharged > 0 AND StockControlID = STKC.StockControlID AND RentDate <= STKC.AdjustDate) * CASE WHEN R.EndDate < STKC.AdjustDate THEN 1 ELSE -1 END,0)
		ELSE
			ISNULL((SELECT SUM(IsCharged) FROM @Temp WHERE IsCharged > 0 AND StockControlID = STKC.StockControlID) * CASE WHEN R.EndDate < STKC.AdjustDate THEN 1 ELSE -1 END,0)
		END as [DateDiff],
        R.BasePriceEx,
        CD.DiscPerc,
        CD.TaxTypeID,
        CD.Tax,
        CD.MarkupPerc,
        CD.Comments,
        CD.ContainerID,
        CD.GroupName,
        CD.ComponentOfLineID,
        CD.[Rank],
        CD.SupplierID,  
        CD.ReportCategoryID,
        CD.StockAdjustDate,
        CD.SerialNumber,
        CD.UseLandedCost,
        CD.RentalLineID,
        CD.IsPurchased,
        CD.ETADate,
        STKC.StockControlID      
    FROM CONTRACT_DETAIL CD 
    LEFT JOIN Rental R ON R.DocID = CD.DocID AND R.LineID = CD.LineID AND R.DocType = 'Contract'
    LEFT JOIN AccStockControl STKC ON STKC.StockID = CD.StockID AND STKC.ProjectID = CD.DocID AND STKC.DocType = 'Stock Take'
    WHERE CD.DocID = @DocID
    AND STKC.DocType = 'Stock Take'
) Z
LEFT JOIN DEBTOR_DETAIL DD ON DD.StockID = Z.StockID AND DD.ProjectID = Z.StockControlID AND DD.PriceEx = Z.BasePriceEx
WHERE DD.LineID IS NULL
AND ISNULL(DD.DocID,0) NOT IN (SELECT DocID FROM DEBTOR_MASTER WHERE ProjectID = @DocID AND DocType NOT LIKE '%DELETE%')
GROUP BY Z.LineID, Z.DocID, Z.StockID, Z.StockCode, Z.StockDescription, Z.BasePriceEx, Z.PriceCategoryID, Z.DiscPerc, Z.TaxTypeID, Z.Tax, Z.MarkupPerc,
    Z.Comments, Z.ContainerID, Z.GroupName, Z.ComponentOfLineID, Z.[Rank], Z.SupplierID, Z.ReportCategoryID, Z.StockAdjustDate, Z.SerialNumber,
    Z.UseLandedCost, Z.RentalLineID, Z.IsPurchased, Z.ETADate,Z.StockControlID   
HAVING SUM((Z.[DateDiff] * Z.BasePriceEx) * Z.Diff) <> 0

SET NOCOUNT OFF
SET ANSI_WARNINGS ON","0","","1","LRA-FUSION","0","0","fusion"
"40501","cv_Acc_Stock_Availability_Hired","","SELECT 
--newID() as [ID], 

'C-' + CAST(LL.LinkLookupID AS VARCHAR) + '-S-' + CAST(STK.StockID AS VARCHAR) + '-P-' + CONVERT(VARCHAR, ISNULL(P.ProjectID,0)) as ID,
LL.Value as [Container],
STK.StockCode as [Code], 
STK.StockDescription as [Description],
LEFT('00000000', 8 - LEN(P.ProjectID)) + CONVERT(VARCHAR, P.ProjectID) as [Contract],
E.Company,
LU.Value as [Unit],
dbo.fnFormatNumber(isnull([Qty In Container],0)) as [Qty In Container],
dbo.fnFormatNumber(ISNULL(CD.QTY,0)) as [QTY Hired],
dbo.fnFormatNumber(ISNULL(STC.QTY,0)) as [Qty Returned],
dbo.fnFormatNumber(isnull([Qty In Container],0) - (ISNULL(CD.QTY,0) - ISNULL(STC.QTY,0))) as [Available]
FROM AccStock STK
LEFT JOIN (SELECT * FROM Lookup) LU
ON STK.SoldBy = LU.LookupID
CROSS JOIN (SELECT * FROM LinkLookup where class ='StockContainer') LL 
LEFT JOIN (SELECT StockID,ContainerID, sum(Qty * Ratio) as [Qty In Container] FROM AccStockControl Group by StockID,ContainerID) SC
ON STK.StockID = SC.StockID AND LL.LinkLookupID = SC.ContainerID
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
			LEFT JOIN (SELECT DOCID, DocType FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
			ON DD.DocID = DM.DocID
			LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*{table}*/) DDM
			ON DD.ComponentOfLineID = DDM.LineID
			WHERE DM.DocType in ('Sales Order', 'Quote')
			Group by StockID, ContainerID ) SO
ON STK.StockID = SO.StockID AND LL.LinkLookupID = SO.ContainerID	
LEFT JOIN (SELECT StockID, ContainerID, Sum(DD.Qty * isnull(DDM.Qty,1)) as [Qty] FROM DEBTOR_DETAIL DD
			LEFT JOIN (SELECT DOCID, DocType FROM DEBTOR_MASTER where DocStatus <> 'Rejected') DM
			ON DD.DocID = DM.DocID
			LEFT JOIN (SELECT LineID, Qty FROM DEBTOR_DETAIL /*{table}*/) DDM
			ON isnull(DD.ComponentOfLineID,0) = DDM.LineID
			WHERE DM.DocType = 'Dispatch Note'
			Group by StockID, ContainerID ) DN
ON STK.StockID = DN.StockID AND LL.LinkLookupID = DN.ContainerID	
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
			LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
			ON CD.DocID = CM.DocID
			WHERE CM.DocType = 'Purchase Order'
			Group by StockID, ContainerID ) PO
ON STK.StockID = PO.StockID AND LL.LinkLookupID = PO.ContainerID	
LEFT JOIN (SELECT StockID, ContainerID, Sum(Qty) as [Qty] FROM CREDITOR_DETAIL CD
			LEFT JOIN (SELECT DOCID, DocType FROM CREDITOR_MASTER where DocStatus <> 'Rejected') CM
			ON CD.DocID = CM.DocID
			WHERE CM.DocType = 'Goods Received Note'
			Group by StockID, ContainerID ) GRN
ON STK.StockID = GRN.StockID AND LL.LinkLookupID = GRN.ContainerID	
LEFT JOIN (SELECT MD.StockID, MD.ContainerID, Sum(MD.Qty) as [Qty] FROM AccMANUFACTURE_DETAIL MD
			LEFT JOIN (SELECT DocID, IsComplete FROM AccMANUFACTURE) MM
			ON MD.DocID = MM.DocID
			WHERE isnull(MM.IsComplete,0) = 0 
			Group by MD.StockID, MD.ContainerID) MC
ON STK.StockID = MC.StockID AND LL.LinkLookupID = MC.ContainerID
LEFT JOIN (SELECT MO.StockID, MO.ContainerID, sum(MO.Qty) as [Qty] FROM AccMANUFACTURE_Output MO
			LEFT JOIN (SELECT DocID, IsComplete FROM AccMANUFACTURE) MM
			ON MO.DocID = MM.DocID
			WHERE isnull(MM.IsComplete,0) = 0 
			Group by MO.StockID, MO.ContainerID) MO
ON STK.StockID = MO.StockID AND LL.LinkLookupID = MO.ContainerID
LEFT JOIN (SELECT StockID, Qty, ContainerID, ProjectID, DocID FROM CONTRACT_DETAIL ) CD 
ON CD.StockID = STK.StockID AND LL.LinkLookupID = CD.ContainerID 
LEFT JOIN (SELECT StockID, QTY, ContainerID, ProjectID FROM AccStockControl WHERE DocType like 'Stock Type') STC
ON STC.StockID = STK.StockID AND LL.LinkLookupID = STC.ContainerID 
LEFT JOIN Projects P ON P.ProjectID = CD.DocID
LEFT JOIN Entity E ON E.EntityID = P.EntityID
{where}
ORDER BY STK.StockCode,LL.Value","0","","1","LRA-FUSION","0","0","fusion"
"40502","cv_Contract_Rental_Returns_Totalsbk","","SET NOCOUNT ON
SET ANSI_WARNINGS OFF
DECLARE @StartDate DATETIME
DECLARE @EndDate DATETIME
DECLARE @OrigEnd DATETIME
DECLARE @TempDate DATETIME
DECLARE @AdjustDate DATETIME
DECLARE @StockContolID INT
DECLARE @ChargeSat BIT
DECLARE @ChargeSun BIT
DECLARE @ChargePublic BIT
DECLARE @DocID INT
DECLARE @Line CURSOR

SET @DocID = {docid}


DECLARE @Temp TABLE 
(
	ID INT IDENTITY(1,1),
	StockControlID INT,
	RentDate DATETIME,
	IsCharged INT
)

SET @ChargeSat = (SELECT ISNULL(isSaturday,0) FROM Projects WHERE ProjectID = @DocID)
SET @ChargeSun = (SELECT ISNULL(isSunday,0) FROM Projects WHERE ProjectID = @DocID)
SET @ChargePublic = (SELECT ISNULL(isPublic,0) FROM Projects WHERE ProjectID = @DocID)

SET @Line = CURSOR FAST_FORWARD FOR
	SELECT DISTINCT
		STKC.StockControlID,
		R.StartDate, 
		R.EndDate,
		STKC.AdjustDate
	FROM CONTRACT_DETAIL CD 
	LEFT JOIN Rental R ON R.DocID = CD.DocID AND R.LineID = CD.LineID AND R.DocType = 'Contract'
	LEFT JOIN AccStockControl STKC ON STKC.StockID = CD.StockID AND STKC.ProjectID = CD.DocID AND STKC.DocType = 'Stock Take' AND STKC.LineID = CD.LineID 
	LEFT JOIN Projects P ON P.ProjectID = CD.DocID
	WHERE CD.DocID = @DocID
	
OPEN @Line 

FETCH NEXT FROM @Line INTO @StockContolID, @StartDate, @EndDate, @AdjustDate

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @TempDate = @StartDate
	SET @OrigEnd = @EndDate 
	IF @EndDate < @AdjustDate
	BEGIN
		SET @EndDate = @AdjustDate
	END
	IF @AdjustDate > @OrigEnd 
	BEGIN
		SET @AdjustDate = @OrigEnd 
	END
	
	WHILE @TempDate < @EndDate
	BEGIN
		INSERT INTO @Temp (StockControlID, RentDate, IsCharged)
		SELECT @StockContolID,
			@TempDate,
			CASE DATEPART(WEEKDAY, @TempDate)
            WHEN 1 THEN
                @ChargeSun
            WHEN 7 THEN
                @ChargeSat
            ELSE 
                CASE WHEN CONVERT(DATETIME, CONVERT(VARCHAR, @TempDate,111)) > CONVERT(DATETIME, CONVERT(VARCHAR, @AdjustDate,111)) THEN 1 ELSE -1 END
        END 
		SET @TempDate = DATEADD(DAY, 1, @TempDate)
	END
	
	INSERT INTO @Temp (StockControlID, RentDate, IsCharged)
	SELECT @StockContolID,
		@TempDate,
		CASE DATEPART(WEEKDAY, @TempDate)
        WHEN 1 THEN
            @ChargeSun
        WHEN 7 THEN
            @ChargeSat
        ELSE 
            CASE WHEN CONVERT(DATETIME, CONVERT(VARCHAR, @TempDate,111)) > CONVERT(DATETIME, CONVERT(VARCHAR, @AdjustDate,111)) THEN 1 ELSE -1 END
    END 
	
	FETCH NEXT FROM @Line INTO @StockContolID, @StartDate, @EndDate, @AdjustDate
END

CLOSE @Line
DEALLOCATE @Line

UPDATE @Temp
    SET IsCharged = @ChargePublic
FROM(
    SELECT ID as IDD FROM @Temp 
    INNER JOIN PublicHoliday ON [Date] BETWEEN CONVERT(DATETIME, CONVERT(VARCHAR, RentDate, 111) + ' 00:00:00') AND CONVERT(DATETIME, CONVERT(VARCHAR, RentDate, 111) + ' 23:59:59')
    LEFT JOIN Lookup ON Lookup.LookupID = PublicHoliday.CountryID 
    WHERE Lookup.Value like 'South Africa'
    --WHERE DATEPART(WEEKDAY, RentDate) NOT IN (1,7)
) Z
WHERE ID = Z.IDD


SELECT 	
	SUM((((CASE WHEN Z.[DateDiff] = 0 THEN CASE WHEN Z.ChargeHalfDay = 1 THEN -0.5 ELSE 0 END ELSE Z.[DateDiff] END) * Z.BasePriceEx) * Z.Diff)) as [TotalEx],
    SUM(((((CASE WHEN Z.[DateDiff] = 0 THEN CASE WHEN Z.ChargeHalfDay = 1 THEN -0.5 ELSE 0 END ELSE Z.[DateDiff] END) * Z.BasePriceEx) * Z.Diff) * (Z.Tax / 100 + 1))) as [TotalIncl],
    SUM(((((CASE WHEN Z.[DateDiff] = 0 THEN CASE WHEN Z.ChargeHalfDay = 1 THEN -0.5 ELSE 0 END ELSE Z.[DateDiff] END) * Z.BasePriceEx) * Z.Diff) * (isnull(discperc,0))/100)) as [Discount]
FROM (
	SELECT DISTINCT CD.DiscPerc,
		STKC.StockControlID,
		CD.StockCode as [Code] ,
		CD.StockDescription as [Description], 
		R.Qty,
		CONVERT(VARCHAR, R.Duration)  + ' ' +
		CASE R.RentalPeriodType 
			WHEN 1 THEN 'Hours'
			WHEN 2 THEN 'Days'
			WHEN 3 THEN 'Nights'
			WHEN 4 THEN 'Weeks'
			WHEN 5 THEN 'Months'
		END as [OrigPeriod],
		CASE R.RentalPeriodType 
			WHEN 1 THEN 'Hours'
			WHEN 2 THEN 'Days'
			WHEN 3 THEN 'Nights'
			WHEN 4 THEN 'Weeks'
			WHEN 5 THEN 'Months'
		END as [Period],
		dbo.fnFormatNumber(CD.PriceEx) as [Rate],
		convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],	
		CONVERT(VARCHAR, STKC.AdjustDate, 111) as [Date In],
		CONVERT(VARCHAR, STKC.AdjustDate, 108) as [Date Time],
		STKC.Qty as [Diff],		
		CASE WHEN STKC.AdjustDate > R.EndDate THEN
			ISNULL((SELECT SUM(IsCharged) FROM @Temp WHERE IsCharged > 0 AND StockControlID = STKC.StockControlID AND RentDate <= STKC.AdjustDate) * CASE WHEN R.EndDate < STKC.AdjustDate THEN 1 ELSE -1 END,0)
		ELSE
			ISNULL((SELECT SUM(IsCharged) FROM @Temp WHERE IsCharged > 0 AND StockControlID = STKC.StockControlID) * CASE WHEN R.EndDate < STKC.AdjustDate THEN 1 ELSE -1 END,0)
		END as [DateDiff],
		DATEDIFF(DAY, R.EndDate, STKC.AdjustDate) as [DateDiffOnDays],	
		R.BasePriceEx,
		CD.Tax,
		STKC.AdjustDate,
		CASE WHEN ISNULL(P.IsHalfDay,0) = 1 THEN 
			CASE WHEN STKC.AdjustDate <= CONVERT(DATETIME, CONVERT(VARCHAR, R.EndDate, 111) + ' 12:00:00') THEN 1 ELSE 0 END
		ELSE
			0
		END as [ChargeHalfDay]			
	FROM CONTRACT_DETAIL CD 
	LEFT JOIN Rental R ON R.DocID = CD.DocID AND R.LineID = CD.LineID AND R.DocType = 'Contract'
	LEFT JOIN AccStockControl STKC ON STKC.StockID = CD.StockID AND STKC.ProjectID = CD.DocID AND STKC.DocType = 'Stock Take' AND STKC.LineID = CD.LineID 
	LEFT JOIN Projects P ON P.ProjectID = CD.DocID
	LEFT JOIN @Temp T ON T.StockControlID = STKC.StockControlID 
	WHERE CD.DocID = @DocID
	AND STKC.DocType = 'Stock Take'	
	GROUP BY STKC.StockControlID, CD.StockCode, CD.StockDescription, R.QtY, R.Duration, R.RentalPeriodType, CD.PriceEx, CD.DiscPerc, STKC.AdjustDate, STKC.QTY,
		R.BasePriceEx, CD.Tax, R.EndDate, P.IsHalfDay
) Z

SET NOCOUNT OFF
SET ANSI_WARNINGS ON","0","","1","LRA-FUSION","0","0","fusion"
"40503","cv_Contract_Rental_Returnsbk","","SET NOCOUNT ON
SET ANSI_WARNINGS OFF
DECLARE @StartDate DATETIME
DECLARE @EndDate DATETIME
DECLARE @OrigEnd DATETIME
DECLARE @TempDate DATETIME
DECLARE @AdjustDate DATETIME
DECLARE @StockContolID INT
DECLARE @ChargeSat BIT
DECLARE @ChargeSun BIT
DECLARE @ChargePublic BIT
DECLARE @DocID INT
DECLARE @Line CURSOR

SET @DocID = {docid}

DECLARE @Temp TABLE 
(
	ID INT IDENTITY(1,1),
	StockControlID INT,
	RentDate DATETIME,
	IsCharged INT
)

SET @ChargeSat = (SELECT ISNULL(isSaturday,0) FROM Projects WHERE ProjectID = @DocID)
SET @ChargeSun = (SELECT ISNULL(isSunday,0) FROM Projects WHERE ProjectID = @DocID)
SET @ChargePublic = (SELECT ISNULL(isPublic,0) FROM Projects WHERE ProjectID = @DocID)

SET @Line = CURSOR FAST_FORWARD FOR
	SELECT DISTINCT
		STKC.StockControlID,
		R.StartDate, 
		R.EndDate,
		STKC.AdjustDate
	FROM CONTRACT_DETAIL CD 
	LEFT JOIN Rental R ON R.DocID = CD.DocID AND R.LineID = CD.LineID AND R.DocType = 'Contract'
	LEFT JOIN AccStockControl STKC ON STKC.StockID = CD.StockID AND STKC.ProjectID = CD.DocID AND STKC.DocType = 'Stock Take' AND STKC.LineID = CD.LineID 
	LEFT JOIN Projects P ON P.ProjectID = CD.DocID
	WHERE CD.DocID = @DocID 
	
OPEN @Line 

FETCH NEXT FROM @Line INTO @StockContolID, @StartDate, @EndDate, @AdjustDate

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @TempDate = @StartDate
	SET @OrigEnd = @EndDate 
	IF @EndDate < @AdjustDate
	BEGIN
		SET @EndDate = @AdjustDate
	END
	IF @AdjustDate > @OrigEnd 
	BEGIN
		SET @AdjustDate = @OrigEnd 
	END
	
	WHILE @TempDate < @EndDate
	BEGIN
		INSERT INTO @Temp (StockControlID, RentDate, IsCharged)
		SELECT @StockContolID,
			@TempDate,
			CASE DATEPART(WEEKDAY, @TempDate)
            WHEN 1 THEN
                @ChargeSun
            WHEN 7 THEN
                @ChargeSat
            ELSE 
                1
        END * CASE WHEN CONVERT(DATETIME, CONVERT(VARCHAR, @TempDate,111)) > CONVERT(DATETIME, CONVERT(VARCHAR, @AdjustDate,111)) THEN 1 ELSE -1 END
		SET @TempDate = DATEADD(DAY, 1, @TempDate)
	END
	
	INSERT INTO @Temp (StockControlID, RentDate, IsCharged)
	SELECT @StockContolID,
		@TempDate,
		CASE DATEPART(WEEKDAY, @TempDate)
        WHEN 1 THEN
            @ChargeSun
        WHEN 7 THEN
            @ChargeSat
        ELSE 
            1
    END * CASE WHEN CONVERT(DATETIME, CONVERT(VARCHAR, @TempDate,111)) > CONVERT(DATETIME, CONVERT(VARCHAR, @AdjustDate,111)) THEN 1 ELSE -1 END
	
	FETCH NEXT FROM @Line INTO @StockContolID, @StartDate, @EndDate, @AdjustDate
END

CLOSE @Line
DEALLOCATE @Line

UPDATE @Temp
    SET IsCharged = Z.Charge
FROM(
    SELECT ID as IDD,
		CASE WHEN STKC.AdjustDate < T.RentDate THEN -1 ELSE 1 END * @ChargePublic as [Charge]
    FROM @Temp T
    INNER JOIN PublicHoliday ON [Date] BETWEEN CONVERT(DATETIME, CONVERT(VARCHAR, RentDate, 111) + ' 00:00:00') AND CONVERT(DATETIME, CONVERT(VARCHAR, RentDate, 111) + ' 23:59:59')
    LEFT JOIN Lookup ON Lookup.LookupID = PublicHoliday.CountryID
    LEFT JOIN AccStockControl STKC ON STKC.StockControlID = T.StockControlID  
    WHERE Lookup.Value like 'South Africa'
    --WHERE DATEPART(WEEKDAY, RentDate) NOT IN (1,7)
) Z
WHERE ID = Z.IDD

SELECT 
	Z.StockControlID,
	Z.Code,
	Z.[Description],
	Z.QTY as [QTY Hired],
	Z.OrigPeriod as [Period],
	Z.Rate,
	Z.Discount,
	Z.[Date In],
	Z.[Date Time] as [Time In],
	Z.Diff as [QTY Retruned],
	CONVERT(VARCHAR, CASE WHEN Z.[DateDiff] = 0 THEN CASE WHEN Z.ChargeHalfDay = 1 THEN -0.5 ELSE 0 END ELSE Z.[DateDiff] END) + ' ' + Z.Period as [Variance],
	dbo.fnFormatNumber((((CASE WHEN Z.[DateDiff] = 0 THEN CASE WHEN Z.ChargeHalfDay = 1 THEN -0.5 ELSE 0 END ELSE Z.[DateDiff] END) * Z.BasePriceEx) * Z.Diff)) as [To Process Ex],
	dbo.fnFormatNumber(((((CASE WHEN Z.[DateDiff] = 0 THEN CASE WHEN Z.ChargeHalfDay = 1 THEN -0.5 ELSE 0 END ELSE Z.[DateDiff] END) * Z.BasePriceEx) * Z.Diff) * (Z.Tax / 100 + 1))) as [To Process Incl]
FROM (
	SELECT DISTINCT
		STKC.StockControlID,
		CD.StockCode as [Code] ,
		CD.StockDescription as [Description], 
		R.Qty,
		CONVERT(VARCHAR, R.Duration)  + ' ' +
		CASE R.RentalPeriodType 
			WHEN 1 THEN 'Hours'
			WHEN 2 THEN 'Days'
			WHEN 3 THEN 'Nights'
			WHEN 4 THEN 'Weeks'
			WHEN 5 THEN 'Months'
		END as [OrigPeriod],
		CASE R.RentalPeriodType 
			WHEN 1 THEN 'Hours'
			WHEN 2 THEN 'Days'
			WHEN 3 THEN 'Nights'
			WHEN 4 THEN 'Weeks'
			WHEN 5 THEN 'Months'
		END as [Period],
		dbo.fnFormatNumber(CD.PriceEx) as [Rate],
		convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],	
		CONVERT(VARCHAR, STKC.AdjustDate, 111) as [Date In],
		CONVERT(VARCHAR, STKC.AdjustDate, 108) as [Date Time],
		STKC.Qty as [Diff],		
		CASE WHEN STKC.AdjustDate > R.EndDate THEN
			ISNULL((SELECT SUM(IsCharged) FROM @Temp WHERE IsCharged > 0 AND StockControlID = STKC.StockControlID AND RentDate <= STKC.AdjustDate) * CASE WHEN R.EndDate < STKC.AdjustDate THEN 1 ELSE -1 END,0)
		ELSE
			ISNULL((SELECT SUM(IsCharged) FROM @Temp WHERE IsCharged > 0 AND StockControlID = STKC.StockControlID) * CASE WHEN R.EndDate < STKC.AdjustDate THEN 1 ELSE -1 END,0)
		END as [DateDiff],
		DATEDIFF(DAY, R.EndDate, STKC.AdjustDate) as [DateDiffOnDays],	
		R.BasePriceEx,
		CD.Tax,
		STKC.AdjustDate,
		CASE WHEN ISNULL(P.IsHalfDay,0) = 1 THEN 
			CASE WHEN STKC.AdjustDate <= CONVERT(DATETIME, CONVERT(VARCHAR, R.EndDate, 111) + ' 12:00:00') THEN 1 ELSE 0 END
		ELSE
			0
		END as [ChargeHalfDay]			
	FROM CONTRACT_DETAIL CD 
	LEFT JOIN Rental R ON R.DocID = CD.DocID AND R.LineID = CD.LineID AND R.DocType = 'Contract'
	LEFT JOIN AccStockControl STKC ON STKC.StockID = CD.StockID AND STKC.ProjectID = CD.DocID AND STKC.DocType = 'Stock Take' AND STKC.LineID = CD.LineID 
	LEFT JOIN Projects P ON P.ProjectID = CD.DocID
	LEFT JOIN @Temp T ON T.StockControlID = STKC.StockControlID 
	WHERE CD.DocID = @DocID 
	AND STKC.DocType = 'Stock Take'	
	GROUP BY STKC.StockControlID, CD.StockCode, CD.StockDescription, R.QtY, R.Duration, R.RentalPeriodType, CD.PriceEx, CD.DiscPerc, STKC.AdjustDate, STKC.QTY,
		R.BasePriceEx, CD.Tax, R.EndDate, P.IsHalfDay
) Z
ORDER BY Z.AdjustDate ASC

SET NOCOUNT OFF
SET ANSI_WARNINGS ON","0","","1","LRA-FUSION","0","0","fusion"
"40504","cv_Contract_EndOfMonth","","SET NOCOUNT ON
DECLARE @StartDate DATETIME
DECLARE @EndDate DATETIME
DECLARE @NextStartDate DATETIME
DECLARE @NextEndDate DATETIME
DECLARE @StockID INT
DECLARE @IsPublic BIT
DECLARE @IsSaturday BIT
DECLARE @IsSunday BIT
DECLARE @ProjectID INT
DECLARE @Amount DECIMAL(18,12)
DECLARE @RStart DATETIME
DECLARE @REnd DATETIME
DECLARE @TempDate DATETIME
DECLARE @Line CURSOR

DECLARE @Table TABLE (
	[Date] DateTime,
	ProjectID INT,
	StockID INT,
	IsPublic BIT,
	IsSat BIT,
	IsSun BIT,
	IsCharged BIT,
	IsWeekendDay BIT,
	IsPublicHoliday BIT,
	Amount DECIMAL(18,12)
)

SET @RStart = '{datestart}'
SET @REnd = '{dateend}'
SET @NextStartDate = DATEADD(MONTH, 1, @RStart)
SET @NextEndDate = DATEADD(MONTH, 1, @NextStartDate)
SET @NextEndDate = DATEADD(DAY, -1, @NextEndDate)
SET @TempDate = @RStart 

SET @Line = CURSOR FAST_FORWARD FOR 
	SELECT DISTINCT 
		StockID,
		P.isPublic,
		P.isSaturday,
		P.isSunday,
		P.ProjectID		
	FROM CONTRACT_DETAIL CD
	LEFT JOIN Rental R ON R.RentalID = CD.RentalLineID AND R.DocType = 'Contract'
	LEFT JOIN Projects P ON P.ProjectID = CD.DocID
	WHERE R.StartDate IS NOT NULL
	AND R.StartDate BETWEEN @RStart AND @NextEndDate
	
OPEN @Line

FETCH NEXT FROM @Line INTO @StockID, @IsPublic, @IsSaturday, @IsSunday, @ProjectID

WHILE @@FETCH_STATUS = 0
BEGIN
	SET @TempDate = @RStart 
	WHILE @TempDate < @NextEndDate
	BEGIN
		INSERT INTO @Table ([Date], ProjectID, StockID, IsPublic, IsSat, IsSun, IsCharged, IsWeekendDay, IsPublicHoliday, Amount)
		SELECT @TempDate, @ProjectID, @StockID, @IsPublic, @IsSaturday, @IsSunday, 0, CASE WHEN DATEPART(WEEKDAY, @TempDate) IN (1,7) THEN 1 ELSE 0 END, 0 ,0
		SET @TempDate = DATEADD(DAY, 1, @TempDate)
	END
	FETCH NEXT FROM @Line INTO @StockID, @IsPublic, @IsSaturday, @IsSunday, @ProjectID
END

--UPDATE @Table 
--	SET IsPublicHoliday = 1
--FROM (
--	SELECT 
--		PH.[Date]
--	FROM PublicHoliday PH
--	WHERE PH.[Date] BETWEEN @RStart AND @NextEndDate
--	AND PH.CountryID = (SELECT LookupID FROM Lookup WHERE Class like 'Country' AND Value = 'South Africa')
--) Z
--WHERE [@Table].[Date] = Z.[Date]

CLOSE @Line
DEALLOCATE @Line

SET @Line = CURSOR FAST_FORWARD FOR 
	SELECT 
		R.StartDate,
		R.EndDate,		
		CD.CostPriceEx * CD.QTY / 
		CASE WHEN DATEDIFF(DAY, R.StartDate, R.EndDate) = 0 THEN 1 ELSE DATEDIFF(DAY, R.StartDate, R.EndDate) END,
		StockID,
		CD.DocID  
	FROM CONTRACT_DETAIL CD
	LEFT JOIN Rental R ON R.RentalID = CD.RentalLineID AND R.DocType = 'Contract'
	LEFT JOIN Projects P ON P.ProjectID = CD.DocID
	WHERE R.StartDate IS NOT NULL
	AND R.StartDate BETWEEN @RStart AND @NextEndDate
	AND ISNULL(P.IsCanceled,0) = 0
	
OPEN @Line

FETCH NEXT FROM @Line INTO @StartDate, @EndDate, @Amount, @StockID, @ProjectID

WHILE @@FETCH_STATUS = 0
BEGIN
	UPDATE @Table
		SET Amount = Amount + @Amount 
	WHERE [Date] BETWEEN @StartDate AND @EndDate 
	AND StockID = @StockID 
	AND ProjectID = @ProjectID
	
	FETCH NEXT FROM @Line INTO @StartDate, @EndDate, @Amount, @StockID, @ProjectID
END

--UPDATE @Table 
--	SET IsCharged = 1
--FROM (
--	SELECT [Date], ProjectID, StockID FROM @Table WHERE Amount > 0
--) Z
--WHERE [@Table].[Date] = Z.[Date]
--AND [@Table].ProjectID = Z.ProjectID
--AND [@Table].StockID = Z.StockID

--UPDATE @Table 
--	SET IsCharged = 0
--FROM (
--	SELECT [Date], ProjectID, StockID FROM @Table WHERE Amount > 0
--	AND IsPublicHoliday = 1
--	AND IsPublic = 0
--) Z
--WHERE [@Table].[Date] = Z.[Date]
--AND [@Table].ProjectID = Z.ProjectID
--AND [@Table].StockID = Z.StockID

--UPDATE @Table 
--	SET IsCharged = 0
--FROM (	
--	SELECT [Date], ProjectID, StockID FROM @Table WHERE Amount > 0
--	AND IsWeekendDay = 1
--	AND IsSun = 0
--	AND DATEPART(WEEKDAY, [Date]) = 1
--) Z
--WHERE [@Table].[Date] = Z.[Date]
--AND [@Table].ProjectID = Z.ProjectID
--AND [@Table].StockID = Z.StockID

--UPDATE @Table 
--	SET IsCharged = 0
--FROM (	
--	SELECT * FROM @Table WHERE Amount > 0
--	AND IsWeekendDay = 1
--	AND IsSat = 0
--	AND DATEPART(WEEKDAY, [Date]) = 7
--) Z
--WHERE [@Table].[Date] = Z.[Date]
--AND [@Table].ProjectID = Z.ProjectID
--AND [@Table].StockID = Z.StockID

SET NOCOUNT OFF

SELECT 
	P.ProjectNum as [Project Number],
	E.Company,
	ISNULL(EC.FirstName, '') + ' ' + ISNULL(EC.Surname, '') as [Contact],
	dbo.fnFormatNumber(SUM((CD.PriceEx * CD.QTY) / ISNULL(ROE, 1))) as [Total Ex.],	
	dbo.fnFormatNumber(SUM(PriceEx / isnull(ROE,1) * (CD.TAX /100))) as [Vat],
	dbo.fnFormatNumber(SUM(PriceEx * CD.Qty  * ((100 - isnull(discperc,0)) /100) / isnull(ROE,1) * (CD.Tax /100 + 1))) as [Total Incl.]
FROM Projects P 
LEFT JOIN CONTRACT_DETAIL CD ON CD.DocID = P.ProjectID 
LEFT JOIN Rental R ON R.RentalID = CD.RentalLineID AND R.DocType = 'Contract'
LEFT JOIN Entity E ON E.EntityID = P.EntityID 
LEFT JOIN EntityContact EC ON EC.EntityContactID = P.EntityContactID
WHERE R.StartDate BETWEEN @RStart AND @REnd
GROUP BY P.ProjectNum, E.Company, EC.FirstName, EC.Surname

UNION ALL

SELECT NULL, NULL, NULL, NULL, NULL, NULL--, NULL

UNION ALL

SELECT 
	'Total For Month',
	NULL,
	NULL,
	dbo.fnFormatNumber(SUM((CD.PriceEx * CD.QTY) / ISNULL(ROE, 1))) as [Total Ex.],	
	dbo.fnFormatNumber(SUM(PriceEx / isnull(ROE,1) * (CD.TAX /100))) as [Vat],
	dbo.fnFormatNumber(SUM(PriceEx * CD.Qty  * ((100 - isnull(discperc,0)) /100) / isnull(ROE,1) * (CD.Tax /100 + 1))) as [Total Incl.]
FROM Projects P 
LEFT JOIN CONTRACT_DETAIL CD ON CD.DocID = P.ProjectID 
LEFT JOIN Rental R ON R.RentalID = CD.RentalLineID AND R.DocType = 'Contract'
LEFT JOIN Entity E ON E.EntityID = P.EntityID 
LEFT JOIN EntityContact EC ON EC.EntityContactID = P.EntityContactID
WHERE R.StartDate BETWEEN @RStart AND @REnd

UNION ALL

SELECT 
	'Total WIP',
	NULL,
	NULL,
	dbo.fnFormatNumber(SUM((Amount) / ISNULL(ROE, 1))) as [Total Ex.],	
	dbo.fnFormatNumber(SUM(Amount / isnull(ROE,1) * (P.TAX /100))) as [Vat],
	dbo.fnFormatNumber(SUM(Amount / isnull(ROE,1) * (P.Tax /100 + 1))) as [Total Incl.]
FROM @Table T
LEFT JOIN Projects P ON P.ProjectID = T.ProjectID
WHERE Amount > 0
AND [Date] BETWEEN @NextStartDate AND @NextEndDate","0","","1","LRA-FUSION","0","0","fusion"
"40505","cv_TimesheetBillingManResourceTimesheets","","SELECT
	t.TimesheetDate as [Date],
	CONVERT(VARCHAR, P.ProjectID) as [Project Code],
	CONVERT(VARCHAR, P.ProjectName) as [Project Name],
	t.ProjectStatus as [Timesheet Description],
	CONVERT(VARCHAR, t.HoursDone) as [Hours]
FROM Timesheet t
LEFT JOIN Projects P on P.ProjectID = t.ProjectID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40506","cv_TimesheetBillingManResourceInformation","","SELECT Distinct
	CONVERT(VARCHAR,ISNULL(SCon.Firstname,'') + ' ' + ISNULL(SCon.Surname,'')) as [Name],
	ISNULL(SCon.StaffNum,'') as [Employee Code],
	'(' + CONVERT(VARCHAR,ISNULL((SELECT Value FROM Lookup WHERE LookupID = (ISNULL(SCon.Position,0))),'')) + ') - ' + ISNULL(SCon.JobDiscr,'') as [Role],
	CASE WHEN ISNULL(SCon.isPermanent,0) = 1 THEN 'Permanent' ELSE 'Contracter' END as [Contract Type],
	ISNULL(P.ProjectName,'') as [Project Name],
	CASE WHEN ISNULL((SELECT Top 1 IsCostToCompany FROM RateCardAmount WHERE ProjectID = t.ProjectID AND ModuleID <> 0 AND IsCostToCompany = 0),0) = 0 AND RCA.ModuleID <> 0 THEN CONVERT(VARCHAR,ISNULL((SELECT Top 1 RateAmount FROM RateCardAmount WHERE ProjectID = t.ProjectID AND ModuleID <> 0 AND IsCostToCompany = 0 AND ConsultantID = RCA.ConsultantID), '')) END AS [Rates],
	CASE WHEN ISNULL((SELECT Top 1 IsCostToCompany FROM RateCardAmount WHERE ProjectID = t.ProjectID AND ModuleID <> 0 AND IsCostToCompany = 1),0) = 1 AND RCA.ModuleID <> 0 THEN CONVERT(VARCHAR,ISNULL((SELECT Top 1 RateAmount FROM RateCardAmount WHERE ProjectID = t.ProjectID AND ModuleID <> 0 AND IsCostToCompany = 1 AND ConsultantID = RCA.ConsultantID), '')) END AS [Cost To Company]
from timesheet t    
	LEFT JOIN RateCardAmount RCA on RCA.ProjectID = t.ProjectID
	LEFT JOIN Staff SCon on SCon.StaffID = RCA.ConsultantID --(SELECT StaffID FROM Users WHERE UserID = RCA.ConsultantID)
	LEFT JOIN Projects P on P.ProjectID = t.ProjectID
	{where}
ORDER BY [Project Name]","0","","1","LRA-FUSION","0","0","fusion"
"40507","cv_TimesheetBillingManResourceAllocation","","SELECT DISTINCT
	CONVERT(VARCHAR,ISNULL(Modules.ModuleName,'')) as [Module],
	ISNULL(Modules.StartDate,'') as [Start Date],
	ISNULL(Modules.EndDate,'') as [End Date],	
	CONVERT(VARCHAR,ISNULL(SCon.Firstname,'')) + ' ' + ISNULL(SCon.Surname,'') as [Resources Assigned],
	CONVERT(VARCHAR,ISNULL(SCon.StaffNum,'')) As [Employee Code],
	CASE WHEN ISNULL((SELECT Top 1 IsCostToCompany FROM RateCardAmount WHERE ProjectID = t.ProjectID AND ModuleID <> 0 AND IsCostToCompany = 0),0) = 0 AND RCA.ModuleID <> 0 THEN CONVERT(VARCHAR,ISNULL((SELECT Top 1 RateAmount FROM RateCardAmount WHERE ProjectID = t.ProjectID AND ModuleID <> 0 AND IsCostToCompany = 0 AND ConsultantID = RCA.ConsultantID), '')) END AS [Rates],
	CASE WHEN ISNULL((SELECT Top 1 IsCostToCompany FROM RateCardAmount WHERE ProjectID = t.ProjectID AND ModuleID <> 0 AND IsCostToCompany = 1),0) = 1 AND RCA.ModuleID <> 0 THEN CONVERT(VARCHAR,ISNULL((SELECT Top 1 RateAmount FROM RateCardAmount WHERE ProjectID = t.ProjectID AND ModuleID <> 0 AND IsCostToCompany = 1 AND ConsultantID = RCA.ConsultantID), '')) END AS [Cost To Company]
FROM Timesheet t
--left join users on users.userID = t.developerid
LEFT JOIN Modules on Modules.ModuleID = t.ModuleID
LEFT JOIN RateCardAmount RCA on RCA.ProjectID = t.ProjectID
	LEFT JOIN Staff SCon on SCon.StaffID = RCA.ConsultantID --(SELECT StaffID FROM Users WHERE UserID = RCA.ConsultantID)
	LEFT JOIN Projects P on P.ProjectID = t.ProjectID
{where}
ORDER BY [Module]","0","","1","LRA-FUSION","0","0","fusion"
"40508","cv_timesheetTargetMet","","SET NOCOUNT ON
SET ANSI_WARNINGS OFF
DECLARE @Table Table
(
	WorkDay DATETIME,
	IsWorkDay INT,
	IsHoliday INT,
	IsOnLeave INT,
	HoursWorked FLOAT,
	HoursTarget FLOAT,
	WeekNumber INT
)

DECLARE @HourTarget FLOAT
DECLARE @StartDate DATETIME
DECLARE @EndDate DATETIME
DECLARE @TempDate DATETIME
DECLARE @Week INT
DECLARE @UserID INT
DECLARE @StaffID INT

SET @StartDate = DATEADD(DAY, -20, GETDATE())
SET @EndDate = DATEADD(DAY, 20, GETDATE())
SET @TempDate = @StartDate 
SET @Week = DATEPART(WEEK, GETDATE())
SET @UserID = {userid}
SET @StaffID = (SELECT TOP 1 StaffID FROM Users WHERE UserID = @UserID )

SET @HourTarget = (
	SELECT TOP 1
		LPD.HoursPerDay *
		LEN(REPLACE(LPD.WorkDays, ',', ''))
	FROM Staff S
	LEFT JOIN Users U ON U.StaffID = S.StaffID 
	LEFT JOIN LeaveProfileDetails LPD ON LPD.LeavedefaultID = S.LeaveProfileID
	LEFT JOIN DevAppointment Dev On Dev.ForUserId = U.UserID 
	WHERE S.StaffID = @StaffID
	)

WHILE @TempDate < @EndDate 
BEGIN 
	INSERT INTO @Table 
	SELECT CONVERT(VARCHAR, @TempDate, 111), Case when datepart(dw,@TempDate) in ({workingdaysofweek}) then 1 else 0 END, 0, 0, 0, 0, DATEPART(WEEK, @TempDate)
	
	SET @TempDate = DATEADD(DAY, 1, @TempDate)
END

UPDATE @Table 
	SET HoursTarget = (SELECT P.HoursPerDay FROM Staff S LEFT JOIN LeaveProfileDetails P ON P.LeavedefaultID = S.LeaveProfileID WHERE StaffID = @StaffID)

update @Table
	Set isWorkDay = 0, isHoliday = 1 
FROM (
	SELECT 
		PH.[Date]
	FROM PublicHoliday PH
	LEFT JOIN Lookup L ON L.LookupID = PH.CountryID
	LEFT JOIN Staff S ON S.CountryID = L.Value	
	WHERE PH.[Date] Between @StartDate AND @EndDate
	AND S.StaffID = @StaffID
) Z 
WHERE CONVERT(VARCHAR, WorkDay,111) = CONVERT(VARCHAR, Z.[Date], 111)

UPDATE @Table
	SET IsOnLeave = 1,
		HoursTarget = CASE WHEN Z.LeavePeriod IN ('Full', 'Full Day') THEN HoursTarget ELSE HoursTarget / 2 END
FROM (
	SELECT 
		WorkDay as [Date],
		LP.LeavePeriod
	FROM @Table T
	LEFT JOIN Leave L ON T.WorkDay BETWEEN L.StartDate AND L.EndDate
	LEFT JOIN LeavePeriod LP ON LP.LeavePeriodID = L.PeriodTypeID 
	WHERE L.UserID = @StaffID
	AND L.LeaveID IS NOT NULL 
	AND ISNULL(L.isGranted,0) = 1
) Z
WHERE WorkDay = Z.[Date]

UPDATE @Table 
	SET HoursWorked = Z.[Hours]
FROM (
	SELECT
		CONVERT(VARCHAR, [Date],111) as [Date],	
		SUM(T.HoursDone) as [Hours]
	FROM DevAppointment DEV
	LEFT JOIN Timesheet T on DEV.DevApptID = T.DevApptID
	WHERE ForUserID = @UserID 
	AND CONVERT(VARCHAR, DEV.[Date], 111) IN (SELECT CONVERT(VARCHAR, WorkDay, 111) FROM @Table)
	GROUP BY CONVERT(VARCHAR, [Date],111)
) Z
WHERE WorkDay = Z.[DATE]

SET NOCOUNT OFF

SELECT 
	SUM(HoursWorked) as [LastWeekHours], 
	SUM(HoursTarget) as [Target], 
	CASE WHEN (SUM(HoursWorked) >= SUM(HoursTarget)) THEN 'Yes' ELSE 'No' END as [TargetMet],
	ISNULL((SELECT SUM(HoursDone) FROm DevAppointment DEV LEFT JOIN Timesheet T on DEV.DevApptID = T.DevApptID WHERE ForUserID = @UserID
	AND DATEPART(WEEK, [Date]) = (@Week -1)),0) as TotalCaptured
FROM @Table  
WHERE WeekNumber = (@Week -1)
AND IsWorkDay = 1

SET ANSI_WARNINGS ON","0","","1","LRA-FUSION","0","0","fusion"
"40509","cv_UseReport","","INSERT INTO UseReport
(
Searches,
lastUpdateDate,
loginCount,
activeUsersCount,
inactiveUsersCount,
allUsersCount,
activeStaffCount,
inactiveStaffCount,
allStaffCount,
noLicenses,
notesCount,
advCalllogCount,
calllogCount,
subTaskCount,
appointmentCount,
actionsCount,
taskReminderCount,
projectTaskCount,
ticketCount,
versionCount,
clientCount,
supplierCount,
debInvoiceCount,
debSalesOrderCount,
debCreditNoteCount,
debPaymentReceiptCount,
debDispatchNoteCount,
debAllCount,
crePurchaseOrderCount,
creSupplierInvoiceCount,
creSupplierCreditNoteCount,
creSupplierPaymentCount,
creGoodsReceivedNoteCount,
creAllCount,
CEAcceptedCounts,
CECompletedCounts,
CEOpenCounts,
CERejectedCounts,
CEColdCounts,
CEExpiredCounts,
CEReconciledCounts,
CEAllCounts
)
SELECT DISTINCT
	0,
	CURRENT_TIMESTAMP,
	(SELECT COUNT(*) FROM loggin_report),
	(SELECT COUNT(*) FROM Users U LEFT JOIN (SELECT StaffID, isActive FROM Staff) isAct on isAct.StaffID = U.StaffID WHERE isAct.isActive = 1),
	(SELECT COUNT(*) FROM Users U LEFT JOIN (SELECT StaffID, isActive FROM Staff) isAct on isAct.StaffID = U.StaffID WHERE isAct.isActive = 0),
	(SELECT COUNT(*) FROM Users),
	(SELECT COUNT(*) FROM Staff WHERE isActive = 1),
	(SELECT(SELECT COUNT(*) FROM Staff WHERE isActive <> 1) + (SELECT COUNT(*)FROM Staff WHERE isActive IS NULL)),
	(SELECT COUNT(*) FROM Staff),
	(SELECT custValue FROM CRMSetup WHERE Variable = 'NoUsers'),
	(SELECT COUNT(*) FROM notes WHERE divID <> 0),
	(SELECT COUNT(*) FROM Calllog WHERE AdvCall = 1),
	(SELECT COUNT(*) FROM Calllog WHERE AdvCall = 0),
	(SELECT COUNT(*) FROM Actions),
	(SELECT COUNT(*) FROM Appointment),
	(SELECT COUNT(*) FROM Activity),
	(SELECT COUNT(*) FROM TaskReminder),
	(SELECT COUNT(*) FROM ClientActivityListItem),
	(SELECT COUNT(*) FROM Tickets),
	(SELECT COUNT(*) from versions),
	(SELECT(SELECT COUNT(*) from Entity WHERE isSupplier <> 1) + (SELECT count(*) FROM Entity WHERE isSupplier IS NULL)),
	(SELECT COUNT(*) from Entity WHERE isSupplier = 1),
	(SELECT COUNT(*) from DEBTOR_MASTER WHERE DocType like 'Invoice'),
	(SELECT COUNT(*) from DEBTOR_MASTER WHERE DocType like 'Sales Order'),
	(SELECT COUNT(*) from DEBTOR_MASTER WHERE DocType like 'Credit Note'),
	(SELECT COUNT(*) from DEBTOR_MASTER WHERE DocType like 'Payment Receipt'),
	(SELECT COUNT(*) from DEBTOR_MASTER WHERE DocType like 'Dispatch Note'),
	(SELECT COUNT(*) from DEBTOR_MASTER),
	(SELECT COUNT(*) from CREDITOR_MASTER WHERE DocType like 'Purchase Order'),
	(SELECT COUNT(*) from CREDITOR_MASTER WHERE DocType like 'Supplier Invoice'),
	(SELECT COUNT(*) from CREDITOR_MASTER WHERE DocType like 'Supplier Credit Note'),
	(SELECT COUNT(*) from CREDITOR_MASTER WHERE DocType like 'Supplier Payment'),
	(SELECT COUNT(*) from CREDITOR_MASTER WHERE DocType like 'Goods Received Note'),
	(SELECT COUNT(*) from CREDITOR_MASTER),
	(SELECT COUNT(*) FROM COST_ESTIMATE_MASTER WHERE DocStatus like 'Accepted'),
	(SELECT COUNT(*) FROM COST_ESTIMATE_MASTER WHERE DocStatus like 'Completed'),
	(SELECT COUNT(*) FROM COST_ESTIMATE_MASTER WHERE DocStatus like 'Open'),
	(SELECT COUNT(*) FROM COST_ESTIMATE_MASTER WHERE DocStatus like 'Rejected'),
	(SELECT COUNT(*) FROM COST_ESTIMATE_MASTER WHERE DocStatus like 'Cold'),
	(SELECT COUNT(*) FROM COST_ESTIMATE_MASTER WHERE DocStatus like 'Expired'),
	(SELECT COUNT(*) FROM COST_ESTIMATE_MASTER WHERE DocStatus like 'Reconciled'),
	(SELECT COUNT(*) FROM COST_ESTIMATE_MASTER WHERE DocStatus <> '')","0","","1","LRA-FUSION","0","0","fusion"
"40510","cv_testKitty3","","{select}
SELECT distinct  top 100 percent 
 convert(varchar,taskreminder.taskreminderid) as [TaskReminderID],
'  ' AS [  ],
isnull(u1.firstname,'') + ' ' + isnull(u1.surname,'') as [Created By],/*div.value as Division, */ entity.Company,
 case when isnull(dbo.EntityContactName(entitycontact.Title,entitycontact.Initials, entitycontact.FirstName, entitycontact.Surname), '') = '' then 'No Contact Selected' else
 dbo.EntityContactName(entitycontact.Title,entitycontact.Initials, entitycontact.FirstName, entitycontact.Surname) end as [Assigned contact],
isnull(u2.firstname,'') + ' ' + isnull(u2.surname,'') as [Task Organiser],
isnull(u3.firstname,'') + ' ' + isnull(u3.surname,'') as [Task Owner], 
 taskname as [Task Name],Convert(Varchar,taskdate,111) as [Task Date],Convert(Varchar,taskdate,108) as [Task Time], 
    case (select count(*) from actions a where a.taskreminderid = taskreminder.taskreminderid) 
    when 0 then convert(varchar, percentageid) + ' %' 
    else convert(varchar, (Select AVG(PercentageID) from actions a where a.taskreminderid = taskreminder.taskreminderid)) + ' %' end as [Percentage Complete],
    AdditionalInfo as [Additional Info], 
case WHEN isnull(dtc.[TotalUsers],0) > 1 then convert(varchar,dtc.[TotalUsers]) + ' Users' ELSE  isnull(u4.firstname,'') + ' ' + isnull(u4.surname,'') END    AS [For User],
P.Value AS [Priority]
,'' as [Result]
FROM taskreminder
LEFT JOIN entitycontact ON taskreminder.entitycontactid = entitycontact.entitycontactid
LEFT JOIN lookup div on div.lookupid = taskreminder.divid
LEFT join (SELECT DeveloperID, TaskReminderID FROM developertasks) dt on dt.taskreminderid = taskreminder.taskreminderid 
LEFT join (SELECT count(DeveloperID)  as [TotalUsers], TaskReminderID FROM developertasks group by TaskReminderID) dtc on dtc.taskreminderid = taskreminder.taskreminderid 
LEFT join users U1 on U1.userid = taskreminder.userid		--Created by
LEFT JOIN users U2 ON U2.userid = taskreminder.organizerid	--Organizer
LEFT JOIN users U3 ON U3.userid = taskreminder.ownerid		--Owner
LEFT JOIN users U4 ON U4.userid = dt.DeveloperID  and isnull(dtc.[TotalUsers],0) =1	--For User
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE CLASS LIKE 'Priority') P ON P.LookupID = TaskReminder.PriorityID
Left JOIN entity On entity.EntityID = entitycontact.entityid  
WHERE   (taskreminder.divid = 14265)  OR  (dt.developerid = '1')   OR  (taskreminder.Complete LIKE 'No') 



union all

{select} Distinct 
convert(varchar,actions.taskreminderid) + 'sub' + convert(varchar,actionid) as [taskreminderid],
'  ' AS [  ],
isnull(u1.firstname,'') + ' ' + isnull(u1.surname,'') as [Created By],
Null as [Company],
null as [Assigned Contact], 
isnull(u2.firstname,'') + ' ' + isnull(u2.surname,'') as [Task Organiser], 
isnull(u3.firstname,'') + ' ' + isnull(u3.surname,'') as [Task Owner], 
taskreminder.taskname + ' - Sub Task' as [Task Name],
Convert(Varchar,nextactiondate,111) as [Task Date],Convert(Varchar,nextactiondate,108) as [Task Time], convert(varchar,actions.percentageid) + ' %' as [Percentage Complete],
comments as [Additional Info], DT.ForUser AS [For User], P.Value AS [Priority]
,Result as [Result]
FROM  Actions
LEFT JOIN taskreminder on actions.taskreminderid = taskreminder.taskreminderid
LEFT JOIN entitycontact ON taskreminder.entitycontactid = entitycontact.entitycontactid
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE CLASS LIKE 'Priority') P ON P.LookupID = Actions.PriorityID
LEFT JOIN (SELECT UserID as [DeveloperID], Firstname + ' ' + Surname as [ForUser] FROM Users) DT ON actions.AssignedTo = DT.DeveloperID
LEFT join users U1 on U1.userid = Actions.userid		--Created by
LEFT JOIN users U2 ON U2.userid = taskreminder.organizerid	--Organizer
LEFT JOIN users U3 ON U3.userid = taskreminder.ownerid		--Owner
WHERE   (taskreminder.divid = 14265)  OR  (dt.developerid = '1')   OR  (taskreminder.Complete LIKE 'No') 


ORDER BY TaskReminderID  , [Task Date]
","0","","1","LRA-FUSION","0","0","fusion"
"40511","cv_TestKitty2","","SELECT 
RA.RecurringActionID, 
E.Company, 
EC.FirstName + ' ' + EC.Surname [Contact], 
RA.ActionType, 
CONVERT(VARCHAR,RA.StartDate,111) as [Start Date],
CONVERT(VARCHAR,RA.EndDate,111) as [End Date],
U.FirstName + ' ' + U.Surname AS [Action For], 
L.Value,
RA.Subject,
RA.Descr, 
U.FirstName + ' ' + U.Surname AS [Added By]
FROM RecurringActions RA
LEFT JOIN(SELECT EntityID, Company FROM Entity) E ON E.EntityID = RA.EntityID
LEFT JOIN(SELECT EntityContactID, EntityID, FirstName,Surname FROM EntityContact) EC ON EC.EntityContactID = RA.EntityContactID
LEFT JOIN(SELECT UserID, Firstname, Surname FROM Users) U ON UserID = RA.ActionForID
LEFT JOIN(SELECT LookupID, Value FROM Lookup)L ON LookupID = RA.DivisionID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40512","cv_Acc_Print_Stock_Disbursement_Manifest","","SELECT 
LF.Value as [From Container],
isnull(SLT.Value,'') + isnull(' - ' + LLST.Value,'') as [Type-Sub Type], 
EM.StockCode as [Code], 
EM.StockDescription as [Description], isnull(EM.Memo,'') as [Comments], Qty, L.Value as [UOM], EM.ClientPO as [Ref.],
dbo.fnFOrmatNumber(isnull(EM.CostPriceEx,0)) as [Unit Cost],
dbo.fnFOrmatNumber(isnull(EM.CostPriceEx,0) * isnull(Qty,0)) as [Total Cost]
FROM Expenditure_Master EM
LEFT JOIN (SELECT StockID, SoldBy, StockType, SubTypeID FROM AccStock) STK
ON EM.StockID = STK.StockID
LEFT JOIN Lookup L ON STK.SoldBy = L.LookupID
LEFT JOIN (SELECT * FROM LinkLookup) LF ON EM.FromContainerID = LF.LinkLookupID
LEFT JOIN Lookup LDF ON LF.LinkedTo = LDF.LookupID 
LEFT JOIN Lookup SLT ON STK.StockType = SLT.LookupID
LEFT JOIN LinkLookup LLST on STK.SubTypeID = LLST.LinkLookupID
WHERE 
EM.DocType = 'Stock Disbursement'
AND DocID in ({docids})
ORDER BY LDF.Value, LF.Value,  EM.StockCode
","0","","1","LRA-FUSION","0","0","fusion"
"40513","cv_entitysearch_sup1","","{select}	e.EntityID,
        '' as [ ], 
	Company, 
	LegalName,
	SC.SalesConsultant, 
	DateAdded, 
	SwitchBoard, 
	Fax, 
	URL, 
	e.Email, 
	VATNum, 
	VATExemptNum, 
	AcceptsBackOrders, 
	MenthodOfContact, 
	WebSite, 
	NextCallDate, 
	CompRegNum,
	isnull(u.Firstname,'')+' '+isnull(u.Surname,'') As [Creator],
	[Payment Terms],
	e.modifiedby,
	abc.abcCategory as [AccountStatus],
	b.Buscat as [BusinessCategory],
	t.type as [Type],
	AccT.AccType,
	e.AccountNum as [Account Number],
	ClientRating,
	ManualRating,
	[Send Accounts To Contact],
	[Send Accounts To Email],
    (select top 1 Country from entityaddress where entityaddress.entityid = e.EntityID  ) as [Country],
    (select top 1 City from entityaddress where entityaddress.entityid = e.EntityID  ) as City,
    (select top 1 Region from entityaddress where entityaddress.entityid = e.EntityID  ) as Region
from entity e WITH(NOLOCK)
LEFT JOIN (
	SELECT 
		LookupID
		, Value as [Payment Terms] 
	FROM Lookup WITH(NOLOCK)
) lp ON lp.lookupid = E.PaymentTerms
left join (
	select 
		lookupid as typeid
		, value as type 
	from lookup  WITH(NOLOCK)
	where class like 'type'
) t on e.entitytypeid = t.typeid
left join (
	select 
		lookupid as categoryid
		, value as category 
	from lookup  WITH(NOLOCK)
	where class like 'category'
) c on e.entitycategoryid = c.categoryid
left join users u WITH(NOLOCK) on e.entitycreatorid = u.userid
left join (
	select {top} 
		* 
	from  entityaddress WITH(NOLOCK)
) as a on e.entityid = a.entityid
left join vwnumcontacts nc WITH(NOLOCK) on e.entityid = nc.entityid
left join entitygroup g WITH(NOLOCK) on e.entityid = g.entityid
left join (
	select 
		lookupid as buscatid
		, value as buscat 
	from lookup  WITH(NOLOCK)
	where class like 'buscat'
) b on e.buscatid = b.buscatid
left join (
	select 
		lookupid as abccategoryid
		, value as abccategory 
	from lookup WITH(NOLOCK) 
	where class like 'abc'
) abc on e.abccatid = abc.abccategoryid
left join entitydivision ed WITH(NOLOCK) on ed.entityid = e.entityid
left join (
	select 
		lookupid as AccTypeid
		, value as AccType 
	from lookup WITH(NOLOCK) 
	where class like 'accounttype'
) AccT on e.accounttypeid = AccT.AccTypeid

left join( 
	select 
		staffid as SalesConsid
		, ISNULL(FirstName,'') + ' ' + IsNull(Surname,'') As SalesConsultant 
	from staff WITH(NOLOCK)
) SC
on e.salesconsid = SC.SalesConsID
LEFT JOIN (
	SELECT 
		entityID
		, Company as [Holding Company] 
	FROM Entity WITH(NOLOCK)
) HC on e.AlternateCompanyID = HC.Entityid
LEFT JOIN (
	SELECT 
		EntityContactID
		, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Send Accounts To Contact]
		, Email as [Send Accounts To Email] 
	FROM EntityContact WITH(NOLOCK)
) ECAcc ON E.InvoiceTo = ECAcc.EntityContactID
{matrixjoin}
{where}
group by e.EntityID, Company, LegalName, DateAdded, SwitchBoard, Fax, URL, e.Email, VATNum, VATExemptNum, AcceptsBackOrders, MenthodOfContact, WebSite, NextCallDate, CompRegNum,u.Surname,u.Firstname,Category,e.modifiedby,abc.abcCategory,b.Buscat,t.type,AccT.AccType,e.accountnum,
SC.SalesConsultant,
ClientRating,ManualRating,[Payment Terms],[Send Accounts To Contact],[Send Accounts To Email],country,city,region
","0","","1","LRA-FUSION","0","0","fusion"
"40514","cv_Leave_Report","","SET NOCOUNT ON
DECLARE @CycStart DATETIME
DECLARE @CycEnd DATETIME
SET @CycStart = '{cycstart}'
SET @CycEnd = '{cycend}'
DECLARE @Table TABLE
(
	ID INT IDENTITY(1,1),
	Firstname VARCHAR(255),
	Surname VARCHAR(255),
	EmployeeNo VARCHAR(255),
	LeaveType VARCHAR(100),
	NoDaysTaken FLOAT,
	StartDate DATETIME,
	EndDate DATETIME,
	LeaveName VARCHAR(255),
	MaxAccumMonths INT,
	AnnLeavePerUOM VARCHAR(255),
	[OB/CF] FLOAT,
	TotalLeave FLOAT,
	CalcLeave FLOAT,
	CalcLeave1 FLOAT,
	FamilyLeave INT,
	SickLeave INT,
	StudyLeave INT,
	CurrentAnnCycleStart DATETIME,
	LeaveOBDate DATETIME,
	Overtime INT
)

INSERT INTO @Table (Firstname, Surname, EmployeeNo, LeaveType, NoDaysTaken, StartDate, EndDate, LeaveName, MaxAccumMonths, AnnLeavePerUOM, [OB/CF], TotalLeave,CalcLeave, CalcLeave1, FamilyLeave, SickLeave, StudyLeave, CurrentAnnCycleStart, LeaveOBDate, Overtime)
SELECT 
    S.Firstname,
    S.Surname,
    S.StaffNum,
    LT.LeaveType,
    CASE WHEN (LT.LeaveTypeID = L.LeaveTypeID) THEN 
		CASE WHEN LP.LeavePeriod = 'Half Day' THEN CONVERT(FLOAT, 0.5)
		ELSE L.NoDaysTaken END 
	ELSE 0
    END as NoDaysTaken,
    L.StartDate,
    L.EndDate,
    LPD.LeaveName,
    LPD.MaxAccumMonths,     
    LPD.AnnLeavePerUOM,
    CASE WHEN YEAR(S.LeaveOBDate) = YEAR(L.StartDate) THEN 
          CASE LT.LeaveType
                WHEN 'Annual' THEN
                      S.LeaveOB 
                WHEN 'Annual Leave' THEN
                      S.LeaveOB
                WHEN 'Sick' THEN
                      S.SickLeaveOB
                WHEN 'Sick Leave' THEN
                      S.SickLeaveOB
                ELSE
                      0
          END
    ELSE 
          0 
    END as [OB/CF],
    CASE LT.LeaveType 
          WHEN 'Annual' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(L.StartDate) THEN S.LeaveOB ELSE 0 END +
                CASE LPD.AnnLeavePerUOM
                      WHEN 'hour(s)' THEN 
                            (CalcLeave / CalcLeavePer) /HoursPerDay
                      WHEN 'day(s)' THEN
                            (CalcLeave / CalcLeavePer)
                END 
		  WHEN 'Annual Leave' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(L.StartDate) THEN S.LeaveOB ELSE 0 END +
                CASE LPD.AnnLeavePerUOM
                      WHEN 'hour(s)' THEN 
                            (CalcLeave / CalcLeavePer) /HoursPerDay
                      WHEN 'day(s)' THEN
                            (CalcLeave / CalcLeavePer)
                END 
          WHEN 'Sick' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(L.StartDate) THEN S.SickLeaveOB ELSE 0 END +
                LPD.SickLeave 
          WHEN 'Sick Leave' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(L.StartDate) THEN S.SickLeaveOB ELSE 0 END +
                LPD.SickLeave          
          WHEN 'Study' THEN
                LPD.StudyLeave
          WHEN 'Study Leave' THEN
                LPD.StudyLeave
          WHEN 'Study / HR' THEN
                LPD.StudyLeave
          WHEN 'Family Responsibility' THEN
                LPD.FamilyLeave 
          WHEN 'Family' THEN
                LPD.FamilyLeave
		  WHEN 'Overtime' THEN
                LPD.OvertimeLeave		  
          ELSE
                0           
    END as [Total Leave],
    CASE LT.LeaveType 
	 WHEN 'Annual' THEN LPD.CalcLeave
	 WHEN 'Sick' THEN LPD.SickLeave
	else 0
	END as CalcLeave,
	LPD.CalcLeave as CalcLeave1,
    LPD.FamilyLeave,
    LPD.SickLeave,
    LPD.StudyLeave,            
    CONVERT(DATETIME, CONVERT(VARCHAR, YEAR(GETDATE())) + '/' + CONVERT(VARCHAR, MONTH(S.CycleStart)) + '/' + CONVERT(VARCHAR, DAY(S.CycleStart))) as [CurrentAnnCycleStart],
    S.LeaveOBDate,
	LPD.OvertimeLeave    
FROM Staff S
LEFT JOIN Leave L ON S.StaffID = ISNULL(L.UserID,S.StaffID)
CROSS JOIN LeaveType LT 
LEFT JOIN LeavePeriod LP ON LP.LeavePeriodID = L.PeriodTypeID
LEFT JOIN LeaveProfileDetails LPD ON LPD.LeavedefaultID = L.LeaveProfileID
WHERE ((L.startdate BETWEEN @CycStart AND @CycEnd) 
    OR (L.Enddate BETWEEN @CycStart AND @CycEnd) 
    OR (L.startdate <= @CycStart AND L.Enddate >= @CycEnd))
AND ISNULL(L.isGranted,0) = 1
{and}

UNION 

SELECT 
    S.Firstname,
    S.Surname,
    S.StaffNum,
    LT.LeaveType,
    0 as NoDaysTaken,
    NULL,
    NULL,
    LPD.LeaveName,
    LPD.MaxAccumMonths,     
    LPD.AnnLeavePerUOM,
    CASE WHEN YEAR(S.LeaveOBDate) = YEAR(GETDATE()) THEN 
          CASE LT.LeaveType
                WHEN 'Annual' THEN
                      S.LeaveOB 
                WHEN 'Annual Leave' THEN
                      S.LeaveOB
                WHEN 'Sick' THEN
                      S.SickLeaveOB
                WHEN 'Sick Leave' THEN
                      S.SickLeaveOB
                ELSE
                      0
          END
    ELSE 
          0 
    END as [OB/CF],
    CASE LT.LeaveType 
          WHEN 'Annual' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(GETDATE()) THEN S.LeaveOB ELSE 0 END +
                CASE LPD.AnnLeavePerUOM
                      WHEN 'hour(s)' THEN 
                            (CalcLeave / CalcLeavePer) /HoursPerDay
                      WHEN 'day(s)' THEN
                            (CalcLeave / CalcLeavePer)
                END 
		  WHEN 'Annual Leave' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(GETDATE()) THEN S.LeaveOB ELSE 0 END +
                CASE LPD.AnnLeavePerUOM
                      WHEN 'hour(s)' THEN 
                            (CalcLeave / CalcLeavePer) /HoursPerDay
                      WHEN 'day(s)' THEN
                            (CalcLeave / CalcLeavePer)
                END 
          WHEN 'Sick' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(GETDATE()) THEN S.SickLeaveOB ELSE 0 END +
                LPD.SickLeave 
          WHEN 'Sick Leave' THEN
                CASE WHEN YEAR(S.LeaveOBDate) = YEAR(GETDATE()) THEN S.SickLeaveOB ELSE 0 END +
                LPD.SickLeave          
          WHEN 'Study' THEN
                LPD.StudyLeave
          WHEN 'Study Leave' THEN
                LPD.StudyLeave
          WHEN 'Study / HR' THEN
                LPD.StudyLeave
          WHEN 'Family Responsibility' THEN
                LPD.FamilyLeave 
          WHEN 'Family' THEN
                LPD.FamilyLeave
		  WHEN 'Overtime' THEN
                LPD.OvertimeLeave 
          ELSE
                0           
    END as [Total Leave],
    CASE LT.LeaveType 
	 WHEN 'Annual' THEN LPD.CalcLeave
	 WHEN 'Sick' THEN LPD.SickLeave
	else 0
	END as CalcLeave,
	LPD.CalcLeave as CalcLeave1,
    LPD.FamilyLeave,
    LPD.SickLeave,
    LPD.StudyLeave,            
    CONVERT(DATETIME, CONVERT(VARCHAR, YEAR(GETDATE())) + '/' + CONVERT(VARCHAR, MONTH(S.CycleStart)) + '/' + CONVERT(VARCHAR, DAY(S.CycleStart))) as [CurrentAnnCycleStart],
    S.LeaveOBDate,
	LPD.OvertimeLeave    
FROM Staff S
CROSS JOIN LeaveType LT 
LEFT JOIN LeaveProfileDetails LPD ON LPD.LeavedefaultID = S.LeaveProfileID
WHERE ISNULL(S.Firstname,'') <> ''
{and}


UPDATE @Table 
	SET CurrentAnnCycleStart = Z.FixedCycleStart
FROM (
SELECT 
	ID as IID,  
	CASE WHEN CurrentAnnCycleStart > GETDATE() THEN
		DATEADD(YEAR, -1, CurrentAnnCycleStart)
	ELSE
		CurrentAnnCycleStart
	END as FixedCycleStart
FROM @Table
) Z 
WHERE ID = Z.IID 

UPDATE @Table 
	SET [OB/CF] = Z.[OBFix]
FROM (
	SELECT 
		ID as IID,
		CASE WHEN StartDate IS NULL THEN [OB/CF] ELSE
			CASE WHEN (LeaveOBDate >= CurrentAnnCycleStart AND LeaveOBDate <= StartDate) THEN [OB/CF] ELSE 0 END
		END as [OBFix]
	FROM @Table 
) Z 
WHERE ID = Z.IID 

SELECT
      NEWID(),
      Z.Firstname as [First name],
      Z.Surname,
      Z.EmployeeNo as [Employee Code],
      Z.LeaveName as [Leave Profile],
      Z.LeaveType as [Leave Type],
      Z.CalcLeave1 as [Profile Leave Total],
      Z.SickLeave as [Total Sick Leave],
      Z.FamilyLeave as [Family Leave],
      Z.StudyLeave as [Study Leave],
	  Z.Overtime as [Overtime Leave],
      SUM(Z.NoDaysTaken) as [Leave Days],
      Z.[OB/CF],
      Z.[TotalLeave],
      (Z.[Calculated] + Z.[OB/CF]) - SUM(Z.NoDaysTaken) as [Calculated],
      Z.[TotalLeave] - SUM(Z.NoDaysTaken) as [Total Leave Balance]
FROM (
	SELECT 
		Firstname,
		Surname,
		EmployeeNo,
		LeaveType,
		NoDaysTaken,
		StartDate,
		EndDate,
		LeaveName,
		MaxAccumMonths,
		AnnLeavePerUOM,
		[OB/CF],
		TotalLeave,
		CalcLeave,
		CalcLeave1,
		FamilyLeave,
		SickLeave,
		StudyLeave,
		Overtime,
		CASE WHEN (LeaveOBDate >= CurrentAnnCycleStart) THEN		
			CAST(ROUND(CONVERT(FLOAT, (DATEDIFF(MONTH, LeaveOBDate, GETDATE()) / CONVERT(FLOAT, 12))) * CalcLeave ,2) AS DECIMAL(4,2))
		ELSE
			CAST(ROUND(CONVERT(FLOAT, (DATEDIFF(MONTH, CurrentAnnCycleStart, GETDATE()) / CONVERT(FLOAT, 12))) * CalcLeave ,2) AS DECIMAL(4,2))
		END as [Calculated]
	FROM @Table 
) Z
GROUP BY Z.Firstname,Z.Surname, Z.EmployeeNo ,Z.LeaveType,Z.[TotalLeave],Z.LeaveName,Z.CalcLeave,Z.SickLeave,Z.FamilyLeave,Z.StudyLeave, Z.[OB/CF],Z.[Calculated], Z.Overtime, CalcLeave1
SET NOCOUNT OFF","0","","1","LRA-FUSION","0","0","fusion"
"40515","cv_Activity_To_Word","","SELECT 
' ' AS [ ],
CAST(ActivityID AS VARCHAR) AS [Reference],
US.FirstName + ' ' + US.Surname AS[Added By],
ISNULL(E.Company, 'No Company Selected') AS [Company],
ISNULL(EC.FirstName + ' ' + EC.Surname,'No Client Selected') AS [Client],
L.Value AS [Activity Type],
U.FirstName + ' ' + U.Surname AS [Assigned To],
CONVERT(VARCHAR, A.DateAdded, 111) AS [Activity Date]
FROM Activity A
LEFT JOIN(SELECT UserID, FirstName, Surname FROM Users)U ON U.UserID = A.UserID
LEFT JOIN(SELECT UserID, FirstName, Surname FROM Users)US ON US.UserID = A.AddedByID
LEFT JOIN(SELECT LookupID, Value FROM Lookup)L ON L.LookupID = A.ActivityTypeID
LEFT JOIN(SELECT EntityContactID, FirstName, Surname FROM EntityContact)EC ON EC.EntityContactID = A.EntityContactID
LEFT JOIN(SELECT EntityID, Company FROM Entity)E ON E.EntityID = A.EntityID","0","","1","LRA-FUSION","0","0","fusion"
"40516","cv_TaskManPrint","","{select}
(

SELECT
convert(varchar,taskreminder.taskreminderid) as [TaskReminderID],
'  ' AS [  ],
isnull(u1.firstname,'') + ' ' + isnull(u1.surname,'') as [Created By],/*div.value as Division, */ entity.Company,
 case when isnull(dbo.EntityContactName(entitycontact.Title,entitycontact.Initials, entitycontact.FirstName, entitycontact.Surname), '') = '' then 'No Contact Selected' else
 dbo.EntityContactName(entitycontact.Title,entitycontact.Initials, entitycontact.FirstName, entitycontact.Surname) end as [Assigned contact],
isnull(u2.firstname,'') + ' ' + isnull(u2.surname,'') as [Task Organiser],
isnull(u3.firstname,'') + ' ' + isnull(u3.surname,'') as [Task Owner], 
 taskname as [Task Name],Convert(Varchar,taskdate,111) as [Task Date],Convert(Varchar,taskdate,108) as [Task Time], 
    case (select count(*) from actions a where a.taskreminderid = taskreminder.taskreminderid) 
    when 0 then convert(varchar, percentageid) + ' %' 
    else convert(varchar, (Select AVG(PercentageID) from actions a where a.taskreminderid = taskreminder.taskreminderid)) + ' %' end as [Percentage Complete],
    AdditionalInfo as [Additional Info], 
case WHEN isnull(dtc.[TotalUsers],0) > 1 then convert(varchar,dtc.[TotalUsers]) + ' Users' ELSE  isnull(u4.firstname,'') + ' ' + isnull(u4.surname,'') END    AS [For User],
P.Value AS [Priority]
,'' as [Result]
FROM taskreminder
LEFT JOIN entitycontact ON taskreminder.entitycontactid = entitycontact.entitycontactid
LEFT JOIN lookup div on div.lookupid = taskreminder.divid
LEFT join (SELECT DeveloperID, TaskReminderID FROM developertasks) dt on dt.taskreminderid = taskreminder.taskreminderid 
LEFT join (SELECT count(DeveloperID)  as [TotalUsers], TaskReminderID FROM developertasks group by TaskReminderID) dtc on dtc.taskreminderid = taskreminder.taskreminderid 
LEFT join users U1 on U1.userid = taskreminder.userid       --Created by
LEFT JOIN users U2 ON U2.userid = taskreminder.organizerid  --Organizer
LEFT JOIN users U3 ON U3.userid = taskreminder.ownerid      --Owner
LEFT JOIN users U4 ON U4.userid = dt.DeveloperID  and isnull(dtc.[TotalUsers],0) =1 --For User
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE CLASS LIKE 'Priority') P ON P.LookupID = TaskReminder.PriorityID
Left JOIN entity On entity.EntityID = entitycontact.entityid 
{where}



union all


SELECT Distinct 
convert(varchar,actions.taskreminderid) +  ' SubTask ' + convert(varchar,actionid) as [taskreminderid],
'  ' AS [  ],
isnull(u1.firstname,'') + ' ' + isnull(u1.surname,'') as [Created By],
Null as [Company],
null as [Assigned Contact], 
isnull(u2.firstname,'') + ' ' + isnull(u2.surname,'') as [Task Organiser], 
isnull(u3.firstname,'') + ' ' + isnull(u3.surname,'') as [Task Owner], 
taskreminder.taskname + ' - Sub Task' as [Task Name],
Convert(Varchar,nextactiondate,111) as [Task Date],Convert(Varchar,nextactiondate,108) as [Task Time], convert(varchar,actions.percentageid) + ' %' as [Percentage Complete],
comments as [Additional Info], DT.ForUser AS [For User], P.Value AS [Priority]
,Result as [Result]
FROM  Actions
LEFT JOIN taskreminder on actions.taskreminderid = taskreminder.taskreminderid
LEFT JOIN entitycontact ON taskreminder.entitycontactid = entitycontact.entitycontactid
LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE CLASS LIKE 'Priority') P ON P.LookupID = Actions.PriorityID
LEFT JOIN (SELECT UserID as [DeveloperID], Firstname + ' ' + Surname as [ForUser] FROM Users) DT ON actions.AssignedTo = DT.DeveloperID
LEFT join users U1 on U1.userid = Actions.userid        --Created by
LEFT JOIN users U2 ON U2.userid = taskreminder.organizerid  --Organizer
LEFT JOIN users U3 ON U3.userid = taskreminder.ownerid      --Owner
{where} )A


ORDER BY TaskReminderID","0","","1","LRA-FUSION","0","0","fusion"
"40517","qf_SupplierPreffered","","SELECT TOP 50 
	  entityid,
    ISNULL(Accountnum,'') as [Acc. No.], 
    Company as [Supplier], 
	E.Email
FROM entity e
LEFT JOIN lookup t on t.lookupid = e.entitytypeid
LEFT JOIN lookup c on c.lookupid = e.entitycategoryid
WHERE (e.company LIKE '%<%replace%>%' OR ISNULL(e.Accountnum,'') LIKE  '%<%replace%>%') 
AND (ISNULL(IsSupplier,0) = {issupplier})  and e.entityid in ( select SupplierID from accstockprice where stockID=({entityid}))
/*{and}*/
ORDER BY e.AccountNum, e.Company","0","","1","LRA-FUSION","0","0","fusion"
"40518","cv_Refresh_Staff_Comm","","SELECT 
	StaffCommID, 
	CommDescription as [Description], 
	convert(varchar,cast(CommPercent as money),1) +'%' as [Discount],
	convert(varchar,cast(CommFixed as money),1)  as [Fixed Price],
	convert(varchar,cast(isnull(MinQty,0) as money),1) as [Min Qty]   
FROM StaffCommission
{where} 
order by CommDescription","0","","1","LRA-FUSION","0","0","fusion"
"40519","CV_ContractDuration","","SET NOCOUNT ON
SET ANSI_WARNINGS OFF
DECLARE @StartDate DATETIME
DECLARE @EndDate DATETIME 
DECLARE @TempDate DATETIME
DECLARE @ChargeSat BIT
DECLARE @ChargeSun BIT
DECLARE @ChargePublic BIT
DECLARE @Line CURSOR
DECLARE @ID INT
DECLARE @RentDte DATETIME

SET @StartDate = '{startdate}'
SET @EndDate = '{enddate}'
SET @TempDate = @StartDate
SET @ChargeSat = (SELECT ISNULL(isSaturday,0) FROM Projects WHERE ProjectID = {projectid})
SET @ChargeSun = (SELECT ISNULL(isSunday,0) FROM Projects WHERE ProjectID = {projectid})
SET @ChargePublic = (SELECT ISNULL(isPublic,0) FROM Projects WHERE ProjectID = {projectid})

DECLARE @RentDays TABLE
(
	ID INT IDENTITY(1,1),
	RentDate DATETIME,
	IsCharged INT
)

WHILE @TempDate < @EndDate
BEGIN
	INSERT INTO @RentDays (RentDate, IsCharged)
	SELECT 
		@TempDate,
		CASE DATEPART(WEEKDAY, @TempDate)
			WHEN 1 THEN
				@ChargeSun
			WHEN 7 THEN
				@ChargeSat
			ELSE 
				1
		END 
	
	SET @TempDate = DATEADD(DAY, 1, @TempDate)
END

INSERT INTO @RentDays (RentDate, IsCharged)
SELECT 
	@TempDate,
	CASE DATEPART(WEEKDAY, @TempDate)
		WHEN 1 THEN
			@ChargeSun
		WHEN 7 THEN
			@ChargeSat
		ELSE 
			1
	END 

UPDATE @RentDays
	SET IsCharged = @ChargePublic
FROM(
	SELECT ID as IDD FROM @RentDays 
    INNER JOIN PublicHoliday ON [Date] BETWEEN CONVERT(DATETIME, CONVERT(VARCHAR, RentDate, 111) + ' 00:00:00') AND CONVERT(DATETIME, CONVERT(VARCHAR, RentDate, 111) + ' 23:59:59')
	--WHERE DATEPART(WEEKDAY, RentDate) NOT IN (1,7)
) Z
WHERE ID = Z.IDD

SET NOCOUNT OFF
SET ANSI_WARNINGS ON

SELECT COUNT(IsCharged) FROM @RentDays WHERE IsCharged = 1","0","","1","LRA-FUSION","0","0","fusion"
"40520","CV_ContractDurationDate","","--UPDATE Projects SET ISComplete = 0 WHERE ProjectID = 10543
SET NOCOUNT ON
SET ANSI_WARNINGS OFF
DECLARE @StartDate DATETIME
DECLARE @EndDate DATETIME 
DECLARE @TempDate DATETIME
DECLARE @ChargeSat BIT
DECLARE @ChargeSun BIT
DECLARE @ChargePublic BIT
DECLARE @ID INT
DECLARE @RentDte DATETIME
DECLARE @Duration INT
DECLARE @Count INT
DECLARE @Line CURSOR

SET @StartDate = '{startdate}'
SET @EndDate = DATEADD(DAY, {duration} * 2, @StartDate)
SET @TempDate = @StartDate
SET @ChargeSat = (SELECT ISNULL(isSaturday,0) FROM Projects WHERE ProjectID = {projectid})
SET @ChargeSun = (SELECT ISNULL(isSunday,0) FROM Projects WHERE ProjectID = {projectid})
SET @ChargePublic = (SELECT ISNULL(isPublic,0) FROM Projects WHERE ProjectID = {projectid})
SET @Duration = {duration}

DECLARE @RentDays TABLE
(
    ID INT IDENTITY(1,1),
    RentDate DATETIME,
    IsCharged INT,
    DurationCount INT
)

WHILE @TempDate < @EndDate
BEGIN
    INSERT INTO @RentDays (RentDate, IsCharged)
    SELECT 
        @TempDate,
        CASE DATEPART(WEEKDAY, @TempDate)
            WHEN 1 THEN
                @ChargeSun
            WHEN 7 THEN
                @ChargeSat
            ELSE 
                1
        END 
    
    SET @TempDate = DATEADD(DAY, 1, @TempDate)
END

INSERT INTO @RentDays (RentDate, IsCharged)
SELECT 
    @TempDate,
    CASE DATEPART(WEEKDAY, @TempDate)
        WHEN 1 THEN
            @ChargeSun
        WHEN 7 THEN
            @ChargeSat
        ELSE 
            1
    END 

UPDATE @RentDays
    SET IsCharged = @ChargePublic
FROM(
    SELECT ID as IDD FROM @RentDays 
    INNER JOIN PublicHoliday ON [Date] BETWEEN CONVERT(DATETIME, CONVERT(VARCHAR, RentDate, 111) + ' 00:00:00') AND CONVERT(DATETIME, CONVERT(VARCHAR, RentDate, 111) + ' 23:59:59')
    --WHERE DATEPART(WEEKDAY, RentDate) NOT IN (1,7)
) Z
WHERE ID = Z.IDD

SET @Line = CURSOR FAST_FORWARD FOR 
	SELECT ID FROM @RentDays WHERE IsCharged = 1

OPEN @Line

FETCH NEXT FROM @Line INTO @ID

SET @Count = 1 

WHILE @@FETCH_STATUS = 0 
BEGIN 
	UPDATE @RentDays SET DurationCount = @Count WHERE ID = @ID
	SET @Count = @Count + 1
	FETCH NEXT FROM @Line INTO @ID
END

CLOSE @Line
DEALLOCATE @Line

SET NOCOUNT OFF
SET ANSI_WARNINGS ON

SELECT RentDate FROM @RentDays WHERE DurationCount = @Duration","0","","1","LRA-FUSION","0","0","fusion"
"40521","cv_Product_Breakdown","","DECLARE @DocID as int
SET @DocID = {docid}

SELECT 
isnull(REPLICATE('   ',(LEN(StockIDTrail) - LEN(REPLACE(StockIDTrail, ':', '')))),'') +
STK.StockCode as [Code], 
isnull(REPLICATE('   ',(LEN(StockIDTrail) - LEN(REPLACE(StockIDTrail, ':', '')))),'') +
Stk.StockDescription as [Description], 
QtyPer as [Qty], 
Qty as [Reqd], 
'           ' as [Date Complete] 
FROM AccMANUFACTURE_OUTPUT  O
LEFT JOIN AccStock STK
ON O.StockID = Stk.StockID 
WHERE O.DocID = @DocID
AND STK.StockType in ({stocktype})
ORDER BY O.StockIDTrail , O.OutputID desc
","0","","1","LRA-FUSION","0","0","fusion"
"40522","cv_ClientActivityListItemsOnlyAuthorised","","SELECT 
	ClientActivityListItemID,
	M.ModuleName as [Module],
	Case WHEN isnull(isCancelled,0) = 1 then 'Canceled' 
		 WHEN isnull(isComplete,0) = 1 AND isnull(isCancelled,0) = 0 THEN 'Completed'
		 ELSE 'Open' END as [Status],
	CASE WHEN ((ISNULL(uID.FirstName,'') + ' ' + ISNULL(uID.Surname,'') + ' (' + ISNULL(CONVERT(VARCHAR,CAL.IsAuthorisedDate, 120),'')) + ')') = '  ()' THEN 'Not Authorised' ELSE ((ISNULL(uID.FirstName,'') + ' ' + ISNULL(uID.Surname,'') + ' (' + ISNULL(CONVERT(VARCHAR,CAL.IsAuthorisedDate, 120),'')) + ')') END as [Authorised By],
	[Assigned To],
	fName as [Form],
	[Description], 
	[Reason], 
	L.Value as [Type],
	isnull(EstimatedHours,0) as [Est. Hrs.],
        M.EstHours as [Purchased Hours]
FROM ClientActivityListItem CAL
LEFT JOIN (SELECT * FROM Lookup WHERE Class = 'TaskType') L ON CAL.ChangeTypeID = L.LookupID
LEFT JOIN (SELECT UserID, isnull(Firstname,'') + ' ' + isnull(Surname,'') as [Assigned To] FROM Users) U ON CAL.AssignedTo = U.UserID
LEFT JOIN Modules M ON M.ModuleID = CAL.ModuleID
LEFT JOIN (SELECT UserID, FirstName, Surname FROM Users) uID
	ON uID.UserID = CAL.IsAuthorisedBy
Where ClientActivityListID = {id} AND IsAuthorised = 1
ORDER BY ClientActivityListItemID","0","","1","LRA-FUSION","0","0","fusion"
"40523","cv_Client_Hours_Breakdown","","SELECT
	(SELECT ProjectName FROM Projects WHERE ProjectID = M.ProjectID) as [Project Name],
	M.ModuleName as [Module Name],
	ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'') as [Project Manager],
	ISNULL(M.EstHours,0) as [Purchased Hours],
	ISNULL((SELECT SUM(HoursDone) * AVG(DevCurrentRate)/100 FROM Timesheet WHERE ModuleID = M.ModuleID),0) as [Hours Captured],
	(ISNULL(M.EstHours,0)) - ISNULL((SELECT SUM(HoursDone) * AVG(DevCurrentRate)/100 FROM Timesheet WHERE ModuleID = M.ModuleID),0) as [Hours Left]
FROM Modules M
LEFT JOIN (SELECT ProjectID, ProjectManagerID FROM Projects) P ON P.ProjectID = M.ProjectID
LEFT JOIN (SELECT StaffID, Firstname, Surname FROM Users) S on S.StaffID = P.ProjectManagerID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40524","cv_Client_Hours_Breakdown_Header","","SELECT
	ISNULL(E.Company,'Client') as [<CLIENT>],
        ISNULL(E.Company,'Client') as [<client>],
	ISNULL(P.ProjectName,'') as [<projectname>],
        ISNULL(P.ProjectName,'') as [<PROJECTNAME>],
    ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'') as [<PROJECTMANAGER>],
	ISNULL(M.ModuleName,'') as [<modulename>],
	CONVERT(DATETIME,CURRENT_TIMESTAMP,120) as [<DATE>]
FROM Modules M
LEFT JOIN (SELECT EntityID, Company FROM Entity) E on E.EntityID = M.EntityID
LEFT JOIN (SELECT ProjectID, ProjectName, ProjectManagerID FROM Projects) P on P.ProjectID = M.ProjectID
LEFT JOIN (SELECT StaffID, Firstname, Surname FROM Users) S on S.StaffID = P.ProjectManagerID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40525","cv_Picking_List","","DECLARE @DocID as int
SET @DocID = {docid}
SELECT 
L.Value AS [StockType],
MD.StockCode as [Code],
MD.StockDescription as [Description],
ROUND((MD.Qty / isnull(MO.Qtyper,1) / (SELECT Top 1 Qty FROM AccMANUFACTURE_OUTPUT WHERE IsPrimaryOutput =1 and DocID = @DocID)),4) as [Qty],
--CONVERT(VARCHAR,STK.[Length]) + ' x ' + CONVERT(VARCHAR,STK.Width) AS [Size],
MD.Qty as [Reqd],
--ROUND(((STK.[Length]/1000) * (STK.Width/1000)) * ISNULL(MO.Qty,1),4)   AS [m2],
'      ' as [Check]
FROM AccMANUFACTURE_DETAIL MD
LEFT JOIN (SELECT OutputID, QtyPer, Qty,StockIDtrail,StockID FROM AccMANUFACTURE_OUTPUT) MO
ON MD.OutputID  = MO.OutputID
LEFT JOIN (SELECT StockID,StockCode, StockDescription, [Length], Width, StockType FROM AccStock) STK
ON MD.StockID = STK.StockID
LEFT JOIN (SELECT LOOKUPID, VALUE FROM  Lookup)L ON STK.StockType = L.LookupID
WHERE MD.DocID = @DocID
AND stk.StockType in ({stocktype})
ORDER BY MD.StockCode
","0","","1","LRA-FUSION","0","0","fusion"
"40526","cv_PaymentTerms","","SELECT
	PT.PaymentTermID,
        '',
	PT.Number as [No.],
	PT.Description as [Description],
	PT.AmountPerc as [% Amount],
	PT.Date as [Date],
	PT.Value as [Value]
FROM PaymentTerms PT
LEFT JOIN (SELECT DocID FROM COST_ESTIMATE_MASTER) CEM on CEM.DocID = PT.DocID
{where}
ORDER BY PT.Number","0","","1","LRA-FUSION","0","0","fusion"
"40527","cv_PaymentTermsSalesOrder","","SELECT
	PT.PaymentTermID,
        '',
	PT.Number as [No.],
	PT.Description as [Description],
	PT.AmountPerc as [% Amount],
	PT.Date as [Date],
	PT.Value as [Value],
        PT.Selected as [Selected]
FROM PaymentTerms PT
--LEFT JOIN (SELECT DocID FROM COST_ESTIMATE_MASTER) CEM on CEM.DocID = PT.DocID
{where}
ORDER BY PT.Number","0","","1","LRA-FUSION","0","0","fusion"
"40528","cv_Acc_Print_PaymentTerms","","DECLARE @DocID As Integer


SET @DocID = {docid}


SELECT DISTINCT
	ISNULL(Description,'') AS [Description],
	ISNULL(AmountPerc,'') AS [Percentage],
        CONVERT(DATETIME, Date,103) AS [Date],
	dbo.fnFormatNumber(Value) AS [Amount]
FROM PaymentTerms
	 WHERE DocID = @DocID","0","","1","LRA-FUSION","0","0","fusion"
"40529","cv_Timesheet_Details","","SELECT
	M.ModuleID,
	P.ProjectID as [Project No.],
	p.projectname as [Project Name],
	M.ModuleName as [Module Name], 
	SUM(T.hoursdone) as [Hours Captured],
	case when SUM(T.hoursdone) < 1 then 1 else Round(SUM(T.hoursdone),0)end as [Hours Rounded],
	(isnull(AVG(SS.StaffRatePerc),0)/100)*isnull(SUM(T.hoursdone),0) as [Actual Hours],
	AVG(SS.StaffRatePerc) as [Average Staff Rate]
FROM Timesheet T
LEFT JOIN (SELECT ModuleID, ModuleName FROM Modules) M on T.ModuleID = M.ModuleID
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P on P.projectid = T.projectid
LEFT JOIN users on users.userid = T.developerid
LEFT JOIN Staff SS ON SS.StaffID = users.StaffID 
LEFT JOIN DevAppointment DA on DA.DevApptID = T.DevApptID
{where}
GROUP BY M.ModuleID, P.ProjectID, P.ProjectName, M.ModuleName","0","","1","LRA-FUSION","0","0","fusion"
"40530","cv_Timesheet_Details_QuoteBillableApproved","","SELECT
	DA.DevApptID,
	M.ModuleID,
	P.ProjectID as [Project No.],
	p.projectname as [Project Name],
	M.ModuleName as [Module Name], 
	SUM(T.hoursdone) as [Hours Captured],
	case when SUM(T.hoursdone) < 1 then 1 else Round(SUM(T.hoursdone),0)end as [Hours Rounded],
	(isnull(AVG(SS.StaffRatePerc),0)/100)*isnull(SUM(T.hoursdone),0) as [Actual Hours],
	ISNULL(SS.FirstName,'') + ' ' + ISNULL(SS.Surname,'') as [Developer],
	AVG(SS.StaffRatePerc) as [Average Staff Rate],
	CASE(ISNULL(t.OutOfSpec,0)) WHEN 0 THEN 'No' ELSE 'Yes' END AS [Not Quoted For],
	CASE(ISNULL(t.NeedInvoice,0)) WHEN 0 THEN 'No' ELSE 'Yes' END as [Billable],
	CASE ISNULL(t.Approved,0) WHEN 0 THEN 'No' ELSE 'Yes' END as [Approved]
FROM Timesheet T
LEFT JOIN (SELECT ModuleID, ModuleName FROM Modules) M on T.ModuleID = M.ModuleID
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P on P.projectid = T.projectid
LEFT JOIN users on users.userid = T.developerid
LEFT JOIN Staff SS ON SS.StaffID = users.StaffID 
LEFT JOIN DevAppointment DA on DA.DevApptID = T.DevApptID
{where}
GROUP BY DA.DevApptID, M.ModuleID, P.ProjectID, P.ProjectName, M.ModuleName, t.OutOfSpec, t.NeedInvoice, t.Approved, SS.FirstName, SS.Surname","0","","1","LRA-FUSION","0","0","fusion"
"40531","qf_Assessments","","SELECT * FROM (
SELECT 
	RAM.RiskAssessmentID, 
	CASE 
		WHEN 
		RAN.isold = 1
		THEN
		convert(varchar(7),Date, 120) + '/' +
		SUBSTRING('0000000', 1,(len('0000000')-len(number))) +
		convert(varchar,number) + '/'+Prefix
		ELSE
		convert(varchar(7),NewDate) + '/' +
		SUBSTRING('0000000', 1,(len('0000000')-len(number))) +
		convert(varchar,number) + '/'+Prefix
	END As [Assessment No],
	E.Company as [Client],
	ISNULL(EC.Firstname, '') + ' ' + ISNULL(EC.Surname, '') as [Contact],
	AssessmentTypeName as [Type], 
	Convert(varchar,SurveyDate,111) as [Survey Date],
	Convert(varchar,DateReceived,111) as [Date Received],
	Convert(varchar,DateSent,111) as [Date Sent],
	convert(varchar,CAST(isnull(TotalValue,0) AS MONEY),1) as [Total Value]
FROM Risk_Assessment_Master RAM
LEFT JOIN  Risk_AssessmentNo RAN ON RAN.RiskAssessmentID = RAM.RiskAssessmentID
LEFT JOIN  Risk_Assessment  RA ON RA.AssessmentID = RAM.AssessmentID
LEFT JOIN EntityContact EC ON EC.EntityContactID = RA.EntityContactID
LEFT JOIN Entity E ON E.EntityID = RA.EntityID
WHERE (CASE WHEN isnull(ReplacementSurveyorID,0) = 0 THEN RAM.SurveyorID ELSE RAM.ReplacementSurveyorID END) = {staffID}
) X
WHERE X.[Assessment No] LIKE '%<%replace%>%'
Order by X.[Survey Date] Desc

","0","","1","LRA-FUSION","0","0","fusion"
"40532","cv_RiskAssessment_Man_App","","select 
	X.RiskAssessmentID,
	X.[Assessment No],
	X.Client,
	X.Contact,
	X.[Date Created],
	X.[Home],
	X.[Work],
	X.[Cell],
	X.Email,
	X.[Status],
	X.[Policy Number],
	X.[Address]
from (
SELECT distinct
	RAM.RiskAssessmentID,
	CASE 
		WHEN 
		RAN.isold = 1
		THEN
		convert(varchar(7),Date, 120) + '/' +
		SUBSTRING('0000000', 1,(len('0000000')-len(number))) +
		convert(varchar,number) + '/'+Prefix
		ELSE
		convert(varchar(7),NewDate) + '/' +
		SUBSTRING('0000000', 1,(len('0000000')-len(number))) +
		convert(varchar,number) + '/'+Prefix
		END As [Assessment No],
	E.Company as [Client],
	ISNULL(EC.Firstname, '') + ' ' + ISNULL(EC.Surname, '') as [Contact],
	Convert(Varchar, RA.DateCreated, 111) as [Date Created],
	RA.HomeTel as [Home],
	RA.WorkTel as [Work],
	RA.CellTel as [Cell],
	RA.Email,
	value as [Status],
	E.vendornumber as [Policy Number],
	EA.[Address],
	ISNULL(EC.Surname, '') as [Surname]
FROM Risk_Assessment_Master RAM
LEFT JOIN Risk_Assessment RA ON RA.AssessmentID = RAM.AssessmentID
LEFT JOIN lookup ON RA.StatusID = lookupID
LEFT JOIN Entity E ON E.EntityID = RA.EntityID
LEFT JOIN (
SELECT DISTINCT
	entityID,
	ISNULL(Address1,'')
	+ISNULL(' '+ Address2,'')
	+ISNULL(' '+ Address3,'')
	+ISNULL(' '+ City,'')
	+ISNULL(' '+ Region,'')
	+ISNULL(' '+ Code,'')
	+ISNULL(' '+ Country,'') as [Address]
FROM EntityAddress 
Where IsDefault = 1 AND AddressType like '%Physical%')  EA ON EA.EntityID = E.EntityID
LEFT JOIN EntityContact EC ON EC.EntityContactID = RA.EntityContactID
LEFT JOIN Entity EB ON EB.EntityID = RAM.BrokerID
LEFT JOIN Entity EI ON EI.EntityID = RAM.InsurerID
LEFT JOIN  Risk_AssessmentNo RAN ON RAN.RiskAssessmentID = RAM.RiskAssessmentID
{where}
) X

order by X.Surname","0","","1","LRA-FUSION","0","0","fusion"
"40533","cv_Diary_Tracking","Kitty kitty, do you want some milk!?","SELECT DISTINCT newID(), [Key], [Type], [Assigned To], [Notes],[Current Status], [Initial status], [Date Captured],[Created By]
FROM
(   --OrderForm / StatusLog SL
	SELECT 
	CONVERT(VARCHAR, FR.OrderID) + ' Order' AS [Key], --OrderID
	ISNULL(SL.OrderType,'') AS [Type],
	ISNULL(SL.AssignedTo,'')  AS [Assigned To],
	' ' AS [Notes],
	ISNULL(SL.CurrentValue,'') AS [Current Status],
	ISNULL(SL.OriginalValue, '') AS [Initial Status],
	ISNULL(SL.LogDate,'') AS [Date Captured],
	CONVERT(VARCHAR,U.FirstName) + ' ' + CONVERT(VARCHAR, U.Surname) AS [Created By],
	SL.OrderID
	FROM StatusLog SL
LEFT JOIN(SELECT * FROM Users)U ON U.UserID = SL.UserID
--LEFT JOIN (SELECT * FROM Staff)S ON S.StaffID = SL.AssignedTo
LEFT JOIN(SELECT * FROM AssessmentEmailLog)AEL ON AEL.OrderID = SL.OrderID
LEFT JOIN(SELECT * FROM OrderForm)FR ON FR.OrderID = SL.OrderID

        UNION ALL
       
    --Assessment Master AM / Assessment Log AL
	SELECT 
	CONVERT(VARCHAR, AM.OrderID) +' Assessment' AS [Key], --AssessmentID
	ISNULL(AM.AssessmentTypename,'') AS [Type],
	CONVERT(VARCHAR,S.Firstname) + ' ' + CONVERT(VARCHAR, S.Surname) AS [Assigned To],
	' ' AS [Notes],
	ISNULL(AL.CurrentValue,'') AS [Current Status],
	ISNULL(AL.OriginalValue,'')AS [Initial Status],
	ISNULL(AL.LogDate,'') AS [Date Captured],
	CONVERT(VARCHAR,U.FirstName) + ' ' + CONVERT(VARCHAR, U.Surname) AS [Created By],
	AL.OrderID
	FROM AssessmentLog AL
LEFT JOIN(SELECT * FROM  Risk_Assessment_Master)AM ON AM.AssessmentID = AL.AssessmentID
LEFT JOIN(SELECT * FROM AssessmentEmailLog)AEL ON AEL.AssessmentID = AL.AssessmentID
LEFT JOIN(SELECT * FROM Users)U ON U.UserID = AL.UserID
LEFT JOIN(SELECT * FROM Staff)S ON S.StaffID = AM.SurveyorID

		UNION ALL
 --Email Log
	SELECT 
	CONVERT(VARCHAR, AEL.OrderID) + ' Emailed' AS [Key],
	ISNULL(ARM.AssessmentTypename,'') AS [Type],
	CONVERT(VARCHAR,S.Firstname) + ' ' + CONVERT(VARCHAR, S.Surname) AS [Assigned To],
	' ' AS [Notes],
	AEL.CurrentStatus AS [CurrentStatus],
	AEL.InitialStatus AS [Initial Status],
	ISNULL(AEL.LogDate,'') AS [Date Captured],
	CONVERT(VARCHAR,U.FirstName) + ' ' + CONVERT(VARCHAR, U.Surname) AS [Created By],
	AEL.OrderID
FROM AssessmentEmailLog AEL
LEFT JOIN(SELECT * FROM AssessmentLog)AL ON AL.OrderID = AEL.OrderID
LEFT JOIN(SELECT * FROM Users)U ON U.UserID = AEL.UserID
LEFT JOIN(SELECT * FROM Risk_Assessment_Master)AM ON AM.OrderID = AEL.OrderID AND AM.AssessmentTypeID = (SELECT TOP 1 LogID FROM StatusLog WHERE ORderID = AM.AssessmentTypeID ORDER BY LogDate Desc)
LEFT JOIN(SELECT AssessmentTypeID, AssessmentTypeName FROM Risk_Assessment_Master)ARM ON ARM.AssessmentTypeID = AEL.AssessmentTypeID 
LEFT JOIN(SELECT * FROM OrderForm)FR ON FR.OrderID = AEL.OrderID
LEFT JOIN(SELECT * FROM StatusLog)SL ON SL.OrderID = AEL.OrderID AND SL.LogID = (SELECT TOP 1 LogID FROM StatusLog WHERE OrderID = AEL.OrderID ORDER BY LogDate DESC)
LEFT JOIN(SELECT * FROM Risk_Assessment)RA ON RA.AssessmentID = AEL.RiskAssessmentID
LEFT JOIN(SELECT * FROM Staff)S ON S.StaffID = AM.SurveyorID

UNION ALL
----Activity log
SELECT
	CONVERT(Varchar, ISNULL(AL.OrderID, AL.AssessmentID)) + [Type] As [Key],
	ISNULL(AL.[Type],'') AS [Type],
	CONVERT(VARCHAR,EC.Firstname) + ' ' + CONVERT(VARCHAR, EC.Surname) AS [Assigned To],
	AL.Notes AS [Notes],
	' ' AS [CurrentStatus],
	' ' AS [initial Status],
	ISNULL(AL.DateCaptured,'') AS [Date Captured],
	CONVERT(VARCHAR,U.FirstName) + ' ' + CONVERT(VARCHAR, U.Surname) AS [Created By],
	AL.OrderID
	FROM ACTIVITYLOG AL
	LEFT JOIN(SELECT * FROM Users)U ON U.UserID = AL.AddedBy
	LEFT JOIN(SELECT * FROM EntityContact)EC ON EC.EntityContactID = AL.AssignedTo
    
)A
{where}

ORDER BY [Date Captured] ASC","0","","1","LRA-FUSION","0","0","fusion"
"40534","CV_Document_Bronchure","","select 
	entitydocumentid, 
	[Name], 
	path as Location

from entitydocument d
left join lookup l on l.lookupid = d.doctypeid
LEFT JOIN (select distinct lookupid, [value] as [Sub Doc] from lookup where class like 'documentsubtype') ls
    ON ls.lookupid = d.docsubid
LEFT JOIN Staff S ON S.StaffID = D.StaffID
where l.value='Brochure'
order by Keywords,[Name]","0","","1","LRA-FUSION","0","0","fusion"
"40535","cv_Archive_DB","","

-- the original database (use 'SET @DB = NULL' to disable backup)
DECLARE @DB varchar(200)
SET @DB = '{dbname}'
-- the backup filename
DECLARE @BackupFile varchar(2000)
SET @BackupFile = 'c:\{archivedbname}.bak'
-- the new database name
DECLARE @TestDB varchar(200)
SET @TestDB = '{archivedbname}'
-- the new database files without .mdf/.ldf
DECLARE @RestoreFile varchar(2000)
SET @RestoreFile = 'c:\{archivedbname}'
-- ****************************************************************
-- no change below this line
-- ****************************************************************

DECLARE @query varchar(2000)
DECLARE @DataFile varchar(2000)
SET @DataFile = @RestoreFile + '.mdf'
DECLARE @LogFile varchar(2000)
SET @LogFile = @RestoreFile + '.ldf'
IF @DB IS NOT NULL
BEGIN
SET @query = 'BACKUP DATABASE ' + @DB + ' TO DISK = ' + QUOTENAME(@BackupFile, '''')
EXEC (@query)
END
-- RESTORE FILELISTONLY FROM DISK = 'C:\temp\backup.dat'
-- RESTORE HEADERONLY FROM DISK = 'C:\temp\backup.dat'
-- RESTORE LABELONLY FROM DISK = 'C:\temp\backup.dat'
-- RESTORE VERIFYONLY FROM DISK = 'C:\temp\backup.dat'
IF EXISTS(SELECT * FROM sysdatabases WHERE name = @TestDB)
BEGIN
SET @query = 'DROP DATABASE ' + @TestDB
EXEC (@query)
END
RESTORE HEADERONLY FROM DISK = @BackupFile
DECLARE @File int
SET @File = @@ROWCOUNT
DECLARE @Data varchar(500)
DECLARE @Log varchar(500)
SET @query = 'RESTORE FILELISTONLY FROM DISK = ' + QUOTENAME(@BackupFile , '''')

CREATE TABLE #restoretemp
(
LogicalName varchar(500),
PhysicalName varchar(500),
type varchar(10),
FilegroupName varchar(200),
size int,
maxsize bigint,
Field bigint,
CreateLSN bit,
DropLSN Bit,
UniqueID varchar(500),
ReadOnlyLSN bit, 
ReadWriteLSN bit,
BackupSizeInBytes Bigint,
SourceBlockSize Int,
FileGroupID int,
LogGroupGuid varchar(500),
DifferentialBaseLSN float,
DifferentialBaseGUID varchar(1000),
IsReadOnly bit,
IsPresent bit,
TDEThumbprint  varchar(1000)
)

INSERT #restoretemp EXEC (@query)
SELECT @Data = LogicalName FROM #restoretemp WHERE type = 'D'
SELECT @Log = LogicalName FROM #restoretemp WHERE type = 'L'
PRINT @Data
PRINT @Log
TRUNCATE TABLE #restoretemp
DROP TABLE #restoretemp
IF @File > 0
BEGIN
SET @query = 'RESTORE DATABASE ' + @TestDB + ' FROM DISK = ' + QUOTENAME(@BackupFile, '''') +
' WITH MOVE ' + QUOTENAME(@Data, '''') + ' TO ' + QUOTENAME(@DataFile, '''') + ', MOVE ' +
QUOTENAME(@Log, '''') + ' TO ' + QUOTENAME(@LogFile, '''') + ', FILE = ' + CONVERT(varchar, @File)
EXEC (@query)
END
","0","","1","LRA-FUSION","0","0","fusion"
"40536","cv_Acc_Job_Manufacture_Process","","select Top 1 
	JMP.StockManufTypeid,
	P.ProjectName,
	L.Value,
	JMP.ManufDesc,
	JMP.DurationInMins,
	MA.Descr,
	JMP.StartTime,
	JMP.EndTime,
	CASE WHEN ISNULL(JMP.IsComplete,0) = 0 THEN 'Not Complete' ELSE 'COMPLETE' END AS [Status]
from Job_Manufacture_Process JMP 
LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P ON P.ProjectID = JMP.JobID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) L ON L.LookupID = JMP.ManufType
LEFT JOIN (SELECT MachineAreaID, Descr FROM AccMANUFACTURE_MACHAREA) MA ON MA.MachineAreaID = JMP.MachineAreaID
WHERE StockManufTypeid = {StockManufTypeid}","0","","1","LRA-FUSION","0","0","fusion"
"40537","qf_AssessmentAdv","","SELECT TOP 50
	RAM.RiskAssessmentID,
	CASE 
		WHEN 
		RAN.isold = 1
		THEN
		convert(varchar(7),Date, 120) + '/' +
		SUBSTRING('0000000', 1,(len('0000000')-len(number))) +
		convert(varchar,number) + '/'+Prefix
		ELSE
		convert(varchar(7),NewDate) + '/' +
		SUBSTRING('0000000', 1,(len('0000000')-len(number))) +
		convert(varchar,number) + '/'+Prefix
	END As [Assessment No],
RA.OrderID AS [OrderID],
RAM.AssessmentTypeName AS [Name],
ISNULL(E.Company,'') AS [Company],
ISNULL(EC.Firstname, '') + ' ' + ISNULL(EC.Surname,'') AS [Contact]
FROM Risk_assessment_Master RAM 
LEFT JOIN  Risk_AssessmentNo RAN ON RAN.RiskAssessmentID = RAM.RiskAssessmentID
LEFT JOIN(SELECT * FROM Risk_Assessment)RA ON RA.AssessmentID = RAM.AssessmentID
LEFT JOIN(SELECT * FROM Entity)E ON E.EntityID = RA.EntityID
LEFT JOIN(SELECT * FROM EntityContact)EC ON EC.EntityContactID = RA.EntityContactID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40538","qf_OrderID","","SELECT DISTINCT
ISNULL(OD.OrderID, '') AS [...],
OD.OrderID AS [Order ID],
OD.FromCompany AS [From Company],
ISNULL(EC.FirstName,'') + ' ' + ISNULL(EC.Surname,'') AS [Contact]
FROM OrderForm OD
LEFT JOIN (SELECT * FROM EntityContact)EC ON EC.EntityID = OD.FromID
LEFT JOIN (SELECT * FROM Risk_Assessment_Master)RA ON RA.OrderID = OD.OrderID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40539","cv_Contract_Rental_Details","","declare @DocID as int
set @DocID = {docid}
--SELECT LineID,[Start], [End], Duration, [Group], [Stock Code] as [Code], [Description], Qty, Discount, [Price Ex.], [Price Incl.],[Total Incl.] 
SELECT LineID, [Stock Code] as [Code], [Description], QTY, Duration as [Period], [Price Ex.] as [Rate], Discount, [Total Incl.], [Start] as [Date Out],
    [StartTime] as [Time Out],/*[End] as [Date In], [EndTime] as [Time In],*/ ISNULL(s,0) as [QTY Returned], Qty - ISNULL(s,0) as [Still Out]
FROM    (
    --Select Main items
    SELECT DISTINCT convert(varchar,CED.lineid) + 'M'  as [LineID],
    convert(varchar,R.StartDate,111) as [Start], convert(varchar,R.Enddate,111) as [End],
    convert(varchar,R.StartDate,108) as [StartTime], convert(varchar,R.Enddate,108) as [EndTime],
    Convert(varchar,R.Duration) + ' ' + Case R.RentalPeriodType WHEN 1 THEN 'Hours' WHEN 2 THEN 'Days' WHEN 3 then 'Nights' WHEN 4 then 'Weeks' WHEN 5 THEN 'Months' END as [Duration],
    GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
    CED.Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
    dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
    dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
    dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
    dbo.fnFormatNumber(PriceEx * CED.Qty * (TAX /100 + 1) ) as [Total Incl.],
    Rank, -1000 as [Rank2], 0 as [IsComponent],
    CED.LineID as ItemID,
    CR.Qty as [RetrunQty],
    CRs.QTYR as S
    FROM CONTRACT_DETAIL CED
    LEFT JOIN Rental R
    ON CED.RentalLineID = R.RentalID AND R.DocType = 'Contract'
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON CED.ProjectID = P.projectID
    LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [Qty] FROM AccStockControl WHERE DocType = 'Stock Take' GROUP BY StockID,Docid, ProjectID, LineID) CR
    ON CR.StockID = CED.StockID AND CR.DocID = CED.DocID AND CR.LineID = CED.LineID 
     Left Join(select LineIDS,SUM(QtyS) as QTYR from  Contract_Return Group by LineIDS  ) CRs on CRs.LineIDS=CED.LineID
    
    LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [QtyT] FROM AccStockControl WHERE DocType = 'Stock Take' and containerid=(SELECT Top 1 custValue FROM crmSetup where variable = 'RentalContainer') and  [Qty] <0 GROUP BY StockID,Docid, ProjectID, LineID) CRD
    ON CRD.StockID = CED.StockID AND CRD.DocID = CED.DocID AND CRD.LineID = CED.LineID 
    
    where isnull(ComponentOfLineID,0)  = 0
    AND CED.DocID =  @DocID
    AND isnull(CED.RentalLineID,0) > 0  
    
    UNION ALL
    
    --Select component items
    SELECT DISTINCT convert(varchar,CED.lineid) + 'C'  as [LineID],
    convert(varchar,R.StartDate,111) as [Start], convert(varchar,R.Enddate,111) as [End],
    convert(varchar,R.StartDate,108) as [StartTime], convert(varchar,R.Enddate,108) as [EndTime],
    Convert(varchar,R.Duration) + ' ' + Case R.RentalPeriodType WHEN 1 THEN 'Hours' WHEN 2 THEN 'Days' WHEN 3 then 'Nights' WHEN 4 then 'Weeks' WHEN 5 THEN 'Months' END as [Duration],
    Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
    CED.Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
    dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
    dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
    dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
    dbo.fnFormatNumber(PriceEx * CED.Qty * (TAX /100 + 1)) as [Total Incl.], 
    (SELECT Top 1 Rank From CONTRACT_DETAIL Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2], 1 as [IsComponent],
    ComponentOfLineID,
    CR.Qty,
    CRs.QTYR as S
    FROM CONTRACT_DETAIL CED
    LEFT JOIN (SELECT * FROM Rental) R
    ON CED.RentalLineID = R.RentalID AND R.DocType = 'Contract'
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E  
    ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT StockID, ProjectID,DocID, SUM(Qty) as [Qty] FROM AccStockControl WHERE DocType = 'Stock Take' GROUP BY StockID, ProjectID,Docid) CR
    ON CR.StockID = CED.StockID AND CR.DocID = CED.DocID 
    Left Join(select LineIDS,SUM(QtyS) as QTYR from  Contract_Return Group by LineIDS  ) CRs on CRs.LineIDS=CED.LineID
    
        LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [QtyT] FROM AccStockControl WHERE DocType = 'Stock Take' and containerid=(SELECT Top 1 custValue FROM crmSetup where variable = 'RentalContainer') and  [Qty] <0 GROUP BY StockID,Docid, ProjectID, LineID) CRD
    ON CRD.StockID = CED.StockID AND CRD.DocID = CED.DocID AND CRD.LineID = CED.LineID 
    
    where isnull(ComponentOfLineID,0)  > 0
    AND CED.DocID =  @DocID
    AND (isnull(CED.RentalLineID,0) > 0 OR CED.ComponentOfLineID in (SELECT LineID FROM Contract_Detail where isnull(RentalLineID,0) > 0))
    ) A
{where}
ORDER BY  ItemID, Rank,Rank2","0","","1","LRA-FUSION","0","0","fusion"
"40540","cv_Acc_Dependant_Items","","DECLARE @LineID as integer
SET @LineID = {lineid}

INSERT INTO {inserttable} (DocID, StockID, StockCode, StockDescription, Qty, PriceCategoryID, CostPriceEx, PriceEx, DiscPerc, 
TaxTypeID, Tax, isMarginBased,MarkupPerc,WastePerc, ContainerID, ComponentOfLineID, 
[Rank], SupplierID, ProjectID, DivisionID)


SELECT DD.DocID, STK.StockID, STK.StockCode, STK.StockDescription,D.DepSellingQty, SP.PriceCategoryID, 
isnull(SP.CostPriceEx,0) / STK.SoldByToPurchasedByRatio, isnull(SP.SellingPriceEx,0), 0 as [DiscPerc],
DD.TaxTypeID, DD.Tax, SP.IsMarginBased, SP.Markup, isnull(D.WastagePerc,0), DD.ContainerID, DD.LineID, 
DD.Rank + D.AccStock_DepID - (SELECT min(AccStock_DepID) FROM AccStock_Dep WHERE PriStockID = D.PriStockID) + 1  as [Rank] ,
SP.SupplierID, DD.ProjectID, DD.DivisionID
FROM AccStock_Dep D 
LEFT JOIN AccStock STK 
	ON D.DepStockID = STK.StockID 
LEFT JOIN (SELECT * FROM AccStockPrice where getdate() between ValidFrom and ValidTo) SP
	ON STK.StockID = SP.StockID AND D.PriceCategoryID =  SP.PriceCategoryID
CROSS JOIN (SELECT Top 1 * FROM {inserttable}  where LineID = @LineID) DD
Where D.PriStockID = DD.StockID
ORDER BY D.AccSTOCK_DepID
","0","","1","LRA-FUSION","0","0","fusion"
"40541","cv_Contract_Accessory_Details","","declare @DocID as int
set @DocID = {docid}


--SELECT LineID,[Start], [End], Duration, [Group], [Stock Code] as [Code], [Description], Qty, Discount, [Price Ex.], [Price Incl.],[Total Incl.] 
SELECT LineID, [Stock Code] as [Code], [Description], QTY,  [Price Ex.] as [Rate], Discount, [Total Incl.],
   ISNULL(s,0)/-1 as [QTY Returned], Qty + ISNULL(s,0) as [Still Out]

FROM    (
    --Select Main items
    SELECT DISTINCT convert(varchar,CED.lineid) + 'M'  as [LineID],
    --convert(varchar,R.StartDate,111) as [Start], convert(varchar,R.Enddate,111) as [End],
    --convert(varchar,R.StartDate,108) as [StartTime], convert(varchar,R.Enddate,108) as [EndTime],
    --Convert(varchar,R.Duration) + ' ' + Case R.RentalPeriodType WHEN 1 THEN 'Hours' WHEN 2 THEN 'Days' WHEN 3 then 'Nights' WHEN 4 then 'Weeks' WHEN 5 THEN 'Months' END as [Duration],
    GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
    CED.Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
    dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
    dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
    dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
    dbo.fnFormatNumber(PriceEx * CED.Qty * (TAX /100 + 1) ) as [Total Incl.],
    Rank, -1000 as [Rank2], 0 as [IsComponent],
    CED.LineID as ItemID,
    CR.Qty as [RetrunQty],
    CRD.QTYT as S,
    ISNULL(CED.IsDelivery,0) as [IsDelivery]
    FROM CONTRACT_DETAIL CED
    --LEFT JOIN Rental R
    --ON CED.RentalLineID = R.RentalID AND R.DocType = 'Contract'
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON CED.ProjectID = P.projectID
    LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [Qty] FROM AccStockControl WHERE DocType = 'Stock Take' GROUP BY StockID,Docid, ProjectID, LineID) CR
    ON CR.StockID = CED.StockID AND CR.DocID = CED.DocID AND CR.LineID = CED.LineID 
    
    LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [QtyT] FROM AccStockControl WHERE DocType = 'Stock Take' and containerid=(SELECT Top 1 custValue FROM crmSetup where variable = 'RentalContainer') and  [Qty] <0 GROUP BY StockID,Docid, ProjectID, LineID) CRD
    ON CRD.StockID = CED.StockID AND CRD.DocID = CED.DocID AND CRD.LineID = CED.LineID 
    
    where isnull(ComponentOfLineID,0)  = 0
    AND CED.DocID =  @DocID
    AND isnull(CED.RentalLineID,0) = 0  
    
    --UNION ALL
    
    ----Select component items
    --SELECT DISTINCT convert(varchar,CED.lineid) + 'C'  as [LineID],
    ----convert(varchar,R.StartDate,111) as [Start], convert(varchar,R.Enddate,111) as [End],
    ----convert(varchar,R.StartDate,108) as [StartTime], convert(varchar,R.Enddate,108) as [EndTime],
    ----Convert(varchar,R.Duration) + ' ' + Case R.RentalPeriodType WHEN 1 THEN 'Hours' WHEN 2 THEN 'Days' WHEN 3 then 'Nights' WHEN 4 then 'Weeks' WHEN 5 THEN 'Months' END as [Duration],
    --Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
    --CED.Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
    --dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
    --dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
    --dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
    --dbo.fnFormatNumber(PriceEx * CED.Qty * (TAX /100 + 1)) as [Total Incl.], 
    --(SELECT Top 1 Rank From CONTRACT_DETAIL Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2], 1 as [IsComponent],
    --ComponentOfLineID,
    --CR.Qty,
    --CRD.QTYT as S,
    --ISNULL(CED.IsDelivery,0) as [IsDelivery]
    --FROM CONTRACT_DETAIL CED
    --LEFT JOIN (SELECT * FROM Rental) R
    --ON CED.RentalLineID = R.RentalID AND R.DocType = 'Contract'
    --LEFT JOIN (SELECT Entityid, Company FROM Entity) E  
    --ON CED.SupplierID = E.Entityid
    --LEFT JOIN (SELECT StockID, ProjectID,DocID, SUM(Qty) as [Qty] FROM AccStockControl WHERE DocType = 'Stock Take' GROUP BY StockID, ProjectID,Docid) CR
    --ON CR.StockID = CED.StockID AND CR.DocID = CED.DocID 
    
    --    LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [QtyT] FROM AccStockControl WHERE DocType = 'Stock Take' and containerid=(SELECT Top 1 custValue FROM crmSetup where variable = 'RentalContainer') and  [Qty] <0 GROUP BY StockID,Docid, ProjectID, LineID) CRD
    --ON CRD.StockID = CED.StockID AND CRD.DocID = CED.DocID AND CRD.LineID = CED.LineID 
    
    --where isnull(ComponentOfLineID,0)  = 0
    --AND CED.DocID =  @DocID
    --AND (isnull(CED.RentalLineID,0) = 0 OR CED.ComponentOfLineID in (SELECT LineID FROM Contract_Detail where isnull(RentalLineID,0) =0))
    ) A
WHERE A.[IsDelivery] = 0 
ORDER BY  Rank,Rank2
","0","","1","LRA-FUSION","0","0","fusion"
"40542","cv_Detailed_Assessment","","SELECT 
RAM.RiskAssessmentID AS [ID],
--ISNULL(RAM.AssessmentID, '') AS [RiskAssessmentID],
E.Company AS [Client],
ISNULL(EC.Firstname, '') + ' ' + ISNULL(EC.Surname, '') as [Contact],
RAM.DateReceived AS [Date Created],
ISNULL(S.FirstName + ' ' + S.Surname,'') AS [Surveyor],
RAM.AssessmentTypeName AS [Type],
value AS [Status]
FROM Risk_Assessment_Master RAM
LEFT JOIN(SELECT * FROM Staff)S ON StaffID = RAM.SurveyorID
LEFT JOIN(SELECT * FROM Risk_Assessment)RA ON RA.AssessmentID = RAM.AssessmentID
LEFT JOIN Entity E ON E.EntityID = RA.EntityID
LEFT JOIN Entity EB ON EB.EntityID = RAM.BrokerID
LEFT JOIN Entity EI ON EI.EntityID = RAM.InsurerID
LEFT JOIN EntityContact EC ON EC.EntityContactID = RA.EntityContactID
LEFT JOIN lookup ON RA.StatusID = lookupID
{where}
Order by RAM.RiskAssessmentID","0","","1","LRA-FUSION","0","0","fusion"
"40543","CV_JobAddress","","SELECT JobAddressID
     , addresstype AS Type
     , address1 AS [Address Line 1]
     , address2 AS [Address Line 2]
     , address3 AS [Address Line 3]
     , City AS [Area]
     , Region AS [Province]
     , Code
     , Country
     , CASE WHEN ISNULL(isJobtLocation,0) = 1 THEN 'Yes' ELSE 'No' END AS [Default Location]
FROM
  JobAddress
<%where%>
order by addresstype","0","","1","LRA-FUSION","0","0","fusion"
"40544","cv_Contract_Rental_Returns","","declare @DocID as int
set @DocID = {docid}



--SELECT LineID,[Start], [End], Duration, [Group], [Stock Code] as [Code], [Description], Qty, Discount, [Price Ex.], [Price Incl.],[Total Incl.] 
SELECT ReturnID, [Stock Code] as [Code], [Description], QTY as [QTY Hired],  [Price Ex.] as [Rate], Discount, [Total Incl.], 
    [Date In],[Time In],/*[End] as [Date In], [EndTime] as [Time In],*/  [QTY Returned], s as [QTY Out],ISNULL(s,0)- [QTY Returned] as [Variance]
FROM    (
    --Select Main items
    SELECT DISTINCT 
    ReturnID,
    convert(varchar,CED.lineid) + 'M'  as [LineID],
    --convert(varchar,R.StartDate,111) as [Start], convert(varchar,R.Enddate,111) as [End],
    --convert(varchar,R.StartDate,108) as [StartTime], convert(varchar,R.Enddate,108) as [EndTime],
    --Convert(varchar,R.Duration) + ' ' + Case R.RentalPeriodType WHEN 1 THEN 'Hours' WHEN 2 THEN 'Days' WHEN 3 then 'Nights' WHEN 4 then 'Weeks' WHEN 5 THEN 'Months' END as [Duration],
    GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
    CED.Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
    dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
    dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
    dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
    dbo.fnFormatNumber(PriceEx * CED.Qty * (TAX /100 + 1) ) as [Total Incl.],
    Rank, -1000 as [Rank2], 0 as [IsComponent],
    CED.LineID as ItemID,
     R.QTYS as [QTY Returned],
    R.QTYReturn as S,
    convert(varchar,R.DateReturnedS,111) as [Date In],
    convert(varchar,R.DateReturnedS,108) as [Time In]
    FROM Contract_Return R
    Left Join CONTRACT_DETAIL CED on R.LineIDS=CED.LineID
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON CED.ProjectID = P.projectID
    LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [Qty] FROM AccStockControl WHERE DocType = 'Stock Take' GROUP BY StockID,Docid, ProjectID, LineID) CR
    ON CR.StockID = CED.StockID AND CR.DocID = CED.DocID AND CR.LineID = CED.LineID 
    
    LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [QtyT] FROM AccStockControl WHERE DocType = 'Stock Take' and containerid=(SELECT Top 1 custValue FROM crmSetup where variable = 'RentalContainer') and  [Qty] <0 GROUP BY StockID,Docid, ProjectID, LineID) CRD
    ON CRD.StockID = CED.StockID AND CRD.DocID = CED.DocID AND CRD.LineID = CED.LineID 
    
    where isnull(ComponentOfLineID,0)  = 0
    AND CED.DocID =  @DocID
    --AND isnull(CED.RentalLineID,0) > 0  
    
    UNION ALL
    
    --Select component items
    SELECT DISTINCT 
    ReturnID,
    convert(varchar,CED.lineid) + 'C'  as [LineID],
    --convert(varchar,R.StartDate,111) as [Start], convert(varchar,R.Enddate,111) as [End],
    --convert(varchar,R.StartDate,108) as [StartTime], convert(varchar,R.Enddate,108) as [EndTime],
    --Convert(varchar,R.Duration) + ' ' + Case R.RentalPeriodType WHEN 1 THEN 'Hours' WHEN 2 THEN 'Days' WHEN 3 then 'Nights' WHEN 4 then 'Weeks' WHEN 5 THEN 'Months' END as [Duration],
    Null as [Group],null as [Project], '-    ' + StockCode as [Stock Code], '-    ' + StockDescription as [Description], Comments,Company as [Supplier],
    CED.Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
    dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
    dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
    dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
    dbo.fnFormatNumber(PriceEx * CED.Qty * (TAX /100 + 1)) as [Total Incl.], 
    (SELECT Top 1 Rank From CONTRACT_DETAIL Where LineID = CED.ComponentOfLineID) ,Rank as [Rank2], 1 as [IsComponent],
    ComponentOfLineID,
    R.QTYS,
    R.QTYReturn as S,
     convert(varchar,R.DateReturnedS,111) as [Date In],
    convert(varchar,R.DateReturnedS,108) as [Time In]
    FROM Contract_Return R
    Left Join CONTRACT_DETAIL CED on R.LineIDS=CED.LineID
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E  
    ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT StockID, ProjectID,DocID, SUM(Qty) as [Qty] FROM AccStockControl WHERE DocType = 'Stock Take' GROUP BY StockID, ProjectID,Docid) CR
    ON CR.StockID = CED.StockID AND CR.DocID = CED.DocID 
    
        LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [QtyT] FROM AccStockControl WHERE DocType = 'Stock Take' and containerid=(SELECT Top 1 custValue FROM crmSetup where variable = 'RentalContainer') and  [Qty] <0 GROUP BY StockID,Docid, ProjectID, LineID) CRD
    ON CRD.StockID = CED.StockID AND CRD.DocID = CED.DocID AND CRD.LineID = CED.LineID 
    
    where isnull(ComponentOfLineID,0)  > 0
    AND CED.DocID =  @DocID
    --AND (isnull(CED.RentalLineID,0) > 0 OR CED.ComponentOfLineID in (SELECT LineID FROM Contract_Detail where isnull(RentalLineID,0) > 0))
    ) A
WHERE A.LineID like '%M%'
ORDER BY  ItemID, Rank,Rank2
","0","","1","LRA-FUSION","0","0","fusion"
"40545","cv_Contract_Rental_Returns_Totals","","declare @DocID as int
set @DocID = {docid}

--SELECT LineID,[Start], [End], Duration, [Group], [Stock Code] as [Code], [Description], Qty, Discount, [Price Ex.], [Price Incl.],[Total Incl.] 
SELECT ([Price Ex.] )as [Rate],  ([Total Incl.]) as TotalIncl,[VAT.] as VAT, [Disc]

   -- [StartTime] as [Time Out],/*[End] as [Date In], [EndTime] as [Time In],*/ ISNULL(s,0)/-1 as [QTY Returned], Qty + ISNULL(s,0) as [Still Out]
FROM    (
    --Select Main items
    SELECT DISTINCT --convert(varchar,CED.lineid) + 'M'  as [LineID],
    --convert(varchar,R.StartDate,111) as [Start], convert(varchar,R.Enddate,111) as [End],
    --convert(varchar,R.StartDate,108) as [StartTime], convert(varchar,R.Enddate,108) as [EndTime],
    --Convert(varchar,R.Duration) + ' ' + Case R.RentalPeriodType WHEN 1 THEN 'Hours' WHEN 2 THEN 'Days' WHEN 3 then 'Nights' WHEN 4 then 'Weeks' WHEN 5 THEN 'Months' END as [Duration],
    --GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
    --CED.Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
    (sum(CostPriceEx) ) as [Cost Ex.],
   (sum(PriceEx*(CRD.QTYT/-1 )  )) as [Price Ex.], 
  (sum(((PriceEx*(CRD.QTYT/-1 ) )*isnull(DiscPerc,0)/100)  )) as [Disc], 
(sum(PriceEx * (TAX /100 + 1))) as [Price Incl.],
  (sum(PriceEx * (CRD.QTYT/-1 )  * (TAX /100 + 1) )) as [Total Incl.],
    dbo.fnFormatNumber(sum(((PriceEx * (CRD.QTYT/-1 ) )* (TAX /100)) )) as [VAT.]

    FROM CONTRACT_DETAIL CED
    LEFT JOIN Rental R
    ON CED.RentalLineID = R.RentalID AND R.DocType = 'Contract'
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
    ON CED.ProjectID = P.projectID
    LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [Qty] FROM AccStockControl WHERE DocType = 'Stock Take' GROUP BY StockID,Docid, ProjectID, LineID) CR
    ON CR.StockID = CED.StockID AND CR.DocID = CED.DocID AND CR.LineID = CED.LineID 
    
    LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [QtyT] FROM AccStockControl WHERE DocType = 'Stock Take' and containerid=(SELECT Top 1 custValue FROM crmSetup where variable = 'RentalContainer') and  [Qty] <0 GROUP BY StockID,Docid, ProjectID, LineID) CRD
    ON CRD.StockID = CED.StockID AND CRD.DocID = CED.DocID AND CRD.LineID = CED.LineID 
 
    where isnull(ComponentOfLineID,0)  = 0
    AND CED.DocID =  @DocID
    AND isnull(CED.RentalLineID,0) > 0  
    
    --Group by Rank,CRD.QTYT, CR.Qty 
    )A","0","","1","LRA-FUSION","0","0","fusion"
"40546","cv_Refresh_CostEstimate_History","","SELECT CEM.DocID
     , SUM(ISNULL(CED.PriceEx,0)) AS [Price Ex]
FROM
  COST_ESTIMATE_MASTER CEM
  LEFT JOIN (SELECT *
             FROM
               COST_ESTIMATE_DETAIL) CED
    ON CED.DocID = CEM.DocID
WHERE
  CEM.DocStatus = 'Accepted'
  AND CEM.DocID = {where}
GROUP BY CEM.DocID","0","","1","LRA-FUSION","0","0","fusion"
"40547","cv_Contract_Returned_Items","","declare @DocID as int
set @DocID = {docid}

    SELECT DISTINCT convert(varchar,CED.lineid) + 'M'  as [LineID],
    convert(varchar,R.StartDate,111) as [Start], convert(varchar,R.Enddate,111) as [End],
    convert(varchar,R.StartDate,108) as [StartTime], convert(varchar,R.Enddate,108) as [EndTime],
    Convert(varchar,R.Duration) + ' ' + Case R.RentalPeriodType WHEN 1 THEN 'Hours' WHEN 2 THEN 'Days' WHEN 3 then 'Nights' WHEN 4 then 'Weeks' WHEN 5 THEN 'Months' END as [Duration],
    GroupName as [Group],ProjectName as [Project],StockCode as [Stock Code], StockDescription as [Description], Comments,Company as [Supplier],
    CED.Qty,convert(varchar,Cast(isnull(DiscPerc,0) as money),1) + '%' as [Discount],
    dbo.fnFormatNumber(CostPriceEx ) as [Cost Ex.],
    dbo.fnFormatNumber(PriceEx ) as [Price Ex.], 
    dbo.fnFormatNumber(PriceEx * (TAX /100 + 1)) as [Price Incl.],
    dbo.fnFormatNumber(PriceEx * CED.Qty * (TAX /100 + 1) ) as [Total Incl.],
    Rank, -1000 as [Rank2], 0 as [IsComponent],
    CED.LineID as ItemID,
    CR.Qty as [RetrunQty],
    CRD.QTYT/-1 as S,
    CED.*,
    P.EntityID
    FROM CONTRACT_DETAIL CED
    LEFT JOIN Rental R
    ON CED.RentalLineID = R.RentalID AND R.DocType = 'Contract'
    LEFT JOIN (SELECT Entityid, Company FROM Entity) E 
    ON CED.SupplierID = E.Entityid
    LEFT JOIN (SELECT ProjectID, ProjectName,EntityID FROM Projects) P
    ON CED.DoCID = P.projectID
    LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [Qty] FROM AccStockControl WHERE DocType = 'Stock Take' GROUP BY StockID,Docid, ProjectID, LineID) CR
    ON CR.StockID = CED.StockID AND CR.DocID = CED.DocID AND CR.LineID = CED.LineID 
    
    LEFT JOIN (SELECT StockID, DocID,ProjectID, LineID, SUM(Qty) as [QtyT] FROM AccStockControl WHERE DocType = 'Stock Take' and containerid=(SELECT Top 1 custValue FROM crmSetup where variable = 'RentalContainer') and  [Qty] <0 GROUP BY StockID,Docid, ProjectID, LineID) CRD
    ON CRD.StockID = CED.StockID AND CRD.DocID = CED.DocID AND CRD.LineID = CED.LineID 
    
    where isnull(ComponentOfLineID,0)  = 0
    AND CED.DocID =  @DocID
","0","","1","LRA-FUSION","0","0","fusion"
"40548","cv_Acc_Print_PaymentReminder","","
DECLARE @Div as int
DECLARE @Date as datetime
DECLARE @Period as integer
DECLARE @EntityID as integer
DECLARE @Currency as varchar(50)
DECLARE @UseEC as integer
set @date = getdate()
set @Div = 0
set @Period = 99999999 --{period}
set @EntityID = {entityid}
set @Currency = isnull((SELECT Top 1 Currency FROM ExchangeRates where ExchangeRateID = (SELECT Top 1 Currency FROM Entity where entityid = @EntityID)),(SELECT Top 1 Currency from ExchangeRates where isDefault = 1))
set @UseEC = 0


--{select}
SELECT Min([Invoice No.]) as [<invno>] ,  convert(varchar,cast(MIN([DATE]) as datetime),103) as [<cdate>],
dbo.fnFormatNumber(sum(CASE WHEN Datediff(d,[Date],@Date) >7 THEN Outstanding ELSE 0 END))  AS [<7days>],
dbo.fnFormatNumber(sum(CASE WHEN Datediff(d,[Date],@Date) >30 THEN Outstanding ELSE 0 END))  AS [<30days>],
dbo.fnFormatNumber(sum(CASE WHEN Datediff(d,[Date],@Date) >60 THEN Outstanding ELSE 0 END))  AS [<60days>],
dbo.fnFormatNumber(sum(CASE WHEN Datediff(d,[Date],@Date) >90 THEN Outstanding ELSE 0 END))  AS [<90days>],
dbo.fnFormatNumber(sum(CASE WHEN Datediff(d,[Date],@Date) >120 THEN Outstanding ELSE 0 END))  AS [<120days>],
(SELECT Top 1 Company from Entity where EntityID = @EntityID) as [<client>],
isnull((SELECT Top 1 firstname + ' ' + surname from EntityContact where EntityContactID = (SELECT Top 1 InvoiceTo From Entity where EntityID = @EntityID)), 'To whom it may concern') as [<contact>],
CONVERT(varchar, @Date,103) as [<docdate>],
isnull((SELECT Top 1 Value  from Lookup WHERE LookupID = (SELECT Top 1 PaymentTerms FROM Entity where EntityID = @EntityID)),'0 days') as [<ddate>]
FROM 
--SELECT *,Datediff(d,[Date],@Date) FROM
(
	--opening balances
	SELECT convert(varchar,DateCreated,111) as [Date], 'Opening Balance' as  [Invoice No.], /*null as [Job], */
	(-1 * (isnull(AmtCurrent,0) + isnull(Amt30,0) +isnull(Amt60,0) +isnull(Amt90,0) +isnull(Amt120,0)))  as [Total Invoiced],
	(isnull(paid,0)) as [Paid],
	(0) as [Credited],
	(-1 * (isnull(AmtCurrent,0) + isnull(Amt30,0) +isnull(Amt60,0) +isnull(Amt90,0) +isnull(Amt120,0))- isnull(Paid,0))  as [Outstanding],
	'' as [Project], NULL as ClientPO
	FROM ACCOPENINGBALANCE  OB
	LEFT JOIN (SELECT sum(isnull(PaymentPortion,0)) as [Paid] ,InvoiceDocID, M.Entityid FROM DEBTOR_MASTER M 
	       LEFT JOIN (SELECT PaymentPortion, InvoiceDocID, PaymentDocID FROM DEBTOR_PAYMENT) P
	       ON M.DocID  = P.PaymentDocID
	       WHERE DocType = 'Payment Receipt'  AND DateCompleted < @Date
	       GROUP By InvoiceDocID,M.Entityid) DP
	ON OB.EntityID = DP.EntityID AND DP.InvoiceDocID = -1
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) EH
	ON OB.EntityID = EH.EntityID
	WHERE  (-1 * (isnull(AmtCurrent,0) + isnull(Amt30,0) +isnull(Amt60,0) +isnull(Amt90,0) +isnull(Amt120,0))- isnull(Paid,0) <> 0) 
	AND (OB.Entityid = @EntityID OR EH.AlternateCompanyID = @EntityID)
	AND OB.Currency = @Currency
	AND (OB.Divisionid = @Div OR @Div = 0)

	union all

	--Inter-Account Transfers
	SELECT Convert(Varchar,LAD.AdjustDate,111), 
	CASE WHEN isnull(LAM.IsInterAccountTransfer,0) = 1 THEN 'Inter-Account Transfer' WHEN isnull(LAM.IsInterLedgerTransfer,0) = 1 THEN 'Inter-Ledger Transfer' END, 
	(0) as [Total Invoiced], dbo.fnFormatNumber(0) as [Paid], 
	((isnull(Credit,0) - isnull(Debit,0)) / isnull(LAM.ROE,1)) as [Credited], 
    (( -1 * (isnull(Credit,0) - isnull(Debit,0))) / isnull(LAM.ROE,1)) as [Total],
	null as [Project], NULL as ClientPO
	FROM LEDGER_ADJUST_MASTER LAM
	LEFT JOIN (SELECT * FROM LEDGER_ADJUST_DETAIL) LAD 
	ON LAM.DocID= LAD.DocID
	LEFT JOIN (SELECT EntityID, Company, IsSupplier, EntityCategoryID, SalesConsID, AlternateCompanyID FROM Entity) E
	ON LAD.EntityID = E.EntityID
	WHERE (LAD.Entityid = @EntityID OR E.AlternateCompanyID =@EntityID )
	AND isnull(LAM.IsComplete,0) = 1
	AND LAD.AdjustDate < @Date
	and (LAD.divisionid = @Div OR @Div = 0)
	AND LAM.Currency = @Currency
	and isnull((SELECT top 1 AccPeriodID FROM ACCAccountingPeriod where LAD.AdjustDate between StartDate and EndDate),0) <= @Period


	UNION ALL	
	
	--Unallocated credit notes
	SELECT convert(varchar,DateCompleted,111),  isnull(DS.Prefix,'') + ' ' + convert(varchar, DM.DocNO) + ' Unallocated Credit Note',/*null as [Job],*/ 
	(0),(0), 
	((DD.Credit  / isnull(DM.ROE,1)  - isnull(allocated,0))), 
	( -1 * ((DD.Credit / isnull(DM.ROE,1)   - isnull(allocated,0)))),
	convert(varchar,P.ProjectID) + ': ' + P.ProjectName as [Project],DM.ClientPO
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) E
	ON DM.EntityID = E.EntityID
	LEFT JOIN (SELECT  Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) )  as [Credit], DocID FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 group by docid) DD
	ON DM.DocID=DD.DocID 
	LEFT JOIN (SELECT DocID, ROE FROM DEBTOR_MASTER) DM2 
	ON Dm.PreviousDocID = DM2.DocID
	LEFT JOIN (SELECT PaymentDocID, sum(PaymentPortion) as [Allocated]  FROM DEBTOR_PAYMENT Group by PaymentDocID) DP
	ON DM.DocID = DP.PaymentDocID
	LEFT JOIN (SELECT DivisionID, Prefix from AccDocumentSetup ) DS 
	ON DM.DivisionID = DS.DivisionID
	LEFT JOIN (SELECT ProjectID, ProjectName FROM Projects) P
	ON DM.ProjectID = P.ProjectID
	LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
	ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
	WHERE  (Dm.Entityid = @EntityID OR E.AlternateCompanyID = @EntityID)
	AND isnull(DM.UseEC,0) = @UseEc
	AND DM.DocType = 'Credit Note'
	AND DM.DocStatus = 'Completed'
	AND DM.DateCompleted < @Date
	AND DM2.Docid is  null
	and (dm.divisionid = @Div  OR @Div = 0)
	AND DM.Currency = @Currency
	AND ( -1 * ((DD.Credit / isnull(DM.ROE,1)   - isnull(allocated,0)))) <>0
	and DM.Period <= @Period
	AND DM.DateCompleted > isnull(AOB.DateCreated, '1800/01/01')
	
	Union All
	
	--Unallocated Payments
	SELECT convert(varchar,DateCompleted,111), isnull(DS.Prefix,'') + ' ' + convert(varchar, DM.DocNO) +  ' Unallocated Payment',/*null as [Job],*/ '0.00', 
	(DP.PaymentPortion / isnull(DM.ROE,1)), 
	(0), 
	( -1 * DP.PaymentPortion  / isnull(DM.ROE,1)),
	'' as [Project],DM.ClientPO
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) E
	ON DM.EntityID = E.EntityID
	LEFT JOIN (SELECT * FROM DEBTOR_PAYMENT ) DP
	ON DM.DocID = DP.PaymentDocID and InvoiceDocID  = -2
	LEFT JOIN (SELECT DivisionID, Prefix from AccDocumentSetup ) DS 
	ON DM.DivisionID = DS.DivisionID
	LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
	ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
	WHERE DocType in ('Payment Receipt')  AND DocStatus = 'Completed' AND DateCompleted < @Date 
	and (Dm.Entityid =  @EntityID OR E.AlternateCompanyID =@EntityID )
	AND isnull(DM.UseEC,0) = @UseEc
	AND isnull(IsNotAllocated,0) = 1
	and (dm.divisionid = @Div  OR @Div = 0)
	AND DM.Currency = @Currency
	and DM.Period <= @Period
	AND DM.DateCompleted > isnull(AOB.DateCreated, '1800/01/01')
		
		
	union all
	
	
	SELECT convert(varchar,datecompleted,111) as [Date], isnull(DS.Prefix,'') + ' ' +  convert(varchar,DM.DocNo)  as [Invoice No.],/*Job, */
	(isnull(totalincl,0)  / isnull(DM.ROE,1)) as [Total Invoiced],
	(isnull(DP.Paid,0)) as [Paid],
	(isnull(TotalCredit,0) + isnull(CrdAllocated,0) + isnull(DP.[Discounted],0)) as [Credited],
	(((isnull(DD.TotalIncl,0))   / isnull(DM.ROE,1) ) - (isnull(DP.Paid,0)) - isnull(CrdAllocated,0) -(isnull(TotalCredit,0) + isnull(DP.[Discounted],0))) as [Outstanding],
	convert(varchar,P.ProjectID) + ': ' + P.ProjectName as [Project],DM.ClientPO
	FROM DEBTOR_MASTER DM
	LEFT JOIN (SELECT DocID,  Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(Tax,0) /100 + 1) ) as [TotalIncl] FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0 group by docid) DD
	ON DD.DocID = DM.DocID
	LEFT JOIN (SELECT EntityID, AlternateCompanyID FROM Entity) E
	ON DM.EntityID = E.EntityID
	LEFT JOIN (SELECT sum(isnull(PaymentPortion,0)) as [Paid],sum(isnull(SettlementDiscount,0)) as [Discounted] ,InvoiceDocID FROM DEBTOR_MASTER M 
	        LEFT JOIN (SELECT PaymentPortion, InvoiceDocID, PaymentDocID,SettlementDiscount FROM DEBTOR_PAYMENT) P
	        ON M.DocID  = P.PaymentDocID
	       WHERE DocType = 'Payment Receipt' AND InvoiceDocID is not null  --AND DateCompleted < @Date  AND M.Period <= @Period
	       GROUP By InvoiceDocID) DP
	ON Dm.DocID = DP.InvoiceDocId 
	LEFT JOIN(SELECT PreviousDocID, Sum(PriceEx * Qty * ((100 - isnull(Discperc,0))/100) * (isnull(D.Tax,0) /100 + 1) ) / isnull(M.ROE,1) as [TotalCredit] FROM DEBTOR_MASTER M
		  LEFT JOIN (SELECT DocID, PriceEx, Qty,DiscPerc, Tax FROM DEBTOR_DETAIL WHERE isnull(ComponentOfLineID,0) = 0) D
		ON M.DocID = D.DocID
		WHERE DocType = 'Credit Note'  AND DocStatus = 'Completed' AND M.Period <= @Period AND DateCompleted < @Date 
		Group by PreviousDocID, M.ROE) DM2
	ON Dm.DocID = DM2.PreviousDocID
	LEFT JOIN (SELECT sum(isnull(PaymentPortion,0))  as [CrdAllocated] ,InvoiceDocID FROM DEBTOR_MASTER M 
	        LEFT JOIN (SELECT PaymentPortion, InvoiceDocID, PaymentDocID FROM DEBTOR_PAYMENT) P
	        ON M.DocID  = P.PaymentDocID
	       WHERE DocType = 'Credit Note'  AND InvoiceDocID is not null AND DateCompleted < @Date  AND M.Period <= @Period
	       GROUP By InvoiceDocID, M.ROE) CrdDP
	ON Dm.DocID = CrdDP.InvoiceDocId
	LEFT JOIN (SELECT ProjectID, ProjectName  From Projects) P
	ON DM.ProjectID = P.ProjectID
	LEFT JOIN (SELECT DivisionID, Prefix from AccDocumentSetup ) DS 
	ON DM.DivisionID = DS.DivisionID
	LEFT JOIN (SELECT DateCreated,EntityID, DivisionID as [DivID], UseEC FROM AccOpeningBalance) AOB 
	ON DM.Entityid = AOB.EntityID AND isnull(DM.UseEC,0) = isnull(AOB.UseEC,0) AND DM.DivisionID = AOB.DivID
	WHERE DocType in ('Invoice') AND DocStatus = 'Completed' AND DateCompleted < @Date 
	and (Dm.Entityid =  @EntityID OR E.AlternateCompanyID = @EntityID )
	AND isnull(DM.UseEC,0) = @UseEc
	AND (((isnull(DD.TotalIncl,0))   / isnull(DM.ROE,1) ) - (isnull(DP.Paid,0)) - isnull(CrdAllocated,0) -(isnull(TotalCredit,0))) <> 0.00
	and (dm.divisionid = @Div  OR @Div = 0)
	AND DM.Currency = @Currency
	AND DM.Period <= @Period
	AND DM.DateCompleted > isnull(AOB.DateCreated, '1800/01/01')
	AND round(((isnull(DD.TotalIncl,0))   / isnull(DM.ROE,1) ) - (isnull(DP.Paid,0)) - isnull(CrdAllocated,0) -(isnull(TotalCredit,0)),2) <> 0
) A
WHERE round(Outstanding,2) > 0

","0","","1","LRA-FUSION","0","0","fusion"
"40549","cv_importReservation","Incomplete so far 2014/06/11","INSERT INTO [Appointment]
(
		[EntityID],
		[EntityContactID],
		[Date],
		[EndDate],
		[Subject],
		[CreateUSerID],
		[ForUserID],
		[DoReminder],
		[DateSyncd],
		[ActualStartDate],
		[ActualEndDate]
)
Select Distinct
		[RT.Company],
		[EC.EntityContactID]
		[Date],
		[Date],
		[Company ?????]
		[?????],
		[EC.Firstname + ' ' + + EC.Surname],
		0,
		GETDATE()
		[Date],
		[Date],
from [_ReservationTemp] RT
		LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE Class LIKE 'divisions') LDivision on LDivision.Value = HR.Division
		LEFT JOIN (SELECT EntityID, Company FROM Entity) E on E.Company = HR.Supplier
		LEFT JOIN (SELECT LookupID, Value FROM Lookup WHERE class LIKE 'jobtitle') LJob on LJob.Value = HR.Position","0","","1","LRA-FUSION","0","0","fusion"
"40550","qf_Companies_Holding","","SELECT Distinct 
    e.entityid,
    e.Company,
    e.AlternateCompanyID,
    ISNULL(e.Accountnum,'') as [Acc. No.], 
    e.Company
FROM entity e
LEFT JOIN(SELECT * FROM Entity)EN ON EN.AlternateCompanyID = E.EntityID
/*{and}*/
--ORDER BY e.AccountNum, e.Company","0","","1","LRA-FUSION","0","0","fusion"
"40551","CV_Company_Details_Division","","Select distinct
ISNULL(L.Value,'') as [Division]
From EntityDivision ED
Left Join Lookup L on L.LookupID=ED.DivisionID
where EntityID={EntityID}
","0","","1","LRA-FUSION","0","0","fusion"
"40552","CV_Company_Details_Projects","","select distinct
L.value as Projects

from entitygroup G
Left Join Lookup L on L.LookupID =G.GroupID
where G.EntityID={EntityID}","0","","1","LRA-FUSION","0","0","fusion"
"40553","CV_Company_Details_Contact","","select distinct 
ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Contact]
,isnull(ext,'') AS [Telephone 1]
,ISNULL(phone1,'') as [Telephone 2]
,ISNULL(Cell,'') as [Mobile]
,ISNULL (fax,'') as [Fax]
,ISNULL(Email,'') as [Email]


From EntityContact 
where EntityID={EntityID}","0","","1","LRA-FUSION","0","0","fusion"
"40554","CV_Company_Details","","select
    e.EntityID, 
    '' as [ ],
    Company as [<client>], 
    LegalName as [<legalname>],
	--EC.Contact,
    [Holding Company] as [<holdingcompany>],
    sc.SalesConsultant as [Sales Consultant], 
    CONVERT(VARCHAR, DateAdded, 111) as [Date Added],
    Switchboard as [<telephone1>], 
    Fax as [<fax>], 
    URL , 
    e.Email as [<email>], 
    VATNum as [VAT Number], 
    VATExemptNum as [VAT Exempt Number],     
    MenthodOfContact as [Method Of Contact], 
    Website  as [<website>],      
    CompRegNum as [Registration Number],
    isnull(u.Firstname,'')+' '+isnull(u.Surname,'') As [Creator],
    [Payment Terms],
    e.RefNo as [Reference Number],
    e.modifiedby as [Modified By],
	CONVERT(VARCHAR, e.DateModified, 111) as [Date Modified],
    abc.abcCategory as [<businesscategory>],
    Category,
    ODM.AccStatus as [Accounts Status],
    b.Buscat as [Business Category],
    t.type as [<type>],
	LTS.Value as [<subtype>],
	dbo.fn_EntityGroups(E.EntityID) as [Group],
    AccT.AccType as [Account Type],
    e.AccountNum as [Account Number],
    ClientRating as [<clientrating>],
    ManualRating as [<manualrating>],
	VendorNumber as [Vendor Number],
    [Send Accounts To Contact],
    [Send Accounts To Email],
    dbo.fnFormatNumber(isnull(e.DebitOrder,0)) as [Debit Order Amt.],
	A.Address1 as [<paddress1>],
	A.Address2 as [<paddress2>],
	A.Address3 as [<paddress3>],
	A.City as [<paddress4>],
	A.Region as [<paddress5>],
	A.Code as [<paddress6>],
	A.Country as [<paddress7>],
	AP.Address1 as [<address1>],
	AP.Address2 as [<address2>],
	AP.Address3 as [<address3>],
	AP.City as [<address4>],
	AP.Region as [<address5>],
	AP.Code as [<address6>],
	AP.Country as [<address7>],
	Case isnull(AcceptsBackOrders, 0 ) When 0 then 'False'
		when 1 then 'True'
	end as [Accepts Backorders],
	convert(Varchar,NextCallDate,111) as [Next Call Date],
	Case isnull(IsBirthdaySupplier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Birthday Supplier],
	Case isnull(IsBirthdayCourier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Birthday Courier],
	Case isnull(IsAnniversarySupplier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Aniversary Supplier],
	Case isnull(IsAnniversaryCourier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Aniversary Courier],
	Case isnull(IsAccountSupplier, 0) When 0 then 'False'
			when 1 then 'True'
	end as [Account Supplier],E.Comments as [<comments>]
from entity e WITH(NOLOCK)

LEFT JOIN (
	SELECT 
		ToEntityCategoryID
		,EntityID
		,ChangeDate
	FROM EntityCategoryHist WITH(NOLOCK)
) ECH ON ECH.EntityID = E.EntityID

LEFT JOIN (
	SELECT LookupID, Value as [CategoryTo] FROM Lookup WITH(NOLOCK) WHERE Class LIKE 'category'
) ECT ON ECT.LookupID = ECH.ToEntityCategoryID

LEFT JOIN (
	SELECT 
		LookupID
		, Value as [Payment Terms] 
	FROM Lookup WITH(NOLOCK)
) lp ON lp.lookupid = E.PaymentTerms
left join (
	select 
		lookupid as typeid
		, value as type 
	from lookup WITH(NOLOCK)
	where class like 'type'
) t 
on e.entitytypeid = t.typeid
LEFT JOIN LinkLookup LTS ON LTS.LinkLookupID = E.entitysubtypeid
left join (
	select 
		lookupid as categoryid
		, value as category 
	from lookup WITH(NOLOCK) 
	where class like 'category'
) c 
on e.entitycategoryid = c.categoryid
left join (
	SELECT 
		UserID
		, Firstname
		, Surname
		, Username 
	FROM users WITH(NOLOCK)
) u 
on e.entitycreatorid = u.userid

LEFT JOIN EntityAddress a  WITH(NOLOCK)
ON A.EntityID = E.EntityID 
AND A.EntityAddressID = (SELECT TOP 1 EntityAddressID FROM EntityAddress WITH(NOLOCK) WHERE EntityID = E.EntityID AND AddressType like 'Phys%')

LEFT JOIN EntityAddress AP  WITH(NOLOCK)
ON AP.EntityID = E.EntityID 
AND AP.EntityAddressID = (SELECT TOP 1 EntityAddressID FROM EntityAddress WITH(NOLOCK) WHERE EntityID = E.EntityID AND AddressType like 'Pos%')

left join (
	select 
		lookupid as buscatid
		, value as buscat 
	from lookup  WITH(NOLOCK)
	where class like 'buscat'
) b on e.buscatid = b.buscatid
left join (
	select 
		lookupid as abccategoryid
		, value as abccategory 
	from lookup  WITH(NOLOCK)
	where class like 'abc'
) abc on e.abccatid = abc.abccategoryid
left join (
	select 
		lookupid as AccTypeid
		, value as AccType 
	from lookup WITH(NOLOCK) where class like 'accounttype'
) AccT on e.accounttypeid = AccT.AccTypeid
left join (
	select 
		lookupid as accStatusID
		, value as AccStatus 
	from lookup WITH(NOLOCK) 
	where class like 'accStat'
) ODM on e.AccStatID = ODM.accStatusID
left join( 
	select 
		staffid as SalesConsid
		, ISNULL(FirstName,'') + ' ' + IsNull(Surname,'') As SalesConsultant 
	from staff WITH(NOLOCK)
) SC
on e.salesconsid = SC.SalesConsID

LEFT JOIN (
	SELECT 
		entityID
		, Company as [Holding Company] 
	FROM Entity WITH(NOLOCK)
) HC on e.AlternateCompanyID = HC.Entityid
LEFT JOIN (
	SELECT 
		EntityContactID
		, ISNULL(Firstname,'') + ' ' + ISNULL(Surname,'') as [Send Accounts To Contact]
		, Email as [Send Accounts To Email] 
	FROM EntityContact WITH(NOLOCK)
) ECAcc ON E.InvoiceTo = ECAcc.EntityContactID
LEFT JOIN (
	SELECT 
		EntityContactID,
		EntityID,
		ISNULL(firstname,'') + ' ' + ISNULL(surname,'') as [Contact]
	FROM EntityContact WITH(NOLOCK)
) EC ON EC.EntityID = E.EntityID AND EC.EntityContactID = (SELECT TOP 1 EntityContactID FROM EntityContact WITH(NOLOCK) WHERE EntityID = E.EntityID)

where E.EntityID ={where}
ORDER BY E.Company","0","","1","LRA-FUSION","0","0","fusion"
"40555","qf_SubTaskTimesheet","","SELECT
	CALI.ClientActivityListItemID,
	CALI.FName AS [Sub Task],
	CALI.Description AS [Description]
FROM ClientActivityListItem CALI
WHERE CALI.ModuleID = {moduleid}","0","","1","LRA-FUSION","0","0","fusion"
"40556","cv_Acc_Manufacture_Process","","select Top 1 
	JMP.StockManufTypeid,
        JMP.DocID,
	L.Value,
	JMP.ManufDesc,
	JMP.DurationInMins,
	MA.Descr,
	JMP.StartTime,
	JMP.EndTime,
	CASE WHEN ISNULL(JMP.IsComplete,0) = 0 THEN 'Not Complete' ELSE 'COMPLETE' END AS [Status]
from AccMANUFACTURE_PROCESS JMP 
LEFT JOIN (SELECT LookupID, Value FROM Lookup) L ON L.LookupID = JMP.ManufType
LEFT JOIN (SELECT MachineAreaID, Descr FROM AccMANUFACTURE_MACHAREA) MA ON MA.MachineAreaID = JMP.MachineAreaID
WHERE StockManufTypeid = {StockManufTypeid}","0","","1","LRA-FUSION","0","0","fusion"
"40557","cv_Contract_Invoice_Items","","select 
CR.*
,CD.*
,Case When DATEDIFF(day, CR.StartDate, CD.DateReturnedS) =0 then 1 else DATEDIFF(day, CR.StartDate, CD.DateReturnedS) End  AS [Days]
from [Contract_Return]  CD
Left Join Contract_detail CR on CR.LineID =CD.LineIDS
where DOCID={docid}","0","","1","LRA-FUSION","0","0","fusion"
"40558","cv_Accommodation_Defect_Report","","SELECT Top 1
	ISNULL(CONVERT(VARCHAR,DefectDate,103),'') AS [<date>],
	ISNULL(BusinessUnit,'') AS [<busunit>],
	ISNULL(DefectLocation,'') AS [<location>],
	CASE WHEN DElectrical = 1 THEN 'X' ELSE '' END AS [<electrical>],
	CASE WHEN DPlumbing = 1 THEN 'X' ELSE '' END AS [<plumbing>],
	CASE WHEN DCarpenting = 1 THEN 'X' ELSE '' END AS [<carpenting>],
	CASE WHEN DPainting = 1 THEN 'X' ELSE '' END AS [<painting>],
	CASE WHEN DTiling = 1 THEN 'X' ELSE '' END AS [<tiling>],
	CASE WHEN DStructural = 1 THEN 'X' ELSE '' END AS [<structural>],
	ISNULL(FullDefectDetails,'') AS [<fullDefectDetails>],
	ISNULL(ItemsAttached,'') AS [<itemsAttached>],
	ISNULL(Consequences,'') AS [<consequences>],
	CASE WHEN DAffect = 1 THEN 'YES' ELSE 'NO' END AS [<affect>],
	ISNULL(ReportedBy,'') AS [<reportedBy>]
FROM Accommodation
WHERE AccommodationID = {where}","0","","1","LRA-FUSION","0","0","fusion"
"40559","cv_FoodServicesSubItems","","SELECT DISTINCT
	ASD.AccSTOCK_DepID,
	AccSD.StockCode AS [Sub Stock Code],
	AccSD.StockDescription AS [Sub Stock Description],
	ASD.DepSellingQTY AS [Total QTY To Use]
FROM AccSTOCK_Dep ASD
LEFT JOIN (SELECT StockID, StockCode, StockDescription FROM AccStock) AccSD ON AccSD.StockID = ASD.DepStockID
LEFT JOIN FoodServicesMenuItem FSMI ON FSMI.StockID = ASD.PriStockID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40560","cv_FoodServicesMenuTypes","","SELECT
	MenuTypeID,
	L.Value As [Menu Type]
FROM FoodServicesMenuTypes FSMT
LEFT JOIN (SELECT LookupID, Value FROM Lookup) L on L.LookupID = FSMT.LookupID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40561","cv_FoodServicesMenuItems","","SELECT
	FSMI.MenuItemID,
	AccS.StockCode AS [Stock Code],
	AccS.StockDescription AS [Stock Description]
FROM FoodServicesMenuItem FSMI
LEFT JOIN (SELECT StockID,StockCode,StockDescription FROM AccStock) AccS ON AccS.StockID = FSMI.StockID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40562","cv_FoodServicesDisplaySubComponents","","DECLARE @MenuID Int
DECLARE @MenuTypeID Int
SET @MenuID = {MenuID}
SET @MenuTypeID = {MenuTypeID}

SELECT NEWID(),[Stock Description] FROM
(
SELECT
	Acc.StockDescription As [Stock Description],
	Acc.StockID As [StockID],
	0 As Rank
FROM FoodServicesMenuItem FSMI
LEFT JOIN AccStock Acc ON Acc.StockID = FSMI.StockID
WHERE FSMI.MenuID = @MenuID AND MenuTypeID = @MenuTypeID

UNION ALL

SELECT
	' -    ' + Acc.StockDescription As [Stock Description],
	AccSDep.PriStockID As [StockID],
	1 As Rank
FROM AccSTOCK_Dep AccSDep
LEFT JOIN FoodServicesMenuItem FSMI ON FSMI.StockID = AccSDep.PriStockID
LEFT JOIN AccStock Acc ON Acc.StockID = AccSDep.DepStockID
WHERE FSMI.MenuID = @MenuID AND FSMI.MenuTypeID = @MenuTypeID AND Acc.StockDescription IS NOT NULL
)A
WHERE A.[Stock Description] IS NOT NULL
ORDER BY StockID, Rank","0","","1","LRA-FUSION","0","0","fusion"
"40563","cv_MachineCompanyEmail","","SELECT 
	E.Company AS [Company],
	EC.Firstname + ' ' + EC.Surname AS [ContactPerson],
	LL1.Value AS [ModelType],
	L.Value AS [ModelName],
	MD.Options AS [Options],
	MD.InterfaceScale AS [Interface],
	LL2.Value AS [FolderType],
	LL3.Value AS [FeederType],
	LL4.Value AS [LabelType],
	LL5.Value AS [Letter],
	LL6.Value AS [InkCatridge],
	L2.Value AS [Status]
FROM MachineDetails MD
LEFT JOIN (SELECT EntityID, Company FROM Entity) E on E.EntityID = MD.EntityID
LEFT JOIN (SELECT EntityContactID, Firstname, Surname FROM EntityContact) EC on EC.EntityContactID = MD.EntityContactID
LEFT JOIN (SELECT LinkLookupID, Value, LinkedTo FROM LinkLookup) LL1 on LL1.LinkLookupID = MD.ModelTypeID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) L on L.LookupID = LL1.LinkedTo
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LL2 on LL2.LinkLookupID = MD.FolderTypeID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LL3 on LL3.LinkLookupID = MD.FeederType
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LL4 on LL4.LinkLookupID = MD.LabelTypeID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LL5 on LL5.LinkLookupID = MD.LetteroppenerID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LL6 on LL6.LinkLookupID = MD.InkCatridgeID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) L2 on L2.LookupID = MD.StatusID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40564","cv_SalesOrderEmail","","SELECT
	DM.DocNo,
	E.Company,
	DM.DocStatus,
	DM.DateCreated,
	DM.DateCompleted,
	U.Firstname + ' ' + U.Surname [SalesRep],
	L.Value AS [Division],
	EC.Firstname + ' ' + EC.Surname AS [EntityContact],
	U2.Firstname + ' ' + U2.Surname AS [CreatedBy],
	DM.ClientPO
FROM DEBTOR_MASTER DM
LEFT JOIN (SELECT EntityID, Company FROM Entity) E on E.EntityID = DM.EntityID
LEFT JOIN (SELECT UserID, Firstname, Surname FROM Users) U on U.UserID = DM.SalesRepID
LEFT JOIN (SELECT UserID, Firstname, Surname FROM Users) U2 on U2.UserID = DM.CreatedBy
LEFT JOIN (SELECT LookupID, Value FROM Lookup) L on L.LookupID = DM.DivisionID
LEFT JOIN (SELECT EntityContactID, Firstname, Surname FROM EntityContact) EC on EC.EntityContactID = DM.AttentionOf 
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40565","cv_JobEmail","","SELECT
	P.ProjectID AS [ProjectID],
	ISNULL(P.ClientPO,'') AS [ClientOrderNumber],
	ISNULL(P.ProjectName,'') AS [JobName],
	ISNULL(EHolding.Company,'') AS [HoldingCompany],
	ISNULL(ECHolding.Firstname,'') + ' ' + ISNULL(ECHolding.Surname,'') AS [HoldingCompanyContact],
	ISNULL(ECompany.Company,'') AS [Company],
	ISNULL(ECCompany.Firstname,'') + ' ' + ISNULL(ECCompany.Surname,'') AS [CompanyContact],
	ISNULL(P.ProjectNotes,'') AS [JobDetails],
	ISNULL(U.Firstname,'') + ' ' + ISNULL(U.Surname,'') AS [CreatedBy],
	CONVERT(VARCHAR,P.DateAdded,120) AS [DateCreated],
	CONVERT(VARCHAR,P.ReleaseDate,120) AS [DateReleased],
	CONVERT(VARCHAR,P.DateManufactured,120) AS [DateManufactured],
	P.ManufacturingTime AS [JobTime],
	CONVERT(VARCHAR,P.CustomerDueDate,120) AS [CustomerDueDate],
	LDiv.Value AS [Division],
	LJobStatus.Value AS [JobStatus],
	LJobType.Value AS [JobType],
	ISNULL(SJobManager.Firstname,'') + ' ' + ISNULL(SJobManager.Surname,'') AS [JobManager],
	CASE WHEN ISNULL(P.IsApproved,0) = 0 THEN 'Not Approved' ELSE 'Approved' END AS [Approved],
	ISNULL(P.CompletionNotes,'') AS [JobCompletionNotes]
FROM Projects P
LEFT JOIN (SELECT EntityID, Company FROM Entity) EHolding ON EHolding.EntityID = P.EntityID
LEFT JOIN ProjContacts PCHolding ON PCHolding.ProjectID = P.ProjectID AND PCHolding.IsHold = 1
LEFT JOIN (SELECT EntityContactID, EntityID, FirstName, Surname FROM EntityContact) ECHolding ON ECHolding.EntityContactID = PCHolding.EntityContactID AND ECHolding.EntityID = P.EntityID
LEFT JOIN (SELECT EntityID, Company FROM Entity) ECompany ON ECompany.EntityID = P.AddEntityID
LEFT JOIN ProjContacts PCCompany ON PCCompany.ProjectID = P.ProjectID AND ISNULL(PCCompany.IsHold,0) = 0
LEFT JOIN (SELECT EntityContactID, EntityID, FirstName, Surname FROM EntityContact) ECCompany ON ECCompany.EntityContactID = PCCompany.EntityContactID AND ECCompany.EntityID = P.AddEntityID
LEFT JOIN (SELECT UserID, Firstname, Surname FROM Users) U ON U.UserID = P.CreatedBy
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LDiv ON LDiv.LookupID = P.DivID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LJobStatus ON LJobStatus.LookupID = P.ProjectStateID
LEFT JOIN (SELECT LookupID, Value FROM Lookup) LJobType ON LJobType.LookupID = P.ProjectTypeID
LEFT JOIN (SELECT StaffID, Firstname, Surname FROM Staff) SJobManager ON SJobManager.StaffID = P.ProjectManagerID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40566","cv_JobEmailMachines","","SELECT 
	LL.Value AS [Machine]
FROM Projects P
LEFT JOIN (SELECT JOBID, MachineID FROM JobMachine) JM ON JM.JOBID = P.ProjectID
LEFT JOIN (SELECT MachineConfigID, ModelTypeID FROM MachineDetails) MD ON MD.MachineConfigID = JM.MachineID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LL ON LL.LinkLookupID = MD.ModelTypeID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40567","cv_JobEmailTechnician","","SELECT 
	ISNULL(S.Firstname,'') + ' ' + ISNULL(S.Surname,'') AS [Technician]
FROM Projects P
LEFT JOIN (SELECT ProjectID, StaffID FROM JobTechnician) JT ON JT.ProjectID = P.ProjectID
LEFT JOIN (SELECT StaffID, Firstname, Surname FROM Staff) S ON S.StaffID = JT.StaffID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40568","cv_Contact_Search_With_Company_on_Group","","select {top}
    ec.EntityContactID,
	'' as [ ],
    SC.SalesConsultant as [Sales Consultant],
    c.Category,
    AccT.AccType as [Account Type],
    D.Division, 
    t.Type as [Type],
    STB.[Sub Type], 
    dbo.fn_EntityContactGroups(EC.EntityContactID) as [Group],
    ec.EntityContactID as [Contact ID],
    AlternateContactID as [Alternate Contact ID], 
    e.Company, 
	EC.JobTitle as [Job Title], 
    ec.Title ,
    ec.Initials, 
    ec.Firstname as [First Name], 
    ec.Surname, 
    ec.Phone1, 
    ec.Phone2, 
    [Addition 5],
    [Addition 6],
    [Addition 7],
    [Addition 8] ,
    ec.Phone3, 
    ec.HomePhone as [Home Phone], 
    ec.Cell, 
    ec.Fax, 
    ec.Email, 
    Birthdate,
    Ext as [Extention],
    lbdep.Department as [Department],
     lbind.[Industry] as [Industry],
    Spouse,
    AsstTitle as [Assistant Title],
    AsstName as [Assistant Name],
    AsstPhone as [Assistant Phone],
    AsstExt as [Assistant Extention],
    eapy.Address1,
    eapy.Address2,
    eapy.Address3,
    eapy.City,
    eapy.State,
    eapy.Code,
    eapy.Region,
    eapy.Country,
    CASE WHEN ISNULL(SendEmail,0) = 0 THEN 'False' ELSE 'True' END as [Send Emails],
    CASE WHEN ISNULL(SendSMS,0) = 0 THEN 'False' ELSE 'True' END as [Send SMS],
    ec.AccountNum as [Account Number], 
    [Business Category],
    [ABC],
    right('0'+datename(dd,ec.dateadded),2)+'/'+right('0'+cast(datepart(m,ec.dateadded) as nvarchar), 2)+'/'+datename(yyyy,ec.dateadded) as [Created Date], 
    u.username as [Created by],
    EC.Additional1 as [Addition 1],
    EC.Additional2 as [Addition 2],
    EC.Additional3 as [Addition 3],
    EC.Additional4 as [Addition 4], 
    right('0'+datename(dd,ec.datemodified),2)+'/'+right('0'+cast(datepart(m,ec.datemodified) as nvarchar), 2)+'/'+datename(yyyy,ec.datemodified) as [Last Modified Date],
    OutlookID  as [Outlook ID], uu.username as [Modified By],
    (SELECT TOP 1 CONVERT(VARCHAR, CAST(CallDate as DATETIME),103) FROM CallLog WHERE ISNULL(AdvCall,0) = 1 AND EntityContactID = ec.EntityContactID ORDER BY CallDate DESC) as [Last Call],
    (SELECT TOP 1 CONVERT(VARCHAR, CAST([Date] as DATETIME), 103) FROM Appointment a 
    LEFT JOIN AppointmentContacts ac on ac.apptID = a.AppointmentID
    WHERE ac.EntityContactID = ec.EntityContactID ORDER BY [Date] DESC) as [Last Appointment]
from entitycontact as ec
left join (select lookupid as AccTypeID, value as AccType from lookup where class like 'accounttype') AccT
 on ec.accounttypeid = AccT.AccTypeID
left join (Select lookupid, value from lookup) ls1 on ls1.lookupid = EC.SalesConsID
left join entity e
 on e.entityid = ec.entityid 
left join entitycontactgroup g 
 on ec.entitycontactid = g.entitycontactid
left join EntityGroup EGroup ON EGroup.EntityID = E.EntityID 
left join (select lookupid as groupid, value as [Group] from lookup where class like 'group') Gr
 on g.groupid = Gr.groupid 
left join( select staffid as SalesConsid, FirstName + ' ' + IsNull(Surname,'') As SalesConsultant from staff) SC
on ec.salesconsid = SC.SalesConsID
left join (select lookupid as typeid, value as type from lookup where class like 'type') t
 on ec.entitytypeid = t.typeid 
left join (select lookupid as categoryid, value as category from lookup where class like 'category') c
 on ec.entitycategoryid = c.categoryid 
left join (select lookupid as SourceTypeID, value as SourceType from lookup where class like 'Source Type') s
 on ec.ContTypeID = s.SourceTypeID 
left join (select lookupid as InterestID, value as Interest from lookup where class like 'Interest') i
 on ec.InterestID = i.InterestID 
 
left join (select lookupid as ABCID, value as ABC from lookup where class like 'ABC') lABC
 on ec.abccatid = lABC.ABCID  
 
left join (select lookupid as PositionID, value as Position from lookup where class like 'Position') p
 on ec.PositionID = p.PositionID 
left join users u
 on ec.entitycontactcreatorid = u.userid 
left join users uu on ec.EntityContactUpdaterID = uu.userid 
left join entitycontactdivision ed
 on ed.entitycontactid = ec.entitycontactid 
left join (select lookupid as DivisionID, value as Division from lookup where class like 'Divisions') D
 on D.DivisionID = (SELECT TOP 1 DivisionID FROM EntityContactDivision WHERE EntityContactID = EC.EntityContactID)
left join entityaddress eapo
 on eapo.entityaddressid = ec.postaladdrid 
left join entityaddress eapy
 on eapy.entityaddressid = ec.physicaladdrid
left join EntityContactTypes ect
 on ec.entitycontactid = ect.entitycontactid
left join entityContactMOComm ecmc
 on ec.entitycontactid = ecmc.entitycontactid
left join (select lookupid,value as [Business Category] from lookup ) lbcat
on lbcat.lookupid = ec.buscatid
left join (select lookupid,value as [Department] from lookup ) lbdep
on lbdep.lookupid = ec.DepartmentID
left join (select lookupid,value as [Industry] from lookup ) lbind
on lbind.lookupid = ec.IndustryID
left join (select LinkLookupID,value as [Sub Type] from linklookup ) STB
on STB.LinkLookupID = ec.entitysubtypeid
  left join (select lookupid,value as [Addition 5] from lookup ) lbAD1
on lbAD1.lookupid = ec.AdditionalID5
left join (select lookupid,value as [Addition 6] from lookup ) lbAD2
on lbAD2.lookupid = ec.AdditionalID6
left join (select lookupid,value as [Addition 7] from lookup ) lbAD3
on lbAD3.lookupid = ec.AdditionalID7
left join (select lookupid,value as [Addition 8] from lookup ) lbAD4
on lbAD4.lookupid = ec.AdditionalID8
{duplicate_section}
<%where%>
 GROUP BY jobtitle,ec.EntityContactID, ec.AlternatecontactID, e.Company, ec.Title,ec.Initials , ec.Firstname, ec.Surname, ec.Phone1, ec.Phone2, 
    ec.Phone3, ec.HomePhone, ec.Cell, ec.Fax, ec.Email, ec.Birthdate, ec.Ext, ec.Department, ec.Spouse, ec.AsstTitle, ec.AsstName, ec.AsstPhone, ec.AsstExt, 
        ec.Address1, ec.Address2, ec.Address3, ec.City, ec.State, ec.Code, ec.Region, ec.Country, ec.Province, ec.SendEmail, ec.SendSMS, ec.AccountNum, 
    ec.DateAdded, ec.DateModified, OutlookID,lbdep.Department,lbind.[Industry],STB.[Sub Type],
    ec.address1,ec.address2,ec.address3,ec.city,ec.region,ec.code,ec.country,
    ec.sendemail,ec.sendsms,ec.sendpost,EC.Additional2,EC.Additional3,EC.Additional4 ,[Addition 5],[Addition 5],[Addition 6],[Addition 7],[Addition 8] ,EC.Additional1,
    ec.dateadded,u.username,ec.datemodified,uu.username,eapy.Address1,eapy.Address2,
    eapy.Address3,eapy.City,eapy.State,eapy.Code,eapy.Region,eapy.Country,SC.SalesConsultant,c.Category,AccT.AccType,D.Division,t.Type,ls1.value,[Business Category],lABC.ABC, EC.JobTitle
","0","","1","LRA-FUSION","0","0","fusion"
"40569","cv_MachineCompanyEmail_New","","SELECT
	0,
	'<b>New Machine(s)</b>',
    '' AS [Company],
    '' AS [Company Contact],
	'' AS [Model Type],
	'' AS [Stock Code],
	'' AS [Options],
	'' AS [Interface Scale],
	'' AS [Folder Type],
	'' AS [Feeder Type],
	'' AS [Label Type],
	'' AS [Letter Opener],
	'' AS [Date Created]
	
UNION ALL

SELECT
	MD.MachineConfigID,
    '',
	E.Company AS [Company],
	ISNULL(EC.Firstname,'') + ' ' + ISNULL(EC.Surname,'') AS [Company Contact],
	LLModelType.Value AS [Model Type],
	AccS.StockCode AS [Stock Code],
	MD.Options AS [Options],
	MD.InterfaceScale  AS [Interface Scale],
	LLFolderType.Value AS [Folder Type],
	LLFeederType.Value AS [Feeder Type],
	LLLabelType.Value AS [Label Type],
	LLLetterOpener.Value AS [Letter Opener],
	CONVERT(VARCHAR,MD.CreatedDate,120) AS [Date Created]
FROM MachineDetails MD
LEFT JOIN (SELECT EntityID, Company FROM Entity) E ON E.EntityID = MD.EntityID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLModelType ON LLModelType.LinkLookupID = MD.ModelTypeID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLFolderType ON LLFolderType.LinkLookupID = MD.FolderTypeID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLFeederType ON LLFeederType.LinkLookupID = MD.FeederType
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLLabelType ON LLLabelType.LinkLookupID = MD.LabelTypeID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLLetterOpener ON LLLetterOpener.LinkLookupID = MD.LetteroppenerID
LEFT JOIN (SELECT StockID, StockCode FROM AccStock) AccS ON AccS.StockID = MD.StockID
LEFT JOIN (SELECT EntityContactID, Firstname, Surname FROM EntityContact) EC ON EC.EntityContactID = MD.EntityContactID
WHERE MD.EntityID = {where} AND CONVERT(VARCHAR,MD.CreatedDate,103) = CONVERT(VARCHAR,GETDATE(),103)

UNION ALL

SELECT
	0,
	'<b>Older Machine(s)</b>',
    '' AS [Company],
    '' AS [Company Contact],
	'' AS [Model Type],
	'' AS [Stock Code],
	'' AS [Options],
	'' AS [Interface Scale],
	'' AS [Folder Type],
	'' AS [Feeder Type],
	'' AS [Label Type],
	'' AS [Letter Opener],
	'' AS [Date Created]
	
UNION ALL

SELECT
	MD.MachineConfigID,
    '',
	E.Company AS [Company],
	ISNULL(EC.Firstname,'') + ' ' + ISNULL(EC.Surname,'') AS [Company Contact],
	LLModelType.Value AS [Model Type],
	AccS.StockCode AS [Stock Code],
	MD.Options AS [Options],
	MD.InterfaceScale AS [Interface Scale],
	LLFolderType.Value AS [Folder Type],
	LLFeederType.Value AS [Feeder Type],
	LLLabelType.Value AS [Label Type],
	LLLetterOpener.Value AS [Letter Opener],
	CONVERT(VARCHAR,MD.CreatedDate,120) AS [Date Created]
FROM MachineDetails MD
LEFT JOIN (SELECT EntityID, Company FROM Entity) E ON E.EntityID = MD.EntityID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLModelType ON LLModelType.LinkLookupID = MD.ModelTypeID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLFolderType ON LLFolderType.LinkLookupID = MD.FolderTypeID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLFeederType ON LLFeederType.LinkLookupID = MD.FeederType
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLLabelType ON LLLabelType.LinkLookupID = MD.LabelTypeID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLLetterOpener ON LLLetterOpener.LinkLookupID = MD.LetteroppenerID
LEFT JOIN (SELECT StockID, StockCode FROM AccStock) AccS ON AccS.StockID = MD.StockID
LEFT JOIN (SELECT EntityContactID, Firstname, Surname FROM EntityContact) EC ON EC.EntityContactID = MD.EntityContactID
WHERE MD.EntityID = {where} AND CONVERT(VARCHAR,MD.CreatedDate,103) <> CONVERT(VARCHAR,GETDATE(),103)","0","","1","LRA-FUSION","0","0","fusion"
"40570","cv_MachineCompanyEmail_Old","","SELECT
	MD.MachineConfigID,
	E.Company AS [Company],
	LLModelType.Value AS [ModelType],
	MD.Options,
	MD.InterfaceScale,
	LLFolderType.Value AS [FolderType],
	LLFeederType.Value AS [FeederType],
	LLLabelType.Value AS [LabelType],
	LLLetterOpener.Value AS [LetterOpener]
FROM MachineDetails MD
LEFT JOIN (SELECT EntityID, Company FROM Entity) E ON E.EntityID = MD.EntityID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLModelType ON LLModelType.LinkLookupID = MD.ModelTypeID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLFolderType ON LLFolderType.LinkLookupID = MD.FolderTypeID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLFeederType ON LLFeederType.LinkLookupID = MD.FeederType
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLLabelType ON LLLabelType.LinkLookupID = MD.LabelTypeID
LEFT JOIN (SELECT LinkLookupID, Value FROM LinkLookup) LLLetterOpener ON LLLetterOpener.LinkLookupID = MD.LetteroppenerID
WHERE MD.EntityID = {where} AND CONVERT(VARCHAR,MD.CreatedDate,103) <> CONVERT(VARCHAR,GETDATE(),103)","0","","1","LRA-FUSION","0","0","fusion"
"40571","cv_Project_Expenses_New","","SELECT 
	ISNULL(U.FirstName,'') + ' ' + ISNULL(U.Surname,'') AS [Name],
	CONVERT(VARCHAR,EM.DateCompleted,120) AS [Date],
	ISNULL(P.ProjectName,'') AS [Destination],
	ISNULL(EM.Qty,0) AS [Km],
	ISNULL(EM.Memo,'') AS [Reason]
FROM EXPENDITURE_MASTER EM
LEFT JOIN Users U ON U.UserID = EM.ProcessedBy
LEFT JOIN Projects P ON P.ProjectID = EM.ProjectID
{where}","0","","1","LRA-FUSION","0","0","fusion"
"40572","cv_timesheet_ProjectSummary","","SELECT
[StaffNum] + ' ' + [FirstName] + ' ' + [Surname] As [TIME SPENT BY],
[position] AS [JOB TITLE],
CAST([Hours Captured] As Varchar) AS [HRS],
[Actual Hours] AS [TOT HRS],
CASE WHEN [Actual Hours] = 0 Then '0' Else ROUND([Hours Captured]/[Actual Hours]*100,2) End As [% HRS]
FROM (
	select 
	P.ProjectID,
	S.StaffNum As ""StaffNum"",
	users.FirstName as ""FirstName"",
	users.Surname as ""Surname"",
	LPos.Value as ""position"",
	SUM(hoursdone) as ""Hours Captured"",
	SUM((isnull(s.StaffRatePerc,0)/100)*isnull(hoursdone,0)) as [Actual Hours]
	from timesheet t
	left join projects p on p.projectid = t.projectid
	LEFT JOIN Lookup LD ON LD.LookupID = P.DivID 
	LEFT JOIN (SELECT Firstname+ ' ' + Surname AS [ProjectManager] , StaffID FROM Staff) PM
	ON P.ProjectManagerID = PM.StaffID
	LEFT JOIN (SELECT ProjectID, min(endDate) as [EndDate] FROM Modules where isnull(Progress,0) < 100  Group by ProjectID) PDEDR
	ON P.ProjectID = PDEDR.ProjectID
	LEFT JOIN projectstate PS ON P.ProjectStateID = PS.ProjectStateID
	left join entity e on e.entityid = p.entityid
	left join entitycontact ec on ec.entitycontactid = p.entitycontactid
	left join modules on modules.moduleid = t.moduleid
	LEFT JOIN (SELECT ModuleID, SUM(EstHours) as EstHours FROM Modules GROUP BY ModuleID) M ON M.ModuleID = t.ModuleID
	LEFT JOIN (SELECT ProjectID, ModuleID, SUM(EstHours) as EstHours FROM ClientActivityList
	GROUP BY ProjectID, ModuleID) CAL ON CAL.ProjectID = P.ProjectID AND CAL.ModuleID = modules.ModuleID
	left join users on users.userid = t.developerid
	left join Staff S on S.StaffID = users.StaffID
	left join Devappointment dappt on dappt.DevApptID = t.DevApptID
	left join lookup l on l.lookupid = dappt.TASKTYPEID
	left join Lookup LPos on LPos.LookupID = S.position
	Left Join ratecardamount R on R.ModuleID=M.ModuleID and S.StaffID=R.ConsultantID
	LEFT JOIN ProjectSLA SLA ON SLA.ProjectID = P.ProjectID AND Month(t.Timesheetdate) -1 = SLA.MonthInt AND Year(t.Timesheetdate) = YEAR(SLA.StartDate)
	{where}
	GROUP BY P.ProjectID, S.StaffNum, users.FirstName, users.Surname, LPos.Value
) Z
--WHERE [ProjectID] = 21

UNION ALL

	SELECT
		null,
		null,
		null,
		null,
		null

UNION ALL

	SELECT
		'TIME SPENT ON',
		null,
		'HRS',
		null,
		null
			
UNION ALL

SELECT
[position] As [TIME SPENT BY],
null,
CAST(SUM([Hours Captured]) AS VARCHAR) AS [HRS],
null,
null
FROM (
	select 
	P.ProjectID,
	LPos.Value as ""position"",
	SUM(hoursdone) as ""Hours Captured""
	from timesheet t
	left join projects p on p.projectid = t.projectid
	LEFT JOIN Lookup LD ON LD.LookupID = P.DivID 
	LEFT JOIN (SELECT Firstname+ ' '+Surname AS [ProjectManager] , StaffID FROM Staff) PM
	ON P.ProjectManagerID = PM.StaffID
	LEFT JOIN (SELECT ProjectID, min(endDate) as [EndDate] FROM Modules where isnull(Progress,0) < 100  Group by ProjectID) PDEDR
	ON P.ProjectID = PDEDR.ProjectID
	LEFT JOIN projectstate PS ON P.ProjectStateID = PS.ProjectStateID
	left join entity e on e.entityid = p.entityid
	left join entitycontact ec on ec.entitycontactid = p.entitycontactid
	left join modules on modules.moduleid = t.moduleid
	LEFT JOIN (SELECT ModuleID, SUM(EstHours) as EstHours FROM Modules GROUP BY ModuleID) M ON M.ModuleID = t.ModuleID
	LEFT JOIN (SELECT ProjectID, ModuleID, SUM(EstHours) as EstHours FROM ClientActivityList
	GROUP BY ProjectID, ModuleID) CAL ON CAL.ProjectID = P.ProjectID AND CAL.ModuleID = modules.ModuleID
	left join users on users.userid = t.developerid
	left join Staff S on S.StaffID = users.StaffID
	left join Devappointment dappt on dappt.DevApptID = t.DevApptID
	left join lookup l on l.lookupid = dappt.TASKTYPEID
	left join Lookup LPos on LPos.LookupID = S.position
	Left Join ratecardamount R on R.ModuleID=M.ModuleID and S.StaffID=R.ConsultantID
	LEFT JOIN ProjectSLA SLA ON SLA.ProjectID = P.ProjectID AND Month(t.Timesheetdate) -1 = SLA.MonthInt AND Year(t.Timesheetdate) = YEAR(SLA.StartDate)
	{where}
	GROUP BY P.ProjectID, LPos.Value
) A
--WHERE [ProjectID] = 21
GROUP BY position","0","","1","LRA-FUSION","0","0","fusion"
