version: "3"
services:
  nginx:
    image: nginx:latest
    container_name: webserver
    restart: unless-stopped
    ports:
      - 9096:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./.secret/ssl/:/ssl/

  # DATABASES
  # ////////////////////////////////////////////////////////////
  postgres:
    image: postgres:14
    user: root
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD        # run as a service
    volumes:
        - ./data/postgresql:/var/lib/postgresql/data
        - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh

  # APPSMITH 
  # ////////////////////////////////////////////////////////////
  appsmith:
    image: index.docker.io/appsmith/appsmith-ce
    container_name: appsmith
    ports:
      - "3001:443"
      - "3000:80"
    volumes:
      - ./data/appsmith/stacks:/appsmith-stacks
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: "true"

  auto_update:
    image: containrrr/watchtower:latest-dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # Update check interval in seconds.
    command: --schedule "0 0 * ? * *" --label-enable --cleanup
    restart: unless-stopped

  # ODOO 
  # ////////////////////////////////////////////////////////////
  odoo:
    image: odoo:15
    user: root
    depends_on:
      - postgres 
    ports:
      - "8069:8069"
      - "8067:8072" # live chat
    # tty: true
    # command: --
    environment:
      - HOST=postgres
      - USER=${POSTGRES_USER}
      - PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      #- /etc/timezone:/etc/timezone:ro
      #- /etc/localtime:/etc/localtime:ro
      # - ./entrypoint.sh:/entrypoint.sh   # if you want to install additional Python packages, uncomment this line!
      - ./app/odoo/addons:/mnt/extra-addons
      - ./app/odoo/etc:/etc/odoo
      - ./data/odoo:/data/odoo
    restart: always             # run as a service
    

  # N8N 
  # ////////////////////////////////////////////////////////////
  
  n8n:
    image: n8nio/n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER
      - N8N_BASIC_AUTH_PASSWORD
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - ./data/n8n:/home/node/.n8n
    # Wait 5 seconds to start n8n to make sure that PostgreSQL is ready
    # when n8n tries to connect to it
    command: /bin/sh -c "sleep 5; n8n start"









