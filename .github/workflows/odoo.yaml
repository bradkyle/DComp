name: Odoo 

on:
  pull_request:
  push:
    branches:
      - "master"
      - "staging"
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      # - uses: pre-commit/action@v2.0.0
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: "3.6"
            toxenv: "py36-15.0"
          - python-version: "3.8"
            toxenv: "py38-15.0"
          - python-version: "3.6"
            toxenv: "twine_check"
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
      odoo:
        image: odoo:15
        env:
          USER: odoo 
          HOST: postgres
          PASSWORD: odoo 
        volumes:
          #- /etc/timezone:/etc/timezone:ro
          #- /etc/localtime:/etc/localtime:ro
          # - ./entrypoint.sh:/entrypoint.sh   
          - /app/odoo/addons:/mnt/extra-addons
          # - ./app/odoo/etc/odoo.conf:/etc/odoo/odoo.conf
          - /app/odoo/etc/requirements.txt:/etc/odoo/requirements.txt
          - /data/odoo/data:/data/odoo
          - /data/odoo/etc/filestore:/etc/odoo/filestore
        ports:
          - "8069:8069"
          - "8072:8072" # live chat
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
    env:
      PGHOST: localhost
      PGPORT: 5432
      PGUSER: odoo
      PGPASSWORD: odoo
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.toxenv }}
      - name: Install system dependencies
        run: |
          sudo apt-get install -qq --no-install-recommends \
            libxml2-dev libxslt1-dev \
            libldap2-dev libsasl2-dev \
            gettext
          pip install tox virtualenv
      - name: Run tox
        run: tox -e ${{ matrix.toxenv }}
      - uses: codecov/codecov-action@v1
